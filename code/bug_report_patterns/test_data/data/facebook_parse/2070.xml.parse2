Been/VBN getting/VBG this/DT error/NN for/IN weeks/NNS ./. 

(ROOT (S (VP (VBN Been) (VP (VBG getting) (NP (NP (DT this) (NN error)) (PP (IN for) (NP (NNS weeks)))))) (. .)))

root(ROOT-0, getting-2)
aux(getting-2, Been-1)
det(error-4, this-3)
dobj(getting-2, error-4)
prep_for(error-4, weeks-6)

Please/VB fix/VB !/. 

(ROOT (S (VP (VB Please) (VP (VB fix))) (. !)))

root(ROOT-0, Please-1)
xcomp(Please-1, fix-2)

It/PRP impedes/VBZ my/PRP$ ability/NN to/TO debug/VB my/PRP$ own/JJ app/NN ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ impedes) (NP (PRP$ my) (NN ability) (S (VP (TO to) (VP (VB debug) (NP (PRP$ my) (JJ own) (NN app))))))) (. .)))

root(ROOT-0, impedes-2)
nsubj(impedes-2, It-1)
poss(ability-4, my-3)
dobj(impedes-2, ability-4)
aux(debug-6, to-5)
vmod(ability-4, debug-6)
poss(app-9, my-7)
amod(app-9, own-8)
dobj(debug-6, app-9)

This/DT error/NN occurs/VBZ just/RB after/IN logging/VBG into/IN facebook/NN _/NN not/RB even/RB hitting/VBG my/PRP$ app/NN ./. 

(ROOT (S (NP (DT This) (NN error)) (VP (VBZ occurs) (ADVP (RB just)) (PP (IN after) (S (VP (VBG logging) (PP (IN into) (NP (NN facebook) (NN _))) (ADVP (RB not) (RB even) (S (VP (VBG hitting) (NP (PRP$ my) (NN app))))))))) (. .)))

root(ROOT-0, occurs-3)
det(error-2, This-1)
nsubj(occurs-3, error-2)
advmod(occurs-3, just-4)
prepc_after(occurs-3, logging-6)
nn(_-9, facebook-8)
prep_into(logging-6, _-9)
dep(even-11, not-10)
advmod(logging-6, even-11)
dep(even-11, hitting-12)
poss(app-14, my-13)
dobj(hitting-12, app-14)

