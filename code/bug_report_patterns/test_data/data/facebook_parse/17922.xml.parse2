I/PRP have/VBP an/DT example/NN of/IN a/DT multi-query/JJ in/IN a/DT batch/NN request/NN and/CC then/RB an/DT example/NN of/IN a/DT multi-query/JJ on/IN its/PRP$ own/JJ ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (NP (NP (DT an) (NN example)) (PP (IN of) (NP (NP (NP (DT a) (JJ multi-query)) (PP (IN in) (NP (DT a) (NN batch) (NN request)))) (CC and) (ADVP (RB then)) (NP (NP (DT an) (NN example)) (PP (IN of) (NP (NP (DT a) (JJ multi-query)) (PP (IN on) (NP (PRP$ its) (JJ own)))))))))) (. .)))

root(ROOT-0, have-2)
nsubj(have-2, I-1)
det(example-4, an-3)
dobj(have-2, example-4)
det(multi-query-7, a-6)
prep_of(example-4, multi-query-7)
det(request-11, a-9)
nn(request-11, batch-10)
prep_in(multi-query-7, request-11)
advmod(example-15, then-13)
det(example-15, an-14)
prep_of(example-4, example-15)
conj_and(multi-query-7, example-15)
det(multi-query-18, a-17)
prep_of(example-15, multi-query-18)
poss(own-21, its-20)
prep_on(multi-query-18, own-21)

The/DT issue/NN is/VBZ the/DT multi-query/JJ in/IN the/DT batch/NN is/VBZ not/RB returning/VBG any/DT results/NNS but/CC the/DT multi-query/JJ on/IN it/PRP s/VBZ own/JJ is/VBZ ./. 

(ROOT (S (S (NP (DT The) (NN issue)) (VP (VBZ is) (NP (NP (DT the) (JJ multi-query)) (PP (IN in) (NP (NP (DT the) (NN batch)) (SBAR (S (VP (VBZ is) (RB not) (VP (VBG returning) (NP (DT any) (NNS results))))))))))) (CC but) (S (NP (NP (DT the) (JJ multi-query)) (PP (IN on) (NP (PRP it)))) (VP (VBZ s) (NP (NP (JJ own)) (VP (VBZ is))))) (. .)))

root(ROOT-0, multi-query-5)
det(issue-2, The-1)
nsubj(multi-query-5, issue-2)
cop(multi-query-5, is-3)
det(multi-query-5, the-4)
det(batch-8, the-7)
prep_in(multi-query-5, batch-8)
aux(returning-11, is-9)
neg(returning-11, not-10)
rcmod(batch-8, returning-11)
det(results-13, any-12)
dobj(returning-11, results-13)
det(multi-query-16, the-15)
nsubj(own-20, multi-query-16)
prep_on(multi-query-16, it-18)
cop(own-20, s-19)
conj_but(multi-query-5, own-20)
dep(own-20, is-21)

Below/NNP are/VBP both/CC the/DT call/NN and/CC the/DT result/NN ./. 

(ROOT (S (NP (NNP Below)) (VP (VBP are) (NP (CC both) (NP (DT the) (NN call)) (CC and) (NP (DT the) (NN result)))) (. .)))

root(ROOT-0, call-5)
nsubj(call-5, Below-1)
cop(call-5, are-2)
preconj(call-5, both-3)
det(call-5, the-4)
det(result-8, the-7)
conj_and(call-5, result-8)

I/PRP have/VBP removed/VBN the/DT token/JJ to/TO protect/VB the/DT innocent/JJ ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN removed) (NP (DT the) (JJ token)) (S (VP (TO to) (VP (VB protect) (NP (DT the) (JJ innocent))))))) (. .)))

root(ROOT-0, removed-3)
nsubj(removed-3, I-1)
aux(removed-3, have-2)
det(token-5, the-4)
dobj(removed-3, token-5)
aux(protect-7, to-6)
vmod(removed-3, protect-7)
det(innocent-9, the-8)
dobj(protect-7, innocent-9)

I/PRP have/VBP also/RB cut/VBN down/RP the/DT response/NN for/IN MULTI-QUEYR/NNP ONLY/NNP so/IN that/IN the/DT bug/NN is/VBZ not/RB so/RB big/JJ ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (ADVP (RB also)) (VP (VBN cut) (PRT (RP down)) (NP (NP (DT the) (NN response)) (PP (IN for) (NP (NNP MULTI-QUEYR) (NNP ONLY)))) (SBAR (IN so) (IN that) (S (NP (DT the) (NN bug)) (VP (VBZ is) (RB not) (ADJP (RB so) (JJ big))))))) (. .)))

root(ROOT-0, cut-4)
nsubj(cut-4, I-1)
aux(cut-4, have-2)
advmod(cut-4, also-3)
prt(cut-4, down-5)
det(response-7, the-6)
dobj(cut-4, response-7)
nn(ONLY-10, MULTI-QUEYR-9)
prep_for(response-7, ONLY-10)
mark(big-18, so-11)
mark(big-18, that-12)
det(bug-14, the-13)
nsubj(big-18, bug-14)
cop(big-18, is-15)
neg(big-18, not-16)
advmod(big-18, so-17)
advcl(cut-4, big-18)

This/DT was/VBD working/VBG before/RB and/CC now/RB it/PRP has/VBZ stopped/VBN in/IN the/DT last/JJ few/JJ days/NNS ./. 

(ROOT (S (S (NP (DT This)) (VP (VBD was) (VP (VBG working) (ADVP (RB before))))) (CC and) (S (ADVP (RB now)) (NP (PRP it)) (VP (VBZ has) (VP (VBN stopped) (PP (IN in) (NP (DT the) (JJ last) (JJ few) (NNS days)))))) (. .)))

root(ROOT-0, working-3)
nsubj(working-3, This-1)
aux(working-3, was-2)
advmod(working-3, before-4)
advmod(stopped-9, now-6)
nsubj(stopped-9, it-7)
aux(stopped-9, has-8)
conj_and(working-3, stopped-9)
det(days-14, the-11)
amod(days-14, last-12)
amod(days-14, few-13)
prep_in(stopped-9, days-14)

The/DT second/JJ issue/NN is/VBZ this/DT is/VBZ also/RB not/RB working/VBG for/IN posts/NNS ./. 

(ROOT (S (NP (DT The) (JJ second) (NN issue)) (VP (VBZ is) (NP (NP (DT this)) (SBAR (S (VP (VBZ is) (ADVP (RB also)) (RB not) (VP (VBG working) (PP (IN for) (NP (NNS posts))))))))) (. .)))

root(ROOT-0, this-5)
det(issue-3, The-1)
amod(issue-3, second-2)
nsubj(this-5, issue-3)
cop(this-5, is-4)
aux(working-9, is-6)
advmod(working-9, also-7)
neg(working-9, not-8)
rcmod(this-5, working-9)
prep_for(working-9, posts-11)

If/IN you/PRP change/VBP the/DT call/NN from/IN requesting/VBG the/DT comments/NNS from/IN a/DT post/NN to/TO getting/VBG the/DT posts/NNS from/IN a/DT page/NN you/PRP will/MD not/RB get/VB the/DT posts/NNS back/RB in/IN Batch/NN but/CC you/PRP will/MD on/IN multi-query/JJ on/IN its/PRP$ own/JJ ./. 

(ROOT (S (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP change) (NP (DT the) (NN call)) (PP (IN from) (S (VP (VBG requesting) (NP (DT the) (NNS comments)) (PP (IN from) (NP (NP (DT a) (NN post)) (PP (TO to) (S (VP (VBG getting) (NP (DT the) (NNS posts)) (PP (IN from) (NP (DT a) (NN page)))))))))))))) (NP (PRP you)) (VP (MD will) (RB not) (VP (VB get) (NP (DT the) (NNS posts)) (ADVP (RB back)) (PP (IN in) (NP (NN Batch)))))) (CC but) (S (NP (PRP you)) (VP (MD will) (PP (IN on) (NP (NP (JJ multi-query)) (PP (IN on) (NP (PRP$ its) (JJ own))))))) (. .)))

root(ROOT-0, get-23)
mark(change-3, If-1)
nsubj(change-3, you-2)
advcl(get-23, change-3)
det(call-5, the-4)
dobj(change-3, call-5)
prepc_from(change-3, requesting-7)
det(comments-9, the-8)
dobj(requesting-7, comments-9)
det(post-12, a-11)
prep_from(requesting-7, post-12)
prepc_to(post-12, getting-14)
det(posts-16, the-15)
dobj(getting-14, posts-16)
det(page-19, a-18)
prep_from(getting-14, page-19)
nsubj(get-23, you-20)
aux(get-23, will-21)
neg(get-23, not-22)
det(posts-25, the-24)
dobj(get-23, posts-25)
advmod(get-23, back-26)
prep_in(get-23, Batch-28)
nsubj(will-31, you-30)
conj_but(get-23, will-31)
prep_on(will-31, multi-query-33)
poss(own-36, its-35)
prep_on(multi-query-33, own-36)

Please/VB let/VB me/PRP know/VB if/IN I/PRP should/MD provide/VB more/JJR information/NN ./. 

(ROOT (S (VP (VB Please) (VP (VB let) (S (NP (PRP me)) (VP (VB know) (SBAR (IN if) (S (NP (PRP I)) (VP (MD should) (VP (VB provide) (NP (JJR more) (NN information)))))))))) (. .)))

root(ROOT-0, Please-1)
xcomp(Please-1, let-2)
nsubj(know-4, me-3)
ccomp(let-2, know-4)
mark(provide-8, if-5)
nsubj(provide-8, I-6)
aux(provide-8, should-7)
advcl(know-4, provide-8)
amod(information-10, more-9)
dobj(provide-8, information-10)

REQUEST/NN MULTI-QUERY/NN in/IN BATCH/NN 

(ROOT (NP (NP (NN REQUEST) (NN MULTI-QUERY)) (PP (IN in) (NP (NN BATCH)))))

root(ROOT-0, MULTI-QUERY-2)
nn(MULTI-QUERY-2, REQUEST-1)
prep_in(MULTI-QUERY-2, BATCH-4)

RESPONSE/NN MULTI-QUERY/NN in/IN BATCH/NN 

(ROOT (NP (NP (NN RESPONSE) (NN MULTI-QUERY)) (PP (IN in) (NP (NN BATCH)))))

root(ROOT-0, MULTI-QUERY-2)
nn(MULTI-QUERY-2, RESPONSE-1)
prep_in(MULTI-QUERY-2, BATCH-4)

REQUEST/NN MULTI-QUERY/NN ONLY/NN 

(ROOT (NP (NP (NN REQUEST)) (NP (NN MULTI-QUERY) (NN ONLY))))

root(ROOT-0, REQUEST-1)
nn(ONLY-3, MULTI-QUERY-2)
dep(REQUEST-1, ONLY-3)

RESPONSE/NN MULTI-QUERY/NN ONLY/NN 

(ROOT (NP (NP (NN RESPONSE)) (NP (NN MULTI-QUERY) (NN ONLY))))

root(ROOT-0, RESPONSE-1)
nn(ONLY-3, MULTI-QUERY-2)
dep(RESPONSE-1, ONLY-3)

]/-RRB- 

(ROOT (NP (-RRB- -RSB-)))

root(ROOT-0, -RSB--1)

