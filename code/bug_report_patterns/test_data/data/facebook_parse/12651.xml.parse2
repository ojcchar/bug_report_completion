Can/MD t/NN change/VB my/PRP$ own/JJ application/NN settings/NNS anymore/RB ./. 

(ROOT (SQ (MD Can) (NP (NN t)) (VP (VB change) (NP (PRP$ my) (JJ own) (NN application) (NNS settings)) (ADVP (RB anymore))) (. .)))

root(ROOT-0, change-3)
aux(change-3, Can-1)
nsubj(change-3, t-2)
poss(settings-7, my-4)
amod(settings-7, own-5)
nn(settings-7, application-6)
dobj(change-3, settings-7)
advmod(change-3, anymore-8)

I/PRP am/VBP trying/VBG to/TO do/VB some/DT changes/NNS to/TO my/PRP$ application/NN _/NN but/CC it/PRP doesn/NN t/NN let/VB me/PRP do/VB it/PRP _/NN since/IN everytime/NN I/PRP click/VBP on/IN Save/NNP Changes/NNS it/PRP displays/VBZ the/DT red/JJ error/NN box/NN :/: 

(ROOT (S (SBAR (S (NP (PRP I)) (VP (VBP am) (VP (VP (VBG trying) (S (VP (TO to) (VP (VB do) (NP (DT some) (NNS changes)) (PP (TO to) (NP (PRP$ my) (NN application) (NN _))))))) (CC but) (VP (NP (NP (PRP it)) (SBAR (S (NP (NN doesn) (NN t)) (VP (VB let) (S (NP (PRP me)) (VP (VB do) (S (NP (PRP it)) (NP (NP (NN _)) (PP (IN since) (NP (NN everytime)))))))))))))))) (NP (PRP I)) (VP (VBP click) (SBAR (S (PP (IN on) (NP (NNP Save) (NNS Changes))) (NP (PRP it)) (VP (VBZ displays) (NP (DT the) (JJ red) (NN error) (NN box)))))) (: :)))

root(ROOT-0, click-24)
nsubj(trying-3, I-1)
aux(trying-3, am-2)
advcl(click-24, trying-3)
aux(do-5, to-4)
xcomp(trying-3, do-5)
det(changes-7, some-6)
dobj(do-5, changes-7)
poss(_-11, my-9)
nn(_-11, application-10)
prep_to(do-5, _-11)
conj_but(trying-3, it-13)
advcl(click-24, it-13)
nn(t-15, doesn-14)
nsubj(let-16, t-15)
rcmod(it-13, let-16)
nsubj(do-18, me-17)
ccomp(let-16, do-18)
nsubj(_-20, it-19)
xcomp(do-18, _-20)
prep_since(_-20, everytime-22)
nsubj(click-24, I-23)
nn(Changes-27, Save-26)
prep_on(displays-29, Changes-27)
nsubj(displays-29, it-28)
ccomp(click-24, displays-29)
det(box-33, the-30)
amod(box-33, red-31)
nn(box-33, error-32)
dobj(displays-29, box-33)

Validation/NN failed/VBD ./. 

(ROOT (S (NP (NN Validation)) (VP (VBD failed)) (. .)))

root(ROOT-0, failed-2)
nsubj(failed-2, Validation-1)

The/DT Canvas/NNP Page/NNP you/PRP requested/VBD is/VBZ not/RB allowed/VBN ./. 

(ROOT (S (NP (NP (DT The) (NNP Canvas) (NNP Page)) (SBAR (S (NP (PRP you)) (VP (VBD requested))))) (VP (VBZ is) (RB not) (VP (VBN allowed))) (. .)))

root(ROOT-0, allowed-8)
det(Page-3, The-1)
nn(Page-3, Canvas-2)
nsubjpass(allowed-8, Page-3)
nsubj(requested-5, you-4)
rcmod(Page-3, requested-5)
auxpass(allowed-8, is-6)
neg(allowed-8, not-7)

Even/RB if/IN I/PRP am/VBP the/DT owner/NN of/IN that/DT Canvas/NNP Page/NNP from/IN more/JJR than/IN 20/CD days/NNS already/RB ./. 

(ROOT (SBAR (RB Even) (IN if) (S (NP (PRP I)) (VP (VBP am) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NP (DT that) (NNP Canvas) (NNP Page)) (PP (IN from) (NP (QP (JJR more) (IN than) (CD 20)) (NNS days)))))) (ADVP (RB already)))) (. .)))

root(ROOT-0, owner-6)
advmod(owner-6, Even-1)
mark(owner-6, if-2)
nsubj(owner-6, I-3)
cop(owner-6, am-4)
det(owner-6, the-5)
det(Page-10, that-8)
nn(Page-10, Canvas-9)
prep_of(owner-6, Page-10)
mwe(than-13, more-12)
quantmod(20-14, than-13)
num(days-15, 20-14)
prep_from(Page-10, days-15)
advmod(owner-6, already-16)

It/PRP s/VBZ quite/RB strange/JJ because/IN in/IN the/DT past/JJ days/NNS I/PRP was/VBD able/JJ to/TO edit/VB my/PRP$ application/NN ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ s) (ADJP (RB quite) (JJ strange)) (SBAR (IN because) (S (PP (IN in) (NP (DT the) (JJ past) (NNS days))) (NP (PRP I)) (VP (VBD was) (ADJP (JJ able) (S (VP (TO to) (VP (VB edit) (NP (PRP$ my) (NN application)))))))))) (. .)))

root(ROOT-0, strange-4)
nsubj(strange-4, It-1)
cop(strange-4, s-2)
advmod(strange-4, quite-3)
mark(able-12, because-5)
det(days-9, the-7)
amod(days-9, past-8)
prep_in(able-12, days-9)
nsubj(able-12, I-10)
cop(able-12, was-11)
advcl(strange-4, able-12)
aux(edit-14, to-13)
xcomp(able-12, edit-14)
poss(application-16, my-15)
dobj(edit-14, application-16)

I/PRP hope/VBP you/PRP can/MD find/VB a/DT solution/NN quickly/RB ./. 

(ROOT (S (NP (PRP I)) (VP (VBP hope) (SBAR (S (NP (PRP you)) (VP (MD can) (VP (VB find) (NP (DT a) (NN solution)) (ADVP (RB quickly))))))) (. .)))

root(ROOT-0, hope-2)
nsubj(hope-2, I-1)
nsubj(find-5, you-3)
aux(find-5, can-4)
ccomp(hope-2, find-5)
det(solution-7, a-6)
dobj(find-5, solution-7)
advmod(find-5, quickly-8)

Thanks/NNS in/IN advance/NN ./. 

(ROOT (NP (NP (NNS Thanks)) (PP (IN in) (NP (NN advance))) (. .)))

root(ROOT-0, Thanks-1)
prep_in(Thanks-1, advance-3)

