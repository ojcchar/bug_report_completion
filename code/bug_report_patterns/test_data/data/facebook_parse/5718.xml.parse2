Could/MD not/RB find/VB where/WRB to/TO place/VB this/DT _/NN so/RB please/VB re-assign/VB the/DT bug/NN in/IN bugzilla/NN to/TO where/WRB ever/RB this/DT needs/VBZ to/TO be/VB as/RB is/VBZ in/IN relation/NN to/TO the/DT chat/NN module/NN on/IN footer/NN and/CC banners/NNS !/. 

(ROOT (SQ (MD Could) (NP (RB not)) (VP (VB find) (SBAR (WHADVP (WRB where)) (S (VP (TO to) (VP (VB place) (S (NP (DT this) (NN _)) (RB so) (VP (VB please) (VP (VB re-assign) (NP (NP (DT the) (NN bug)) (PP (IN in) (NP (NN bugzilla)))) (PP (TO to) (SBAR (WHADVP (WRB where)) (S (ADVP (RB ever)) (NP (DT this)) (VP (VBZ needs) (S (VP (TO to) (VP (VB be) (ADJP (RB as) (SBAR (S (VP (VBZ is) (PP (IN in) (NP (NN relation))) (PP (TO to) (NP (NP (DT the) (NN chat) (NN module)) (PP (IN on) (NP (NN footer) (CC and) (NNS banners)))))))))))))))))))))))) (. !)))

root(ROOT-0, find-3)
aux(find-3, Could-1)
nsubj(find-3, not-2)
advmod(place-6, where-4)
aux(place-6, to-5)
xcomp(find-3, place-6)
det(_-8, this-7)
nsubj(please-10, _-8)
advmod(please-10, so-9)
ccomp(place-6, please-10)
xcomp(please-10, re-assign-11)
det(bug-13, the-12)
dobj(re-assign-11, bug-13)
prep_in(bug-13, bugzilla-15)
advmod(needs-20, where-17)
advmod(needs-20, ever-18)
nsubj(needs-20, this-19)
prepc_to(re-assign-11, needs-20)
aux(as-23, to-21)
cop(as-23, be-22)
xcomp(needs-20, as-23)
ccomp(as-23, is-24)
prep_in(is-24, relation-26)
det(module-30, the-28)
nn(module-30, chat-29)
prep_to(is-24, module-30)
prep_on(module-30, footer-32)
prep_on(module-30, banners-34)
conj_and(footer-32, banners-34)

I/PRP am/VBP a/DT world/NN class/NN developer/NN myself/PRP _/VBP but/CC i/FW would/MD highly/RB suggest/VB 2/CD things/NNS just/RB in/IN relation/NN to/TO your/PRP$ sky/NN scrapper/NN banner/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP am) (NP (NP (DT a) (NN world) (NN class) (NN developer)) (SBAR (S (NP (PRP myself)) (VP (VBP _) (SBAR (CC but) (S (NP (FW i)) (VP (MD would) (ADVP (RB highly)) (VP (VB suggest) (NP (CD 2) (NNS things)) (ADVP (RB just)) (PP (IN in) (NP (NN relation))) (PP (TO to) (NP (PRP$ your) (NN sky) (NN scrapper) (NN banner)))))))))))) (. .)))

root(ROOT-0, developer-6)
nsubj(developer-6, I-1)
cop(developer-6, am-2)
det(developer-6, a-3)
nn(developer-6, world-4)
nn(developer-6, class-5)
nsubj(_-8, myself-7)
rcmod(developer-6, _-8)
cc(suggest-13, but-9)
nsubj(suggest-13, i-10)
aux(suggest-13, would-11)
advmod(suggest-13, highly-12)
ccomp(_-8, suggest-13)
num(things-15, 2-14)
dobj(suggest-13, things-15)
advmod(suggest-13, just-16)
prep_in(suggest-13, relation-18)
poss(banner-23, your-20)
nn(banner-23, sky-21)
nn(banner-23, scrapper-22)
prep_to(suggest-13, banner-23)

1/CD dont/NN use/NN iframes/VBZ _/CD this/DT not/RB only/RB a/DT big/JJ accessibility/NN flaw/NN but/CC it/PRP s/VBZ just/RB not/RB good/JJ for/IN compliancy/NN 

(ROOT (S (NP (CD 1) (NN dont) (NN use)) (VP (VBZ iframes) (NP (NP (NP (CD _)) (NP (DT this))) (CONJP (RB not) (RB only)) (NP (DT a) (JJ big) (NN accessibility) (NN flaw))) (SBAR (CC but) (S (NP (PRP it)) (VP (VBZ s) (ADVP (RB just)) (RB not) (ADJP (JJ good) (PP (IN for) (NP (NN compliancy))))))))))

root(ROOT-0, iframes-4)
num(use-3, 1-1)
nn(use-3, dont-2)
nsubj(iframes-4, use-3)
dobj(iframes-4, _-5)
dep(_-5, this-6)
neg(only-8, not-7)
dep(_-5, only-8)
det(flaw-12, a-9)
amod(flaw-12, big-10)
nn(flaw-12, accessibility-11)
conj(_-5, flaw-12)
cc(good-18, but-13)
nsubj(good-18, it-14)
cop(good-18, s-15)
advmod(good-18, just-16)
neg(good-18, not-17)
dep(iframes-4, good-18)
prep_for(good-18, compliancy-20)

2/CD add/VBP wmode/NN transparent/JJ to/TO your/PRP$ flash/NN embeds/VBZ because/IN the/DT banner/NN over/IN laps/NNS the/DT chat/NN bat/NN at/IN bottom/NN and/CC any/DT open/JJ chat/NN conversation/NN that/WDT lays/VBZ below/IN it/PRP and/CC therefor/RB your/PRP$ unable/JJ to/TO close/VB chat/NN to/TO a/DT person/NN _/CD type/NN to/TO a/DT person/NN etc./FW . . ./: 

(ROOT (SINV (NP (CD 2)) (VP (VBP add) (SBAR (S (NP (NP (NN wmode)) (ADJP (JJ transparent) (PP (TO to) (NP (PRP$ your) (NN flash))))) (VP (VBZ embeds) (PP (IN because) (NP (NP (DT the) (NN banner)) (PP (IN over) (NP (NNS laps))))) (NP (NP (NP (DT the) (NN chat) (NN bat)) (PP (IN at) (NP (NN bottom)))) (CC and) (NP (NP (DT any) (JJ open) (NN chat) (NN conversation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ lays) (UCP (PP (IN below) (NP (PRP it))) (CC and) (ADVP (RB therefor)))))))))))) (NP (NP (PRP$ your) (ADJP (JJ unable) (S (VP (TO to) (VP (VB close) (NP (NN chat)) (PP (TO to) (NP (DT a) (NN person) (CD _))))))) (NN type)) (PP (TO to) (NP (NP (DT a) (NN person)) (NP (FW etc.))))) (: ...)))

root(ROOT-0, add-2)
dep(add-2, 2-1)
nsubj(embeds-8, wmode-3)
amod(wmode-3, transparent-4)
poss(flash-7, your-6)
prep_to(transparent-4, flash-7)
ccomp(add-2, embeds-8)
det(banner-11, the-10)
prep_because(embeds-8, banner-11)
prep_over(banner-11, laps-13)
det(bat-16, the-14)
nn(bat-16, chat-15)
dobj(embeds-8, bat-16)
prep_at(bat-16, bottom-18)
det(conversation-23, any-20)
amod(conversation-23, open-21)
nn(conversation-23, chat-22)
dobj(embeds-8, conversation-23)
conj_and(bat-16, conversation-23)
nsubj(lays-25, that-24)
rcmod(conversation-23, lays-25)
dep(lays-25, below-26)
pobj(below-26, it-27)
dep(lays-25, therefor-29)
conj_and(below-26, therefor-29)
poss(type-39, your-30)
amod(type-39, unable-31)
aux(close-33, to-32)
xcomp(unable-31, close-33)
dobj(close-33, chat-34)
det(person-37, a-36)
prep_to(close-33, person-37)
num(person-37, _-38)
nsubj(add-2, type-39)
det(person-42, a-41)
prep_to(type-39, person-42)
dep(person-42, etc.-43)

Thanks/NNS _/VBP James/NNP Murphy/NNP 07862/CD 231/CD 222/CD 

(ROOT (S (NP (NNS Thanks)) (VP (VBP _) (NP (NP (NNP James) (NNP Murphy)) (NP (NP (CD 07862)) (NP (QP (CD 231) (CD 222))))))))

root(ROOT-0, _-2)
nsubj(_-2, Thanks-1)
nn(Murphy-4, James-3)
dobj(_-2, Murphy-4)
dep(Murphy-4, 07862-5)
number(222-7, 231-6)
dep(07862-5, 222-7)

P.S/NNP :/: My/PRP$ contract/NN is/VBZ due/JJ to/TO end/VB soon/RB _/RB so/RB if/IN you/PRP need/VBP a/DT good/JJ web/NN developer/NN :)/NN based/VBN in/IN UK/NNP //: London/NNP 

(ROOT (FRAG (NP (NNP P.S)) (: :) (S (NP (PRP$ My) (NN contract)) (VP (VBZ is) (ADJP (JJ due) (S (VP (TO to) (VP (VB end) (ADVP (RB soon)) (ADVP (RB _)) (SBAR (RB so) (IN if) (S (NP (PRP you)) (VP (VBP need) (NP (NP (DT a) (JJ good) (NN web) (NN developer) (NN :-RRB-)) (PP (VBN based) (PP (IN in) (NP (NP (NNP UK)) (PRN (: /) (NP (NNP London))))))))))))))))))

root(ROOT-0, P.S-1)
poss(contract-4, My-3)
nsubj(due-6, contract-4)
cop(due-6, is-5)
dep(P.S-1, due-6)
aux(end-8, to-7)
xcomp(due-6, end-8)
advmod(end-8, soon-9)
advmod(end-8, _-10)
advmod(need-14, so-11)
mark(need-14, if-12)
nsubj(need-14, you-13)
advcl(end-8, need-14)
det(:-RRB--19, a-15)
amod(:-RRB--19, good-16)
nn(:-RRB--19, web-17)
nn(:-RRB--19, developer-18)
dobj(need-14, :-RRB--19)
prep(:-RRB--19, based-20)
pcomp(based-20, in-21)
pobj(in-21, UK-22)
punct(London-24, /-23)
dep(UK-22, London-24)

