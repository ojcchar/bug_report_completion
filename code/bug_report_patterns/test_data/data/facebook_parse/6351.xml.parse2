It/PRP worked/VBD but/CC stopped/VBD as/RB soon/RB as/IN refactoring/NN began/VBD ./. 

(ROOT (S (NP (PRP It)) (VP (VP (VBD worked)) (CC but) (VP (VBD stopped) (ADVP (RB as) (RB soon)) (SBAR (IN as) (S (NP (NN refactoring)) (VP (VBD began)))))) (. .)))

root(ROOT-0, worked-2)
nsubj(worked-2, It-1)
nsubj(stopped-4, It-1)
conj_but(worked-2, stopped-4)
advmod(soon-6, as-5)
advmod(stopped-4, soon-6)
mark(began-9, as-7)
nsubj(began-9, refactoring-8)
advcl(stopped-4, began-9)

There/EX is/VBZ a/DT drop-down/JJ with/IN application/NN list/NN in/IN Statistics/NNPS page/NN ./. 

(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (DT a) (ADJP (JJ drop-down) (PP (IN with) (NP (NP (NN application) (NN list)) (PP (IN in) (NP (NNPS Statistics)))))) (NN page))) (. .)))

root(ROOT-0, is-2)
expl(is-2, There-1)
det(page-10, a-3)
amod(page-10, drop-down-4)
nn(list-7, application-6)
prep_with(drop-down-4, list-7)
prep_in(list-7, Statistics-9)
nsubj(is-2, page-10)

When/WRB I/PRP select/VBP another/DT application/NN in/IN that/DT drop/NN down/RP -/: this/DT application/NN stats/NNS should/MD load/VB on/IN the/DT graph/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP select) (NP (NP (DT another) (NN application)) (PP (IN in) (NP (DT that) (NN drop)))) (PRT (RP down))))) (: -) (NP (DT this) (NN application) (NNS stats)) (VP (MD should) (VP (VB load) (PP (IN on) (NP (DT the) (NN graph))))) (. .)))

root(ROOT-0, load-15)
advmod(select-3, When-1)
nsubj(select-3, I-2)
advcl(load-15, select-3)
det(application-5, another-4)
dobj(select-3, application-5)
det(drop-8, that-7)
prep_in(application-5, drop-8)
prt(select-3, down-9)
det(stats-13, this-11)
nn(stats-13, application-12)
nsubj(load-15, stats-13)
aux(load-15, should-14)
det(graph-18, the-17)
prep_on(load-15, graph-18)

It/PRP stopped/VBD working/VBG ./. 

(ROOT (S (NP (PRP It)) (VP (VBD stopped) (S (VP (VBG working)))) (. .)))

root(ROOT-0, stopped-2)
nsubj(stopped-2, It-1)
xcomp(stopped-2, working-3)

Now/RB I/PRP need/VBP to/TO go/VB back/RB to/TO the/DT application/NN list/NN _/NN choose/VB another/DT application/NN and/CC come/VB back/RB to/TO the/DT statistics/NNS page/NN ./. 

(ROOT (S (ADVP (RB Now)) (NP (PRP I)) (VP (VBP need) (S (VP (TO to) (VP (VB go) (ADVP (RB back)) (PP (TO to) (NP (DT the) (NN application) (NN list) (NN _))) (S (VP (VP (VB choose) (NP (DT another) (NN application))) (CC and) (VP (VB come) (ADVP (RB back)) (PP (TO to) (NP (DT the) (NNS statistics) (NN page)))))))))) (. .)))

root(ROOT-0, need-3)
advmod(need-3, Now-1)
nsubj(need-3, I-2)
aux(go-5, to-4)
xcomp(need-3, go-5)
advmod(go-5, back-6)
det(_-11, the-8)
nn(_-11, application-9)
nn(_-11, list-10)
prep_to(go-5, _-11)
ccomp(go-5, choose-12)
det(application-14, another-13)
dobj(choose-12, application-14)
ccomp(go-5, come-16)
conj_and(choose-12, come-16)
advmod(come-16, back-17)
det(page-21, the-19)
nn(page-21, statistics-20)
prep_to(come-16, page-21)

Having/VBG more/JJR than/IN 1/CD application/NN makes/VBZ this/DT process/NN very/RB annoying/JJ ./. 

(ROOT (SINV (VP (VBG Having) (NP (QP (JJR more) (IN than) (CD 1)) (NN application))) (VP (VBZ makes)) (NP (NP (DT this) (NN process)) (ADJP (RB very) (JJ annoying))) (. .)))

root(ROOT-0, Having-1)
mwe(than-3, more-2)
quantmod(1-4, than-3)
num(application-5, 1-4)
dobj(Having-1, application-5)
dep(Having-1, makes-6)
det(process-8, this-7)
nsubj(Having-1, process-8)
advmod(annoying-10, very-9)
amod(process-8, annoying-10)

