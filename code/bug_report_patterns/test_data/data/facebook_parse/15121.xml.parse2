Created/VBN an/DT attachment/NN (/-LRB- id/NN =/JJ 3604/CD )/-RRB- Test/NN for/IN japanese/JJ Facebook/NNP search/NN 

(ROOT (VP (VBN Created) (NP (DT an) (NN attachment) (PRN (-LRB- -LRB-) (S (NP (NN id)) (ADJP (JJ =) (NP-TMP (CD 3604)))) (-RRB- -RRB-)) (NN Test)) (PP (IN for) (NP (JJ japanese) (NNP Facebook) (NN search)))))

root(ROOT-0, Created-1)
det(Test-9, an-2)
nn(Test-9, attachment-3)
dep(=-6, id-5)
dep(Test-9, =-6)
tmod(=-6, 3604-7)
dobj(Created-1, Test-9)
amod(search-13, japanese-11)
nn(search-13, Facebook-12)
prep_for(Created-1, search-13)

Hi/NN _/SYM 

(ROOT (NP (NN Hi) (SYM _)))

root(ROOT-0, Hi-1)
dep(Hi-1, _-2)

I/PRP posted/VBD a/DT ticket/NN recently/RB regarding/VBG issue/NN in/IN japanese/JJ search/NN http://bugs.developers.facebook.net/show_bug.cgi?id=13200/NN 

(ROOT (S (NP (PRP I)) (VP (VBD posted) (NP (DT a) (NN ticket)) (ADVP (RB recently)) (PP (VBG regarding) (NP (NP (NN issue)) (PP (IN in) (NP (JJ japanese) (NN search) (NN http://bugs.developers.facebook.net/show_bug.cgi?id=13200))))))))

root(ROOT-0, posted-2)
nsubj(posted-2, I-1)
det(ticket-4, a-3)
dobj(posted-2, ticket-4)
advmod(posted-2, recently-5)
prep_regarding(posted-2, issue-7)
amod(http://bugs.developers.facebook.net/show_bug.cgi?id=13200-11, japanese-9)
nn(http://bugs.developers.facebook.net/show_bug.cgi?id=13200-11, search-10)
prep_in(issue-7, http://bugs.developers.facebook.net/show_bug.cgi?id=13200-11)

I/PRP have/VBP been/VBN asked/VBN Facebook/NNP dev/NN to/TO provide/VB step/NN to/TO reproduce/VB bug/NN and/CC to/TO reopen/VB the/DT ticket/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN been) (VP (VBN asked) (NP (NNP Facebook) (NN dev)) (S (VP (TO to) (VP (VB provide) (NP (NN step)) (S (VP (VP (TO to) (VP (VB reproduce) (NP (NN bug)))) (CC and) (VP (TO to) (VP (VB reopen) (NP (DT the) (NN ticket)))))))))))) (. .)))

root(ROOT-0, asked-4)
nsubjpass(asked-4, I-1)
aux(asked-4, have-2)
auxpass(asked-4, been-3)
nn(dev-6, Facebook-5)
dobj(asked-4, dev-6)
aux(provide-8, to-7)
xcomp(asked-4, provide-8)
dobj(provide-8, step-9)
aux(reproduce-11, to-10)
dep(provide-8, reproduce-11)
dobj(reproduce-11, bug-12)
aux(reopen-15, to-14)
dep(provide-8, reopen-15)
conj_and(reproduce-11, reopen-15)
det(ticket-17, the-16)
dobj(reopen-15, ticket-17)

But/CC since/IN I/PRP can/MD not/RB figure/VB out/RP how/WRB to/TO reopen/VB the/DT ticket/NN _/CD I/PRP am/VBP creating/VBG a/DT new/JJ ticket/NN ./. 

(ROOT (S (CC But) (SBAR (IN since) (S (NP (PRP I)) (VP (MD can) (RB not) (VP (VB figure) (PRT (RP out)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB reopen) (NP (DT the) (NN ticket) (CD _)))))))))) (NP (PRP I)) (VP (VBP am) (VP (VBG creating) (NP (DT a) (JJ new) (NN ticket)))) (. .)))

root(ROOT-0, creating-16)
cc(creating-16, But-1)
mark(figure-6, since-2)
nsubj(figure-6, I-3)
aux(figure-6, can-4)
neg(figure-6, not-5)
advcl(creating-16, figure-6)
prt(figure-6, out-7)
advmod(reopen-10, how-8)
aux(reopen-10, to-9)
ccomp(figure-6, reopen-10)
det(ticket-12, the-11)
dobj(reopen-10, ticket-12)
num(ticket-12, _-13)
nsubj(creating-16, I-14)
aux(creating-16, am-15)
det(ticket-19, a-17)
amod(ticket-19, new-18)
dobj(creating-16, ticket-19)

Sorry/JJ about/IN that/DT ./. 

(ROOT (NP (NP (JJ Sorry)) (PP (IN about) (NP (DT that))) (. .)))

root(ROOT-0, Sorry-1)
prep_about(Sorry-1, that-3)

Please/VB find/VB below/IN a/DT PHP/NNP code/NN that/WDT can/MD be/VB execute/VB to/TO reproduce/VB the/DT issue/NN (/-LRB- I/PRP also/RB attached/VBD it/PRP )/-RRB- ./. 

(ROOT (S (VP (VB Please) (VP (VB find) (PP (IN below) (NP (NP (DT a) (NNP PHP) (NN code)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB be) (VP (VB execute) (S (VP (TO to) (VP (VB reproduce) (NP (NP (DT the) (NN issue)) (PRN (-LRB- -LRB-) (S (NP (PRP I)) (VP (ADVP (RB also)) (VBD attached) (NP (PRP it)))) (-RRB- -RRB-))))))))))))))) (. .)))

root(ROOT-0, Please-1)
xcomp(Please-1, find-2)
det(code-6, a-4)
nn(code-6, PHP-5)
prep_below(find-2, code-6)
nsubj(execute-10, that-7)
aux(execute-10, can-8)
aux(execute-10, be-9)
rcmod(code-6, execute-10)
aux(reproduce-12, to-11)
xcomp(execute-10, reproduce-12)
det(issue-14, the-13)
dobj(reproduce-12, issue-14)
nsubj(attached-18, I-16)
advmod(attached-18, also-17)
dep(issue-14, attached-18)
dobj(attached-18, it-19)

but/CC be/VB aware/JJ that/IN since/IN search/NN history/NN does/VBZ not/RB go/VB longer/RBR than/IN around/IN 2/CD weeks/NNS _/VBP the/DT example/NN will/MD be/VB deprecated/VBN after/IN around/IN the/DT 20th/JJ of/IN Febuary/NNP ./. 

(ROOT (FRAG (CC but) (VP (VB be) (ADJP (JJ aware)) (SBAR (IN that) (S (SBAR (IN since) (S (NP (NN search) (NN history)) (VP (VBZ does) (RB not) (VP (VB go) (ADVP (RBR longer) (IN than)) (PP (IN around) (NP (CD 2) (NNS weeks))))))) (VP (VBP _) (SBAR (S (NP (DT the) (NN example)) (VP (MD will) (VP (VB be) (VP (VBN deprecated) (PP (IN after) (IN around) (NP (NP (DT the) (JJ 20th)) (PP (IN of) (NP (NNP Febuary)))))))))))))) (. .)))

root(ROOT-0, aware-3)
cc(aware-3, but-1)
cop(aware-3, be-2)
mark(_-16, that-4)
mark(go-10, since-5)
nn(history-7, search-6)
nsubj(go-10, history-7)
aux(go-10, does-8)
neg(go-10, not-9)
csubj(_-16, go-10)
advmod(than-12, longer-11)
advmod(go-10, than-12)
num(weeks-15, 2-14)
prep_around(go-10, weeks-15)
ccomp(aware-3, _-16)
det(example-18, the-17)
nsubjpass(deprecated-21, example-18)
aux(deprecated-21, will-19)
auxpass(deprecated-21, be-20)
ccomp(_-16, deprecated-21)
dep(deprecated-21, after-22)
det(20th-25, the-24)
prep_around(deprecated-21, 20th-25)
prep_of(20th-25, Febuary-27)

This/DT test/NN aims/VBZ to/TO demonstrate/VB that/IN facebook/NN search/NN has/VBZ missing/JJ results/NNS for/IN japanese/JJ content/NN ./. 

(ROOT (S (NP (DT This) (NN test)) (VP (VBZ aims) (S (VP (TO to) (VP (VB demonstrate) (SBAR (IN that) (S (NP (NN facebook) (NN search)) (VP (VBZ has) (NP (NP (JJ missing) (NNS results)) (PP (IN for) (NP (JJ japanese) (NN content))))))))))) (. .)))

root(ROOT-0, aims-3)
det(test-2, This-1)
nsubj(aims-3, test-2)
aux(demonstrate-5, to-4)
xcomp(aims-3, demonstrate-5)
mark(has-9, that-6)
nn(search-8, facebook-7)
nsubj(has-9, search-8)
ccomp(demonstrate-5, has-9)
amod(results-11, missing-10)
dobj(has-9, results-11)
amod(content-14, japanese-13)
prep_for(results-11, content-14)

The/DT test/NN will/MD search/VB for/IN some/DT japanese/JJ terms/NNS taken/VBN from/IN a/DT specific/JJ post/NN and/CC show/VBP that/IN the/DT post/NN may/MD be/VB missing/VBG from/IN the/DT results/NNS ./. 

(ROOT (S (NP (DT The) (NN test)) (VP (VP (MD will) (VP (VB search) (PP (IN for) (NP (NP (DT some) (JJ japanese) (NNS terms)) (VP (VBN taken) (PP (IN from) (NP (DT a) (JJ specific) (NN post)))))))) (CC and) (VP (VBP show) (SBAR (IN that) (S (NP (DT the) (NN post)) (VP (MD may) (VP (VB be) (VP (VBG missing) (PP (IN from) (NP (DT the) (NNS results)))))))))) (. .)))

root(ROOT-0, search-4)
det(test-2, The-1)
nsubj(search-4, test-2)
nsubj(show-15, test-2)
aux(search-4, will-3)
det(terms-8, some-6)
amod(terms-8, japanese-7)
prep_for(search-4, terms-8)
vmod(terms-8, taken-9)
det(post-13, a-11)
amod(post-13, specific-12)
prep_from(taken-9, post-13)
conj_and(search-4, show-15)
mark(missing-21, that-16)
det(post-18, the-17)
nsubj(missing-21, post-18)
aux(missing-21, may-19)
aux(missing-21, be-20)
ccomp(show-15, missing-21)
det(results-24, the-23)
prep_from(missing-21, results-24)

</JJR ?/. 

(ROOT (FRAG (ADJP (JJR <)) (. ?)))

root(ROOT-0, <-1)

php/NN 

(ROOT (NP (NN php)))

root(ROOT-0, php-1)

$/$ post_id/JJ =/JJ 1822164058_144403055621560/CD ;/: 

(ROOT (NP (NP (NP (ADJP ($ $) (JJ post_id)) (JJ =)) (NP (CD 1822164058_144403055621560))) (: ;)))

root(ROOT-0, $-1)
dep($-1, post_id-2)
amod($-1, =-3)
dep($-1, 1822164058_144403055621560-4)

echo/VB Lets/VBZ considere/VB the/DT post/NN ID/NN ./. 

(ROOT (S (S (VP (VB echo))) (VP (VBZ Lets) (VP (VB considere) (NP (DT the) (NN post) (NN ID)))) (. .)))

root(ROOT-0, Lets-2)
csubj(Lets-2, echo-1)
xcomp(Lets-2, considere-3)
det(ID-6, the-4)
nn(ID-6, post-5)
dobj(considere-3, ID-6)

$/$ post_id/JJ ./. 

(ROOT (FRAG (ADJP ($ $) (JJ post_id)) (. .)))

root(ROOT-0, $-1)
dep($-1, post_id-2)

PHP_EOL/NN ;/: $/$ post/NN =/JJ call_api/NN (/-LRB- graph.facebook.com/NN //: ./. 

(ROOT (NP (NP (NN PHP_EOL)) (: ;) (NP (NP ($ $) (NN post) (JJ =) (NN call_api)) (PRN (-LRB- -LRB-) (NP (NN graph.facebook.com)) (: /))) (. .)))

root(ROOT-0, PHP_EOL-1)
dep(call_api-6, $-3)
nn(call_api-6, post-4)
amod(call_api-6, =-5)
dep(PHP_EOL-1, call_api-6)
dep(call_api-6, graph.facebook.com-8)
punct(graph.facebook.com-8, /-9)

$/$ post_id/JJ )/-RRB- ;/: 

(ROOT (NP (NP (ADJP ($ $) (JJ post_id)) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, $-1)
dep($-1, post_id-2)

echo/VB This/DT post/NN is/VBZ from/IN {/-LRB- $/$ post/JJ -/: >/JJR from/IN -/: >/JJR name/NN }/-RRB- _/NN has/VBZ been/VBN created/VBN the/DT {/-LRB- $/$ post/JJ -/: >/JJR created_time/NN }/-RRB- and/CC has/VBZ the/DT following/VBG message/NN :/: ./. 

(ROOT (S (VP (VB echo) (NP (NP (DT This) (NN post)) (SBAR (S (VP (VP (VBZ is) (PP (IN from) (PRN (-LRB- -LCB-) (NP (NP (NP (NP (ADJP ($ $) (JJ post))) (PRN (: -) (ADJP (JJR >) (PP (IN from))) (: -))) (NP (JJR >))) (NP (NN name))) (-RRB- -RCB-)))) (PRN (S (NP (NN _)) (VP (VBZ has) (VP (VBN been) (VP (VBN created) (NP (DT the) (PRN (-LRB- -LCB-) (UCP (ADJP ($ $) (JJ post)) (: -) (NP (NP (JJR >)) (NP (NN created_time)))))))))) (-RRB- -RCB-)) (CC and) (VP (VBZ has) (NP (DT the) (VBG following) (NN message)))) (: :))))) (. .)))

root(ROOT-0, echo-1)
det(post-3, This-2)
dobj(echo-1, post-3)
rcmod(post-3, is-4)
prep(is-4, from-5)
dep(from-5, $-7)
dep($-7, post-8)
dep($-7, >-10)
prep(>-10, from-11)
dep($-7, >-13)
dep($-7, name-14)
nsubjpass(created-19, _-16)
aux(created-19, has-17)
auxpass(created-19, been-18)
parataxis(is-4, created-19)
det($-22, the-20)
dobj(created-19, $-22)
dep($-22, post-23)
dep($-22, >-25)
dep(>-25, created_time-26)
rcmod(post-3, has-29)
conj_and(is-4, has-29)
det(message-32, the-30)
amod(message-32, following-31)
dobj(has-29, message-32)

PHP_EOL/NN ;/: echo/VB $/$ post/JJ -/: >/JJR message/NN ./. 

(ROOT (NP (NP (NN PHP_EOL)) (: ;) (S (VP (VB echo) (ADJP (ADJP ($ $) (JJ post)) (: -) (ADJP (JJR >)) (NP (NN message))))) (. .)))

root(ROOT-0, PHP_EOL-1)
dep(PHP_EOL-1, echo-3)
acomp(echo-3, $-4)
dep($-4, post-5)
dep($-4, >-7)
dep($-4, message-8)

PHP_EOL/NN ./. 

(ROOT (NP (NN PHP_EOL) (. .)))

root(ROOT-0, PHP_EOL-1)

PHP_EOL/NN ;/: 

(ROOT (NP (NN PHP_EOL) (: ;)))

root(ROOT-0, PHP_EOL-1)

$/$ terms/NNS =/JJ array/NN (/-LRB- こんにちは/CD _/CD sekai/NNS _/VBP 世界/NN )/-RRB- ;/: 

(ROOT (NP (NP (NP ($ $) (QP (NNS terms))) (SBAR (S (VP (JJ =) (NP (NP (NN array)) (PRN (-LRB- -LRB-) (S (NP (QP (CD こんにちは) (CD _)) (NNS sekai)) (VP (VBP _) (NP (NN 世界)))) (-RRB- -RRB-))))))) (: ;)))

root(ROOT-0, $-1)
num($-1, terms-2)
rcmod($-1, =-3)
dobj(=-3, array-4)
number(_-7, こんにちは-6)
num(sekai-8, _-7)
nsubj(_-9, sekai-8)
dep(array-4, _-9)
dobj(_-9, 世界-10)

foreach/NN (/-LRB- $/$ terms/NNS as/IN $/$ term/NN )/-RRB- if/IN (/-LRB- !/. 

(ROOT (NP (NP (NP (NN foreach)) (PRN (-LRB- -LRB-) (NP (NP ($ $) (QP (NNS terms))) (PP (IN as) (NP ($ $) (NN term)))) (-RRB- -RRB-))) (ADJP (IN if) (-LRB- -LRB-)) (. !)))

root(ROOT-0, foreach-1)
dep(foreach-1, $-3)
num($-3, terms-4)
dep(term-7, $-6)
prep_as($-3, term-7)
amod(foreach-1, if-9)

preg_match/NN (/-LRB- //: $/$ term/iu/CD _/CD $/$ post/JJ -/: >/JJR message/NN )/-RRB- )/-RRB- {/-LRB- echo/VB Should/MD not/RB happen/VB ./. 

(ROOT (S (NP (NP (NP (NN preg_match)) (PRN (-LRB- -LRB-) (PP (: /) (NP (NP (NP ($ $) (CD term/iu) (CD _)) (ADJP ($ $) (JJ post))) (: -) (NP (JJR >) (NN message)))) (-RRB- -RRB-)) (-RRB- -RRB-)) (SBAR (S (VP (-LRB- -LCB-) (VP (VB echo)))))) (VP (MD Should) (RB not) (VP (VB happen))) (. .)))

root(ROOT-0, happen-18)
nsubj(happen-18, preg_match-1)
punct($-4, /-3)
prep(preg_match-1, $-4)
num($-4, term/iu-5)
num($-4, _-6)
amod($-4, $-7)
dep($-7, post-8)
amod(message-11, >-10)
dep($-4, message-11)
rcmod(preg_match-1, echo-15)
aux(happen-18, Should-16)
neg(happen-18, not-17)

;/: exit/NN ;/: }/-RRB- echo/VBP Theses/NNS terms/NNS are/VBP in/IN the/DT post/NN :/: ./. 

(ROOT (NP (: ;) (NP (NP (NN exit)) (: ;) (SBAR (WHNP (-RRB- -RCB-)) (S (VP (VBP echo) (SBAR (S (NP (NNS Theses) (NNS terms)) (VP (VBP are) (PP (IN in) (NP (DT the) (NN post))))))) (: :)))) (. .)))

root(ROOT-0, exit-2)
rcmod(exit-2, echo-5)
nn(terms-7, Theses-6)
nsubj(are-8, terms-7)
ccomp(echo-5, are-8)
det(post-11, the-10)
prep_in(are-8, post-11)

implode/VB (/-LRB- _/CD _/CD $/$ terms/NNS )/-RRB- ./. 

(ROOT (SQ (VP (VB implode) (PRN (-LRB- -LRB-) (NP (NP (CD _)) (NP (NP (CD _)) (NP ($ $) (QP (NNS terms))))) (-RRB- -RRB-))) (. .)))

root(ROOT-0, implode-1)
dep(implode-1, _-3)
dep(_-3, _-4)
dep(_-4, $-5)
num($-5, terms-6)

PHP_EOL/NN ;/: 

(ROOT (NP (NN PHP_EOL) (: ;)))

root(ROOT-0, PHP_EOL-1)

echo/VB Let/VB search/NN for/IN each/DT of/IN them/PRP and/CC see/VB if/IN the/DT post/NN is/VBZ in/IN the/DT results/NNS ./. 

(ROOT (S (VP (VB echo) (VP (VP (VB Let) (NP (NN search)) (PP (IN for) (NP (NP (DT each)) (PP (IN of) (NP (PRP them)))))) (CC and) (VP (VB see) (SBAR (IN if) (S (NP (DT the) (NN post)) (VP (VBZ is) (PP (IN in) (NP (DT the) (NNS results))))))))) (. .)))

root(ROOT-0, echo-1)
dep(echo-1, Let-2)
dobj(Let-2, search-3)
prep_for(Let-2, each-5)
prep_of(each-5, them-7)
dep(echo-1, see-9)
conj_and(Let-2, see-9)
mark(is-13, if-10)
det(post-12, the-11)
nsubj(is-13, post-12)
advcl(see-9, is-13)
det(results-16, the-15)
prep_in(is-13, results-16)

./. 

(ROOT (NP (. .)))


PHP_EOL/NN ;/: 

(ROOT (NP (NN PHP_EOL) (: ;)))

root(ROOT-0, PHP_EOL-1)

foreach/NN (/-LRB- $/$ terms/NNS as/IN $/$ term/NN )/-RRB- {/-LRB- 

(ROOT (NP (NP (NN foreach)) (PRN (-LRB- -LRB-) (NP (NP ($ $) (QP (NNS terms))) (PP (IN as) (NP ($ $) (NN term)))) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, foreach-1)
dep(foreach-1, $-3)
num($-3, terms-4)
dep(term-7, $-6)
prep_as($-3, term-7)

$/$ results/VBZ =/JJ call_api/NN (/-LRB- graph.facebook.com/search?q=/NN ./. 

(ROOT (NP (NP ($ $) (VBZ results)) (NP (NP (JJ =)) (NP (NN call_api) (-LRB- -LRB-) (NN graph.facebook.com/search?q=))) (. .)))

root(ROOT-0, $-1)
dep($-1, results-2)
dep($-1, =-3)
nn(graph.facebook.com/search?q=-6, call_api-4)
dep(=-3, graph.facebook.com/search?q=-6)

urlencode/NN (/-LRB- $/$ term/NN )/-RRB- ./. 

(ROOT (NP (NP (NN urlencode)) (PRN (-LRB- -LRB-) (NP ($ $) (NN term)) (-RRB- -RRB-)) (. .)))

root(ROOT-0, urlencode-1)
dep(term-4, $-3)
appos(urlencode-1, term-4)

&/CC until/IN =/JJ ./. 

(ROOT (S (NP (CC &)) (PP (IN until) (ADJP (JJ =))) (. .)))

root(ROOT-0, &-1)
dep(&-1, until-2)
pobj(until-2, =-3)

strtotime/NN (/-LRB- $/$ post/JJ -/: >/JJR created_time/NN )/-RRB- )/-RRB- ;/: echo/VBP Search/VB for/IN $/$ term/NN has/VBZ returned/VBN ./. 

(ROOT (NP (NP (NP (NN strtotime)) (PRN (-LRB- -LRB-) (NP (NP ($ $) (JJ post)) (: -) (NP (JJR >) (NN created_time))) (-RRB- -RRB-)) (-RRB- -RRB-)) (: ;) (S (S (VP (VBP echo) (VP (VB Search) (PP (IN for) (NP ($ $) (NN term)))))) (VP (VBZ has) (VP (VBN returned)))) (. .)))

root(ROOT-0, strtotime-1)
dep(strtotime-1, $-3)
amod($-3, post-4)
amod(created_time-7, >-6)
dep($-3, created_time-7)
csubj(returned-17, echo-11)
xcomp(echo-11, Search-12)
dep(term-15, $-14)
prep_for(Search-12, term-15)
aux(returned-17, has-16)
dep(strtotime-1, returned-17)

count/NN (/-LRB- $/$ results/VBZ -/: >/JJR data/NNS )/-RRB- ./. 

(ROOT (NP (NP (NN count)) (PRN (-LRB- -LRB-) (NP (NP ($ $) (VBZ results)) (: -) (NP (JJR >) (NNS data))) (-RRB- -RRB-)) (. .)))

root(ROOT-0, count-1)
dep(count-1, $-3)
dep($-3, results-4)
amod(data-7, >-6)
dep($-3, data-7)

results/NNS ./. 

(ROOT (NP (NNS results) (. .)))

root(ROOT-0, results-1)

./. 

(ROOT (NP (. .)))


PHP_EOL/NN ;/: $/$ post_found/JJ =/JJ has_post/NN (/-LRB- $/$ results/VBZ _/CD $/$ post/JJ )/-RRB- ;/: echo/VBP (/-LRB- $/$ post_found/CD ?/. 

(ROOT (S (NP (NP (NN PHP_EOL)) (: ;) (NP (NP (ADJP ($ $) (JJ post_found)) (JJ =) (NN has_post)) (PRN (-LRB- -LRB-) (NP (NP ($ $) (VBZ results)) (NP (NP (CD _)) (ADJP ($ $) (JJ post)))) (-RRB- -RRB-))) (: ;)) (VP (VBP echo) (PP (-LRB- -LRB-) (NP ($ $) (CD post_found)))) (. ?)))

root(ROOT-0, echo-15)
nsubj(echo-15, PHP_EOL-1)
amod(has_post-6, $-3)
dep($-3, post_found-4)
amod(has_post-6, =-5)
dep(PHP_EOL-1, has_post-6)
dep(has_post-6, $-8)
dep($-8, results-9)
dep($-8, _-10)
amod(_-10, $-11)
dep($-11, post-12)
prep(echo-15, $-17)
num($-17, post_found-18)

post/NN found/VBD :/: post/NN not/RB found/VBN )/-RRB- ./. 

(ROOT (S (NP (NN post)) (VP (VBD found) (: :) (NP (NP (NN post)) (ADJP (RB not) (VBN found)))) (-RRB- -RRB-) (. .)))

root(ROOT-0, found-2)
nsubj(found-2, post-1)
dobj(found-2, post-4)
neg(found-6, not-5)
amod(post-4, found-6)

in/IN the/DT results/NNS ./. 

(ROOT (FRAG (PP (IN in) (NP (DT the) (NNS results))) (. .)))

root(ROOT-0, in-1)
det(results-3, the-2)
pobj(in-1, results-3)

./. 

(ROOT (NP (. .)))


PHP_EOL/NN ;/: }/-RRB- 

(ROOT (NP (NP (NN PHP_EOL)) (: ;) (NP (-RRB- -RCB-))))

root(ROOT-0, PHP_EOL-1)

function/NN call_api/NNS (/-LRB- $/$ url/JJ )/-RRB- {/-LRB- echo/VB Calling/VBG API/NNP :/: ./. 

(ROOT (S (NP (NP (NN function) (NNS call_api)) (PRN (-LRB- -LRB-) (ADJP ($ $) (JJ url)) (-RRB- -RRB-))) (VP (-LRB- -LCB-) (VP (VB echo) (S (VP (VBG Calling) (NP (NNP API)))))) (: :) (. .)))

root(ROOT-0, echo-8)
nn(call_api-2, function-1)
nsubj(echo-8, call_api-2)
dep(call_api-2, $-4)
dep($-4, url-5)
xcomp(echo-8, Calling-9)
dobj(Calling-9, API-10)

urldecode/NN (/-LRB- $/$ url/JJ )/-RRB- ./. 

(ROOT (NP (NP (NN urldecode)) (PRN (-LRB- -LRB-) (ADJP ($ $) (JJ url)) (-RRB- -RRB-)) (. .)))

root(ROOT-0, urldecode-1)
dep(urldecode-1, $-3)
dep($-3, url-4)

PHP_EOL/NN ;/: $/$ ch/JJ =/JJ curl_init/NN (/-LRB- $/$ url/JJ )/-RRB- ;/: curl_setopt_array/NN (/-LRB- $/$ ch/JJ _/NN array/NN (/-LRB- CURLOPT_RETURNTRANSFER/NN =/JJ >/JJR true/JJ _/NN CURLOPT_HTTPHEADER/NN =/JJ >/JJR array/NN (/-LRB- Accept-Language/NN :/: en/IN )/-RRB- )/-RRB- )/-RRB- ;/: return/NN json_decode/NN (/-LRB- curl_exec/NN (/-LRB- $/$ ch/JJ )/-RRB- )/-RRB- ;/: }/-RRB- 

(ROOT (PRN (NP (NP (NN PHP_EOL)) (: ;) (NP (NP (NP (ADJP ($ $) (JJ ch)) (JJ =) (NN curl_init)) (PRN (-LRB- -LRB-) (ADJP ($ $) (JJ url)) (-RRB- -RRB-))) (: ;) (NP (NP (NN curl_setopt_array)) (-LRB- -LRB-) (NP (NP (ADJP ($ $) (JJ ch)) (NN _)) (NP (NP (NP (NN array)) (PRN (-LRB- -LRB-) (NP (NP (NN CURLOPT_RETURNTRANSFER)) (NP (NP (JJ =) (ADJP (JJR >) (JJ true)) (NN _) (NN CURLOPT_HTTPHEADER) (JJ =) (JJR >) (NN array)) (PRN (-LRB- -LRB-) (FRAG (NP (NN Accept-Language)) (: :) (PP (IN en))) (-RRB- -RRB-)))) (-RRB- -RRB-)) (-RRB- -RRB-)) (: ;) (NP (NP (NN return) (NN json_decode)) (-LRB- -LRB-) (NP (NN curl_exec)) (PRN (-LRB- -LRB-) (ADJP ($ $) (JJ ch)) (-RRB- -RRB-)) (-RRB- -RRB-)))) (: ;)))) (-RRB- -RCB-)))

root(ROOT-0, PHP_EOL-1)
amod(curl_init-6, $-3)
dep($-3, ch-4)
amod(curl_init-6, =-5)
dep(PHP_EOL-1, curl_init-6)
dep(curl_init-6, $-8)
dep($-8, url-9)
dep(curl_init-6, curl_setopt_array-12)
amod(_-16, $-14)
dep($-14, ch-15)
dep(curl_setopt_array-12, _-16)
dep(_-16, array-17)
appos(array-17, CURLOPT_RETURNTRANSFER-19)
amod(array-27, =-20)
dep(true-22, >-21)
amod(array-27, true-22)
nn(array-27, _-23)
nn(array-27, CURLOPT_HTTPHEADER-24)
amod(array-27, =-25)
amod(array-27, >-26)
dep(CURLOPT_RETURNTRANSFER-19, array-27)
dep(array-27, Accept-Language-29)
prep(Accept-Language-29, en-31)
nn(json_decode-37, return-36)
dep(array-17, json_decode-37)
dep(json_decode-37, curl_exec-39)
dep(json_decode-37, $-41)
dep($-41, ch-42)

function/NN has_post/NN (/-LRB- $/$ search_results/CD _/CD $/$ post/JJ )/-RRB- {/-LRB- $/$ has_post/CD =/JJ false/JJ ;/: foreach/NN (/-LRB- $/$ search_results/CD -/: >/JJR data/NNS as/IN $/$ p/NN )/-RRB- {/-LRB- if/IN (/-LRB- $/$ p/NN -/: >/JJR id/NN ==/CD $/$ post/JJ -/: >/JJR id/NN )/-RRB- {/-LRB- $/$ has_post/CD =/JJ true/JJ ;/: break/NN ;/: }/-RRB- }/-RRB- return/VB $/$ has_post/CD ;/: }/-RRB- 

(ROOT (S (NP (NP (NN function)) (ADJP (ADJP (ADJP (NN has_post)) (PRN (-LRB- -LRB-) (NP (NP ($ $) (CD search_results)) (NP (NP (CD _)) (ADJP ($ $) (JJ post)))) (-RRB- -RRB-))) (PRN (-LRB- -LCB-) (NP (NP ($ $) (CD has_post)) (SBAR (S (VP (JJ =) (NP (NP (JJ false)) (: ;) (NP (NP (NP (NP (NP (NN foreach)) (PRN (-LRB- -LRB-) (NP ($ $) (CD search_results)) (: -) (NP (NP (JJR >) (NNS data)) (PP (IN as) (NP ($ $) (NN p)))) (-RRB- -RRB-))) (PRN (-LRB- -LCB-) (PP (IN if) (NP (PRN (-LRB- -LRB-) (UCP (ADJP ($ $) (NN p)) (: -) (NP (NP (JJR >) (NN id)) (NP (NP (NP (CD ==)) (ADJP ($ $) (JJ post))) (: -) (NP (JJR >)))))) (NN id))) (-RRB- -RRB-))) (PRN (-LRB- -LCB-) (NP (NP ($ $) (CD has_post)) (NP (NP (JJ =)) (NP (NP (JJ true)) (PRN (: ;) (NP (NN break)) (: ;)) (-RRB- -RCB-)))) (-RRB- -RCB-))) (SBAR (S (VP (VB return) (NP ($ $) (CD has_post)))))) (: ;)))))) (-RRB- -RCB-))))))

root(ROOT-0, function-1)
amod(function-1, has_post-2)
dep(has_post-2, $-4)
num($-4, search_results-5)
dep($-4, _-6)
amod(_-6, $-7)
dep($-7, post-8)
dep(has_post-2, $-11)
num($-11, has_post-12)
rcmod($-11, =-13)
dobj(=-13, false-14)
dep(false-14, foreach-16)
dep(foreach-16, $-18)
num($-18, search_results-19)
amod(data-22, >-21)
dep($-18, data-22)
dep(p-25, $-24)
prep_as(data-22, p-25)
dep(id-40, $-30)
dep($-30, p-31)
amod(id-34, >-33)
dep($-30, id-34)
dep(id-34, ==-35)
amod(==-35, $-36)
dep($-36, post-37)
dep(==-35, >-39)
prep_if(foreach-16, id-40)
dep(foreach-16, $-43)
num($-43, has_post-44)
dep($-43, =-45)
dep(=-45, true-46)
dep(true-46, break-48)
rcmod(foreach-16, return-52)
dobj(return-52, $-53)
num($-53, has_post-54)

