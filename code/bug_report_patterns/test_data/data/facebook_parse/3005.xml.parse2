Hello/UH facebook/NN _/NN 

(ROOT (PP (NP (UH Hello)) (PP (ADVP (NN facebook)) (ADJP (NN _)))))

root(ROOT-0, facebook-2)
dep(facebook-2, Hello-1)
dep(facebook-2, _-3)

I/PRP tested/VBD users.getStandardInfo/NN with/IN my/PRP$ own/JJ UID/NN and/CC my/PRP$ app/NN to/TO retrieve/VB data/NNS that/IN I/PRP can/MD use/VB for/IN analytic/JJ purpose/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBD tested) (NP (NN users.getStandardInfo)) (PP (IN with) (NP (NP (PRP$ my) (JJ own) (NN UID)) (CC and) (NP (PRP$ my) (NN app)))) (S (VP (TO to) (VP (VB retrieve) (NP (NNS data)) (SBAR (IN that) (S (NP (PRP I)) (VP (MD can) (VP (VB use) (PP (IN for) (NP (JJ analytic) (NN purpose))))))))))) (. .)))

root(ROOT-0, tested-2)
nsubj(tested-2, I-1)
dobj(tested-2, users.getStandardInfo-3)
poss(UID-7, my-5)
amod(UID-7, own-6)
prep_with(tested-2, UID-7)
poss(app-10, my-9)
prep_with(tested-2, app-10)
conj_and(UID-7, app-10)
aux(retrieve-12, to-11)
vmod(tested-2, retrieve-12)
dobj(retrieve-12, data-13)
mark(use-17, that-14)
nsubj(use-17, I-15)
aux(use-17, can-16)
ccomp(retrieve-12, use-17)
amod(purpose-20, analytic-19)
prep_for(use-17, purpose-20)

The/DT problem/NN is/VBZ that/IN it/PRP doesn/NN t/NN return/VB any/DT data/NNS at/IN all/DT but/CC an/DT error/NN code/NN 3/CD (/-LRB- which/WDT is/VBZ unknown/JJ method/NN _/NN correct/VB ?/. )/-RRB- 

(ROOT (S (NP (DT The) (NN problem)) (VP (VBZ is) (SBAR (IN that) (S (NP (NP (PRP it)) (NP (NN doesn) (NN t))) (VP (VB return) (NP (DT any) (NNS data)) (PP (IN at) (NP (NP (DT all)) (PP (CC but) (NP (NP (NP (DT an) (NN error) (NN code)) (NP (CD 3))) (PRN (-LRB- -LRB-) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (JJ unknown) (NN method) (NN _) (S (VP (VB correct)))))) (. ?)) (-RRB- -RRB-))))))))))))

root(ROOT-0, is-3)
det(problem-2, The-1)
nsubj(is-3, problem-2)
mark(return-8, that-4)
nsubj(return-8, it-5)
nn(t-7, doesn-6)
dep(it-5, t-7)
ccomp(is-3, return-8)
det(data-10, any-9)
dobj(return-8, data-10)
prep_at(return-8, all-12)
prep(all-12, but-13)
det(code-16, an-14)
nn(code-16, error-15)
pobj(but-13, code-16)
dep(code-16, 3-17)
nsubj(_-23, which-19)
cop(_-23, is-20)
amod(_-23, unknown-21)
nn(_-23, method-22)
dep(code-16, _-23)
dep(_-23, correct-24)

Is/VBZ it/PRP a/DT bug/NN ?/. 

(ROOT (SQ (VBZ Is) (NP (PRP it)) (NP (DT a) (NN bug)) (. ?)))

root(ROOT-0, bug-4)
cop(bug-4, Is-1)
nsubj(bug-4, it-2)
det(bug-4, a-3)

or/CC is/VBZ the/DT method/NN being/VBG deprecated/VBN ?/. 

(ROOT (SBARQ (CC or) (SQ (VBZ is) (NP (DT the) (NN method)) (VP (VBG being) (VP (VBN deprecated)))) (. ?)))

root(ROOT-0, deprecated-6)
cc(deprecated-6, or-1)
aux(deprecated-6, is-2)
det(method-4, the-3)
nsubjpass(deprecated-6, method-4)
auxpass(deprecated-6, being-5)

Then/RB _/CD is/VBZ there/EX any/DT other/JJ alternative/NN method/NN which/WDT functions/VBZ similarly/RB ?/. 

(ROOT (S (RB Then) (NP (CD _)) (VP (VBZ is) (S (NP (EX there)) (NP (NP (DT any) (JJ other) (NN alternative) (NN method)) (SBAR (WHNP (WDT which)) (S (VP (VBZ functions) (ADVP (RB similarly)))))))) (. ?)))

root(ROOT-0, is-3)
advmod(is-3, Then-1)
nsubj(is-3, _-2)
expl(method-8, there-4)
det(method-8, any-5)
amod(method-8, other-6)
nn(method-8, alternative-7)
xcomp(is-3, method-8)
nsubj(functions-10, which-9)
rcmod(method-8, functions-10)
advmod(functions-10, similarly-11)

Thanks/NNS _/VBP 

(ROOT (S (NP (NNS Thanks)) (VP (VBP _))))

root(ROOT-0, _-2)
nsubj(_-2, Thanks-1)

Hwi/NNP 

(ROOT (NP (NNP Hwi)))

root(ROOT-0, Hwi-1)

