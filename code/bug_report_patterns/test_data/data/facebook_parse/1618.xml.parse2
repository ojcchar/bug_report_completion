The/DT application/NN at/IN the/DT above/JJ URL/NN was/VBD working/VBG as/IN designed/VBN until/IN approx/RB 12/13/CD Feb/NNP 08/CD ./. 

(ROOT (S (NP (NP (DT The) (NN application)) (PP (IN at) (NP (DT the) (JJ above) (NN URL)))) (VP (VBD was) (VP (VBG working) (SBAR (IN as) (S (VP (VBN designed) (PP (IN until) (NP (ADVP (RB approx)) (CD 12/13))) (NP-TMP (NNP Feb) (CD 08))))))) (. .)))

root(ROOT-0, working-8)
det(application-2, The-1)
nsubj(working-8, application-2)
det(URL-6, the-4)
amod(URL-6, above-5)
prep_at(application-2, URL-6)
aux(working-8, was-7)
mark(designed-10, as-9)
advcl(working-8, designed-10)
advmod(12/13-13, approx-12)
prep_until(designed-10, 12/13-13)
tmod(designed-10, Feb-14)
num(Feb-14, 08-15)

At/IN that/DT point/NN _/CD any/DT calls/NNS to/TO Facebook/NNP (/-LRB- retrieving/VBG friend/NN lists/NNS _/VBP retrieving/VBG name/NN of/IN current/JJ user/NN etc/NN )/-RRB- began/VBD to/TO inexplicably/RB fail/VB ./. 

(ROOT (S (PP (IN At) (NP (DT that) (NN point) (CD _))) (NP (NP (NP (DT any) (NNS calls)) (PP (TO to) (NP (NNP Facebook)))) (PRN (-LRB- -LRB-) (S (NP (VBG retrieving) (NN friend) (NNS lists)) (VP (VBP _) (S (VP (VBG retrieving) (NP (NP (NN name)) (PP (IN of) (NP (JJ current) (NN user) (NN etc)))))))) (-RRB- -RRB-))) (VP (VBD began) (S (VP (TO to) (VP (ADVP (RB inexplicably)) (VB fail))))) (. .)))

root(ROOT-0, began-21)
det(point-3, that-2)
prep_at(began-21, point-3)
num(point-3, _-4)
det(calls-6, any-5)
nsubj(began-21, calls-6)
prep_to(calls-6, Facebook-8)
amod(lists-12, retrieving-10)
nn(lists-12, friend-11)
nsubj(_-13, lists-12)
dep(calls-6, _-13)
xcomp(_-13, retrieving-14)
dobj(retrieving-14, name-15)
amod(etc-19, current-17)
nn(etc-19, user-18)
prep_of(name-15, etc-19)
aux(fail-24, to-22)
advmod(fail-24, inexplicably-23)
xcomp(began-21, fail-24)

As/IN the/DT app/NN is/VBZ written/VBN in/IN Flash/NNP _/NNP and/CC no/DT error/NN reports/NNS are/VBP echoed/VBN to/TO screen/VB _/CD I/PRP had/VBD the/DT application/NN email/VB me/PRP the/DT results/NNS of/IN any/DT failed/JJ Facebook/NNP call/NN ./. 

(ROOT (S (SBAR (IN As) (S (S (NP (DT the) (NN app)) (VP (VBZ is) (VP (VBN written) (PP (IN in) (NP (NNP Flash) (NNP _)))))) (CC and) (S (NP (DT no) (NN error) (NNS reports)) (VP (VBP are) (VP (VBN echoed) (S (VP (TO to) (VP (VB screen) (NP (CD _)))))))))) (NP (PRP I)) (VP (VBD had) (S (NP (DT the) (NN application)) (VP (VB email) (NP (PRP me)))) (NP-TMP (NP (DT the) (NNS results)) (PP (IN of) (NP (DT any) (JJ failed) (NNP Facebook) (NN call))))) (. .)))

root(ROOT-0, had-19)
mark(written-5, As-1)
det(app-3, the-2)
nsubjpass(written-5, app-3)
auxpass(written-5, is-4)
advcl(had-19, written-5)
nn(_-8, Flash-7)
prep_in(written-5, _-8)
neg(reports-12, no-10)
nn(reports-12, error-11)
nsubjpass(echoed-14, reports-12)
auxpass(echoed-14, are-13)
conj_and(written-5, echoed-14)
advcl(had-19, echoed-14)
aux(screen-16, to-15)
xcomp(echoed-14, screen-16)
dobj(screen-16, _-17)
nsubj(had-19, I-18)
det(application-21, the-20)
nsubj(email-22, application-21)
ccomp(had-19, email-22)
dobj(email-22, me-23)
det(results-25, the-24)
tmod(had-19, results-25)
det(call-30, any-27)
amod(call-30, failed-28)
nn(call-30, Facebook-29)
prep_of(results-25, call-30)

All/DT came/VBD back/RB as/IN follows/VBZ ./. 

(ROOT (S (NP (DT All)) (VP (VBD came) (ADVP (RB back)) (SBAR (IN as) (S (VP (VBZ follows))))) (. .)))

root(ROOT-0, came-2)
nsubj(came-2, All-1)
advmod(came-2, back-3)
mark(follows-5, as-4)
advcl(came-2, follows-5)

[/-LRB- result/NN ]/-RRB- =/JJ >/JJR Array/NN (/-LRB- [/-LRB- fb_error/NN ]/-RRB- =/JJ >/JJR Array/NN (/-LRB- [/-LRB- code/NN ]/-RRB- =/JJ >/JJR 101/CD [/-LRB- msg/NN ]/-RRB- =/JJ >/JJR Invalid/JJ API/NN key/NN [/-LRB- your_request/NN ]/-RRB- =/JJ >/JJR )/-RRB- 

(ROOT (NP (NP (-LRB- -LSB-) (NN result) (-RRB- -RSB-) (JJ =) (JJR >) (NN Array)) (PRN (-LRB- -LRB-) (NP (NP (-LRB- -LSB-) (NN fb_error)) (PP (-RRB- -RSB-) (NP (NP (ADJP (JJ =) (JJR >)) (NN Array)) (PRN (-LRB- -LRB-) (NP (NP (-LRB- -LSB-) (NN code)) (-RRB- -RSB-) (NP (JJ =) (ADJP (ADJP (JJR >)) (NP (CD 101) (-LRB- -LSB-))) (NN msg) (-RRB- -RSB-) (ADJP (JJ =) (JJR >)) (JJ Invalid) (NN API) (NN key)) (-LRB- -LSB-) (NP (NN your_request))) (-RRB- -RSB-)))) (ADJP (JJ =) (JJR >))) (-RRB- -RRB-))))

root(ROOT-0, Array-6)
punct(Array-6, -LSB--1)
nn(Array-6, result-2)
punct(Array-6, -RSB--3)
amod(Array-6, =-4)
amod(Array-6, >-5)
punct(fb_error-9, -LSB--8)
dep(Array-6, fb_error-9)
punct(Array-13, -RSB--10)
amod(Array-13, =-11)
dep(=-11, >-12)
prep(fb_error-9, Array-13)
punct(code-16, -LSB--15)
dep(Array-13, code-16)
punct(code-16, -RSB--17)
amod(key-28, =-18)
amod(key-28, >-19)
dep(>-19, 101-20)
punct(101-20, -LSB--21)
nn(key-28, msg-22)
punct(key-28, -RSB--23)
amod(key-28, =-24)
dep(=-24, >-25)
amod(key-28, Invalid-26)
nn(key-28, API-27)
dep(code-16, key-28)
punct(code-16, -LSB--29)
dep(code-16, your_request-30)
punct(code-16, -RSB--31)
amod(fb_error-9, =-32)
dep(=-32, >-33)

)/-RRB- 

(ROOT (NP (-RRB- -RRB-)))


The/DT API/NNP key/JJ _/NN however/RB IS/VBZ a/DT valid/JJ one/CD !/. 

(ROOT (S (NP (DT The) (NNP API) (JJ key) (NN _)) (ADVP (RB however)) (VP (VBZ IS) (NP (DT a) (JJ valid) (CD one))) (. !)))

root(ROOT-0, one-9)
det(_-4, The-1)
nn(_-4, API-2)
amod(_-4, key-3)
nsubj(one-9, _-4)
advmod(one-9, however-5)
cop(one-9, IS-6)
det(one-9, a-7)
amod(one-9, valid-8)

To/TO confirm/VB this/DT _/NN I/PRP had/VBD the/DT app/NN email/VB me/PRP the/DT API/NNP key/NN it/PRP was/VBD sending/VBG to/TO Facebook/NNP at/IN the/DT exact/JJ time/NN of/IN sending/VBG ./. 

(ROOT (S (S (VP (TO To) (VP (VB confirm) (NP (NP (DT this) (NN _)) (SBAR (S (NP (PRP I)) (VP (VBD had) (S (NP (DT the) (NN app)) (VP (VB email) (S (NP (PRP me)) (NP (DT the) (NNP API) (NN key)))))))))))) (NP (PRP it)) (VP (VBD was) (VP (VBG sending) (PP (TO to) (NP (NNP Facebook))) (PP (IN at) (NP (NP (DT the) (JJ exact) (NN time)) (PP (IN of) (S (VP (VBG sending)))))))) (. .)))

root(ROOT-0, sending-16)
aux(confirm-2, To-1)
dep(sending-16, confirm-2)
det(_-4, this-3)
dobj(confirm-2, _-4)
nsubj(had-6, I-5)
rcmod(_-4, had-6)
det(app-8, the-7)
nsubj(email-9, app-8)
ccomp(had-6, email-9)
nsubj(key-13, me-10)
det(key-13, the-11)
nn(key-13, API-12)
xcomp(email-9, key-13)
nsubj(sending-16, it-14)
aux(sending-16, was-15)
prep_to(sending-16, Facebook-18)
det(time-22, the-20)
amod(time-22, exact-21)
prep_at(sending-16, time-22)
prepc_of(time-22, sending-24)

Each/DT and/CC every/DT time/NN _/VBD the/DT API/NNP key/NN was/VBD shown/VBN to/TO be/VB 9181ee68f43bc8ff5ae0a37e6c186e32/SYM -/: exactly/RB the/DT same/JJ as/IN assigned/VBN ./. 

(ROOT (S (NP (NP (DT Each)) (CC and) (NP (DT every) (NN time))) (VP (VBD _) (SBAR (S (NP (DT the) (NNP API) (NN key)) (VP (VBD was) (VP (VBN shown) (S (VP (TO to) (VP (VB be) (S (VP (X (SYM 9181ee68f43bc8ff5ae0a37e6c186e32)) (: -) (VP (ADVP (RB exactly) (NP (DT the) (JJ same)) (PP (IN as))) (VBN assigned)))))))))))) (. .)))

root(ROOT-0, _-5)
nsubj(_-5, Each-1)
det(time-4, every-3)
conj_and(Each-1, time-4)
nsubj(_-5, time-4)
det(key-8, the-6)
nn(key-8, API-7)
nsubjpass(shown-10, key-8)
auxpass(shown-10, was-9)
ccomp(_-5, shown-10)
aux(be-12, to-11)
xcomp(shown-10, be-12)
dep(assigned-19, 9181ee68f43bc8ff5ae0a37e6c186e32-13)
advmod(assigned-19, exactly-15)
det(same-17, the-16)
pobj(exactly-15, same-17)
prep(exactly-15, as-18)
ccomp(be-12, assigned-19)

Can/MD any/DT light/JJ be/VB shed/VBN on/IN this/DT please/VB ?/. 

(ROOT (SQ (MD Can) (NP (DT any) (JJ light)) (VP (VB be) (VP (VBN shed) (PP (IN on) (NP (DT this))) (S (VP (VB please))))) (. ?)))

root(ROOT-0, shed-5)
aux(shed-5, Can-1)
det(light-3, any-2)
nsubjpass(shed-5, light-3)
auxpass(shed-5, be-4)
prep_on(shed-5, this-7)
ccomp(shed-5, please-8)

No/DT changes/NNS were/VBD made/VBN to/TO the/DT programming/NN code/NN of/IN the/DT app/NN before/IN this/DT error/NN began/VBD to/TO arise/VB ./. 

(ROOT (S (NP (DT No) (NNS changes)) (VP (VBD were) (VP (VBN made) (PP (TO to) (NP (NP (DT the) (NN programming) (NN code)) (PP (IN of) (NP (DT the) (NN app))))) (SBAR (IN before) (S (NP (DT this) (NN error)) (VP (VBD began) (S (VP (TO to) (VP (VB arise))))))))) (. .)))

root(ROOT-0, made-4)
neg(changes-2, No-1)
nsubjpass(made-4, changes-2)
auxpass(made-4, were-3)
det(code-8, the-6)
nn(code-8, programming-7)
prep_to(made-4, code-8)
det(app-11, the-10)
prep_of(code-8, app-11)
mark(began-15, before-12)
det(error-14, this-13)
nsubj(began-15, error-14)
advcl(made-4, began-15)
aux(arise-17, to-16)
xcomp(began-15, arise-17)

