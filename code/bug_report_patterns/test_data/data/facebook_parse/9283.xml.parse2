This/DT is/VBZ globally/RB broken/JJ _/NN I/PRP am/VBP in/IN the/DT UK/NNP ./. 

(ROOT (S (NP (DT This)) (VP (VBZ is) (ADVP (RB globally)) (NP (NP (JJ broken) (NN _)) (SBAR (S (NP (PRP I)) (VP (VBP am) (PP (IN in) (NP (DT the) (NNP UK)))))))) (. .)))

root(ROOT-0, _-5)
nsubj(_-5, This-1)
cop(_-5, is-2)
advmod(_-5, globally-3)
amod(_-5, broken-4)
nsubj(am-7, I-6)
rcmod(_-5, am-7)
det(UK-10, the-9)
prep_in(am-7, UK-10)

In/IN the/DT DataStoreAdmin/NNP page/NN -/: I/PRP can/MD not/RB create/VB any/DT Object/NNP Types/NNP or/CC Associations/NNS ./. 

(ROOT (S (PP (IN In) (NP (DT the) (NNP DataStoreAdmin) (NN page))) (: -) (NP (PRP I)) (VP (MD can) (RB not) (VP (VB create) (NP (NP (DT any) (NNP Object) (NNP Types)) (CC or) (NP (NNS Associations))))) (. .)))

root(ROOT-0, create-9)
det(page-4, the-2)
nn(page-4, DataStoreAdmin-3)
prep_in(create-9, page-4)
nsubj(create-9, I-6)
aux(create-9, can-7)
neg(create-9, not-8)
det(Types-12, any-10)
nn(Types-12, Object-11)
dobj(create-9, Types-12)
dobj(create-9, Associations-14)
conj_or(Types-12, Associations-14)

It/PRP appears/VBZ that/IN the/DT buttons/NNS are/VBP not/RB submitting/VBG anything/NN ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ appears) (SBAR (IN that) (S (NP (DT the) (NNS buttons)) (VP (VBP are) (RB not) (VP (VBG submitting) (NP (NN anything))))))) (. .)))

root(ROOT-0, appears-2)
nsubj(appears-2, It-1)
mark(submitting-8, that-3)
det(buttons-5, the-4)
nsubj(submitting-8, buttons-5)
aux(submitting-8, are-6)
neg(submitting-8, not-7)
ccomp(appears-2, submitting-8)
dobj(submitting-8, anything-9)

I/PRP have/VBP asked/VBN another/DT developer/NN in/IN the/DT US/NNP to/TO test/VB this/DT and/CC he/PRP says/VBZ it/PRP s/VBZ broken/JJ too/RB ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP have) (VP (VBN asked) (NP (DT another) (NN developer)) (PP (IN in) (NP (DT the) (NNP US))) (S (VP (TO to) (VP (VB test) (NP (DT this)))))))) (CC and) (S (NP (PRP he)) (VP (VBZ says) (SBAR (S (NP (PRP it)) (VP (VBZ s) (ADJP (JJ broken) (RB too))))))) (. .)))

root(ROOT-0, asked-3)
nsubj(asked-3, I-1)
aux(asked-3, have-2)
det(developer-5, another-4)
dobj(asked-3, developer-5)
det(US-8, the-7)
prep_in(asked-3, US-8)
aux(test-10, to-9)
xcomp(asked-3, test-10)
dobj(test-10, this-11)
nsubj(says-14, he-13)
conj_and(asked-3, says-14)
nsubj(broken-17, it-15)
cop(broken-17, s-16)
ccomp(says-14, broken-17)
advmod(broken-17, too-18)

Do/VB not/RB delete/VB your/PRP$ objects/NNS to/TO try/VB and/CC recreate/VB them/PRP -/: this/DT does/VBZ not/RB work/VB as/IN I/PRP have/VBP found/VBN out/RP -/: now/RB I/PRP m/NN screwed/VBD ./. 

(ROOT (S (S (VP (VB Do) (RB not) (VP (VB delete) (NP (PRP$ your) (NNS objects)) (S (VP (TO to) (VP (VB try) (CC and) (VB recreate) (NP (PRP them)))))))) (: -) (S (NP (DT this)) (VP (VBZ does) (RB not) (VP (VB work) (SBAR (IN as) (S (NP (PRP I)) (VP (VBP have) (VP (VBN found) (PRT (RP out)) (: -) (FRAG (ADVP (RB now)) (NP (NP (PRP I)) (SBAR (S (NP (NN m)) (VP (VBD screwed))))))))))))) (. .)))

root(ROOT-0, delete-3)
aux(delete-3, Do-1)
neg(delete-3, not-2)
poss(objects-5, your-4)
dobj(delete-3, objects-5)
aux(try-7, to-6)
vmod(delete-3, try-7)
vmod(delete-3, recreate-9)
conj_and(try-7, recreate-9)
dobj(try-7, them-10)
nsubj(work-15, this-12)
aux(work-15, does-13)
neg(work-15, not-14)
parataxis(delete-3, work-15)
mark(found-19, as-16)
nsubj(found-19, I-17)
aux(found-19, have-18)
advcl(work-15, found-19)
prt(found-19, out-20)
dep(I-23, now-22)
dep(found-19, I-23)
nsubj(screwed-25, m-24)
rcmod(I-23, screwed-25)

