Does/VBZ users.getinfo/NN method/NN need/VBP session/NN key/NN ?/. 

(ROOT (S (VP (VBZ Does) (SBAR (S (NP (NN users.getinfo) (NN method)) (VP (VBP need) (NP (NN session) (NN key)))))) (. ?)))

root(ROOT-0, Does-1)
nn(method-3, users.getinfo-2)
nsubj(need-4, method-3)
ccomp(Does-1, need-4)
nn(key-6, session-5)
dobj(need-4, key-6)

although/IN doc/NN says/VBZ it/PRP doesn/NN t/NN (/-LRB- if/IN i/FW understand/VBP correctly/RB )/-RRB- if/IN i/FW just/RB want/VB to/TO retrieve/VB some/DT very/RB basic/JJ info/NN like/IN name/NN _/CD it/PRP doesn/NN t/NN work/NN and/CC every/DT time/NN i/FW request/NN this/DT method/NN _/VBD it/PRP always/RB returns/VBZ an/DT error/NN saying/VBG that/IN session/NN key/NN is/VBZ invalid/JJ ./. 

(ROOT (S (SBAR (IN although) (S (NP (NN doc)) (VP (VBZ says) (S (NP (PRP it)) (NP (NN doesn) (NN t)))))) (PRN (-LRB- -LRB-) (SBAR (IN if) (S (NP (FW i)) (VP (VBP understand) (ADVP (RB correctly))))) (-RRB- -RRB-)) (SBAR (IN if) (S (NP (FW i)) (ADVP (RB just)) (VP (VB want) (S (VP (TO to) (VP (VB retrieve) (S (NP (NP (DT some) (ADJP (RB very) (JJ basic)) (NN info)) (PP (IN like) (NP (NN name) (CD _)))) (NP (PRP it))))))))) (NP (NP (NN doesn) (NN t) (NN work)) (CC and) (NP (NP (DT every) (NN time)) (NP (NP (FW i)) (VP (NN request) (NP (DT this) (NN method)))))) (VP (VBD _) (SBAR (S (NP (PRP it)) (ADVP (RB always)) (VP (VBZ returns) (NP (NP (DT an) (NN error)) (VP (VBG saying) (SBAR (IN that) (S (NP (NN session) (NN key)) (VP (VBZ is) (ADJP (JJ invalid))))))))))) (. .)))

root(ROOT-0, _-37)
mark(says-3, although-1)
nsubj(says-3, doc-2)
advcl(_-37, says-3)
nsubj(t-6, it-4)
nn(t-6, doesn-5)
xcomp(says-3, t-6)
mark(understand-10, if-8)
nsubj(understand-10, i-9)
parataxis(_-37, understand-10)
advmod(understand-10, correctly-11)
mark(want-16, if-13)
nsubj(want-16, i-14)
advmod(want-16, just-15)
advcl(_-37, want-16)
aux(retrieve-18, to-17)
xcomp(want-16, retrieve-18)
det(info-22, some-19)
advmod(basic-21, very-20)
amod(info-22, basic-21)
nsubj(it-26, info-22)
prep_like(info-22, name-24)
num(name-24, _-25)
xcomp(retrieve-18, it-26)
nn(work-29, doesn-27)
nn(work-29, t-28)
nsubj(_-37, work-29)
det(time-32, every-31)
conj_and(work-29, time-32)
nsubj(_-37, time-32)
dep(time-32, i-33)
dep(i-33, request-34)
det(method-36, this-35)
dobj(request-34, method-36)
nsubj(returns-40, it-38)
advmod(returns-40, always-39)
ccomp(_-37, returns-40)
det(error-42, an-41)
dobj(returns-40, error-42)
vmod(error-42, saying-43)
mark(invalid-48, that-44)
nn(key-46, session-45)
nsubj(invalid-48, key-46)
cop(invalid-48, is-47)
ccomp(saying-43, invalid-48)

how/WRB can/MD i/FW retrieve/VBP basic/JJ info/NN like/IN name/NN without/IN providing/VBG a/DT session/NN key/NN ?/. 

(ROOT (SBARQ (WHADVP (WRB how)) (SQ (MD can) (NP (FW i)) (VP (VBP retrieve) (NP (JJ basic) (NN info)) (PP (IN like) (NP (NN name))) (PP (IN without) (S (VP (VBG providing) (NP (DT a) (NN session) (NN key))))))) (. ?)))

root(ROOT-0, retrieve-4)
advmod(retrieve-4, how-1)
aux(retrieve-4, can-2)
nsubj(retrieve-4, i-3)
amod(info-6, basic-5)
dobj(retrieve-4, info-6)
prep_like(retrieve-4, name-8)
prepc_without(retrieve-4, providing-10)
det(key-13, a-11)
nn(key-13, session-12)
dobj(providing-10, key-13)

