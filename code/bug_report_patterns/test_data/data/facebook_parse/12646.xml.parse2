Hi/FW _/FW when/WRB I/PRP try/VBP to/TO add/VB a/DT new/JJ developer/NN to/TO my/PRP$ application/NN _/CD I/PRP get/VBP this/DT error/NN message/NN :/: 

(ROOT (NP (NP (NP (FW Hi) (FW _)) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP try) (S (VP (TO to) (VP (VB add) (NP (DT a) (JJ new) (NN developer)) (PP (TO to) (NP (PRP$ my) (NN application)))))) (NP-TMP (NP (CD _)) (SBAR (S (NP (PRP I)) (VP (VBP get) (NP (DT this) (NN error) (NN message)))))))))) (: :)))

root(ROOT-0, _-2)
nn(_-2, Hi-1)
advmod(try-5, when-3)
nsubj(try-5, I-4)
rcmod(_-2, try-5)
aux(add-7, to-6)
xcomp(try-5, add-7)
det(developer-10, a-8)
amod(developer-10, new-9)
dobj(add-7, developer-10)
poss(application-13, my-12)
prep_to(add-7, application-13)
tmod(try-5, _-14)
nsubj(get-16, I-15)
rcmod(_-14, get-16)
det(message-19, this-17)
nn(message-19, error-18)
dobj(get-16, message-19)

Validation/NN failed/VBD ./. 

(ROOT (S (NP (NN Validation)) (VP (VBD failed)) (. .)))

root(ROOT-0, failed-2)
nsubj(failed-2, Validation-1)

Unable/JJ to/TO update/VB Developers/NNS ./. 

(ROOT (FRAG (ADJP (JJ Unable)) (S (VP (TO to) (VP (VB update) (NP (NNS Developers))))) (. .)))

root(ROOT-0, Unable-1)
aux(update-3, to-2)
dep(Unable-1, update-3)
dobj(update-3, Developers-4)

The/DT developer/NN that/IN I/PRP try/VBP to/TO add/VB is/VBZ verified/VBN ./. 

(ROOT (S (NP (NP (DT The) (NN developer)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP try) (S (VP (TO to) (VP (VB add)))))))) (VP (VBZ is) (VP (VBN verified))) (. .)))

root(ROOT-0, verified-9)
det(developer-2, The-1)
nsubjpass(verified-9, developer-2)
mark(try-5, that-3)
nsubj(try-5, I-4)
dep(developer-2, try-5)
aux(add-7, to-6)
xcomp(try-5, add-7)
auxpass(verified-9, is-8)

This/DT error/NN is/VBZ really/RB blocking/VBG for/IN us/PRP ./. 

(ROOT (S (NP (DT This) (NN error)) (VP (VBZ is) (ADVP (RB really)) (VP (VBG blocking) (PP (IN for) (NP (PRP us))))) (. .)))

root(ROOT-0, blocking-5)
det(error-2, This-1)
nsubj(blocking-5, error-2)
aux(blocking-5, is-3)
advmod(blocking-5, really-4)
prep_for(blocking-5, us-7)

Thank/VB you/PRP for/IN your/PRP$ support/NN ./. 

(ROOT (S (VP (VB Thank) (NP (PRP you)) (PP (IN for) (NP (PRP$ your) (NN support)))) (. .)))

root(ROOT-0, Thank-1)
dobj(Thank-1, you-2)
poss(support-5, your-4)
prep_for(Thank-1, support-5)

Best/JJS regards/VBZ _/CD M/NN 

(ROOT (S (NP (JJS Best)) (VP (VBZ regards) (NP (CD _) (NN M)))))

root(ROOT-0, regards-2)
nsubj(regards-2, Best-1)
num(M-4, _-3)
dobj(regards-2, M-4)

