If/IN you/PRP have/VBP a/DT Flash/NN app/NN that/WDT has/VBZ a/DT game/NN which/WDT requires/VBZ using/VBG the/DT up/RP &/CC down/RP arrow/NN keys/NNS _/VBP IE/NN will/MD scroll/VB the/DT entire/JJ window/NN when/WRB you/PRP push/VBP the/DT keys/NNS ./. 

(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP have) (NP (NP (DT a) (NN Flash) (NN app)) (SBAR (WHNP (WDT that)) (S (VP (VBZ has) (NP (NP (DT a) (NN game)) (SBAR (WHNP (WDT which)) (S (VP (VBZ requires) (S (VP (VBG using) (ADVP (DT the) (RP up))))))))))))))) (NP (CC &) (NP (NP (ADVP (RP down)) (NN arrow)) (NP (NNS keys)))) (VP (VBP _) (SBAR (S (NP (NN IE)) (VP (MD will) (VP (VB scroll) (NP (DT the) (JJ entire) (NN window)) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP push) (NP (DT the) (NNS keys)))))))))) (. .)))

root(ROOT-0, _-20)
mark(have-3, If-1)
nsubj(have-3, you-2)
advcl(_-20, have-3)
det(app-6, a-4)
nn(app-6, Flash-5)
dobj(have-3, app-6)
nsubj(has-8, that-7)
rcmod(app-6, has-8)
det(game-10, a-9)
dobj(has-8, game-10)
nsubj(requires-12, which-11)
rcmod(game-10, requires-12)
xcomp(requires-12, using-13)
dep(up-15, the-14)
advmod(using-13, up-15)
cc(arrow-18, &-16)
advmod(arrow-18, down-17)
nsubj(_-20, arrow-18)
dep(arrow-18, keys-19)
nsubj(scroll-23, IE-21)
aux(scroll-23, will-22)
ccomp(_-20, scroll-23)
det(window-26, the-24)
amod(window-26, entire-25)
dobj(scroll-23, window-26)
advmod(push-29, when-27)
nsubj(push-29, you-28)
advcl(scroll-23, push-29)
det(keys-31, the-30)
dobj(push-29, keys-31)

I/PRP did/VBD have/VB a/DT fix/NN that/WDT worked/VBD by/IN making/VBG the/DT container/NN have/VBP the/DT overflow/NN set/VBN to/TO auto/NN _/NN but/CC something/NN changed/VBD recently/RB and/CC it/PRP no/RB longer/RB works/VBZ ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBD did) (VP (VB have) (NP (NP (DT a) (NN fix)) (SBAR (WHNP (WDT that)) (S (VP (VBD worked) (PP (IN by) (S (VP (VBG making) (SBAR (S (NP (DT the) (NN container)) (VP (VBP have) (NP (NP (DT the) (NN overflow)) (VP (VBN set) (PP (TO to) (NP (NN auto) (NN _)))))))))))))))))) (CC but) (S (NP (NN something)) (VP (VBD changed) (ADVP (RB recently)))) (CC and) (S (NP (PRP it)) (ADVP (RB no) (RB longer)) (VP (VBZ works))) (. .)))

root(ROOT-0, have-3)
nsubj(have-3, I-1)
aux(have-3, did-2)
det(fix-5, a-4)
dobj(have-3, fix-5)
nsubj(worked-7, that-6)
rcmod(fix-5, worked-7)
prepc_by(worked-7, making-9)
det(container-11, the-10)
nsubj(have-12, container-11)
ccomp(making-9, have-12)
det(overflow-14, the-13)
dobj(have-12, overflow-14)
vmod(overflow-14, set-15)
nn(_-18, auto-17)
prep_to(set-15, _-18)
nsubj(changed-21, something-20)
conj_but(have-3, changed-21)
advmod(changed-21, recently-22)
nsubj(works-27, it-24)
neg(longer-26, no-25)
advmod(works-27, longer-26)
conj_and(have-3, works-27)

I/PRP have/VBP tried/VBN to/TO use/VB JS/NN to/TO stop/VB the/DT page/NN scrolling/VBG _/NN but/CC that/IN solution/NN was/VBD a/DT dead/JJ end/NN that/WDT does/VBZ not/RB work/VB ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN tried) (S (VP (TO to) (VP (VB use) (NP (NN JS)) (S (VP (TO to) (VP (VB stop) (NP (NP (DT the) (NN page)) (VP (VP (VBG scrolling) (NP (NN _))) (CC but) (VP (SBAR (IN that) (S (NP (NN solution)) (VP (VBD was) (NP (NP (DT a) (JJ dead) (NN end)) (SBAR (WHNP (WDT that)) (S (VP (VBZ does) (RB not) (VP (VB work)))))))))))))))))))) (. .)))

root(ROOT-0, tried-3)
nsubj(tried-3, I-1)
aux(tried-3, have-2)
aux(use-5, to-4)
xcomp(tried-3, use-5)
dobj(use-5, JS-6)
aux(stop-8, to-7)
vmod(use-5, stop-8)
det(page-10, the-9)
dobj(stop-8, page-10)
dep(page-10, scrolling-11)
dobj(scrolling-11, _-12)
mark(end-19, that-14)
nsubj(end-19, solution-15)
cop(end-19, was-16)
det(end-19, a-17)
amod(end-19, dead-18)
dep(page-10, end-19)
conj_but(scrolling-11, end-19)
nsubj(work-23, that-20)
aux(work-23, does-21)
neg(work-23, not-22)
rcmod(end-19, work-23)

I/PRP have/VBP tried/VBN to/TO set/VB focus/NN to/TO a/DT text/NN field/NN in/IN AS3/NN _/NN another/DT dead/JJ end/NN for/IN our/PRP$ application/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN tried) (S (VP (TO to) (VP (VB set) (NP (NN focus)) (PP (TO to) (NP (NP (DT a) (NN text) (NN field)) (PP (IN in) (NP (NP (NN AS3) (NN _)) (NP (NP (DT another) (JJ dead) (NN end)) (PP (IN for) (NP (PRP$ our) (NN application))))))))))))) (. .)))

root(ROOT-0, tried-3)
nsubj(tried-3, I-1)
aux(tried-3, have-2)
aux(set-5, to-4)
xcomp(tried-3, set-5)
dobj(set-5, focus-6)
det(field-10, a-8)
nn(field-10, text-9)
prep_to(set-5, field-10)
nn(_-13, AS3-12)
prep_in(field-10, _-13)
det(end-16, another-14)
amod(end-16, dead-15)
dep(_-13, end-16)
poss(application-19, our-18)
prep_for(end-16, application-19)

It/PRP works/VBZ if/IN you/PRP have/VBP the/DT wmode/JJ set/NN to/TO window/NN _/NN but/CC then/RB you/PRP have/VBP the/DT problem/NN with/IN Facebook/NNP s/VBZ drop/VB down/RP displaying/VBG behind/IN the/DT Flash/NNP object/NN ./. 

(ROOT (S (S (NP (PRP It)) (VP (VBZ works) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP have) (NP (DT the) (JJ wmode) (NN set)) (PP (TO to) (NP (NN window) (NN _)))))))) (CC but) (ADVP (RB then)) (S (NP (PRP you)) (VP (VBP have) (NP (NP (DT the) (NN problem)) (PP (IN with) (NP (NNP Facebook))) (SBAR (S (VP (VBZ s) (VP (VB drop) (PRT (RP down)) (S (VP (VBG displaying) (PP (IN behind) (NP (DT the) (NNP Flash) (NN object)))))))))))) (. .)))

root(ROOT-0, works-2)
nsubj(works-2, It-1)
mark(have-5, if-3)
nsubj(have-5, you-4)
advcl(works-2, have-5)
det(set-8, the-6)
amod(set-8, wmode-7)
dobj(have-5, set-8)
nn(_-11, window-10)
prep_to(have-5, _-11)
advmod(have-15, then-13)
nsubj(have-15, you-14)
conj_but(works-2, have-15)
det(problem-17, the-16)
dobj(have-15, problem-17)
prep_with(problem-17, Facebook-19)
aux(drop-21, s-20)
rcmod(problem-17, drop-21)
prt(drop-21, down-22)
xcomp(drop-21, displaying-23)
det(object-27, the-25)
nn(object-27, Flash-26)
prep_behind(displaying-23, object-27)

In/IN other/JJ words/NNS . . ./: another/DT dead/JJ end/NN ./. 

(ROOT (FRAG (PP (IN In) (NP (JJ other) (NNS words))) (: ...) (NP (DT another) (JJ dead) (NN end)) (. .)))

root(ROOT-0, end-7)
amod(words-3, other-2)
prep_in(end-7, words-3)
det(end-7, another-5)
amod(end-7, dead-6)

This/DT would/MD also/RB reduce/VB performance/NN ./. 

(ROOT (S (NP (DT This)) (VP (MD would) (ADVP (RB also)) (VP (VB reduce) (NP (NN performance)))) (. .)))

root(ROOT-0, reduce-4)
nsubj(reduce-4, This-1)
aux(reduce-4, would-2)
advmod(reduce-4, also-3)
dobj(reduce-4, performance-5)

For/IN the/DT app/NN settings/NNS :/: Canvas/NNP Type/NN :/: Iframe/NNP Iframe/NNP Size/NN :/: Auto/NN resize/VBP 

(ROOT (FRAG (S (PP (IN For) (NP (NP (DT the) (NN app) (NNS settings)) (: :) (NP (NNP Canvas) (NN Type)) (: :) (NP (NNP Iframe) (NNP Iframe) (NN Size)) (: :) (NP (NN Auto)))) (VP (VBP resize)))))

root(ROOT-0, resize-14)
det(settings-4, the-2)
nn(settings-4, app-3)
prep_for(resize-14, settings-4)
nn(Type-7, Canvas-6)
dep(settings-4, Type-7)
nn(Size-11, Iframe-9)
nn(Size-11, Iframe-10)
dep(settings-4, Size-11)
dep(settings-4, Auto-13)

I/PRP have/VBP searched/VBN high/JJ and/CC low/JJ inside/IN the/DT Facebook/NNP dev/NN forums/NNS _/VBP and/CC the/DT bugs/NNS here/RB ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN searched) (ADVP (JJ high) (CC and) (JJ low)) (PP (IN inside) (S (S (NP (DT the) (NNP Facebook) (NN dev) (NNS forums)) (VP (VBP _))) (CC and) (S (NP (DT the) (NNS bugs)) (VP (ADVP (RB here)))))))) (. .)))

root(ROOT-0, searched-3)
nsubj(searched-3, I-1)
aux(searched-3, have-2)
advmod(searched-3, high-4)
advmod(searched-3, low-6)
conj_and(high-4, low-6)
det(forums-11, the-8)
nn(forums-11, Facebook-9)
nn(forums-11, dev-10)
nsubj(_-12, forums-11)
prepc_inside(searched-3, _-12)
det(bugs-15, the-14)
nsubj(here-16, bugs-15)
prepc_inside(searched-3, here-16)
conj_and(_-12, here-16)

I/PRP have/VBP not/RB been/VBN able/JJ to/TO find/VB a/DT solution/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (RB not) (VP (VBN been) (ADJP (JJ able) (S (VP (TO to) (VP (VB find) (NP (DT a) (NN solution)))))))) (. .)))

root(ROOT-0, able-5)
nsubj(able-5, I-1)
aux(able-5, have-2)
neg(able-5, not-3)
cop(able-5, been-4)
aux(find-7, to-6)
xcomp(able-5, find-7)
det(solution-9, a-8)
dobj(find-7, solution-9)

