User-Agent/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.1/CD ;/: en-US/NN ;/: rv/NN :1.8.1.1/CD )/-RRB- Gecko/20061204/NN Firefox/2/NN .0.0.1/CD Build/NNP Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.1/CD ;/: en-US/NN ;/: rv/NN :1.8.1.1/CD )/-RRB- Gecko/20061204/NN Firefox/2/NN .0.0.1/CD 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NNP Windows)) (: ;) (NP (NP (NNP U)) (: ;) (NP (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.1))) (: ;) (NP (NP (NP (NP (NN en-US)) (: ;) (NP (NP (NN rv)) (NP (CD :1.8.1.1))) (-RRB- -RRB-)) (NP (NN Gecko/20061204) (NN Firefox/2))) (NP (CD .0.0.1) (NNP Build) (NNP Identifier))) (: :) (NP (NP (NN Mozilla/5) (NN .0)) (-LRB- -LRB-) (NP (NP (NNP Windows)) (: ;) (NP (NNP U)))) (: ;) (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.1))) (: ;) (NP (NP (NN en-US)) (: ;) (NP (NN rv) (CD :1.8.1.1))))) (-RRB- -RRB-)) (NP (NN Gecko/20061204) (NN Firefox/2))) (NP (CD .0.0.1)))))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/5-3)
dep(User-Agent-1, .0-4)
dep(.0-4, Windows-6)
dep(Windows-6, U-8)
nn(NT-11, Windows-10)
dep(U-8, NT-11)
dep(NT-11, 5.1-12)
dep(NT-11, en-US-14)
dep(en-US-14, rv-16)
dep(rv-16, :1.8.1.1-17)
nn(Firefox/2-20, Gecko/20061204-19)
dep(en-US-14, Firefox/2-20)
num(Identifier-23, .0.0.1-21)
nn(Identifier-23, Build-22)
dep(en-US-14, Identifier-23)
nn(.0-26, Mozilla/5-25)
dep(NT-11, .0-26)
dep(.0-26, Windows-28)
dep(Windows-28, U-30)
nn(NT-33, Windows-32)
dep(NT-11, NT-33)
dep(NT-33, 5.1-34)
dep(NT-11, en-US-36)
dep(en-US-36, rv-38)
num(rv-38, :1.8.1.1-39)
nn(Firefox/2-42, Gecko/20061204-41)
dep(.0-4, Firefox/2-42)
dep(.0-4, .0.0.1-43)

Why/WRB do/VBP the/DT spellchecker/NN does/VBZ n't/RB use/VB html/xml/JJ language/NN code/NN of/IN the/DT page/NN rendered/VBN to/TO automatically/RB select/VB the/DT appropriate/JJ dictionary/NN on/IN a/DT page/NN ?/. 

(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBP do) (NP (DT the) (NN spellchecker)) (VP (VBZ does) (RB n't) (VP (VB use) (NP (NP (JJ html/xml) (NN language) (NN code)) (PP (IN of) (NP (NP (DT the) (NN page)) (VP (VBN rendered) (S (VP (TO to) (VP (ADVP (RB automatically)) (VB select) (NP (NP (DT the) (JJ appropriate) (NN dictionary)) (PP (IN on) (NP (DT a) (NN page)))))))))))))) (. ?)))

root(ROOT-0, use-7)
advmod(use-7, Why-1)
aux(use-7, do-2)
det(spellchecker-4, the-3)
nsubj(use-7, spellchecker-4)
aux(use-7, does-5)
neg(use-7, n't-6)
amod(code-10, html/xml-8)
nn(code-10, language-9)
dobj(use-7, code-10)
det(page-13, the-12)
prep_of(code-10, page-13)
vmod(page-13, rendered-14)
aux(select-17, to-15)
advmod(select-17, automatically-16)
xcomp(rendered-14, select-17)
det(dictionary-20, the-18)
amod(dictionary-20, appropriate-19)
dobj(select-17, dictionary-20)
det(page-23, a-22)
prep_on(dictionary-20, page-23)

Each/DT page/NN is/VBZ supposed/VBN to/TO have/VB a/DT html/NN and/or/CC xml/NN language/NN attribute/NN attached/VBN ,/, and/CC each/DT html/xml/NN element/NN within/IN it/PRP can/MD cascade/NN the/DT language/NN attribute/NN from/IN it/PRP or/CC have/VB it/PRP 's/VBZ own/JJ lang/NN attribute/NN ./. 

(ROOT (S (S (NP (DT Each) (NN page)) (VP (VBZ is) (VP (VBN supposed) (S (VP (TO to) (VP (VB have) (NP (NP (DT a) (NN html)) (CC and/or) (NP (NP (NN xml) (NN language) (NN attribute)) (VP (VBN attached)))))))))) (, ,) (CC and) (S (NP (NP (DT each) (NN html/xml) (NN element)) (PP (IN within) (NP (PRP it)))) (VP (MD can) (VP (VP (NN cascade) (NP (DT the) (NN language) (NN attribute)) (PP (IN from) (NP (PRP it)))) (CC or) (VP (VB have) (S (NP (PRP it)) (VP (VBZ 's) (NP (JJ own) (NN lang) (NN attribute)))))))) (. .)))

root(ROOT-0, supposed-4)
det(page-2, Each-1)
nsubjpass(supposed-4, page-2)
auxpass(supposed-4, is-3)
aux(have-6, to-5)
xcomp(supposed-4, have-6)
det(html-8, a-7)
dobj(have-6, html-8)
nn(attribute-12, xml-10)
nn(attribute-12, language-11)
dobj(have-6, attribute-12)
conj_and/or(html-8, attribute-12)
vmod(attribute-12, attached-13)
det(element-18, each-16)
nn(element-18, html/xml-17)
nsubj(cascade-22, element-18)
nsubj(have-29, element-18)
prep_within(element-18, it-20)
aux(cascade-22, can-21)
conj_and(supposed-4, cascade-22)
det(attribute-25, the-23)
nn(attribute-25, language-24)
dobj(cascade-22, attribute-25)
prep_from(cascade-22, it-27)
conj_and(supposed-4, have-29)
conj_or(cascade-22, have-29)
nsubj(attribute-34, it-30)
cop(attribute-34, 's-31)
amod(attribute-34, own-32)
nn(attribute-34, lang-33)
ccomp(have-29, attribute-34)

So/IN it/PRP should/MD n't/RB be/VB difficult/JJ for/IN the/DT spellchecker/NN to/TO detect/VB the/DT appropriate/JJ language/NN (/-LRB- and/CC if/IN something/NN goes/VBZ wrong/JJ ,/, the/DT user/NN still/RB can/MD manually/RB select/VB one/CD )/-RRB- ./. 

(ROOT (S (IN So) (NP (PRP it)) (VP (MD should) (RB n't) (VP (VB be) (ADJP (JJ difficult) (PP (IN for) (NP (DT the) (NN spellchecker) (S (VP (TO to) (VP (VB detect) (NP (NP (DT the) (JJ appropriate) (NN language)) (PRN (-LRB- -LRB-) (CC and) (S (NP (ADJP (IN if)) (NN something)) (VP (VBZ goes) (S (ADVP (JJ wrong)) (, ,) (NP (DT the) (NN user)) (ADVP (RB still)) (VP (MD can) (ADVP (RB manually)) (VP (VB select) (NP (CD one))))))) (-RRB- -RRB-))))))))))) (. .)))

root(ROOT-0, difficult-6)
dep(difficult-6, So-1)
nsubj(difficult-6, it-2)
aux(difficult-6, should-3)
neg(difficult-6, n't-4)
cop(difficult-6, be-5)
det(spellchecker-9, the-8)
prep_for(difficult-6, spellchecker-9)
aux(detect-11, to-10)
vmod(spellchecker-9, detect-11)
det(language-14, the-12)
amod(language-14, appropriate-13)
dobj(detect-11, language-14)
cc(goes-19, and-16)
amod(something-18, if-17)
nsubj(goes-19, something-18)
dep(language-14, goes-19)
advmod(select-27, wrong-20)
det(user-23, the-22)
nsubj(select-27, user-23)
advmod(select-27, still-24)
aux(select-27, can-25)
advmod(select-27, manually-26)
ccomp(goes-19, select-27)
dobj(select-27, one-28)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Actual/JJ Results/NNS :/: Right/RB now/RB ,/, the/DT dictionary/NN selected/VBN is/VBZ the/DT last/JJ one/CD selected/VBN ,/, period/NN ./. 

(ROOT (NP (NP (JJ Actual) (NNS Results)) (: :) (ADVP (RB Right) (RB now)) (, ,) (S (NP (NP (DT the) (NN dictionary)) (VP (VBN selected))) (VP (VBZ is) (NP (NP (DT the) (JJ last) (CD one)) (VP (VBN selected))))) (, ,) (NP (NN period)) (. .)))

root(ROOT-0, Results-2)
amod(Results-2, Actual-1)
advmod(now-5, Right-4)
advmod(Results-2, now-5)
det(dictionary-8, the-7)
nsubj(one-13, dictionary-8)
vmod(dictionary-8, selected-9)
cop(one-13, is-10)
det(one-13, the-11)
amod(one-13, last-12)
dep(Results-2, one-13)
vmod(one-13, selected-14)
appos(Results-2, period-16)

When/WRB you/PRP switch/VBP web/NN board/NN in/IN 2/CD or/CC 3/CD languages/NNS every/DT time/NN ,/, you/PRP have/VBP to/TO change/VB the/DT dictionary/NN by/IN hand/NN every/DT time/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP you)) (VP (VBP switch) (NP (NP (NN web) (NN board)) (PP (IN in) (NP (QP (CD 2) (CC or) (CD 3)) (NNS languages)))) (NP-TMP (DT every) (NN time))))) (, ,) (NP (PRP you)) (VP (VBP have) (S (VP (TO to) (VP (VB change) (NP (DT the) (NN dictionary)) (PP (IN by) (NP (NN hand))) (NP-TMP (DT every) (NN time)))))) (. .)))

root(ROOT-0, have-15)
advmod(switch-3, When-1)
nsubj(switch-3, you-2)
advcl(have-15, switch-3)
nn(board-5, web-4)
dobj(switch-3, board-5)
num(languages-10, 2-7)
conj_or(2-7, 3-9)
num(languages-10, 3-9)
prep_in(board-5, languages-10)
det(time-12, every-11)
tmod(switch-3, time-12)
nsubj(have-15, you-14)
aux(change-17, to-16)
xcomp(have-15, change-17)
det(dictionary-19, the-18)
dobj(change-17, dictionary-19)
prep_by(change-17, hand-21)
det(time-23, every-22)
tmod(change-17, time-23)

Expected/VBN Results/NNS :/: A/DT possible/JJ scenario/NN :/: 

(ROOT (VP (VBN Expected) (NP (NP (NNS Results)) (: :) (NP (DT A) (JJ possible) (NN scenario)) (: :))))

root(ROOT-0, Expected-1)
dobj(Expected-1, Results-2)
det(scenario-6, A-4)
amod(scenario-6, possible-5)
dep(Results-2, scenario-6)

1/CD Each/DT time/NN the/DT contextual/JJ spell/NN checker/NN is/VBZ applied/VBN on/IN a/DT form/NN ,/, it/PRP will/MD check/VB for/IN a/DT HTML/NNP or/CC XML/NN language/NN attribute/NN for/IN that/DT form/NN ./. 

(ROOT (S (S (NP (CD 1)) (NP-TMP (DT Each) (NN time)) (NP (DT the) (JJ contextual) (NN spell) (NN checker)) (VP (VBZ is) (VP (VBN applied) (PP (IN on) (NP (DT a) (NN form)))))) (, ,) (NP (PRP it)) (VP (MD will) (VP (VB check) (PP (IN for) (NP (NP (DT a) (NNP HTML) (CC or) (NN XML) (NN language) (NN attribute)) (PP (IN for) (NP (DT that) (NN form))))))) (. .)))

root(ROOT-0, check-16)
nsubjpass(applied-9, 1-1)
det(time-3, Each-2)
tmod(applied-9, time-3)
det(checker-7, the-4)
amod(checker-7, contextual-5)
nn(checker-7, spell-6)
nsubjpass(applied-9, checker-7)
auxpass(applied-9, is-8)
ccomp(check-16, applied-9)
det(form-12, a-11)
prep_on(applied-9, form-12)
nsubj(check-16, it-14)
aux(check-16, will-15)
det(HTML-19, a-18)
prep_for(check-16, HTML-19)
nn(attribute-23, XML-21)
nn(attribute-23, language-22)
prep_for(check-16, attribute-23)
conj_or(HTML-19, attribute-23)
det(form-26, that-25)
prep_for(HTML-19, form-26)

If/IN there/EX is/VBZ n't/RB one/CD ,/, it/PRP will/MD go/VB up/RP in/IN the/DT tree/NN of/IN the/DT document/NN ,/, tag/NN by/IN tag/NN ,/, until/IN it/PRP found/VBD one/CD ./. 

(ROOT (S (SBAR (IN If) (S (NP (EX there)) (VP (VBZ is) (RB n't) (NP (CD one))))) (, ,) (NP (PRP it)) (VP (MD will) (VP (VB go) (PRT (RP up)) (PP (IN in) (NP (NP (DT the) (NN tree)) (PP (IN of) (NP (NP (DT the) (NN document)) (, ,) (NP (NP (NN tag)) (PP (IN by) (NP (NN tag)))) (, ,))))) (SBAR (IN until) (S (NP (PRP it)) (VP (VBD found) (NP (CD one))))))) (. .)))

root(ROOT-0, go-9)
mark(is-3, If-1)
expl(is-3, there-2)
advcl(go-9, is-3)
neg(is-3, n't-4)
nsubj(is-3, one-5)
nsubj(go-9, it-7)
aux(go-9, will-8)
prt(go-9, up-10)
det(tree-13, the-12)
prep_in(go-9, tree-13)
det(document-16, the-15)
prep_of(tree-13, document-16)
appos(document-16, tag-18)
prep_by(tag-18, tag-20)
mark(found-24, until-22)
nsubj(found-24, it-23)
advcl(go-9, found-24)
dobj(found-24, one-25)

2/CD It/PRP will/MD select/VB the/DT appropriate/JJ dictionary/NN of/IN that/DT language/NN ,/, if/IN it/PRP 's/VBZ installed/VBN ./. 

(ROOT (S (NP (CD 2)) (NP (PRP It)) (VP (MD will) (VP (VB select) (NP (NP (DT the) (JJ appropriate) (NN dictionary)) (PP (IN of) (NP (DT that) (NN language)))) (, ,) (SBAR (IN if) (S (NP (PRP it)) (VP (VBZ 's) (VP (VBN installed))))))) (. .)))

root(ROOT-0, select-4)
nsubj(select-4, 2-1)
nsubj(select-4, It-2)
aux(select-4, will-3)
det(dictionary-7, the-5)
amod(dictionary-7, appropriate-6)
dobj(select-4, dictionary-7)
det(language-10, that-9)
prep_of(dictionary-7, language-10)
mark(installed-15, if-12)
nsubjpass(installed-15, it-13)
auxpass(installed-15, 's-14)
advcl(select-4, installed-15)

3/CD If/IN the/DT dictionary/NN is/VBZ not/RB installed/VBN ,/, it/PRP will/MD display/VB a/DT small/JJ message/NN along/IN the/DT line/NN of/IN "/`` this/DT form/NN seems/VBZ to/TO ask/VB for/IN French/JJ text/NN but/CC you/PRP do/VBP n't/RB have/VB the/DT French/JJ dictionnary/NN on/IN your/PRP$ Firefox/NNP ,/, do/VBP you/PRP want/VB to/TO install/VB it/PRP ?/. "/'' 

(ROOT (S (NP (NP (CD 3)) (SBAR (S (SBAR (IN If) (S (NP (DT the) (NN dictionary)) (VP (VBZ is) (RB not) (VP (VBN installed))))) (, ,) (NP (PRP it)) (VP (MD will) (VP (VB display) (NP (DT a) (JJ small) (NN message)) (PP (IN along) (NP (NP (DT the) (NN line)) (PP (IN of) (NP (`` ``) (NP (DT this) (NN form)) (VP (VBZ seems) (S (VP (TO to) (VP (VB ask) (PP (IN for) (NP (JJ French) (NN text))) (SBAR (CC but) (S (NP (PRP you)) (VP (VBP do) (RB n't) (VP (VB have) (NP (NP (DT the) (JJ French) (NN dictionnary)) (PP (IN on) (NP (PRP$ your) (NNP Firefox)))))))))))) (, ,)))))))))) (VP (VBP do) (S (NP (PRP you)) (VP (VB want) (S (VP (TO to) (VP (VB install) (NP (PRP it)))))))) (. ?) ('' '')))

root(ROOT-0, do-40)
nsubj(do-40, 3-1)
mark(installed-7, If-2)
det(dictionary-4, the-3)
nsubjpass(installed-7, dictionary-4)
auxpass(installed-7, is-5)
neg(installed-7, not-6)
advcl(display-11, installed-7)
nsubj(display-11, it-9)
aux(display-11, will-10)
rcmod(3-1, display-11)
det(message-14, a-12)
amod(message-14, small-13)
dobj(display-11, message-14)
det(line-17, the-16)
prep_along(display-11, line-17)
det(form-21, this-20)
prep_of(line-17, form-21)
dep(form-21, seems-22)
aux(ask-24, to-23)
xcomp(seems-22, ask-24)
amod(text-27, French-26)
prep_for(ask-24, text-27)
cc(have-32, but-28)
nsubj(have-32, you-29)
aux(have-32, do-30)
neg(have-32, n't-31)
ccomp(ask-24, have-32)
det(dictionnary-35, the-33)
amod(dictionnary-35, French-34)
dobj(have-32, dictionnary-35)
poss(Firefox-38, your-37)
prep_on(dictionnary-35, Firefox-38)
nsubj(want-42, you-41)
ccomp(do-40, want-42)
aux(install-44, to-43)
xcomp(want-42, install-44)
dobj(install-44, it-45)

when/WRB and/CC only/RB when/WRB the/DT spell/NN checker/NN is/VBZ called/VBN (/-LRB- maybe/RB some/DT kind/NN of/IN icon/NN with/IN a/DT "/`` more/JJR information/NN "/'' bubble/NN ?/. )/-RRB- 

(ROOT (UCP (FRAG (WHADVP (WRB when))) (CC and) (SBAR (WHADVP (RB only) (WRB when)) (S (NP (DT the) (NN spell) (NN checker)) (VP (VBZ is) (VP (VBN called) (PRN (-LRB- -LRB-) (FRAG (RB maybe) (NP (NP (DT some) (NN kind)) (PP (IN of) (NP (NN icon))) (PP (IN with) (NP (DT a) (`` ``) (ADJP (JJR more) (NN information)) ('' '') (NN bubble)))) (. ?)) (-RRB- -RRB-))))))))

root(ROOT-0, when-1)
advmod(when-4, only-3)
advmod(called-9, when-4)
det(checker-7, the-5)
nn(checker-7, spell-6)
nsubjpass(called-9, checker-7)
auxpass(called-9, is-8)
conj_and(when-1, called-9)
dep(called-9, maybe-11)
det(kind-13, some-12)
dep(maybe-11, kind-13)
prep_of(kind-13, icon-15)
det(bubble-22, a-17)
dep(information-20, more-19)
amod(bubble-22, information-20)
prep_with(kind-13, bubble-22)

./. 

(ROOT (NP (. .)))


4/CD If/IN no/DT language/NN attribute/NN was/VBD found/VBN in/IN the/DT page/NN rendered/VBN ,/, then/RB the/DT default/NN behavior/NN comes/VBZ back/RB ./. 

(ROOT (S (SBAR (NP (CD 4)) (IN If) (S (NP (DT no) (NN language) (NN attribute)) (VP (VBD was) (VP (VBN found) (PP (IN in) (NP (NP (DT the) (NN page)) (VP (VBN rendered)))))))) (, ,) (ADVP (RB then)) (NP (DT the) (NN default) (NN behavior)) (VP (VBZ comes) (ADVP (RB back))) (. .)))

root(ROOT-0, comes-17)
dep(found-7, 4-1)
mark(found-7, If-2)
neg(attribute-5, no-3)
nn(attribute-5, language-4)
nsubjpass(found-7, attribute-5)
auxpass(found-7, was-6)
advcl(comes-17, found-7)
det(page-10, the-9)
prep_in(found-7, page-10)
vmod(page-10, rendered-11)
advmod(behavior-16, then-13)
det(behavior-16, the-14)
nn(behavior-16, default-15)
nsubj(comes-17, behavior-16)
advmod(comes-17, back-18)

