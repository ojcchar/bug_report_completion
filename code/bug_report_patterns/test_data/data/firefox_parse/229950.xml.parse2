User-Agent/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Macintosh/NNP ;/: U/NNP ;/: PPC/NNP Mac/NNP OS/NNP X/NNP Mach-O/NNP ;/: en-US/NN ;/: rv/NN :1.7/CD a/DT )/-RRB- Gecko/20040102/NN Firebird/0/NN .7/CD +/CC Build/VB Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Macintosh/NNP ;/: U/NNP ;/: PPC/NNP Mac/NNP OS/NNP X/NNP Mach-O/NNP ;/: en-US/NN ;/: rv/NN :1.7/CD a/DT )/-RRB- Gecko/20040102/NN Firebird/0/NN .7/CD +/CC 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NNP Macintosh)) (: ;) (NP (NP (NNP U)) (: ;) (NP (NP (NP (NNP PPC) (NNP Mac) (NNP OS) (NNP X) (NNP Mach-O)) (: ;) (NP (NN en-US))) (: ;) (NP (NP (NN rv) (CD :1.7)) (NP (DT a))))) (-RRB- -RRB-))) (SBAR (S (NP (NP (NN Gecko/20040102) (NN Firebird/0)) (NP (CD .7) (CC +))) (VP (VB Build) (NP (NP (NNP Identifier)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NNP Macintosh)) (: ;) (NP (NP (NNP U)) (: ;) (NP (NP (NP (NNP PPC) (NNP Mac) (NNP OS) (NNP X) (NNP Mach-O)) (: ;) (NP (NN en-US))) (: ;) (NP (NP (NN rv) (CD :1.7)) (NP (DT a))))) (-RRB- -RRB-)) (NP (NN Gecko/20040102) (NN Firebird/0))) (NP (CD .7) (CC +))))))))))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/5-3)
dep(User-Agent-1, .0-4)
dep(.0-4, Macintosh-6)
dep(Macintosh-6, U-8)
nn(Mach-O-14, PPC-10)
nn(Mach-O-14, Mac-11)
nn(Mach-O-14, OS-12)
nn(Mach-O-14, X-13)
dep(U-8, Mach-O-14)
dep(Mach-O-14, en-US-16)
dep(Mach-O-14, rv-18)
num(rv-18, :1.7-19)
dep(rv-18, a-20)
nn(Firebird/0-23, Gecko/20040102-22)
nsubj(Build-26, Firebird/0-23)
dep(Firebird/0-23, .7-24)
cc(.7-24, +-25)
rcmod(.0-4, Build-26)
dobj(Build-26, Identifier-27)
nn(.0-30, Mozilla/5-29)
dep(Identifier-27, .0-30)
dep(.0-30, Macintosh-32)
dep(Macintosh-32, U-34)
nn(Mach-O-40, PPC-36)
nn(Mach-O-40, Mac-37)
nn(Mach-O-40, OS-38)
nn(Mach-O-40, X-39)
dep(U-34, Mach-O-40)
dep(Mach-O-40, en-US-42)
dep(Mach-O-40, rv-44)
num(rv-44, :1.7-45)
dep(rv-44, a-46)
nn(Firebird/0-49, Gecko/20040102-48)
dep(.0-30, Firebird/0-49)
dep(.0-30, .7-50)
cc(.7-50, +-51)

When/WRB I/PRP type/NN a/DT single/JJ word/NN into/IN the/DT location/NN bar/NN ,/, Firebird/NNP pauses/VBZ for/IN about/IN two/CD second/JJ thinking/NN and/CC then/RB completely/RB freezes/VBZ ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (VP (NP (PRP I)) (NP (NP (NN type)) (NP (DT a) (JJ single) (NN word))) (PP (IN into) (NP (DT the) (NN location) (NN bar)))))) (, ,) (NP (NNP Firebird)) (VP (VP (VBZ pauses) (PP (IN for) (PP (IN about) (NP (CD two) (JJ second) (NN thinking))))) (CC and) (ADVP (RB then) (RB completely)) (VP (VBZ freezes))) (. .)))

root(ROOT-0, pauses-13)
advmod(I-2, When-1)
advcl(pauses-13, I-2)
dobj(I-2, type-3)
det(word-6, a-4)
amod(word-6, single-5)
dep(type-3, word-6)
det(bar-10, the-8)
nn(bar-10, location-9)
prep_into(I-2, bar-10)
nsubj(pauses-13, Firebird-12)
nsubj(freezes-22, Firebird-12)
prep(pauses-13, for-14)
pcomp(for-14, about-15)
num(thinking-18, two-16)
amod(thinking-18, second-17)
pobj(about-15, thinking-18)
advmod(completely-21, then-20)
advmod(pauses-13, completely-21)
conj_and(pauses-13, freezes-22)

Animation/NN stops/VBZ ,/, no/DT response/NN from/IN input/NN ./. 

(ROOT (S (NP (NN Animation)) (VP (VP (VBZ stops)) (, ,) (NP (NP (DT no) (NN response)) (PP (IN from) (NP (NN input))))) (. .)))

root(ROOT-0, stops-2)
nsubj(stops-2, Animation-1)
neg(response-5, no-4)
dobj(stops-2, response-5)
prep_from(response-5, input-7)

I/PRP have/VBP to/TO force/VB quit/VB Firebird/NNP to/TO get/VB rid/JJ of/IN it/PRP ,/, and/CC sometimes/RB Force/NNP Quit/NNP says/VBZ Firebird/NNP is/VBZ Not/RB Responding/VBG ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP have) (S (VP (TO to) (VP (VB force) (VP (VB quit) (S (NP (NNP Firebird)) (VP (TO to) (VP (VB get) (ADJP (JJ rid)) (PP (IN of) (NP (PRP it)))))))))))) (, ,) (CC and) (S (ADVP (RB sometimes)) (NP (NNP Force) (NNP Quit)) (VP (VBZ says) (SBAR (S (NP (NNP Firebird)) (VP (VBZ is) (RB Not) (VP (VBG Responding))))))) (. .)))

root(ROOT-0, have-2)
nsubj(have-2, I-1)
aux(force-4, to-3)
xcomp(have-2, force-4)
xcomp(force-4, quit-5)
dobj(quit-5, Firebird-6)
aux(rid-9, to-7)
dep(rid-9, get-8)
xcomp(quit-5, rid-9)
prep_of(rid-9, it-11)
advmod(says-17, sometimes-14)
nn(Quit-16, Force-15)
nsubj(says-17, Quit-16)
conj_and(have-2, says-17)
nsubj(Responding-21, Firebird-18)
aux(Responding-21, is-19)
neg(Responding-21, Not-20)
ccomp(says-17, Responding-21)

I/PRP tried/VBD moving/VBG my/PRP$ preferences/NNS and/CC any/DT mozilla/NN folders/NNS out/IN of/IN Mozilla/NNP 's/POS path/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBD tried) (S (VP (VBG moving) (NP (NP (PRP$ my) (NNS preferences)) (CC and) (NP (DT any) (NN mozilla) (NNS folders))) (PRT (IN out)) (PP (IN of) (NP (NP (NNP Mozilla) (POS 's)) (NN path)))))) (. .)))

root(ROOT-0, tried-2)
nsubj(tried-2, I-1)
xcomp(tried-2, moving-3)
poss(preferences-5, my-4)
dobj(moving-3, preferences-5)
det(folders-9, any-7)
nn(folders-9, mozilla-8)
dobj(moving-3, folders-9)
conj_and(preferences-5, folders-9)
poss(path-14, Mozilla-12)
prep_out_of(moving-3, path-14)

This/DT did/VBD not/RB alleviate/VB the/DT problem/NN ./. 

(ROOT (S (NP (DT This)) (VP (VBD did) (RB not) (VP (VB alleviate) (NP (DT the) (NN problem)))) (. .)))

root(ROOT-0, alleviate-4)
nsubj(alleviate-4, This-1)
aux(alleviate-4, did-2)
neg(alleviate-4, not-3)
det(problem-6, the-5)
dobj(alleviate-4, problem-6)

Firebird/NNP crashes/NNS using/VBG the/DT following/VBG examples/NNS :/: there/EX osnews/NNS ,/, foo/NN 

(ROOT (NP (S (NP (NNP Firebird) (NNS crashes)) (VP (VBG using) (NP (NP (DT the) (VBG following) (NNS examples)) (: :) (NP (NP (EX there)) (NP (NP (NNS osnews)) (, ,) (NP (NN foo)))))))))

root(ROOT-0, using-3)
nn(crashes-2, Firebird-1)
nsubj(using-3, crashes-2)
det(examples-6, the-4)
amod(examples-6, following-5)
dobj(using-3, examples-6)
dep(examples-6, there-8)
dep(there-8, osnews-9)
appos(osnews-9, foo-11)

Firebird/NN does/VBZ NOT/NNP crash/NN when/WRB a/DT space/NN exists/VBZ such/JJ as/IN :/: new/JJ year/NN 

(ROOT (S (NP (NN Firebird)) (VP (VBZ does) (NP (NP (NNP NOT) (NN crash)) (SBAR (WHADVP (WRB when)) (S (NP (DT a) (NN space)) (VP (VBZ exists) (PP (JJ such) (PP (IN as)))))) (: :) (NP (JJ new) (NN year))))))

root(ROOT-0, does-2)
nsubj(does-2, Firebird-1)
nn(crash-4, NOT-3)
dobj(does-2, crash-4)
advmod(exists-8, when-5)
det(space-7, a-6)
nsubj(exists-8, space-7)
rcmod(crash-4, exists-8)
prep(exists-8, such-9)
prep(such-9, as-10)
amod(year-13, new-12)
dep(crash-4, year-13)

Status/NN bar/NN displays/VBZ "/`` Resolving/NNP foo/NN "/'' 

(ROOT (S (NP (NN Status) (NN bar)) (VP (VBZ displays) (S (`` ``) (NP (S (VP (NNP Resolving) (NP (NN foo) ('' '')))))))))

root(ROOT-0, displays-3)
nn(bar-2, Status-1)
nsubj(displays-3, bar-2)
dep(foo-6, Resolving-5)
dep(displays-3, foo-6)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

1/CD select/clear/NN the/DT address/NN bar/NN 

(ROOT (NP (NP (CD 1) (NN select/clear)) (NP (DT the) (NN address) (NN bar))))

root(ROOT-0, select/clear-2)
num(select/clear-2, 1-1)
det(bar-5, the-3)
nn(bar-5, address-4)
dep(select/clear-2, bar-5)

2/CD type/NN a/DT single/JJ word/NN 

(ROOT (NP (NP (CD 2) (NN type)) (NP (DT a) (JJ single) (NN word))))

root(ROOT-0, type-2)
num(type-2, 2-1)
det(word-5, a-3)
amod(word-5, single-4)
dep(type-2, word-5)

3/CD hit/NN enter/go/NN 

(ROOT (X (NP (ADJP (CD 3) (NN hit)) (NN enter/go))))

root(ROOT-0, enter/go-3)
number(hit-2, 3-1)
amod(enter/go-3, hit-2)

Actual/JJ Results/NNS :/: Firebird/NN completely/RB locks/VBZ ./. 

(ROOT (FRAG (NP (JJ Actual) (NNS Results)) (: :) (S (NP (NN Firebird)) (ADVP (RB completely)) (VP (VBZ locks))) (. .)))

root(ROOT-0, Results-2)
amod(Results-2, Actual-1)
nsubj(locks-6, Firebird-4)
advmod(locks-6, completely-5)
dep(Results-2, locks-6)

Expected/VBN Results/NNS :/: Try/VB to/TO resolve/VB the/DT word/NN ,/, and/CC if/IN not/RB then/RB an/DT I/PRP 'm/VBP feeling/VBG lucky/JJ search/NN of/IN the/DT word/NN ./. 

(ROOT (S (S (VP (VBN Expected) (NP (NP (NNS Results)) (: :) (VP (VB Try) (S (VP (TO to) (VP (VB resolve) (NP (DT the) (NN word))))))))) (, ,) (CC and) (S (FRAG (IN if) (RB not)) (NP (RB then) (DT an) (PRP I)) (VP (VBP 'm) (VP (VBG feeling) (NP (NP (JJ lucky) (NN search)) (PP (IN of) (NP (DT the) (NN word))))))) (. .)))

root(ROOT-0, Expected-1)
dobj(Expected-1, Results-2)
dep(Results-2, Try-4)
aux(resolve-6, to-5)
xcomp(Try-4, resolve-6)
det(word-8, the-7)
dobj(resolve-6, word-8)
dep(feeling-17, if-11)
neg(if-11, not-12)
advmod(I-15, then-13)
det(I-15, an-14)
nsubj(feeling-17, I-15)
aux(feeling-17, 'm-16)
conj_and(Expected-1, feeling-17)
amod(search-19, lucky-18)
dobj(feeling-17, search-19)
det(word-22, the-21)
prep_of(search-19, word-22)

