The/DT useragent/JJ string/NN says/VBZ Gecko/NNP 1.8/CD ,/, but/CC that/DT 's/VBZ incorrect/JJ since/IN we/PRP have/VBP taken/VBN Gecko/NNP changes/NNS on/IN the/DT 1.8/CD branch/NN ./. 

(ROOT (S (S (NP (DT The) (JJ useragent) (NN string)) (VP (VBZ says) (NP (NNP Gecko) (CD 1.8)))) (, ,) (CC but) (S (NP (DT that)) (VP (VBZ 's) (ADJP (JJ incorrect)) (SBAR (IN since) (S (NP (PRP we)) (VP (VBP have) (VP (VBN taken) (NP (NNP Gecko) (NNS changes)) (PP (IN on) (NP (DT the) (CD 1.8) (NN branch))))))))) (. .)))

root(ROOT-0, says-4)
det(string-3, The-1)
amod(string-3, useragent-2)
nsubj(says-4, string-3)
dobj(says-4, Gecko-5)
num(Gecko-5, 1.8-6)
nsubj(incorrect-11, that-9)
cop(incorrect-11, 's-10)
conj_but(says-4, incorrect-11)
mark(taken-15, since-12)
nsubj(taken-15, we-13)
aux(taken-15, have-14)
advcl(incorrect-11, taken-15)
nn(changes-17, Gecko-16)
dobj(taken-15, changes-17)
det(branch-21, the-19)
num(branch-21, 1.8-20)
prep_on(taken-15, branch-21)

It/PRP should/MD probably/RB say/VB "/`` 1.8.1/CD a1/NN "/'' to/TO reflect/VB the/DT fact/NN that/IN it/PRP is/VBZ an/DT alpha/NN 1/CD version/NN of/IN what/WP will/MD become/VB Gecko/NNP 1.8.1/CD ./. 

(ROOT (S (NP (PRP It)) (VP (MD should) (ADVP (RB probably)) (VP (VB say) (NP (`` ``) (NP (CD 1.8.1) (NN a1)) ('' '') (SBAR (S (VP (TO to) (VP (VB reflect) (NP (DT the) (NN fact)) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (NP (NP (DT an) (ADJP (NN alpha) (CD 1)) (NN version)) (PP (IN of) (SBAR (WHNP (WP what)) (S (VP (MD will) (VP (VB become) (NP (NNP Gecko) (CD 1.8.1)))))))))))))))))) (. .)))

root(ROOT-0, say-4)
nsubj(say-4, It-1)
aux(say-4, should-2)
advmod(say-4, probably-3)
num(a1-7, 1.8.1-6)
dobj(say-4, a1-7)
aux(reflect-10, to-9)
vmod(a1-7, reflect-10)
det(fact-12, the-11)
dobj(reflect-10, fact-12)
mark(version-19, that-13)
nsubj(version-19, it-14)
cop(version-19, is-15)
det(version-19, an-16)
amod(version-19, alpha-17)
number(alpha-17, 1-18)
ccomp(reflect-10, version-19)
nsubj(become-23, what-21)
aux(become-23, will-22)
prepc_of(version-19, become-23)
xcomp(become-23, Gecko-24)
num(Gecko-24, 1.8.1-25)

Also/RB ,/, the/DT GeckoVer/NNP registry/NN key/NN is/VBZ wrong/JJ :/: HKEY_CURRENT_USER/NN \/CD Software/NNP \/CD Mozilla/NNP \/CD Bon/NNP Echo/NNP 2.0/CD a1/NN [/-LRB- GeckoVer/NN ]/-RRB- HKEY_LOCAL_MACHINE/NN \/CD Software/NNP \/CD Mozilla/NNP \/CD Bon/NNP Echo/NNP 2.0/CD a1/NN [/-LRB- GeckoVer/NN ]/-RRB- 

(ROOT (S (S (ADVP (RB Also)) (, ,) (NP (DT the) (NNP GeckoVer) (NN registry) (NN key)) (VP (VBZ is) (ADJP (JJ wrong)))) (: :) (FRAG (X (NP (NP (NN HKEY_CURRENT_USER)) (NP (CD \) (NNP Software) (CD \) (NNP Mozilla) (CD \) (NNP Bon) (NNP Echo) (CD 2.0) (NN a1) (-LRB- -LSB-))) (NP (NN GeckoVer)) (NP (NP (-RRB- -RSB-) (NN HKEY_LOCAL_MACHINE)) (NP (CD \) (NNP Software) (CD \) (NNP Mozilla) (CD \) (NNP Bon) (NNP Echo) (CD 2.0) (NN a1) (-LRB- -LSB-)))) (NP (NN GeckoVer))) (-RRB- -RSB-)))

root(ROOT-0, wrong-8)
advmod(wrong-8, Also-1)
det(key-6, the-3)
nn(key-6, GeckoVer-4)
nn(key-6, registry-5)
nsubj(wrong-8, key-6)
cop(wrong-8, is-7)
dep(HKEY_LOCAL_MACHINE-23, HKEY_CURRENT_USER-10)
num(a1-19, \-11)
nn(a1-19, Software-12)
num(a1-19, \-13)
nn(a1-19, Mozilla-14)
num(a1-19, \-15)
nn(a1-19, Bon-16)
nn(a1-19, Echo-17)
num(a1-19, 2.0-18)
dep(HKEY_CURRENT_USER-10, a1-19)
punct(a1-19, -LSB--20)
dep(HKEY_LOCAL_MACHINE-23, GeckoVer-21)
punct(HKEY_LOCAL_MACHINE-23, -RSB--22)
dep(GeckoVer-34, HKEY_LOCAL_MACHINE-23)
num(a1-32, \-24)
nn(a1-32, Software-25)
num(a1-32, \-26)
nn(a1-32, Mozilla-27)
num(a1-32, \-28)
nn(a1-32, Bon-29)
nn(a1-32, Echo-30)
num(a1-32, 2.0-31)
dep(HKEY_LOCAL_MACHINE-23, a1-32)
punct(a1-32, -LSB--33)
dep(wrong-8, GeckoVer-34)
punct(wrong-8, -RSB--35)

These/DT guys/NNS have/VBP a/DT value/NN of/IN 1.7.5/CD ./. 

(ROOT (S (NP (DT These) (NNS guys)) (VP (VBP have) (NP (NP (DT a) (NN value)) (PP (IN of) (NP (CD 1.7.5))))) (. .)))

root(ROOT-0, have-3)
det(guys-2, These-1)
nsubj(have-3, guys-2)
det(value-5, a-4)
dobj(have-3, value-5)
prep_of(value-5, 1.7.5-7)

We/PRP should/MD try/VB to/TO make/VB sure/JJ that/IN these/DT version/NN numbers/NNS are/VBP corrected/VBN for/IN 2.0/CD a2/NN ./. 

(ROOT (S (NP (PRP We)) (VP (MD should) (VP (VB try) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure)) (SBAR (IN that) (S (NP (DT these) (NN version) (NNS numbers)) (VP (VBP are) (VP (VBN corrected) (PP (IN for) (NP (CD 2.0) (NN a2)))))))))))) (. .)))

root(ROOT-0, try-3)
nsubj(try-3, We-1)
aux(try-3, should-2)
aux(make-5, to-4)
xcomp(try-3, make-5)
acomp(make-5, sure-6)
mark(corrected-12, that-7)
det(numbers-10, these-8)
nn(numbers-10, version-9)
nsubjpass(corrected-12, numbers-10)
auxpass(corrected-12, are-11)
ccomp(make-5, corrected-12)
num(a2-15, 2.0-14)
prep_for(corrected-12, a2-15)

