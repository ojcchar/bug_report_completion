User-Agent/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.0/CD ;/: en-US/NN ;/: rv/NN :1.5/CD a/DT )/-RRB- Gecko/20030728/NN Mozilla/NN Firebird/0/NN .6.1/CD Build/NNP Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.0/CD ;/: en-US/NN ;/: rv/NN :1.5/CD a/DT )/-RRB- Gecko/20030728/NN Mozilla/NN Firebird/0/NN .6.1/CD 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NNP Windows)) (: ;) (NP (NP (NNP U)) (: ;) (NP (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.0))) (: ;) (NP (NP (NP (NP (NN en-US)) (: ;) (NP (NP (NN rv) (CD :1.5)) (NP (DT a))) (-RRB- -RRB-)) (NP (NN Gecko/20030728) (NN Mozilla) (NN Firebird/0))) (NP (CD .6.1) (NNP Build) (NNP Identifier))) (: :) (NP (NP (NN Mozilla/5) (NN .0)) (-LRB- -LRB-) (NP (NP (NNP Windows)) (: ;) (NP (NNP U)))) (: ;) (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.0))) (: ;) (NP (NP (NN en-US)) (: ;) (NP (NP (NN rv) (CD :1.5)) (NP (DT a)))))) (-RRB- -RRB-)) (NP (NN Gecko/20030728) (NN Mozilla) (NN Firebird/0))) (NP (CD .6.1)))))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/5-3)
dep(User-Agent-1, .0-4)
dep(.0-4, Windows-6)
dep(Windows-6, U-8)
nn(NT-11, Windows-10)
dep(U-8, NT-11)
dep(NT-11, 5.0-12)
dep(NT-11, en-US-14)
dep(en-US-14, rv-16)
num(rv-16, :1.5-17)
dep(rv-16, a-18)
nn(Firebird/0-22, Gecko/20030728-20)
nn(Firebird/0-22, Mozilla-21)
dep(en-US-14, Firebird/0-22)
num(Identifier-25, .6.1-23)
nn(Identifier-25, Build-24)
dep(en-US-14, Identifier-25)
nn(.0-28, Mozilla/5-27)
dep(NT-11, .0-28)
dep(.0-28, Windows-30)
dep(Windows-30, U-32)
nn(NT-35, Windows-34)
dep(NT-11, NT-35)
dep(NT-35, 5.0-36)
dep(NT-11, en-US-38)
dep(en-US-38, rv-40)
num(rv-40, :1.5-41)
dep(rv-40, a-42)
nn(Firebird/0-46, Gecko/20030728-44)
nn(Firebird/0-46, Mozilla-45)
dep(.0-4, Firebird/0-46)
dep(.0-4, .6.1-47)

I/PRP set/VBD up/RP automatic/JJ proxy/NN configuration/NN and/CC now/RB when/WRB I/PRP open/VBP Firebird/NNP for/IN the/DT first/JJ time/NN ,/, it/PRP does/VBZ not/RB connect/VB through/IN the/DT proxy/NN server/NN to/TO my/PRP$ homepage/NN ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBD set) (PRT (RP up)) (NP (JJ automatic) (NN proxy) (NN configuration)))) (CC and) (ADVP (RB now)) (S (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP open) (NP (NP (NNP Firebird)) (PP (IN for) (NP (DT the) (JJ first) (NN time))))))) (, ,) (NP (PRP it)) (VP (VBZ does) (RB not) (VP (VB connect) (PP (IN through) (NP (DT the) (NN proxy) (NN server))) (PP (TO to) (NP (PRP$ my) (NN homepage)))))) (. .)))

root(ROOT-0, set-2)
nsubj(set-2, I-1)
prt(set-2, up-3)
amod(configuration-6, automatic-4)
nn(configuration-6, proxy-5)
dobj(set-2, configuration-6)
advmod(connect-21, now-8)
advmod(open-11, when-9)
nsubj(open-11, I-10)
advcl(connect-21, open-11)
dobj(open-11, Firebird-12)
det(time-16, the-14)
amod(time-16, first-15)
prep_for(Firebird-12, time-16)
nsubj(connect-21, it-18)
aux(connect-21, does-19)
neg(connect-21, not-20)
conj_and(set-2, connect-21)
det(server-25, the-23)
nn(server-25, proxy-24)
prep_through(connect-21, server-25)
poss(homepage-28, my-27)
prep_to(connect-21, homepage-28)

It/PRP will/MD connect/VB to/TO proxy/JJ server/NN once/IN I/PRP navigate/VBP away/RB from/IN the/DT homepage/NN ./. 

(ROOT (S (NP (PRP It)) (VP (MD will) (VP (VB connect) (PP (TO to) (NP (JJ proxy) (NN server))) (SBAR (IN once) (S (NP (PRP I)) (VP (VBP navigate) (ADVP (RB away)) (PP (IN from) (NP (DT the) (NN homepage)))))))) (. .)))

root(ROOT-0, connect-3)
nsubj(connect-3, It-1)
aux(connect-3, will-2)
amod(server-6, proxy-5)
prep_to(connect-3, server-6)
mark(navigate-9, once-7)
nsubj(navigate-9, I-8)
advcl(connect-3, navigate-9)
det(homepage-13, the-12)
prep_away_from(navigate-9, homepage-13)

Hitting/VBG '/`` back/RB '/'' once/RB I/PRP do/VBP this/DT allows/VBZ me/PRP to/TO see/VB my/PRP$ homepage/NN ./. 

(ROOT (S (S (VP (VBG Hitting) (`` `) (ADVP (RB back)) ('' ') (SBAR (RB once) (S (NP (PRP I)) (VP (VBP do) (NP (DT this))))))) (VP (VBZ allows) (S (NP (PRP me)) (VP (TO to) (VP (VB see) (NP (PRP$ my) (NN homepage)))))) (. .)))

root(ROOT-0, allows-9)
csubj(allows-9, Hitting-1)
advmod(Hitting-1, back-3)
advmod(do-7, once-5)
nsubj(do-7, I-6)
ccomp(Hitting-1, do-7)
dobj(do-7, this-8)
dobj(allows-9, me-10)
aux(see-12, to-11)
xcomp(allows-9, see-12)
poss(homepage-14, my-13)
dobj(see-12, homepage-14)

It/PRP works/VBZ fine/JJ using/VBG a/DT manual/JJ proxy/NN configuration/NN ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ works) (ADJP (JJ fine)) (S (VP (VBG using) (NP (DT a) (JJ manual) (NN proxy) (NN configuration))))) (. .)))

root(ROOT-0, works-2)
nsubj(works-2, It-1)
acomp(works-2, fine-3)
xcomp(works-2, using-4)
det(configuration-8, a-5)
amod(configuration-8, manual-6)
nn(configuration-8, proxy-7)
dobj(using-4, configuration-8)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

1/CD set/VBN up/RP firebird/NN to/TO use/VB automatic/JJ configuration/NN for/IN a/DT proxy/NN server/NN 

(ROOT (SINV (NP (CD 1)) (VP (VBN set) (PRT (RP up)) (NP (NN firebird)) (S (VP (TO to) (VP (VB use) (NP (JJ automatic) (NN configuration)) (PP (IN for) (NP (DT a) (NN proxy) (NN server)))))))))

root(ROOT-0, set-2)
nsubj(set-2, 1-1)
prt(set-2, up-3)
dobj(set-2, firebird-4)
aux(use-6, to-5)
vmod(set-2, use-6)
amod(configuration-8, automatic-7)
dobj(use-6, configuration-8)
det(server-12, a-10)
nn(server-12, proxy-11)
prep_for(use-6, server-12)

2/CD close/JJ firebird/NN 

(ROOT (NP (NP (CD 2)) (NP (JJ close) (NN firebird))))

root(ROOT-0, 2-1)
amod(firebird-3, close-2)
dep(2-1, firebird-3)

3/CD open/JJ firebird/NN 

(ROOT (X (NP (ADJP (CD 3) (JJ open)) (NN firebird))))

root(ROOT-0, firebird-3)
number(open-2, 3-1)
amod(firebird-3, open-2)

Actual/JJ Results/NNS :/: Error/NN message/NN that/IN I/PRP can/MD not/RB establish/VB a/DT connection/NN 

(ROOT (FRAG (NP (NP (JJ Actual) (NNS Results)) (: :) (NP (NN Error) (NN message))) (SBAR (IN that) (S (NP (PRP I)) (VP (MD can) (RB not) (VP (VB establish) (NP (DT a) (NN connection))))))))

root(ROOT-0, Results-2)
amod(Results-2, Actual-1)
nn(message-5, Error-4)
dep(Results-2, message-5)
mark(establish-10, that-6)
nsubj(establish-10, I-7)
aux(establish-10, can-8)
neg(establish-10, not-9)
dep(Results-2, establish-10)
det(connection-12, a-11)
dobj(establish-10, connection-12)

Expected/VBN Results/NNS :/: username/password/JJ prompt/JJ to/TO connect/VB to/TO proxy/NN server/NN 

(ROOT (S (VP (VBN Expected) (NP (NP (NNS Results)) (: :) (ADJP (JJ username/password) (JJ prompt))) (S (VP (TO to) (VP (VB connect) (PP (TO to) (NP (NN proxy) (NN server)))))))))

root(ROOT-0, Expected-1)
dobj(Expected-1, Results-2)
amod(prompt-5, username/password-4)
amod(Results-2, prompt-5)
aux(connect-7, to-6)
xcomp(Expected-1, connect-7)
nn(server-10, proxy-9)
prep_to(connect-7, server-10)

