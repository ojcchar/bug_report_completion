User-Agent/NNP :/: Mozilla/5/NN .0/NN (/-LRB- X11/NN ;/: U/NNP ;/: Linux/NNP x86_64/NN ;/: en-GB/NN ;/: rv/NN :1.8.1.6/CD )/-RRB- Gecko/20071008/NN Ubuntu/7/NN .10/CD (/-LRB- gutsy/JJ )/-RRB- Firefox/2/NN .0.0.6/CD Build/NNP Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- X11/NN ;/: U/NNP ;/: Linux/NNP x86_64/NN ;/: en-GB/NN ;/: rv/NN :1.8.1.6/CD )/-RRB- Gecko/20071008/NN Ubuntu/7/NN .10/CD (/-LRB- gutsy/JJ )/-RRB- Firefox/2/NN .0.0.6/CD 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NP (NN X11)) (: ;) (NP (NP (NP (NNP U)) (: ;) (NP (NNP Linux) (NN x86_64))) (: ;) (NP (NP (NN en-GB)) (: ;) (NP (NN rv) (CD :1.8.1.6))))) (-RRB- -RRB-))) (X (NP (NP (NN Gecko/20071008) (NN Ubuntu/7)) (NP (NP (NP (CD .10)) (PRN (-LRB- -LRB-) (NP (JJ gutsy)) (-RRB- -RRB-)) (NP (NN Firefox/2) (CD .0.0.6) (NNP Build) (NNP Identifier))) (: :) (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NP (NN X11)) (: ;) (NP (NP (NP (NNP U)) (: ;) (NP (NNP Linux) (NN x86_64))) (: ;) (NP (NP (NN en-GB)) (: ;) (NP (NN rv) (CD :1.8.1.6))))) (-RRB- -RRB-)) (NP (NN Gecko/20071008))))) (NP (NN Ubuntu/7) (CD .10)) (NP (NP (-LRB- -LRB-) (JJ gutsy) (-RRB- -RRB-) (NN Firefox/2)) (NP (CD .0.0.6))))))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/5-3)
dep(User-Agent-1, .0-4)
dep(.0-4, X11-6)
dep(X11-6, U-8)
nn(x86_64-11, Linux-10)
dep(U-8, x86_64-11)
dep(U-8, en-GB-13)
dep(en-GB-13, rv-15)
num(rv-15, :1.8.1.6-16)
nn(Ubuntu/7-19, Gecko/20071008-18)
dep(Firefox/2-50, Ubuntu/7-19)
dep(Ubuntu/7-19, .10-20)
dep(.10-20, gutsy-22)
nn(Identifier-27, Firefox/2-24)
num(Identifier-27, .0.0.6-25)
nn(Identifier-27, Build-26)
dep(.10-20, Identifier-27)
nn(.0-30, Mozilla/5-29)
dep(.10-20, .0-30)
dep(.0-30, X11-32)
dep(X11-32, U-34)
nn(x86_64-37, Linux-36)
dep(U-34, x86_64-37)
dep(U-34, en-GB-39)
dep(en-GB-39, rv-41)
num(rv-41, :1.8.1.6-42)
dep(.0-30, Gecko/20071008-44)
dep(Firefox/2-50, Ubuntu/7-45)
num(Ubuntu/7-45, .10-46)
amod(Firefox/2-50, gutsy-48)
dep(User-Agent-1, Firefox/2-50)
dep(Firefox/2-50, .0.0.6-51)

The/DT context/NN menu/NN appears/VBZ with/IN the/DT top-left/JJ corner/NN at/IN the/DT mouse/NN coordinates/VBZ ,/, except/IN where/WRB this/DT will/MD cause/VB the/DT menu/NN to/TO overflow/NN the/DT available/JJ screen/NN area/NN ./. 

(ROOT (S (NP (DT The) (NN context) (NN menu)) (VP (VBZ appears) (PP (IN with) (NP (NP (DT the) (JJ top-left) (NN corner)) (PP (IN at) (NP (NP (DT the) (NN mouse)) (VP (VBZ coordinates)) (, ,) (PP (IN except) (SBAR (WHADVP (WRB where)) (S (NP (DT this)) (VP (MD will) (VP (VB cause) (NP (DT the) (NN menu)) (PP (TO to) (NP (NP (NN overflow)) (NP (DT the) (JJ available) (NN screen) (NN area)))))))))))))) (. .)))

root(ROOT-0, appears-4)
det(menu-3, The-1)
nn(menu-3, context-2)
nsubj(appears-4, menu-3)
det(corner-8, the-6)
amod(corner-8, top-left-7)
prep_with(appears-4, corner-8)
det(mouse-11, the-10)
prep_at(corner-8, mouse-11)
dep(mouse-11, coordinates-12)
advmod(cause-18, where-15)
nsubj(cause-18, this-16)
aux(cause-18, will-17)
prepc_except(mouse-11, cause-18)
det(menu-20, the-19)
dobj(cause-18, menu-20)
prep_to(cause-18, overflow-22)
det(area-26, the-23)
amod(area-26, available-24)
nn(area-26, screen-25)
dep(overflow-22, area-26)

On/IN a/DT 16080x1050/NN screen/NN ,/, the/DT menu/NN seems/VBZ only/RB to/TO consider/VB the/DT area/NN it/PRP would/MD have/VB if/IN the/DT screen/NN was/VBD a/DT 4:3/CD screen/NN instead/RB of/IN a/DT 16:10/CD ./. 

(ROOT (S (PP (IN On) (NP (DT a) (NN 16080x1050) (NN screen))) (, ,) (NP (DT the) (NN menu)) (VP (VBZ seems) (ADVP (RB only)) (S (VP (TO to) (VP (VB consider) (NP (NP (DT the) (NN area)) (SBAR (S (NP (PRP it)) (VP (MD would) (VP (VB have) (SBAR (IN if) (S (NP (DT the) (NN screen)) (VP (VBD was) (NP (NP (DT a) (CD 4:3) (NN screen)) (PP (RB instead) (IN of) (NP (DT a) (CD 16:10)))))))))))))))) (. .)))

root(ROOT-0, seems-8)
det(screen-4, a-2)
nn(screen-4, 16080x1050-3)
prep_on(seems-8, screen-4)
det(menu-7, the-6)
nsubj(seems-8, menu-7)
advmod(seems-8, only-9)
aux(consider-11, to-10)
xcomp(seems-8, consider-11)
det(area-13, the-12)
dobj(consider-11, area-13)
nsubj(have-16, it-14)
aux(have-16, would-15)
rcmod(area-13, have-16)
mark(screen-23, if-17)
det(screen-19, the-18)
nsubj(screen-23, screen-19)
cop(screen-23, was-20)
det(screen-23, a-21)
num(screen-23, 4:3-22)
advcl(have-16, screen-23)
det(16:10-27, a-26)
prep_instead_of(screen-23, 16:10-27)

i.e./FW -/: drag/NN window/NN against/IN the/DT right/JJ screen/NN edge/NN ./. 

(ROOT (NP (NP (FW i.e.)) (: -) (NP (NP (NN drag) (NN window)) (PP (IN against) (NP (DT the) (JJ right) (NN screen) (NN edge)))) (. .)))

root(ROOT-0, i.e.-1)
nn(window-4, drag-3)
dep(i.e.-1, window-4)
det(edge-9, the-6)
amod(edge-9, right-7)
nn(edge-9, screen-8)
prep_against(window-4, edge-9)

Right-click/NN near/IN the/DT edge/NN ./. 

(ROOT (NP (NP (NN Right-click)) (PP (IN near) (NP (DT the) (NN edge))) (. .)))

root(ROOT-0, Right-click-1)
det(edge-4, the-3)
prep_near(Right-click-1, edge-4)

The/DT menu/NN appears/VBZ some/DT distance/NN to/TO the/DT left/NN ./. 

(ROOT (S (NP (DT The) (NN menu)) (VP (VBZ appears) (NP (DT some) (NN distance)) (PP (TO to) (NP (DT the) (NN left)))) (. .)))

root(ROOT-0, appears-3)
det(menu-2, The-1)
nsubj(appears-3, menu-2)
det(distance-5, some-4)
dobj(appears-3, distance-5)
det(left-8, the-7)
prep_to(appears-3, left-8)

This/DT is/VBZ using/VBG the/DT nvidia/NN glx/NN driver/NN ,/, with/IN t/NN 

(ROOT (S (NP (DT This)) (VP (VBZ is) (VP (VBG using) (NP (DT the) (NN nvidia) (NN glx) (NN driver)) (, ,) (PP (IN with) (NP (NN t)))))))

root(ROOT-0, using-3)
nsubj(using-3, This-1)
aux(using-3, is-2)
det(driver-7, the-4)
nn(driver-7, nvidia-5)
nn(driver-7, glx-6)
dobj(using-3, driver-7)
prep_with(using-3, t-10)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

nvidia-glx/JJ driver/NN ,/, 100/CD series/NN ./. 

(ROOT (NP (NP (JJ nvidia-glx) (NN driver)) (, ,) (NP (CD 100) (NN series)) (. .)))

root(ROOT-0, driver-2)
amod(driver-2, nvidia-glx-1)
num(series-5, 100-4)
appos(driver-2, series-5)

Screen/NN is/VBZ using/VBG metamodes/NNS option/NN 

(ROOT (S (NP (NN Screen)) (VP (VBZ is) (VP (VBG using) (NP (NNS metamodes) (NN option))))))

root(ROOT-0, using-3)
nsubj(using-3, Screen-1)
aux(using-3, is-2)
nn(option-5, metamodes-4)
dobj(using-3, option-5)

"/`` metamodes/NNS "/'' "/`` DFP-1/NN :1680/CD x1050/NN ,/, CRT-0/NN :1280/CD x1024/NN "/'' 

(ROOT (FRAG (NP (NP (`` ``) (NNS metamodes) ('' '')) (NP (`` ``) (NP (NN DFP-1)) (NP (CD :1680) (NN x1050)) (, ,) (NP (NN CRT-0) (CD :1280) (NN x1024)) ('' '')))))

root(ROOT-0, metamodes-2)
dep(metamodes-2, DFP-1-5)
num(x1050-7, :1680-6)
dep(DFP-1-5, x1050-7)
nn(x1024-11, CRT-0-9)
num(x1024-11, :1280-10)
appos(DFP-1-5, x1024-11)

"/`` TwinViewOrientation/NN "/'' "/`` CRT-0/NN RightOf/NN DFP-1/NN "/'' 

(ROOT (NP (NP (NP (`` ``) (NN TwinViewOrientation) ('' '')) (`` ``) (NP (NN CRT-0) (NN RightOf))) (NP (NN DFP-1) ('' ''))))

root(ROOT-0, TwinViewOrientation-2)
nn(RightOf-6, CRT-0-5)
dep(TwinViewOrientation-2, RightOf-6)
dep(TwinViewOrientation-2, DFP-1-7)

1/CD Drag/NN window/NN to/TO right/JJ hand/NN side/NN of/IN wide/JJ screen/NN 

(ROOT (NP (NP (CD 1) (NN Drag)) (NP (NP (NN window)) (PP (TO to) (NP (NP (JJ right) (NN hand) (NN side)) (PP (IN of) (NP (JJ wide) (NN screen))))))))

root(ROOT-0, Drag-2)
num(Drag-2, 1-1)
dep(Drag-2, window-3)
amod(side-7, right-5)
nn(side-7, hand-6)
prep_to(window-3, side-7)
amod(screen-10, wide-9)
prep_of(side-7, screen-10)

2/CD Right/NNP click/VB near/IN the/DT right/JJ edge/NN 

(ROOT (S (NP (CD 2) (NNP Right)) (ADJP (VB click) (PP (IN near) (NP (DT the) (JJ right) (NN edge))))))

root(ROOT-0, click-3)
num(Right-2, 2-1)
dep(click-3, Right-2)
det(edge-7, the-5)
amod(edge-7, right-6)
prep_near(click-3, edge-7)

3/CD Observe/VB the/DT menu/NN appear/VBP some/DT distance/NN to/TO the/DT left/NN 

(ROOT (FRAG (NP (CD 3)) (VP (VB Observe) (SBAR (S (NP (DT the) (NN menu)) (VP (VBP appear) (NP (DT some) (NN distance)) (PP (TO to) (NP (DT the) (NN left)))))))))

root(ROOT-0, 3-1)
dep(3-1, Observe-2)
det(menu-4, the-3)
nsubj(appear-5, menu-4)
ccomp(Observe-2, appear-5)
det(distance-7, some-6)
dobj(appear-5, distance-7)
det(left-10, the-9)
prep_to(appear-5, left-10)

Expected/VBN Results/NNS :/: Menu/NN should/MD appear/VB closer/JJR to/TO ,/, or/CC at/IN ,/, the/DT mouse/NN pointer/NN ./. 

(ROOT (S (S (VP (VBN Expected) (NP (NNS Results)))) (: :) (S (NP (NN Menu)) (VP (MD should) (VP (VB appear) (ADJP (JJR closer)) (PP (TO to) (PRN (, ,) (CC or) (ADVP (IN at)) (, ,)) (NP (DT the) (NN mouse) (NN pointer)))))) (. .)))

root(ROOT-0, Expected-1)
dobj(Expected-1, Results-2)
nsubj(appear-6, Menu-4)
aux(appear-6, should-5)
parataxis(Expected-1, appear-6)
acomp(appear-6, closer-7)
cc(at-11, or-10)
dep(appear-6, at-11)
det(pointer-15, the-13)
nn(pointer-15, mouse-14)
prep_to(appear-6, pointer-15)

