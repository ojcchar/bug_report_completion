User-Agent/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.1/CD ;/: en-US/NN ;/: rv/NN :1.9.0.1/CD )/-RRB- Gecko/2008070208/NN Firefox/3/NN .0.1/CD Build/NNP Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.1/CD ;/: en-US/NN ;/: rv/NN :1.9.0.1/CD )/-RRB- Gecko/2008070208/NN Firefox/3/NN .0.1/CD 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NNP Windows)) (: ;) (NP (NP (NNP U)) (: ;) (NP (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.1))) (: ;) (NP (NP (NP (NP (NN en-US)) (: ;) (NP (NP (NN rv)) (NP (CD :1.9.0.1))) (-RRB- -RRB-)) (NP (NN Gecko/2008070208) (NN Firefox/3))) (NP (CD .0.1) (NNP Build) (NNP Identifier))) (: :) (NP (NP (NN Mozilla/5) (NN .0)) (-LRB- -LRB-) (NP (NP (NNP Windows)) (: ;) (NP (NNP U)))) (: ;) (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.1))) (: ;) (NP (NP (NN en-US)) (: ;) (NP (NN rv) (CD :1.9.0.1))))) (-RRB- -RRB-)) (NP (NN Gecko/2008070208) (NN Firefox/3))) (NP (CD .0.1)))))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/5-3)
dep(User-Agent-1, .0-4)
dep(.0-4, Windows-6)
dep(Windows-6, U-8)
nn(NT-11, Windows-10)
dep(U-8, NT-11)
dep(NT-11, 5.1-12)
dep(NT-11, en-US-14)
dep(en-US-14, rv-16)
dep(rv-16, :1.9.0.1-17)
nn(Firefox/3-20, Gecko/2008070208-19)
dep(en-US-14, Firefox/3-20)
num(Identifier-23, .0.1-21)
nn(Identifier-23, Build-22)
dep(en-US-14, Identifier-23)
nn(.0-26, Mozilla/5-25)
dep(NT-11, .0-26)
dep(.0-26, Windows-28)
dep(Windows-28, U-30)
nn(NT-33, Windows-32)
dep(NT-11, NT-33)
dep(NT-33, 5.1-34)
dep(NT-11, en-US-36)
dep(en-US-36, rv-38)
num(rv-38, :1.9.0.1-39)
nn(Firefox/3-42, Gecko/2008070208-41)
dep(.0-4, Firefox/3-42)
dep(.0-4, .0.1-43)

ARIA/NN role/NN :/: alert/NN does/VBZ not/RB always/RB cause/VB the/DT added/VBN node/NN to/TO be/VB spoken/VBN by/IN the/DT user/NN 's/POS assistive/JJ technology/NN ./. 

(ROOT (FRAG (NP (NN ARIA) (NN role)) (: :) (S (NP (NN alert)) (VP (VBZ does) (RB not) (ADVP (RB always)) (VP (VB cause) (S (NP (DT the) (VBN added) (NN node)) (VP (TO to) (VP (VB be) (VP (VBN spoken) (PP (IN by) (NP (NP (DT the) (NN user) (POS 's)) (JJ assistive) (NN technology)))))))))) (. .)))

root(ROOT-0, role-2)
nn(role-2, ARIA-1)
nsubj(cause-8, alert-4)
aux(cause-8, does-5)
neg(cause-8, not-6)
advmod(cause-8, always-7)
dep(role-2, cause-8)
det(node-11, the-9)
amod(node-11, added-10)
dobj(cause-8, node-11)
aux(spoken-14, to-12)
auxpass(spoken-14, be-13)
xcomp(cause-8, spoken-14)
det(user-17, the-16)
poss(technology-20, user-17)
amod(technology-20, assistive-19)
agent(spoken-14, technology-20)

Under/IN JAWS/NNP 9/CD ,/, if/IN the/DT text/NN content/NN of/IN an/DT alert/NN is/VBZ greater/JJR than/IN a/DT certain/JJ length/NN ,/, the/DT alert/NN will/MD not/RB be/VB spoken/VBN when/WRB it/PRP is/VBZ added/VBN ./. 

(ROOT (S (PP (IN Under) (NP (NNP JAWS) (CD 9))) (, ,) (SBAR (IN if) (S (NP (NP (DT the) (NN text) (NN content)) (PP (IN of) (NP (DT an) (NN alert)))) (VP (VBZ is) (ADJP (ADJP (JJR greater)) (PP (IN than) (NP (DT a) (JJ certain) (NN length))))))) (, ,) (NP (DT the) (NN alert)) (VP (MD will) (RB not) (VP (VB be) (VP (VBN spoken) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN added)))))))) (. .)))

root(ROOT-0, spoken-24)
prep_under(spoken-24, JAWS-2)
num(JAWS-2, 9-3)
mark(greater-13, if-5)
det(content-8, the-6)
nn(content-8, text-7)
nsubj(greater-13, content-8)
det(alert-11, an-10)
prep_of(content-8, alert-11)
cop(greater-13, is-12)
advcl(spoken-24, greater-13)
det(length-17, a-15)
amod(length-17, certain-16)
prep_than(greater-13, length-17)
det(alert-20, the-19)
nsubjpass(spoken-24, alert-20)
aux(spoken-24, will-21)
neg(spoken-24, not-22)
auxpass(spoken-24, be-23)
advmod(added-28, when-25)
nsubjpass(added-28, it-26)
auxpass(added-28, is-27)
advcl(spoken-24, added-28)

Please/VB see/VB the/DT attached/VBN example/NN ./. 

(ROOT (S (VP (VB Please) (VP (VB see) (NP (DT the) (VBN attached) (NN example)))) (. .)))

root(ROOT-0, Please-1)
xcomp(Please-1, see-2)
det(example-5, the-3)
amod(example-5, attached-4)
dobj(see-2, example-5)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

1/CD Open/VB the/DT attached/VBN example/NN while/IN running/VBG Firefox/NNP 3/CD and/CC JAWS/NNP 9/CD ./. 

(ROOT (S (NP (CD 1)) (VP (VB Open) (NP (DT the) (VBN attached) (NN example)) (PP (IN while) (S (VP (VBG running) (NP (NP (NNP Firefox) (CD 3)) (CC and) (NP (NNP JAWS) (CD 9))))))) (. .)))

root(ROOT-0, Open-2)
nsubj(Open-2, 1-1)
det(example-5, the-3)
amod(example-5, attached-4)
dobj(Open-2, example-5)
prepc_while(Open-2, running-7)
dobj(running-7, Firefox-8)
num(Firefox-8, 3-9)
dobj(running-7, JAWS-11)
conj_and(Firefox-8, JAWS-11)
num(JAWS-11, 9-12)

2/CD Click/VB on/IN "/`` Show/NNP the/DT alert/NN that/WDT works/VBZ "/'' ./. 

(ROOT (S (NP (CD 2)) (VP (VB Click) (PP (IN on) (`` ``) (NP (NP (NP (NNP Show)) (NP (DT the) (NN alert))) (SBAR (WHNP (WDT that)) (S (VP (VBZ works))))) ('' ''))) (. .)))

root(ROOT-0, Click-2)
nsubj(Click-2, 2-1)
prep_on(Click-2, Show-5)
det(alert-7, the-6)
dep(Show-5, alert-7)
nsubj(works-9, that-8)
rcmod(Show-5, works-9)

Notice/NNP that/IN the/DT alert/JJ text/NN is/VBZ read/VBN out/RP ./. 

(ROOT (S (NP (NP (NNP Notice)) (PP (IN that) (NP (DT the) (JJ alert) (NN text)))) (VP (VBZ is) (VP (VBN read) (PRT (RP out)))) (. .)))

root(ROOT-0, read-7)
nsubjpass(read-7, Notice-1)
det(text-5, the-3)
amod(text-5, alert-4)
prep_that(Notice-1, text-5)
auxpass(read-7, is-6)
prt(read-7, out-8)

3/CD Click/VB on/IN "/`` Show/NNP the/DT alert/NN that/WDT fails/VBZ "/'' ./. 

(ROOT (S (NP (CD 3)) (VP (VB Click) (PP (IN on) (`` ``) (NP (NP (NP (NNP Show)) (NP (DT the) (NN alert))) (SBAR (WHNP (WDT that)) (S (VP (VBZ fails))))) ('' ''))) (. .)))

root(ROOT-0, Click-2)
nsubj(Click-2, 3-1)
prep_on(Click-2, Show-5)
det(alert-7, the-6)
dep(Show-5, alert-7)
nsubj(fails-9, that-8)
rcmod(Show-5, fails-9)

Notice/NNP that/IN the/DT alert/JJ text/NN is/VBZ not/RB read/VB out/RP ./. 

(ROOT (S (NP (NP (NNP Notice)) (SBAR (IN that) (S (NP (DT the) (JJ alert) (NN text)) (VP (VBZ is) (RB not))))) (VP (VB read) (PRT (RP out))) (. .)))

root(ROOT-0, read-8)
nsubj(read-8, Notice-1)
mark(is-6, that-2)
det(text-5, the-3)
amod(text-5, alert-4)
nsubj(is-6, text-5)
dep(Notice-1, is-6)
neg(is-6, not-7)
prt(read-8, out-9)

Actual/JJ Results/NNS :/: 

(ROOT (NP (JJ Actual) (NNS Results) (: :)))

root(ROOT-0, Results-2)
amod(Results-2, Actual-1)

The/DT alert/NN is/VBZ only/RB read/VB in/IN the/DT first/JJ case/NN ,/, but/CC nothing/NN is/VBZ spoken/VBN for/IN the/DT second/JJ case/NN ./. 

(ROOT (S (S (NP (DT The) (NN alert)) (VP (VBZ is) (ADVP (RB only)) (S (VP (VB read) (PP (IN in) (NP (DT the) (JJ first) (NN case))))))) (, ,) (CC but) (S (NP (NN nothing)) (VP (VBZ is) (VP (VBN spoken) (PP (IN for) (NP (DT the) (JJ second) (NN case)))))) (. .)))

root(ROOT-0, is-3)
det(alert-2, The-1)
nsubj(is-3, alert-2)
advmod(is-3, only-4)
ccomp(is-3, read-5)
det(case-9, the-7)
amod(case-9, first-8)
prep_in(read-5, case-9)
nsubjpass(spoken-14, nothing-12)
auxpass(spoken-14, is-13)
conj_but(is-3, spoken-14)
det(case-18, the-16)
amod(case-18, second-17)
prep_for(spoken-14, case-18)

Expected/VBN Results/NNS :/: Both/DT alerts/VBZ should/MD be/VB spoken/VBN ./. 

(ROOT (S (S (VP (VBN Expected) (NP (NP (NNS Results)) (: :) (S (NP (DT Both)) (VP (VBZ alerts)))))) (VP (MD should) (VP (VB be) (VP (VBN spoken)))) (. .)))

root(ROOT-0, spoken-8)
csubjpass(spoken-8, Expected-1)
dobj(Expected-1, Results-2)
nsubj(alerts-5, Both-4)
dep(Results-2, alerts-5)
aux(spoken-8, should-6)
auxpass(spoken-8, be-7)

