User-Agent/NNP :/: Mozilla/4/NN .0/NN (/-LRB- compatible/JJ ;/: MSIE/NN 6.0/CD ;/: Windows/NNP NT/NNP 5.0/CD ;/: ./. 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NN Mozilla/4) (NN .0)) (-LRB- -LRB-) (NP (NP (NP (JJ compatible)) (: ;) (NP (NN MSIE) (CD 6.0))) (: ;) (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.0)))) (: ;)) (. .)))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/4-3)
dep(User-Agent-1, .0-4)
dep(.0-4, compatible-6)
dep(compatible-6, MSIE-8)
num(MSIE-8, 6.0-9)
nn(NT-12, Windows-11)
dep(compatible-6, NT-12)
dep(NT-12, 5.0-13)

NET/NNP CLR/NNP 1.0.3705/CD )/-RRB- Build/NNP Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.0/CD ;/: en-US/NN ;/: rv/NN :1.7.5/CD )/-RRB- Gecko/20041107/NN Firefox/1/NN .0/CD 

(ROOT (FRAG (SBAR (WHNP (NP (NNP NET)) (PRN (NP (NP (NNP CLR)) (NP (CD 1.0.3705))) (-RRB- -RRB-))) (FRAG (NP (NP (NNP Build) (NNP Identifier)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NNP Windows)) (: ;) (NP (NP (NNP U)) (: ;) (NP (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.0))) (: ;) (NP (NP (NN en-US)) (: ;) (NP (NN rv) (CD :1.7.5))))) (-RRB- -RRB-)) (NP (NN Gecko/20041107) (NN Firefox/1))) (NP (CD .0))))))))

root(ROOT-0, Identifier-6)
dep(Identifier-6, NET-1)
dep(NET-1, CLR-2)
dep(CLR-2, 1.0.3705-3)
nn(Identifier-6, Build-5)
nn(.0-9, Mozilla/5-8)
dep(Identifier-6, .0-9)
dep(.0-9, Windows-11)
dep(Windows-11, U-13)
nn(NT-16, Windows-15)
dep(U-13, NT-16)
dep(NT-16, 5.0-17)
dep(NT-16, en-US-19)
dep(en-US-19, rv-21)
num(rv-21, :1.7.5-22)
nn(Firefox/1-25, Gecko/20041107-24)
dep(.0-9, Firefox/1-25)
dep(.0-9, .0-26)

In/IN case/NN of/IN open/JJ many/JJ tabs/NNS some/DT tabs/NNS are/VBP out/IN of/IN tab/NN bar/NN and/CC last/JJ visible/JJ tab/NN overlaped/VBN with/IN "/`` close/JJ tab/NN "/'' (/-LRB- white/JJ [/-LRB- X/NN ]/-RRB- on/IN red/JJ background/NN )/-RRB- button/NN ./. 

(ROOT (S (PP (IN In) (NP (NP (NN case)) (PP (IN of) (NP (JJ open) (JJ many) (NNS tabs))))) (NP (DT some) (NNS tabs)) (VP (VBP are) (ADVP (IN out) (PP (IN of) (NP (NP (NN tab) (NN bar)) (CC and) (NP (JJ last) (JJ visible) (NN tab))))) (VP (VBN overlaped) (PP (IN with) (NP (`` ``) (NP (JJ close) (NN tab)) ('' '') (PRN (-LRB- -LRB-) (NP (NP (JJ white) (-LRB- -LSB-) (NN X) (-RRB- -RSB-)) (PP (IN on) (NP (JJ red) (NN background)))) (-RRB- -RRB-)))) (NP (NN button)))) (. .)))

root(ROOT-0, overlaped-18)
amod(tabs-6, open-4)
amod(tabs-6, many-5)
prep_in_case_of(overlaped-18, tabs-6)
det(tabs-8, some-7)
nsubjpass(overlaped-18, tabs-8)
auxpass(overlaped-18, are-9)
nn(bar-13, tab-12)
prep_out_of(overlaped-18, bar-13)
amod(tab-17, last-15)
amod(tab-17, visible-16)
conj_and(bar-13, tab-17)
prep_out_of(overlaped-18, tab-17)
amod(tab-22, close-21)
prep_with(overlaped-18, tab-22)
amod(X-27, white-25)
punct(X-27, -LSB--26)
dep(tab-22, X-27)
punct(X-27, -RSB--28)
amod(background-31, red-30)
prep_on(X-27, background-31)
dobj(overlaped-18, button-33)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

1/CD Open/VB the/DT page/NN with/IN many/JJ links/NNS ,/, ex/FW ./. 

(ROOT (S (NP (CD 1)) (VP (VB Open) (NP (DT the) (NN page)) (PP (IN with) (NP (NP (JJ many) (NNS links)) (, ,) (NP (FW ex))))) (. .)))

root(ROOT-0, Open-2)
nsubj(Open-2, 1-1)
det(page-4, the-3)
dobj(Open-2, page-4)
amod(links-7, many-6)
prep_with(Open-2, links-7)
appos(links-7, ex-9)

http://lenta.ru/NN or/CC any/DT other/JJ news/NN ./. 

(ROOT (NP (NP (NP (NN http://lenta.ru)) (CC or) (NP (DT any) (JJ other) (NN news))) (. .)))

root(ROOT-0, http://lenta.ru-1)
det(news-5, any-3)
amod(news-5, other-4)
conj_or(http://lenta.ru-1, news-5)

2/CD Open/NNP links/NNS one/CD by/IN one/CD "/`` in/IN new/JJ tab/NN "/'' (/-LRB- in/IN my/PRP$ case/NN at/IN 1024/CD */SYM 768/CD videomode/NN 33/CD tabs/NNS 

(ROOT (NP (NP (CD 2) (NNP Open) (NNS links)) (NP (NP (CD one)) (PP (IN by) (NP (NP (CD one)) (`` ``) (PP (IN in) (NP (NP (JJ new) (NN tab) ('' '')) (-LRB- -LRB-) (PP (IN in) (NP (PRP$ my) (NN case))) (PP (IN at) (NP (CD 1024)) (X (X (SYM *)) (NP (CD 768) (NN videomode))))))))) (NP (CD 33) (NNS tabs))))

root(ROOT-0, links-3)
num(links-3, 2-1)
nn(links-3, Open-2)
dep(links-3, one-4)
prep_by(one-4, one-6)
amod(tab-10, new-9)
prep_in(one-6, tab-10)
poss(case-15, my-14)
prep_in(tab-10, case-15)
prep_at(tab-10, 1024-17)
dep(videomode-20, *-18)
num(videomode-20, 768-19)
dep(tab-10, videomode-20)
num(tabs-22, 33-21)
dep(links-3, tabs-22)

is/VBZ enought/JJ )/-RRB- ./. 

(ROOT (S (VP (VBZ is) (NP (JJ enought) (-RRB- -RRB-))) (. .)))

root(ROOT-0, enought-2)
cop(enought-2, is-1)

Actual/JJ Results/NNS :/: Last/JJ tab/NN is/VBZ overlapped/VBN with/IN "/`` close/JJ tab/NN "/'' (/-LRB- [/-LRB- X/NN ]/-RRB- )/-RRB- button/NN ./. 

(ROOT (NP (NP (JJ Actual) (NNS Results)) (: :) (S (NP (JJ Last) (NN tab)) (VP (VBZ is) (NP (ADJP (VBN overlapped) (PP (IN with) (NP (`` ``) (NP (JJ close) (NN tab)) ('' '') (PRN (-LRB- -LRB-) (NP (-LRB- -LSB-) (NN X) (-RRB- -RSB-)) (-RRB- -RRB-))))) (NN button)))) (. .)))

root(ROOT-0, Results-2)
amod(Results-2, Actual-1)
amod(tab-5, Last-4)
nsubj(button-18, tab-5)
cop(button-18, is-6)
amod(button-18, overlapped-7)
amod(tab-11, close-10)
prep_with(overlapped-7, tab-11)
punct(X-15, -LSB--14)
appos(tab-11, X-15)
punct(X-15, -RSB--16)
dep(Results-2, button-18)

Next/JJ new/JJ tab/NN will/MD be/VB opened/VBN somewhere/RB out/IN of/IN screen/NN ./. 

(ROOT (S (NP (JJ Next) (JJ new) (NN tab)) (VP (MD will) (VP (VB be) (VP (VBN opened) (ADVP (RB somewhere) (IN out)) (PP (IN of) (NP (NN screen)))))) (. .)))

root(ROOT-0, opened-6)
amod(tab-3, Next-1)
amod(tab-3, new-2)
nsubjpass(opened-6, tab-3)
aux(opened-6, will-4)
auxpass(opened-6, be-5)
advmod(opened-6, somewhere-7)
prep_out_of(opened-6, screen-10)

Clicking/VBG on/IN overlapped/VBD place/NN closing/NN current/JJ tab/NN ./. 

(ROOT (SINV (VP (VBG Clicking) (PP (IN on))) (VP (VBD overlapped) (NP (NN place) (NN closing))) (NP (JJ current) (NN tab)) (. .)))

root(ROOT-0, Clicking-1)
prep(Clicking-1, on-2)
dep(Clicking-1, overlapped-3)
nn(closing-5, place-4)
dobj(overlapped-3, closing-5)
amod(tab-7, current-6)
nsubj(Clicking-1, tab-7)

Expected/VBN Results/NNS :/: 

(ROOT (PP (VBN Expected) (NP (NP (NNS Results)) (: :))))

root(ROOT-0, Expected-1)
pobj(Expected-1, Results-2)

There/EX are/VBP some/DT posibilities/NNS ./. 

(ROOT (S (NP (EX There)) (VP (VBP are) (NP (DT some) (NNS posibilities))) (. .)))

root(ROOT-0, are-2)
expl(are-2, There-1)
det(posibilities-4, some-3)
nsubj(are-2, posibilities-4)

1/CD Browser/NN can/MD prevent/VB from/IN opening/VBG more/JJR tabs/NNS than/IN it/PRP can/MD show/VB in/IN the/DT tab/NN bar/NN 

(ROOT (S (NP (CD 1) (NN Browser)) (VP (MD can) (VP (VB prevent) (PP (IN from) (S (VP (VBG opening) (NP (JJR more) (NNS tabs)) (SBAR (IN than) (S (NP (PRP it)) (VP (MD can) (VP (VB show) (PP (IN in) (NP (DT the) (NN tab) (NN bar))))))))))))))

root(ROOT-0, prevent-4)
num(Browser-2, 1-1)
nsubj(prevent-4, Browser-2)
aux(prevent-4, can-3)
prepc_from(prevent-4, opening-6)
amod(tabs-8, more-7)
dobj(opening-6, tabs-8)
mark(show-12, than-9)
nsubj(show-12, it-10)
aux(show-12, can-11)
advcl(opening-6, show-12)
det(bar-16, the-14)
nn(bar-16, tab-15)
prep_in(show-12, bar-16)

(/-LRB- worst/JJS solution/NN )/-RRB- ./. 

(ROOT (FRAG (-LRB- -LRB-) (NP (JJS worst) (NN solution)) (-RRB- -RRB-) (. .)))

root(ROOT-0, solution-3)
amod(solution-3, worst-2)

2/CD Tab/NNP bar/NN can/MD be/VB expanded/VBN to/TO more/JJR than/IN one/CD line/NN ./. 

(ROOT (S (NP (CD 2) (NNP Tab) (NN bar)) (VP (MD can) (VP (VB be) (VP (VBN expanded) (PP (TO to) (NP (QP (JJR more) (IN than) (CD one)) (NN line)))))) (. .)))

root(ROOT-0, expanded-6)
num(bar-3, 2-1)
nn(bar-3, Tab-2)
nsubjpass(expanded-6, bar-3)
aux(expanded-6, can-4)
auxpass(expanded-6, be-5)
mwe(than-9, more-8)
quantmod(one-10, than-9)
num(line-11, one-10)
prep_to(expanded-6, line-11)

3/CD All/DT homeless/JJ tabs/NNS plus/CC one/PRP can/MD be/VB hided/VBN and/CC last/JJ one/CD replasing/VBG with/IN pair/NN of/IN 

(ROOT (S (NP (NP (CD 3) (NP (DT All)) (JJ homeless) (NNS tabs)) (PP (CC plus) (NP (PRP one)))) (VP (MD can) (VP (VB be) (VP (VP (VBN hided)) (CC and) (VP (ADVP (JJ last) (NP (CD one))) (VBG replasing) (PP (IN with) (NP (NP (NN pair)) (PP (IN of))))))))))

root(ROOT-0, hided-9)
num(tabs-4, 3-1)
nn(tabs-4, All-2)
amod(tabs-4, homeless-3)
nsubjpass(hided-9, tabs-4)
nsubjpass(replasing-13, tabs-4)
prep(tabs-4, plus-5)
pobj(plus-5, one-6)
aux(hided-9, can-7)
auxpass(hided-9, be-8)
advmod(replasing-13, last-11)
dep(last-11, one-12)
conj_and(hided-9, replasing-13)
prep_with(replasing-13, pair-15)
prep(pair-15, of-16)

navigation/NN buttons/NNS (/-LRB- "/'' </JJR "/'' and/CC "/'' >/JJR "/'' )/-RRB- ./. 

(ROOT (S (NP (NP (NN navigation) (NNS buttons)) (-LRB- -LRB-) ('' '') (NP (JJR <)) ('' '')) (VP (CC and) ('' '') (NP (JJR >)) ('' '')) (-RRB- -RRB-) (. .)))

root(ROOT-0, >-9)
nn(buttons-2, navigation-1)
nsubj(>-9, buttons-2)
dep(buttons-2, <-5)
cc(>-9, and-7)

4/CD Above/IN solutions/NNS can/MD be/VB implementing/VBG together/RB and/CC behaviour/NN of/IN tab/NN bar/NN can/MD be/VB 

(ROOT (NP (S (S (ADVP (NP (CD 4)) (IN Above)) (NP (NNS solutions)) (VP (MD can) (VP (VB be) (VP (VBG implementing) (ADVP (RB together)))))) (CC and) (S (NP (NP (NN behaviour)) (PP (IN of) (NP (NN tab) (NN bar)))) (VP (MD can) (VP (VB be)))))))

root(ROOT-0, implementing-6)
npadvmod(Above-2, 4-1)
advmod(implementing-6, Above-2)
nsubj(implementing-6, solutions-3)
aux(implementing-6, can-4)
aux(implementing-6, be-5)
advmod(implementing-6, together-7)
nsubj(be-14, behaviour-9)
nn(bar-12, tab-11)
prep_of(behaviour-9, bar-12)
aux(be-14, can-13)
conj_and(implementing-6, be-14)

selected/VBN by/IN user/NN ./. 

(ROOT (S (VP (VBN selected) (PP (IN by) (NP (NN user)))) (. .)))

root(ROOT-0, selected-1)
prep_by(selected-1, user-3)

