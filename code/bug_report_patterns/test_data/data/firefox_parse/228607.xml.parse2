User-Agent/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.0/CD ;/: en-US/NN ;/: rv/NN :1.6/CD b/NN )/-RRB- Gecko/20031208/NN Firebird/0/NN .7/CD +/CC Build/VB Identifier/NNP :/: Mozilla/5/NN .0/NN (/-LRB- Windows/NNP ;/: U/NNP ;/: Windows/NNP NT/NNP 5.0/CD ;/: en-US/NN ;/: rv/NN :1.6/CD b/NN )/-RRB- Gecko/20031208/NN Firebird/0/NN .7/CD +/CC 

(ROOT (NP (NP (NNP User-Agent)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NP (NP (NP (NNP Windows)) (: ;) (NP (NNP U))) (: ;) (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.0))) (: ;) (NP (NP (NN en-US)) (: ;) (NP (NN rv)))) (NP (CD :1.6) (NN b))) (-RRB- -RRB-))) (SBAR (S (NP (NP (NN Gecko/20031208) (NN Firebird/0)) (NP (CD .7) (CC +))) (VP (VB Build) (NP (NP (NNP Identifier)) (: :) (NP (NP (NP (NN Mozilla/5) (NN .0)) (PRN (-LRB- -LRB-) (NP (NP (NP (NP (NNP Windows)) (: ;) (NP (NNP U))) (: ;) (NP (NP (NNP Windows) (NNP NT)) (NP (CD 5.0))) (: ;) (NP (NP (NN en-US)) (: ;) (NP (NN rv)))) (NP (CD :1.6) (NN b))) (-RRB- -RRB-)) (NP (NN Gecko/20031208) (NN Firebird/0))) (NP (CD .7) (CC +))))))))))

root(ROOT-0, User-Agent-1)
nn(.0-4, Mozilla/5-3)
dep(User-Agent-1, .0-4)
dep(.0-4, Windows-6)
dep(Windows-6, U-8)
nn(NT-11, Windows-10)
dep(Windows-6, NT-11)
dep(NT-11, 5.0-12)
dep(Windows-6, en-US-14)
dep(en-US-14, rv-16)
num(b-18, :1.6-17)
dep(Windows-6, b-18)
nn(Firebird/0-21, Gecko/20031208-20)
nsubj(Build-24, Firebird/0-21)
dep(Firebird/0-21, .7-22)
cc(.7-22, +-23)
rcmod(.0-4, Build-24)
dobj(Build-24, Identifier-25)
nn(.0-28, Mozilla/5-27)
dep(Identifier-25, .0-28)
dep(.0-28, Windows-30)
dep(Windows-30, U-32)
nn(NT-35, Windows-34)
dep(Windows-30, NT-35)
dep(NT-35, 5.0-36)
dep(Windows-30, en-US-38)
dep(en-US-38, rv-40)
num(b-42, :1.6-41)
dep(Windows-30, b-42)
nn(Firebird/0-45, Gecko/20031208-44)
dep(.0-28, Firebird/0-45)
dep(.0-28, .7-46)
cc(.7-46, +-47)

I/PRP am/VBP using/VBG a/DT P4/NN with/IN HyperThreading/NN turned/VBD on/RP ./. 

(ROOT (S (NP (PRP I)) (VP (VBP am) (VP (VBG using) (SBAR (S (NP (NP (DT a) (NN P4)) (PP (IN with) (NP (NN HyperThreading)))) (VP (VBD turned) (PRT (RP on))))))) (. .)))

root(ROOT-0, using-3)
nsubj(using-3, I-1)
aux(using-3, am-2)
det(P4-5, a-4)
nsubj(turned-8, P4-5)
prep_with(P4-5, HyperThreading-7)
ccomp(using-3, turned-8)
prt(turned-8, on-9)

I/PRP can/MD not/RB find/VB it/PRP now/RB ,/, but/CC I/PRP saw/VBD an/DT entry/NN in/IN a/DT thread/NN on/IN Mozillazine/NNP where/WRB someone/NN suggested/VBD the/DT zombie/NN thread/NN might/MD be/VB caused/VBN by/IN a/DT problem/NN with/IN hyperthreading/NN ./. 

(ROOT (S (S (NP (PRP I)) (VP (MD can) (RB not) (VP (VB find) (NP (PRP it)) (ADVP (RB now))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBD saw) (NP (DT an) (NN entry)) (PP (IN in) (NP (NP (DT a) (NN thread)) (PP (IN on) (NP (NNP Mozillazine))))) (SBAR (WHADVP (WRB where)) (S (NP (NN someone)) (VP (VBD suggested) (SBAR (S (NP (DT the) (NN zombie) (NN thread)) (VP (MD might) (VP (VB be) (VP (VBN caused) (PP (IN by) (NP (NP (DT a) (NN problem)) (PP (IN with) (NP (NN hyperthreading))))))))))))))) (. .)))

root(ROOT-0, find-4)
nsubj(find-4, I-1)
aux(find-4, can-2)
neg(find-4, not-3)
dobj(find-4, it-5)
advmod(find-4, now-6)
nsubj(saw-10, I-9)
conj_but(find-4, saw-10)
det(entry-12, an-11)
dobj(saw-10, entry-12)
det(thread-15, a-14)
prep_in(saw-10, thread-15)
prep_on(thread-15, Mozillazine-17)
advmod(suggested-20, where-18)
nsubj(suggested-20, someone-19)
advcl(saw-10, suggested-20)
det(thread-23, the-21)
nn(thread-23, zombie-22)
nsubjpass(caused-26, thread-23)
aux(caused-26, might-24)
auxpass(caused-26, be-25)
ccomp(suggested-20, caused-26)
det(problem-29, a-28)
agent(caused-26, problem-29)
prep_with(problem-29, hyperthreading-31)

Reproducible/JJ :/: Sometimes/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Sometimes))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Sometimes-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

There/EX is/VBZ no/DT known/JJ reliable/JJ way/NN to/TO reproduce/VB the/DT problem/NN ./. 

(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (DT no) (ADJP (JJ known) (JJ reliable)) (NN way) (S (VP (TO to) (VP (VB reproduce) (NP (DT the) (NN problem))))))) (. .)))

root(ROOT-0, is-2)
expl(is-2, There-1)
neg(way-6, no-3)
amod(reliable-5, known-4)
amod(way-6, reliable-5)
nsubj(is-2, way-6)
aux(reproduce-8, to-7)
vmod(way-6, reproduce-8)
det(problem-10, the-9)
dobj(reproduce-8, problem-10)

It/PRP */SYM seems/VBZ */SYM to/TO be/VB 

(ROOT (FRAG (NP (NP (PRP It)) (SBAR (FRAG (X (SYM *)) (VP (VBZ seems))))) (X (X (SYM *)) (PP (TO to) (VP (VB be))))))

root(ROOT-0, It-1)
dep(seems-3, *-2)
dep(It-1, seems-3)
dep(to-5, *-4)
dep(It-1, to-5)
dep(to-5, be-6)

related/JJ to/TO network/NN load/NN ./. 

(ROOT (FRAG (ADJP (JJ related) (PP (TO to) (NP (NN network) (NN load)))) (. .)))

root(ROOT-0, related-1)
nn(load-4, network-3)
prep_to(related-1, load-4)

The/DT behavior/NN is/VBZ as/IN if/IN a/DT link/NN is/VBZ unable/JJ to/TO resolve/VB or/CC 

(ROOT (S (NP (DT The) (NN behavior)) (VP (VBZ is) (SBAR (IN as) (IN if) (S (NP (DT a) (NN link)) (VP (VBZ is) (ADJP (JJ unable) (S (VP (TO to) (VP (VB resolve) (ADVP (CC or))))))))))))

root(ROOT-0, is-3)
det(behavior-2, The-1)
nsubj(is-3, behavior-2)
mark(unable-9, as-4)
mark(unable-9, if-5)
det(link-7, a-6)
nsubj(unable-9, link-7)
cop(unable-9, is-8)
advcl(is-3, unable-9)
aux(resolve-11, to-10)
xcomp(unable-9, resolve-11)
advmod(resolve-11, or-12)

load/NN correctly/RB (/-LRB- or/CC in/IN time/NN )/-RRB- ./. 

(ROOT (S (NP (NN load)) (VP (ADVP (ADVP (RB correctly)) (PRN (-LRB- -LRB-) (FRAG (CC or) (PP (IN in) (NP (NN time)))) (-RRB- -RRB-)))) (. .)))

root(ROOT-0, correctly-2)
nsubj(correctly-2, load-1)
dep(correctly-2, or-4)
prep_in(or-4, time-6)

However/RB ,/, this/DT exact/JJ same/JJ link/NN and/CC page/NN will/MD load/VB 

(ROOT (S (ADVP (RB However)) (, ,) (NP (NP (DT this) (JJ exact) (JJ same) (NN link)) (CC and) (NP (NN page))) (VP (MD will) (VP (VB load)))))

root(ROOT-0, load-10)
advmod(load-10, However-1)
det(link-6, this-3)
amod(link-6, exact-4)
amod(link-6, same-5)
nsubj(load-10, link-6)
conj_and(link-6, page-8)
nsubj(load-10, page-8)
aux(load-10, will-9)

correctly/RB most/JJS of/IN the/DT time/NN ./. 

(ROOT (NP (NP (ADVP (RB correctly)) (NP (JJS most)) (PP (IN of) (NP (DT the) (NN time)))) (. .)))

root(ROOT-0, most-2)
advmod(most-2, correctly-1)
det(time-5, the-4)
prep_of(most-2, time-5)

Very/RB frustrating/JJ ./. 

(ROOT (FRAG (ADJP (RB Very) (JJ frustrating)) (. .)))

root(ROOT-0, frustrating-2)
advmod(frustrating-2, Very-1)

Actual/JJ Results/NNS :/: 

(ROOT (NP (JJ Actual) (NNS Results) (: :)))

root(ROOT-0, Results-2)
amod(Results-2, Actual-1)

When/WRB the/DT bug/NN does/VBZ happen/VB ,/, the/DT throbber/NN and/CC tab/NN spinner/NN continue/VBP to/TO animate/VB 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT the) (NN bug)) (VP (VBZ does) (VP (VB happen))))) (, ,) (NP (DT the) (NN throbber) (CC and) (NN tab) (NN spinner)) (VP (VBP continue) (S (VP (TO to) (VP (VB animate)))))))

root(ROOT-0, continue-12)
advmod(happen-5, When-1)
det(bug-3, the-2)
nsubj(happen-5, bug-3)
aux(happen-5, does-4)
advcl(continue-12, happen-5)
det(spinner-11, the-7)
nn(spinner-11, throbber-8)
conj_and(throbber-8, tab-10)
nn(spinner-11, tab-10)
nsubj(continue-12, spinner-11)
aux(animate-14, to-13)
xcomp(continue-12, animate-14)

forever/RB ./. 

(ROOT (FRAG (ADVP (RB forever)) (. .)))

root(ROOT-0, forever-1)

Clicking/VBG on/IN any/DT link/NN ,/, selecting/VBG a/DT bookmark/NN ,/, clicking/VBG on/IN STOP/NN or/CC 

(ROOT (S (VP (VP (VBG Clicking) (PP (IN on) (NP (DT any) (NN link))) (, ,) (S (VP (VBG selecting) (NP (DT a) (NN bookmark))))) (, ,) (VP (VBG clicking) (PP (IN on) (NP (NN STOP))) (ADVP (CC or))))))

root(ROOT-0, Clicking-1)
det(link-4, any-3)
prep_on(Clicking-1, link-4)
vmod(Clicking-1, selecting-6)
det(bookmark-8, a-7)
dobj(selecting-6, bookmark-8)
dep(Clicking-1, clicking-10)
prep_on(clicking-10, STOP-12)
advmod(clicking-10, or-13)

RELOAD/NNP ,/, does/VBZ nothing/NN to/TO resolve/VB the/DT problem/NN ./. 

(ROOT (S (NP (NNP RELOAD) (, ,)) (VP (VBZ does) (NP (NN nothing)) (S (VP (TO to) (VP (VB resolve) (NP (DT the) (NN problem)))))) (. .)))

root(ROOT-0, does-3)
nsubj(does-3, RELOAD-1)
dobj(does-3, nothing-4)
aux(resolve-6, to-5)
vmod(does-3, resolve-6)
det(problem-8, the-7)
dobj(resolve-6, problem-8)

No/DT matter/NN what/WDT you/PRP do/VBP (/-LRB- even/RB if/IN you/PRP 

(ROOT (S (NP (DT No) (NP (NP (NN matter)) (SBAR (WHNP (WDT what)) (S (NP (PRP you)) (VP (VBP do)))) (PRN (-LRB- -LRB-) (UCP (ADVP (RB even)) (PP (IN if) (NP (PRP you)))))))))

root(ROOT-0, matter-2)
neg(matter-2, No-1)
dobj(do-5, what-3)
nsubj(do-5, you-4)
rcmod(matter-2, do-5)
dep(matter-2, even-7)
prep_if(even-7, you-9)

have/VB multiple/JJ Firebird/NN windows/NNS open/JJ )/-RRB- will/MD allow/VB you/PRP to/TO browse/VB to/TO any/DT other/JJ page/NN ./. 

(ROOT (S (VP (VB have) (VP (PRN (NP (NP (JJ multiple) (NN Firebird) (NNS windows)) (NP (JJ open))) (-RRB- -RRB-)) (MD will) (VP (VB allow) (S (NP (PRP you)) (VP (TO to) (VP (VB browse) (PP (TO to) (NP (DT any) (JJ other) (NN page))))))))) (. .)))

root(ROOT-0, allow-8)
aux(allow-8, have-1)
amod(windows-4, multiple-2)
nn(windows-4, Firebird-3)
dep(allow-8, windows-4)
dep(windows-4, open-5)
aux(allow-8, will-7)
dobj(allow-8, you-9)
aux(browse-11, to-10)
xcomp(allow-8, browse-11)
det(page-15, any-13)
amod(page-15, other-14)
prep_to(browse-11, page-15)

You/PRP must/MD close/VB Firebird/NNP and/CC then/RB kill/VB the/DT zombie/NN thread/NN before/IN you/PRP can/MD restart/VB 

(ROOT (S (NP (PRP You)) (VP (MD must) (VP (VP (VB close) (NP (NNP Firebird))) (CC and) (VP (ADVP (RB then)) (VB kill) (NP (DT the) (NN zombie) (NN thread)) (SBAR (IN before) (S (NP (PRP you)) (VP (MD can) (VP (VB restart))))))))))

root(ROOT-0, close-3)
nsubj(close-3, You-1)
nsubj(kill-7, You-1)
aux(close-3, must-2)
dobj(close-3, Firebird-4)
advmod(kill-7, then-6)
conj_and(close-3, kill-7)
det(thread-10, the-8)
nn(thread-10, zombie-9)
dobj(kill-7, thread-10)
mark(restart-14, before-11)
nsubj(restart-14, you-12)
aux(restart-14, can-13)
advcl(kill-7, restart-14)

Firebird/NNP ./. 

(ROOT (FRAG (NP (NNP Firebird)) (. .)))

root(ROOT-0, Firebird-1)

Expected/VBN Results/NNS :/: If/IN a/DT link/NN can/MD not/RB be/VB resolved/VBN correct/JJ ,/, an/DT error/NN should/MD be/VB generated/VBN ./. 

(ROOT (S (S (VP (VBN Expected) (NP (NNS Results)))) (: :) (S (SBAR (IN If) (S (NP (DT a) (NN link)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN resolved) (S (ADJP (JJ correct)))))))) (, ,) (NP (DT an) (NN error)) (VP (MD should) (VP (VB be) (VP (VBN generated))))) (. .)))

root(ROOT-0, Expected-1)
dobj(Expected-1, Results-2)
mark(resolved-10, If-4)
det(link-6, a-5)
nsubjpass(resolved-10, link-6)
aux(resolved-10, can-7)
neg(resolved-10, not-8)
auxpass(resolved-10, be-9)
advcl(generated-17, resolved-10)
xcomp(resolved-10, correct-11)
det(error-14, an-13)
nsubjpass(generated-17, error-14)
aux(generated-17, should-15)
auxpass(generated-17, be-16)
parataxis(Expected-1, generated-17)

If/IN a/DT link/NN can/MD not/RB be/VB resolved/VBN in/IN time/NN ,/, an/DT error/NN should/MD be/VB generated/VBN ./. 

(ROOT (S (SBAR (IN If) (S (NP (DT a) (NN link)) (VP (MD can) (RB not) (VP (VB be) (VP (VBN resolved) (PP (IN in) (NP (NN time)))))))) (, ,) (NP (DT an) (NN error)) (VP (MD should) (VP (VB be) (VP (VBN generated)))) (. .)))

root(ROOT-0, generated-15)
mark(resolved-7, If-1)
det(link-3, a-2)
nsubjpass(resolved-7, link-3)
aux(resolved-7, can-4)
neg(resolved-7, not-5)
auxpass(resolved-7, be-6)
advcl(generated-15, resolved-7)
prep_in(resolved-7, time-9)
det(error-12, an-11)
nsubjpass(generated-15, error-12)
aux(generated-15, should-13)
auxpass(generated-15, be-14)

Regardless/RB of/IN cause/NN ,/, the/DT user/NN should/MD be/VB able/JJ to/TO click/VB on/IN any/DT other/JJ link/NN ,/, select/VBP a/DT bookmard/NN ,/, or/CC RELOAD/VB the/DT page/NN successfully/RB ./. 

(ROOT (S (ADVP (RB Regardless) (PP (IN of) (NP (NN cause)))) (, ,) (NP (DT the) (NN user)) (VP (MD should) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VP (VB click) (PP (IN on) (NP (DT any) (JJ other) (NN link)))) (, ,) (VP (VBP select) (NP (DT a) (NN bookmard))) (, ,) (CC or) (VP (VB RELOAD) (NP (DT the) (NN page)) (ADVP (RB successfully))))))))) (. .)))

root(ROOT-0, able-9)
prep_regardless_of(able-9, cause-3)
det(user-6, the-5)
nsubj(able-9, user-6)
aux(able-9, should-7)
cop(able-9, be-8)
aux(click-11, to-10)
xcomp(able-9, click-11)
det(link-15, any-13)
amod(link-15, other-14)
prep_on(click-11, link-15)
xcomp(able-9, select-17)
conj_or(click-11, select-17)
det(bookmard-19, a-18)
dobj(select-17, bookmard-19)
xcomp(able-9, RELOAD-22)
conj_or(click-11, RELOAD-22)
det(page-24, the-23)
dobj(RELOAD-22, page-24)
advmod(RELOAD-22, successfully-25)

When/WRB Firebird/NNP is/VBZ closed/VBN ,/, there/EX should/MD be/VB no/DT remaining/VBG zombie/NN threads/NNS ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NNP Firebird)) (VP (VBZ is) (VP (VBN closed))))) (, ,) (NP (EX there)) (VP (MD should) (VP (VB be) (NP (DT no) (VBG remaining) (NN zombie) (NNS threads)))) (. .)))

root(ROOT-0, threads-12)
advmod(closed-4, When-1)
nsubjpass(closed-4, Firebird-2)
auxpass(closed-4, is-3)
advcl(threads-12, closed-4)
expl(threads-12, there-6)
aux(threads-12, should-7)
cop(threads-12, be-8)
neg(threads-12, no-9)
amod(threads-12, remaining-10)
nn(threads-12, zombie-11)

At/IN times/NNS ,/, the/DT problem/NN happens/VBZ more/RBR frequently/RB ./. 

(ROOT (S (PP (IN At) (NP (NNS times))) (, ,) (NP (DT the) (NN problem)) (VP (VBZ happens) (ADVP (RBR more) (RB frequently))) (. .)))

root(ROOT-0, happens-6)
prep_at(happens-6, times-2)
det(problem-5, the-4)
nsubj(happens-6, problem-5)
advmod(frequently-8, more-7)
advmod(happens-6, frequently-8)

It/PRP is/VBZ possible/JJ this/DT is/VBZ due/JJ to/TO network/NN load/NN on/IN my/PRP$ PC/NN ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ is) (ADJP (JJ possible) (SBAR (S (NP (DT this)) (VP (VBZ is) (ADJP (JJ due) (PP (TO to) (NP (NP (NN network) (NN load)) (PP (IN on) (NP (PRP$ my) (NN PC))))))))))) (. .)))

root(ROOT-0, possible-3)
nsubj(possible-3, It-1)
cop(possible-3, is-2)
nsubj(due-6, this-4)
cop(due-6, is-5)
ccomp(possible-3, due-6)
nn(load-9, network-8)
prep_to(due-6, load-9)
poss(PC-12, my-11)
prep_on(load-9, PC-12)

The/DT problem/NN eventually/RB happens/VBZ EVERY/NNP TIME/NNP I/PRP try/VBP to/TO use/VB Firebird/NNP ./. 

(ROOT (S (NP (DT The) (NN problem)) (ADVP (RB eventually)) (VP (VBZ happens) (NP (NP (NNP EVERY) (NNP TIME)) (SBAR (S (NP (PRP I)) (VP (VBP try) (S (VP (TO to) (VP (VB use) (NP (NNP Firebird)))))))))) (. .)))

root(ROOT-0, happens-4)
det(problem-2, The-1)
nsubj(happens-4, problem-2)
advmod(happens-4, eventually-3)
nn(TIME-6, EVERY-5)
dobj(happens-4, TIME-6)
nsubj(try-8, I-7)
rcmod(TIME-6, try-8)
aux(use-10, to-9)
xcomp(try-8, use-10)
dobj(use-10, Firebird-11)

I/PRP have/VBP tried/VBN many/JJ different/JJ versions/NNS (/-LRB- both/CC standard/JJ and/CC optimized/VBN )/-RRB- and/CC the/DT problem/NN remains/VBZ ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP have) (VP (VBN tried) (NP (JJ many) (JJ different) (NNS versions))))) (PRN (-LRB- -LRB-) (CC both) (S (NP (JJ standard)) (VP (CC and) (VP (VBN optimized)))) (-RRB- -RRB-)) (CC and) (S (NP (DT the) (NN problem)) (VP (VBZ remains))) (. .)))

root(ROOT-0, tried-3)
nsubj(tried-3, I-1)
aux(tried-3, have-2)
amod(versions-6, many-4)
amod(versions-6, different-5)
dobj(tried-3, versions-6)
dep(optimized-11, both-8)
nsubj(optimized-11, standard-9)
cc(optimized-11, and-10)
dep(tried-3, optimized-11)
det(problem-15, the-14)
nsubj(remains-16, problem-15)
conj_and(tried-3, remains-16)

Could/MD this/DT be/VB related/VBN to/TO P4/NN HyperThreading/NN ???/CD 

(ROOT (SINV (MD Could) (NP (DT this)) (VP (VB be) (VP (VBN related) (PP (TO to) (NP (NN P4) (NN HyperThreading) (CD ???)))))))

root(ROOT-0, related-4)
aux(related-4, Could-1)
nsubjpass(related-4, this-2)
auxpass(related-4, be-3)
nn(HyperThreading-7, P4-6)
prep_to(related-4, HyperThreading-7)
num(HyperThreading-7, ???-8)

(/-LRB- No/DT other/JJ application/NN has/VBZ this/DT problem/NN ./. )/-RRB- 

(ROOT (S (-LRB- -LRB-) (NP (DT No) (JJ other) (NN application)) (VP (VBZ has) (NP (DT this) (NN problem))) (. .) (-RRB- -RRB-)))

root(ROOT-0, has-5)
neg(application-4, No-2)
amod(application-4, other-3)
nsubj(has-5, application-4)
det(problem-7, this-6)
dobj(has-5, problem-7)

