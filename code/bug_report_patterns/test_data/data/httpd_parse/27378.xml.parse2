Why/WRB is/VBZ the/DT open_logs/NNS hook/NN run/NN before/IN the/DT post_config/JJ hook/NN ?/. 

(ROOT (SBARQ (WHADVP (WRB Why)) (SQ (VBZ is) (NP (NP (DT the) (NNS open_logs) (NN hook) (NN run)) (PP (IN before) (NP (DT the) (JJ post_config) (NN hook))))) (. ?)))

root(ROOT-0, is-2)
advmod(is-2, Why-1)
det(run-6, the-3)
nn(run-6, open_logs-4)
nn(run-6, hook-5)
nsubj(is-2, run-6)
det(hook-10, the-8)
amod(hook-10, post_config-9)
prep_before(run-6, hook-10)

I/PRP am/VBP working/VBG on/IN the/DT mod_log_sql/NN module/NN (/-LRB- new/JJ maintainer/NN )/-RRB- ,/, and/CC have/VBP some/DT code/NN in/IN the/DT post_config/JJ hook/NN to/TO assign/VB global/JJ defaults/NNS (/-LRB- i/FW have/VBP a/DT global/JJ per/IN module/NN config/NN structure/NN as/RB well/RB as/IN per/IN server/NN configuration/NN )/-RRB- if/IN they/PRP have/VBP not/RB been/VBN set/VBN by/IN a/DT configuration/NN directive/NN that/WDT need/VBP to/TO be/VB setup/NN BEFORE/IN the/DT initial/JJ connection/NN to/TO the/DT database/NN called/VBN in/IN open_logs/NNS ./. 

(ROOT (S (NP (PRP I)) (VP (VP (VBP am) (VP (VBG working) (PP (IN on) (NP (NP (DT the) (NN mod_log_sql) (NN module)) (PRN (-LRB- -LRB-) (NP (JJ new) (NN maintainer)) (-RRB- -RRB-)))))) (, ,) (CC and) (VP (VBP have) (NP (NP (DT some) (NN code)) (PP (IN in) (NP (DT the) (JJ post_config) (NN hook) (S (VP (TO to) (VP (VB assign) (NP (JJ global) (NNS defaults)) (PRN (-LRB- -LRB-) (S (NP (FW i)) (VP (VBP have) (NP (DT a) (JJ global)) (PP (PP (IN per) (NP (NN module) (NN config) (NN structure))) (CONJP (RB as) (RB well) (IN as)) (PP (IN per) (NP (NN server) (NN configuration)))))) (-RRB- -RRB-)) (SBAR (IN if) (S (NP (PRP they)) (VP (VBP have) (RB not) (VP (VBN been) (VP (VBN set) (PP (IN by) (NP (NP (DT a) (NN configuration) (NN directive)) (SBAR (WHNP (WDT that)) (S (VP (VBP need) (S (VP (TO to) (VP (VB be) (NP (NN setup)) (PP (IN BEFORE) (NP (DT the) (JJ initial) (NN connection))) (PP (TO to) (NP (NP (DT the) (NN database)) (VP (VBN called) (PP (IN in) (NP (NNS open_logs))))))))))))))))))))))))))) (. .)))

root(ROOT-0, working-3)
nsubj(working-3, I-1)
nsubj(have-14, I-1)
aux(working-3, am-2)
det(module-7, the-5)
nn(module-7, mod_log_sql-6)
prep_on(working-3, module-7)
amod(maintainer-10, new-9)
appos(module-7, maintainer-10)
conj_and(working-3, have-14)
det(code-16, some-15)
dobj(have-14, code-16)
det(hook-20, the-18)
amod(hook-20, post_config-19)
prep_in(code-16, hook-20)
aux(assign-22, to-21)
vmod(hook-20, assign-22)
amod(defaults-24, global-23)
dobj(assign-22, defaults-24)
nsubj(have-27, i-26)
parataxis(assign-22, have-27)
det(global-29, a-28)
dobj(have-27, global-29)
nn(structure-33, module-31)
nn(structure-33, config-32)
prep_per(have-27, structure-33)
nn(configuration-39, server-38)
prep_per(have-27, configuration-39)
conj_and(structure-33, configuration-39)
mark(set-46, if-41)
nsubjpass(set-46, they-42)
aux(set-46, have-43)
neg(set-46, not-44)
auxpass(set-46, been-45)
advcl(assign-22, set-46)
det(directive-50, a-48)
nn(directive-50, configuration-49)
agent(set-46, directive-50)
nsubj(need-52, that-51)
rcmod(directive-50, need-52)
aux(setup-55, to-53)
cop(setup-55, be-54)
xcomp(need-52, setup-55)
det(connection-59, the-57)
amod(connection-59, initial-58)
prep_before(setup-55, connection-59)
det(database-62, the-61)
prep_to(setup-55, database-62)
vmod(database-62, called-63)
prep_in(called-63, open_logs-65)

However/RB after/IN placing/VBG many/JJ APLOG_DEBUG/NN and/CC step/NN by/IN step/NN gdb/NN debugging/NN ,/, I/PRP find/VBP that/IN post_config/NN is/VBZ called/VBN after/IN open_logs/NNS ./. 

(ROOT (S (PP (ADVP (RB However)) (IN after) (S (VP (VBG placing) (NP (JJ many) (NN APLOG_DEBUG) (CC and) (NN step)) (PP (IN by) (NP (NN step) (NN gdb) (NN debugging)))))) (, ,) (NP (PRP I)) (VP (VBP find) (SBAR (IN that) (S (NP (NN post_config)) (VP (VBZ is) (VP (VBN called) (PP (IN after) (NP (NNS open_logs)))))))) (. .)))

root(ROOT-0, find-14)
advmod(find-14, However-1)
prepc_after(find-14, placing-3)
amod(APLOG_DEBUG-5, many-4)
dobj(placing-3, APLOG_DEBUG-5)
dobj(placing-3, step-7)
conj_and(APLOG_DEBUG-5, step-7)
nn(debugging-11, step-9)
nn(debugging-11, gdb-10)
prep_by(placing-3, debugging-11)
nsubj(find-14, I-13)
mark(called-18, that-15)
nsubjpass(called-18, post_config-16)
auxpass(called-18, is-17)
ccomp(find-14, called-18)
prep_after(called-18, open_logs-20)

./. 

(ROOT (NP (. .)))


I/PRP 'm/VBP thinking/VBG that/IN this/DT is/VBZ a/DT bug/NN as/IN it/PRP makes/VBZ much/RB more/JJR sense/NN to/TO call/VB post_config/NN before/IN open_logs/NNS ./. 

(ROOT (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG thinking) (SBAR (IN that) (S (NP (DT this)) (VP (VBZ is) (NP (DT a) (NN bug)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ makes) (NP (ADJP (RB much) (JJR more)) (NN sense) (S (VP (TO to) (VP (VB call) (NP (NN post_config)) (PP (IN before) (NP (NNS open_logs))))))))))))))) (. .)))

root(ROOT-0, thinking-3)
nsubj(thinking-3, I-1)
aux(thinking-3, 'm-2)
mark(bug-8, that-4)
nsubj(bug-8, this-5)
cop(bug-8, is-6)
det(bug-8, a-7)
ccomp(thinking-3, bug-8)
mark(makes-11, as-9)
nsubj(makes-11, it-10)
advcl(bug-8, makes-11)
advmod(more-13, much-12)
amod(sense-14, more-13)
dobj(makes-11, sense-14)
aux(call-16, to-15)
vmod(sense-14, call-16)
dobj(call-16, post_config-17)
prep_before(call-16, open_logs-19)

