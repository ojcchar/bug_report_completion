When/WRB you/PRP use/VBP RewriteOptions/NNPS Inherit/VB inside/IN a/DT VirtualHost/NNP or/CC Directory/NNP which/WDT also/RB has/VBZ local/JJ rules/NNS ,/, the/DT global/JJ rules/NNS are/VBP added/VBN at/IN the/DT end/NN of/IN the/DT local/JJ rules/NNS list/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP you)) (VP (VBP use) (S (NP (NNPS RewriteOptions)) (VP (VB Inherit) (PP (IN inside) (NP (DT a) (NNP VirtualHost) (CC or) (NNP Directory))) (SBAR (WHNP (WDT which)) (S (ADVP (RB also)) (VP (VBZ has) (NP (JJ local) (NNS rules)))))))))) (, ,) (NP (DT the) (JJ global) (NNS rules)) (VP (VBP are) (VP (VBN added) (PP (IN at) (NP (NP (DT the) (NN end)) (PP (IN of) (NP (DT the) (JJ local) (NNS rules) (NN list))))))) (. .)))

root(ROOT-0, added-21)
advmod(use-3, When-1)
nsubj(use-3, you-2)
advcl(added-21, use-3)
nsubj(Inherit-5, RewriteOptions-4)
ccomp(use-3, Inherit-5)
det(VirtualHost-8, a-7)
prep_inside(Inherit-5, VirtualHost-8)
prep_inside(Inherit-5, Directory-10)
conj_or(VirtualHost-8, Directory-10)
nsubj(has-13, which-11)
advmod(has-13, also-12)
ccomp(Inherit-5, has-13)
amod(rules-15, local-14)
dobj(has-13, rules-15)
det(rules-19, the-17)
amod(rules-19, global-18)
nsubjpass(added-21, rules-19)
auxpass(added-21, are-20)
det(end-24, the-23)
prep_at(added-21, end-24)
det(list-29, the-26)
amod(list-29, local-27)
nn(list-29, rules-28)
prep_of(end-24, list-29)

As/IN a/DT result/NN ,/, local/JJ rules/NNS are/VBP first/JJ applied/VBN ,/, and/CC then/RB ,/, global/JJ rules/NNS are/VBP applied/VBN after/IN local/JJ rules/NNS ./. 

(ROOT (S (PP (IN As) (NP (DT a) (NN result))) (, ,) (S (NP (JJ local) (NNS rules)) (VP (VBP are) (ADVP (JJ first)) (VP (VBN applied)))) (, ,) (CC and) (S (ADVP (RB then)) (, ,) (NP (JJ global) (NNS rules)) (VP (VBP are) (VP (VBN applied) (PP (IN after) (NP (JJ local) (NNS rules)))))) (. .)))

root(ROOT-0, applied-9)
det(result-3, a-2)
prep_as(applied-9, result-3)
amod(rules-6, local-5)
nsubjpass(applied-9, rules-6)
auxpass(applied-9, are-7)
advmod(applied-9, first-8)
advmod(applied-17, then-12)
amod(rules-15, global-14)
nsubjpass(applied-17, rules-15)
auxpass(applied-17, are-16)
conj_and(applied-9, applied-17)
amod(rules-20, local-19)
prep_after(applied-17, rules-20)

Since/IN rules/NNS ordering/VBG in/IN important/JJ ,/, you/PRP may/MD want/VB to/TO apply/VB global/JJ rules/NNS first/RB ,/, and/CC then/RB local/JJ rules/NNS ./. 

(ROOT (S (PP (IN Since) (NP (NP (NNS rules)) (VP (VBG ordering) (PP (IN in) (ADJP (JJ important)))))) (, ,) (NP (PRP you)) (VP (MD may) (VP (VB want) (S (VP (TO to) (VP (VP (VB apply) (NP (JJ global) (NNS rules)) (ADVP (RB first))) (, ,) (FRAG (CC and) (RB then) (NP (JJ local) (NNS rules)))))))) (. .)))

root(ROOT-0, want-9)
prep_since(want-9, rules-2)
vmod(rules-2, ordering-3)
prep_in(ordering-3, important-5)
nsubj(want-9, you-7)
aux(want-9, may-8)
aux(apply-11, to-10)
xcomp(want-9, apply-11)
amod(rules-13, global-12)
dobj(apply-11, rules-13)
advmod(apply-11, first-14)
cc(then-17, and-16)
dep(apply-11, then-17)
amod(rules-19, local-18)
dep(then-17, rules-19)

I/PRP propose/VBP a/DT patch/NN to/TO fullfill/VB this/DT functionality/NN :/: 

(ROOT (S (NP (PRP I)) (VP (VBP propose) (S (NP (DT a) (NN patch)) (VP (TO to) (VP (VB fullfill) (NP (DT this) (NN functionality)))))) (: :)))

root(ROOT-0, propose-2)
nsubj(propose-2, I-1)
det(patch-4, a-3)
dobj(propose-2, patch-4)
aux(fullfill-6, to-5)
xcomp(propose-2, fullfill-6)
det(functionality-8, this-7)
dobj(fullfill-6, functionality-8)

-/: I/PRP added/VBD a/DT new/JJ parameter/NN "/`` Before/IN "/'' to/TO the/DT RewriteOptions/NNPS directive/NN ./. 

(ROOT (S (: -) (NP (PRP I)) (VP (VBD added) (NP (DT a) (JJ new) (NN parameter)) (`` ``) (PP (IN Before)) ('' '') (PP (TO to) (NP (DT the) (NNPS RewriteOptions) (NN directive)))) (. .)))

root(ROOT-0, added-3)
nsubj(added-3, I-2)
det(parameter-6, a-4)
amod(parameter-6, new-5)
dobj(added-3, parameter-6)
prep(added-3, Before-8)
det(directive-13, the-11)
nn(directive-13, RewriteOptions-12)
prep_to(added-3, directive-13)

You/PRP can/MD write/VB the/DT 

(ROOT (S (NP (PRP You)) (VP (MD can) (VP (VB write) (NP (DT the))))))

root(ROOT-0, write-3)
nsubj(write-3, You-1)
aux(write-3, can-2)
dobj(write-3, the-4)

following/VBG in/IN a/DT VirtualHost/NNP or/CC Directory/NNP block/NN in/IN httpd.conf/NN :/: 

(ROOT (S (VP (VBG following) (PP (IN in) (NP (NP (DT a) (NNP VirtualHost) (CC or) (NNP Directory) (NN block)) (PP (IN in) (NP (NN httpd.conf)))))) (: :)))

root(ROOT-0, following-1)
det(block-7, a-3)
nn(block-7, VirtualHost-4)
conj_or(VirtualHost-4, Directory-6)
nn(block-7, Directory-6)
prep_in(following-1, block-7)
prep_in(block-7, httpd.conf-9)

RewriteOptions/NNP Inherit/NNP Before/IN 

(ROOT (FRAG (NP (NNP RewriteOptions) (NNP Inherit)) (PP (IN Before))))

root(ROOT-0, Inherit-2)
nn(Inherit-2, RewriteOptions-1)
prep(Inherit-2, Before-3)

which/WDT means/VBZ that/IN global/JJ rules/NNS will/MD be/VB applied/VBN before/IN local/JJ rules/NNS ./. 

(ROOT (S (NP (WDT which)) (VP (VBZ means) (SBAR (IN that) (S (NP (JJ global) (NNS rules)) (VP (MD will) (VP (VB be) (VP (VBN applied) (PP (IN before) (NP (JJ local) (NNS rules))))))))) (. .)))

root(ROOT-0, means-2)
nsubj(means-2, which-1)
mark(applied-8, that-3)
amod(rules-5, global-4)
nsubjpass(applied-8, rules-5)
aux(applied-8, will-6)
auxpass(applied-8, be-7)
ccomp(means-2, applied-8)
amod(rules-11, local-10)
prep_before(applied-8, rules-11)

The/DT default/NN will/MD still/RB be/VB after/RB ./. 

(ROOT (S (NP (DT The) (NN default)) (VP (MD will) (ADVP (RB still)) (VP (VB be) (ADVP (RB after)))) (. .)))

root(ROOT-0, be-5)
det(default-2, The-1)
nsubj(be-5, default-2)
aux(be-5, will-3)
advmod(be-5, still-4)
advmod(be-5, after-6)

This/DT patch/NN modifies/VBZ modules/mappers/mod/NN _/CD rewrite.h/NN as/IN follows/VBZ :/: 

(ROOT (S (NP (DT This) (NN patch)) (VP (VBZ modifies) (NP (NN modules/mappers/mod) (CD _) (NN rewrite.h)) (SBAR (IN as) (S (VP (VBZ follows))))) (: :)))

root(ROOT-0, modifies-3)
det(patch-2, This-1)
nsubj(modifies-3, patch-2)
nn(rewrite.h-6, modules/mappers/mod-4)
num(rewrite.h-6, _-5)
dobj(modifies-3, rewrite.h-6)
mark(follows-8, as-7)
advcl(modifies-3, follows-8)

#/# diff/SYM -/: c/NN mod_rewrite/NN ./. 

(ROOT (NP (NP (# #) (SYM diff)) (: -) (NP (NN c) (NN mod_rewrite)) (. .)))

root(ROOT-0, #-1)
dep(#-1, diff-2)
nn(mod_rewrite-5, c-4)
dep(#-1, mod_rewrite-5)

h.old/JJ mod_rewrite/NN ./. 

(ROOT (NP (JJ h.old) (NN mod_rewrite) (. .)))

root(ROOT-0, mod_rewrite-2)
amod(mod_rewrite-2, h.old-1)

h/NN 

(ROOT (NP (NN h)))

root(ROOT-0, h-1)

***/NN mod_rewrite/NN ./. 

(ROOT (NP (NP (NN ***)) (NP (NN mod_rewrite)) (. .)))

root(ROOT-0, ***-1)
dep(***-1, mod_rewrite-2)

h.old/JJ Fri/NNP Feb/NNP 4/CD 21:21:18/CD 2005/CD 

(ROOT (NP (NP (JJ h.old) (NNP Fri) (NNP Feb)) (NP (NP (QP (CD 4) (CD 21:21:18))) (NP (CD 2005)))))

root(ROOT-0, Feb-3)
amod(Feb-3, h.old-1)
nn(Feb-3, Fri-2)
number(21:21:18-5, 4-4)
dep(Feb-3, 21:21:18-5)
dep(21:21:18-5, 2005-6)

--/: mod_rewrite/NN ./. 

(ROOT (NP (: --) (NN mod_rewrite) (. .)))

root(ROOT-0, mod_rewrite-2)

h/NN Fri/NNP Apr/NNP 14/CD 10:52:34/CD 2006/CD 

(ROOT (NP (NP (NN h) (NNP Fri) (NNP Apr)) (NP (NP (QP (CD 14) (CD 10:52:34))) (NP (CD 2006)))))

root(ROOT-0, Apr-3)
nn(Apr-3, h-1)
nn(Apr-3, Fri-2)
number(10:52:34-5, 14-4)
dep(Apr-3, 10:52:34-5)
dep(10:52:34-5, 2006-6)

***************/NN 

(ROOT (NP (NN ***************)))

root(ROOT-0, ***************-1)

***/NN 138,143/CD ****/CD 

(ROOT (FRAG (NP (NN ***)) (NP (CD 138,143) (CD ****))))

root(ROOT-0, ***-1)
num(****-3, 138,143-2)
dep(***-1, ****-3)

--/: 138,144/CD --/: 

(ROOT (PRN (: --) (NP (CD 138,144)) (: --)))

root(ROOT-0, 138,144-2)

#define/NN OPTION_NONE/NN 1/CD </JJR </JJR 0/CD #define/NN OPTION_INHERIT/NN 1/CD </JJR </JJR 1/CD +/CC #define/CD OPTION_INHERIT_BEFORE/NN 1/CD </JJR </JJR 2/CD 

(ROOT (NP (NP (NN #define) (NN OPTION_NONE)) (NP (NP (NP (ADJP (CD 1) (JJR <)) (JJR <)) (ADJP (ADJP (NP (NP (CD 0) (NN #define) (NN OPTION_INHERIT)) (ADJP (CD 1) (JJR <))) (JJR <)) (NP (CD 1)))) (CC +) (NP (NP (CD #define) (NN OPTION_INHERIT_BEFORE)) (NP (ADJP (CD 1) (JJR <)) (JJR <)))) (NP (CD 2))))

root(ROOT-0, OPTION_NONE-2)
nn(OPTION_NONE-2, #define-1)
number(<-4, 1-3)
amod(<-5, <-4)
dep(OPTION_NONE-2, <-5)
num(OPTION_INHERIT-8, 0-6)
nn(OPTION_INHERIT-8, #define-7)
npadvmod(<-11, OPTION_INHERIT-8)
number(<-10, 1-9)
amod(OPTION_INHERIT-8, <-10)
amod(<-5, <-11)
dep(<-11, 1-12)
num(OPTION_INHERIT_BEFORE-15, #define-14)
dep(OPTION_NONE-2, OPTION_INHERIT_BEFORE-15)
conj_+(<-5, OPTION_INHERIT_BEFORE-15)
number(<-17, 1-16)
amod(<-18, <-17)
dep(OPTION_INHERIT_BEFORE-15, <-18)
dep(OPTION_NONE-2, 2-19)

#define/NN CACHEMODE_TS/NN 1/CD </JJR </JJR 0/CD #define/NN CACHEMODE_TTL/NN 1/CD </JJR </JJR 1/CD 

(ROOT (NP (NP (NN #define) (NN CACHEMODE_TS)) (NP (NP (ADJP (CD 1) (JJR <)) (JJR <)) (ADJP (NP (NP (CD 0) (NN #define) (NN CACHEMODE_TTL)) (ADJP (CD 1) (JJR <))) (JJR <))) (NP (CD 1))))

root(ROOT-0, CACHEMODE_TS-2)
nn(CACHEMODE_TS-2, #define-1)
number(<-4, 1-3)
amod(<-5, <-4)
dep(CACHEMODE_TS-2, <-5)
num(CACHEMODE_TTL-8, 0-6)
nn(CACHEMODE_TTL-8, #define-7)
npadvmod(<-11, CACHEMODE_TTL-8)
number(<-10, 1-9)
amod(CACHEMODE_TTL-8, <-10)
amod(<-5, <-11)
dep(CACHEMODE_TS-2, 1-12)

And/CC modifies/VBZ modules/mappers/mod/NN _/CD rewrite.c/NN as/IN follows/VBZ (/-LRB- based/VBN on/IN 2.0.55/CD )/-RRB- :/: 

(ROOT (FRAG (CC And) (S (VP (VBZ modifies) (NP (NN modules/mappers/mod) (CD _) (NN rewrite.c)) (SBAR (IN as) (S (VP (VP (VBZ follows)) (PRN (-LRB- -LRB-) (PP (VBN based) (PP (IN on) (NP (CD 2.0.55)))) (-RRB- -RRB-))) (: :)))))))

root(ROOT-0, modifies-2)
cc(modifies-2, And-1)
nn(rewrite.c-5, modules/mappers/mod-3)
num(rewrite.c-5, _-4)
dobj(modifies-2, rewrite.c-5)
mark(follows-7, as-6)
advcl(modifies-2, follows-7)
prepc_based_on(follows-7, on-10)
pobj(follows-7, 2.0.55-11)

#/# diff/SYM -/: c/NN mod_rewrite/NN ./. 

(ROOT (NP (NP (# #) (SYM diff)) (: -) (NP (NN c) (NN mod_rewrite)) (. .)))

root(ROOT-0, #-1)
dep(#-1, diff-2)
nn(mod_rewrite-5, c-4)
dep(#-1, mod_rewrite-5)

c.old/JJ mod_rewrite/NN ./. 

(ROOT (NP (JJ c.old) (NN mod_rewrite) (. .)))

root(ROOT-0, mod_rewrite-2)
amod(mod_rewrite-2, c.old-1)

c/NN 

(ROOT (NP (NN c)))

root(ROOT-0, c-1)

***/NN mod_rewrite/NN ./. 

(ROOT (NP (NP (NN ***)) (NP (NN mod_rewrite)) (. .)))

root(ROOT-0, ***-1)
dep(***-1, mod_rewrite-2)

c.old/JJ Wed/VBD May/NNP 25/CD 20:05:05/CD 2005/CD 

(ROOT (SINV (ADJP (JJ c.old)) (VP (VBD Wed) (NP-TMP (NNP May) (CD 25))) (NP (NP (CD 20:05:05)) (NP (CD 2005)))))

root(ROOT-0, Wed-2)
dep(Wed-2, c.old-1)
tmod(Wed-2, May-3)
num(May-3, 25-4)
nsubj(Wed-2, 20:05:05-5)
dep(20:05:05-5, 2005-6)

--/: mod_rewrite/NN ./. 

(ROOT (NP (: --) (NN mod_rewrite) (. .)))

root(ROOT-0, mod_rewrite-2)

c/NN Fri/NNP Apr/NNP 14/CD 10:52:39/CD 2006/CD 

(ROOT (NP (NP (NN c) (NNP Fri) (NNP Apr)) (NP (NP (QP (CD 14) (CD 10:52:39))) (NP (CD 2006)))))

root(ROOT-0, Apr-3)
nn(Apr-3, c-1)
nn(Apr-3, Fri-2)
number(10:52:39-5, 14-4)
dep(Apr-3, 10:52:39-5)
dep(10:52:39-5, 2006-6)

***************/NN 

(ROOT (NP (NN ***************)))

root(ROOT-0, ***************-1)

***/NN 212,223/CD ****/CD 

(ROOT (FRAG (NP (NN ***)) (NP (CD 212,223) (CD ****))))

root(ROOT-0, ***-1)
num(****-3, 212,223-2)
dep(***-1, ****-3)

a/DT -/: >/JJR rewritelogfp/NN =/JJ overrides/NNS -/: >/JJR rewritelogfp/NN !/. 

(ROOT (FRAG (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewritelogfp)) (NP (JJ =) (NNS overrides))) (: -) (NP (JJR >) (NN rewritelogfp))) (. !)))

root(ROOT-0, a-1)
amod(rewritelogfp-4, >-3)
dep(a-1, rewritelogfp-4)
amod(overrides-6, =-5)
dep(rewritelogfp-4, overrides-6)
amod(rewritelogfp-9, >-8)
dep(a-1, rewritelogfp-9)

=/JJ NULL/NN 

(ROOT (NP (JJ =) (NN NULL)))

root(ROOT-0, NULL-2)
amod(NULL-2, =-1)

?/. 

(ROOT (NP (. ?)))


overrides/VBZ -/: >/JJR rewritelogfp/NN 

(ROOT (FRAG (VP (VP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NN rewritelogfp))))))

root(ROOT-0, overrides-1)
dobj(overrides-1, >-3)
dep(>-3, rewritelogfp-4)

:/: base/NN -/: >/JJR rewritelogfp/NN ;/: 

(ROOT (PRN (: :) (NP (NP (NN base)) (: -) (NP (JJR >) (NN rewritelogfp))) (: ;)))

root(ROOT-0, base-2)
amod(rewritelogfp-5, >-4)
dep(base-2, rewritelogfp-5)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewritemaps/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewritemaps/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewritemaps)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewritemaps))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewritemaps-4, >-3)
dep(a-1, rewritemaps-4)
amod(apr_array_append-6, =-5)
dep(rewritemaps-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewritemaps-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewritemaps/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewritemaps))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewritemaps-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriteconds/NNS =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriteconds/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NNS rewriteconds)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriteconds-4, >-3)
dep(a-1, rewriteconds-4)
amod(apr_array_append-6, =-5)
dep(rewriteconds-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriteconds-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriteconds/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriteconds-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriterules/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriterules/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewriterules)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriterules-4, >-3)
dep(a-1, rewriterules-4)
amod(apr_array_append-6, =-5)
dep(rewriterules-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriterules-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriterules/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriterules-4)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


else/RB {/-LRB- 

(ROOT (FRAG (RB else) (ADVP (-LRB- -LCB-))))

root(ROOT-0, else-1)

//: */SYM 

(ROOT (VP (: /) (X (SYM *))))

root(ROOT-0, *-2)
punct(*-2, /-1)

--/: 212,233/CD --/: 

(ROOT (PRN (: --) (NP (CD 212,233)) (: --)))

root(ROOT-0, 212,233-2)

a/DT -/: >/JJR rewritelogfp/NN =/JJ overrides/NNS -/: >/JJR rewritelogfp/NN !/. 

(ROOT (FRAG (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewritelogfp)) (NP (JJ =) (NNS overrides))) (: -) (NP (JJR >) (NN rewritelogfp))) (. !)))

root(ROOT-0, a-1)
amod(rewritelogfp-4, >-3)
dep(a-1, rewritelogfp-4)
amod(overrides-6, =-5)
dep(rewritelogfp-4, overrides-6)
amod(rewritelogfp-9, >-8)
dep(a-1, rewritelogfp-9)

=/JJ NULL/NN 

(ROOT (NP (JJ =) (NN NULL)))

root(ROOT-0, NULL-2)
amod(NULL-2, =-1)

?/. 

(ROOT (NP (. ?)))


overrides/VBZ -/: >/JJR rewritelogfp/NN 

(ROOT (FRAG (VP (VP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NN rewritelogfp))))))

root(ROOT-0, overrides-1)
dobj(overrides-1, >-3)
dep(>-3, rewritelogfp-4)

:/: base/NN -/: >/JJR rewritelogfp/NN ;/: 

(ROOT (PRN (: :) (NP (NP (NN base)) (: -) (NP (JJR >) (NN rewritelogfp))) (: ;)))

root(ROOT-0, base-2)
amod(rewritelogfp-5, >-4)
dep(base-2, rewritelogfp-5)

!/. 

(ROOT (NP (. !)))


if/IN (/-LRB- a/SYM -/: >/JJR options/NNS &/CC OPTION_INHERIT_BEFORE/NN )/-RRB- {/-LRB- 

(ROOT (SBAR (IN if) (S (PRN (-LRB- -LRB-) (NP (NP (SYM a)) (: -) (NP (NP (JJR >) (NNS options)) (CC &) (NP (NN OPTION_INHERIT_BEFORE)))) (-RRB- -RRB-)) (VP (-LRB- -LCB-)))))

mark(-LCB--10, if-1)
dep(-LCB--10, a-3)
amod(options-6, >-5)
dep(a-3, options-6)
dep(a-3, OPTION_INHERIT_BEFORE-8)
conj_and(options-6, OPTION_INHERIT_BEFORE-8)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewritemaps/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, base/NN -/: >/JJR rewritemaps/NNS ,/, 

(ROOT (NP (NP (DT a)) (: -) (S (NP (JJR >) (NN rewritemaps)) (NP (NP (JJ =) (NN apr_array_append) (-LRB- -LRB-) (NN p) (, ,) (NN base)) (: -) (NP (JJR >) (NNS rewritemaps)) (, ,)))))

root(ROOT-0, a-1)
amod(rewritemaps-4, >-3)
dep(base-10, rewritemaps-4)
amod(base-10, =-5)
nn(base-10, apr_array_append-6)
nn(base-10, p-8)
dep(a-1, base-10)
amod(rewritemaps-13, >-12)
dep(base-10, rewritemaps-13)

!/. 

(ROOT (NP (. !)))


overrides/VBZ -/: >/JJR rewritemaps/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NNS rewritemaps))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, overrides-1)
dep(overrides-1, >-3)
dep(>-3, rewritemaps-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriteconds/NNS =/JJ apr_array_append/NN (/-LRB- p/NN ,/, base/NN -/: >/JJR rewriteconds/NNS ,/, 

(ROOT (NP (NP (DT a)) (: -) (S (NP (JJR >) (NNS rewriteconds)) (NP (NP (JJ =) (NN apr_array_append) (-LRB- -LRB-) (NN p) (, ,) (NN base)) (: -) (NP (JJR >) (NNS rewriteconds)) (, ,)))))

root(ROOT-0, a-1)
amod(rewriteconds-4, >-3)
dep(base-10, rewriteconds-4)
amod(base-10, =-5)
nn(base-10, apr_array_append-6)
nn(base-10, p-8)
dep(a-1, base-10)
amod(rewriteconds-13, >-12)
dep(base-10, rewriteconds-13)

!/. 

(ROOT (NP (. !)))


overrides/VBZ -/: >/JJR rewriteconds/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, overrides-1)
dep(overrides-1, >-3)
dep(>-3, rewriteconds-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriterules/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, base/NN -/: >/JJR rewriterules/NNS ,/, 

(ROOT (NP (NP (DT a)) (: -) (S (NP (JJR >) (NN rewriterules)) (NP (NP (JJ =) (NN apr_array_append) (-LRB- -LRB-) (NN p) (, ,) (NN base)) (: -) (NP (JJR >) (NNS rewriterules)) (, ,)))))

root(ROOT-0, a-1)
amod(rewriterules-4, >-3)
dep(base-10, rewriterules-4)
amod(base-10, =-5)
nn(base-10, apr_array_append-6)
nn(base-10, p-8)
dep(a-1, base-10)
amod(rewriterules-13, >-12)
dep(base-10, rewriterules-13)

!/. 

(ROOT (NP (. !)))


overrides/VBZ -/: >/JJR rewriterules/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, overrides-1)
dep(overrides-1, >-3)
dep(>-3, rewriterules-4)

!/. }/-RRB- 

(ROOT (NP (. !) (-RRB- -RCB-)))


!/. 

(ROOT (NP (. !)))


else/RB {/-LRB- 

(ROOT (FRAG (RB else) (ADVP (-LRB- -LCB-))))

root(ROOT-0, else-1)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewritemaps/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewritemaps/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewritemaps)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewritemaps))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewritemaps-4, >-3)
dep(a-1, rewritemaps-4)
amod(apr_array_append-6, =-5)
dep(rewritemaps-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewritemaps-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewritemaps/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewritemaps))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewritemaps-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriteconds/NNS =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriteconds/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NNS rewriteconds)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriteconds-4, >-3)
dep(a-1, rewriteconds-4)
amod(apr_array_append-6, =-5)
dep(rewriteconds-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriteconds-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriteconds/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriteconds-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriterules/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriterules/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewriterules)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriterules-4, >-3)
dep(a-1, rewriterules-4)
amod(apr_array_append-6, =-5)
dep(rewriterules-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriterules-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriterules/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriterules-4)

!/. }/-RRB- 

(ROOT (NP (. !) (-RRB- -RCB-)))


}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


else/RB {/-LRB- 

(ROOT (FRAG (RB else) (ADVP (-LRB- -LCB-))))

root(ROOT-0, else-1)

//: */SYM 

(ROOT (VP (: /) (X (SYM *))))

root(ROOT-0, *-2)
punct(*-2, /-1)

***************/NN 

(ROOT (NP (NN ***************)))

root(ROOT-0, ***************-1)

***/NN 289,298/CD ****/CD 

(ROOT (FRAG (NP (NN ***)) (NP (CD 289,298) (CD ****))))

root(ROOT-0, ***-1)
num(****-3, 289,298-2)
dep(***-1, ****-3)

:/: base/NN -/: >/JJR redirect_limit/NN ;/: 

(ROOT (PRN (: :) (NP (NP (NN base)) (: -) (NP (JJR >) (NN redirect_limit))) (: ;)))

root(ROOT-0, base-2)
amod(redirect_limit-5, >-4)
dep(base-2, redirect_limit-5)

if/IN (/-LRB- a/SYM -/: >/JJR options/NNS &/CC OPTION_INHERIT/NNP )/-RRB- {/-LRB- 

(ROOT (SBAR (IN if) (S (PRN (-LRB- -LRB-) (NP (NP (SYM a)) (: -) (NP (NP (JJR >) (NNS options)) (CC &) (NP (NNP OPTION_INHERIT)))) (-RRB- -RRB-)) (VP (-LRB- -LCB-)))))

mark(-LCB--10, if-1)
dep(-LCB--10, a-3)
amod(options-6, >-5)
dep(a-3, options-6)
dep(a-3, OPTION_INHERIT-8)
conj_and(options-6, OPTION_INHERIT-8)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriteconds/NNS =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriteconds/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NNS rewriteconds)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriteconds-4, >-3)
dep(a-1, rewriteconds-4)
amod(apr_array_append-6, =-5)
dep(rewriteconds-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriteconds-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriteconds/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriteconds-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriterules/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriterules/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewriterules)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriterules-4, >-3)
dep(a-1, rewriterules-4)
amod(apr_array_append-6, =-5)
dep(rewriterules-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriterules-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriterules/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriterules-4)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


else/RB {/-LRB- 

(ROOT (FRAG (RB else) (ADVP (-LRB- -LCB-))))

root(ROOT-0, else-1)

a/DT -/: >/JJR rewriteconds/NN =/JJ overrides/NNS -/: >/JJR rewriteconds/NNS ;/: 

(ROOT (NP (NP (ADJP (DT a) (PRN (: -) (NP (NP (JJR >) (NN rewriteconds)) (NP (JJ =) (NNS overrides))) (: -))) (JJR >) (NNS rewriteconds)) (: ;)))

root(ROOT-0, rewriteconds-9)
amod(rewriteconds-9, a-1)
amod(rewriteconds-4, >-3)
dep(a-1, rewriteconds-4)
amod(overrides-6, =-5)
dep(rewriteconds-4, overrides-6)
amod(rewriteconds-9, >-8)

--/: 299,316/CD --/: 

(ROOT (PRN (: --) (NP (CD 299,316)) (: --)))

root(ROOT-0, 299,316-2)

:/: base/NN -/: >/JJR redirect_limit/NN ;/: 

(ROOT (PRN (: :) (NP (NP (NN base)) (: -) (NP (JJR >) (NN redirect_limit))) (: ;)))

root(ROOT-0, base-2)
amod(redirect_limit-5, >-4)
dep(base-2, redirect_limit-5)

if/IN (/-LRB- a/SYM -/: >/JJR options/NNS &/CC OPTION_INHERIT/NNP )/-RRB- {/-LRB- 

(ROOT (SBAR (IN if) (S (PRN (-LRB- -LRB-) (NP (NP (SYM a)) (: -) (NP (NP (JJR >) (NNS options)) (CC &) (NP (NNP OPTION_INHERIT)))) (-RRB- -RRB-)) (VP (-LRB- -LCB-)))))

mark(-LCB--10, if-1)
dep(-LCB--10, a-3)
amod(options-6, >-5)
dep(a-3, options-6)
dep(a-3, OPTION_INHERIT-8)
conj_and(options-6, OPTION_INHERIT-8)

!/. 

(ROOT (NP (. !)))


if/IN (/-LRB- a/SYM -/: >/JJR options/NNS &/CC OPTION_INHERIT_BEFORE/NN )/-RRB- {/-LRB- 

(ROOT (SBAR (IN if) (S (PRN (-LRB- -LRB-) (NP (NP (SYM a)) (: -) (NP (NP (JJR >) (NNS options)) (CC &) (NP (NN OPTION_INHERIT_BEFORE)))) (-RRB- -RRB-)) (VP (-LRB- -LCB-)))))

mark(-LCB--10, if-1)
dep(-LCB--10, a-3)
amod(options-6, >-5)
dep(a-3, options-6)
dep(a-3, OPTION_INHERIT_BEFORE-8)
conj_and(options-6, OPTION_INHERIT_BEFORE-8)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriteconds/NNS =/JJ apr_array_append/NN (/-LRB- p/NN ,/, base/NN -/: >/JJR rewriteconds/NNS ,/, 

(ROOT (NP (NP (DT a)) (: -) (S (NP (JJR >) (NNS rewriteconds)) (NP (NP (JJ =) (NN apr_array_append) (-LRB- -LRB-) (NN p) (, ,) (NN base)) (: -) (NP (JJR >) (NNS rewriteconds)) (, ,)))))

root(ROOT-0, a-1)
amod(rewriteconds-4, >-3)
dep(base-10, rewriteconds-4)
amod(base-10, =-5)
nn(base-10, apr_array_append-6)
nn(base-10, p-8)
dep(a-1, base-10)
amod(rewriteconds-13, >-12)
dep(base-10, rewriteconds-13)

!/. 

(ROOT (NP (. !)))


overrides/VBZ -/: >/JJR rewriteconds/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, overrides-1)
dep(overrides-1, >-3)
dep(>-3, rewriteconds-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriterules/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, base/NN -/: >/JJR rewriterules/NNS ,/, 

(ROOT (NP (NP (DT a)) (: -) (S (NP (JJR >) (NN rewriterules)) (NP (NP (JJ =) (NN apr_array_append) (-LRB- -LRB-) (NN p) (, ,) (NN base)) (: -) (NP (JJR >) (NNS rewriterules)) (, ,)))))

root(ROOT-0, a-1)
amod(rewriterules-4, >-3)
dep(base-10, rewriterules-4)
amod(base-10, =-5)
nn(base-10, apr_array_append-6)
nn(base-10, p-8)
dep(a-1, base-10)
amod(rewriterules-13, >-12)
dep(base-10, rewriterules-13)

!/. 

(ROOT (NP (. !)))


overrides/VBZ -/: >/JJR rewriterules/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (VBZ overrides)) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, overrides-1)
dep(overrides-1, >-3)
dep(>-3, rewriterules-4)

!/. }/-RRB- 

(ROOT (NP (. !) (-RRB- -RCB-)))


!/. 

(ROOT (NP (. !)))


else/RB {/-LRB- 

(ROOT (FRAG (RB else) (ADVP (-LRB- -LCB-))))

root(ROOT-0, else-1)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriteconds/NNS =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriteconds/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NNS rewriteconds)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriteconds-4, >-3)
dep(a-1, rewriteconds-4)
amod(apr_array_append-6, =-5)
dep(rewriteconds-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriteconds-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriteconds/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriteconds))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriteconds-4)

!/. 

(ROOT (NP (. !)))


a/DT -/: >/JJR rewriterules/NN =/JJ apr_array_append/NN (/-LRB- p/NN ,/, overrides/VBZ -/: >/JJR rewriterules/NNS ,/, 

(ROOT (S (NP (NP (DT a)) (: -) (NP (NP (JJR >) (NN rewriterules)) (NP (NP (JJ =) (NN apr_array_append)) (-LRB- -LRB-) (NP (NP (NN p)) (, ,) (NP (S (VP (VBZ overrides))) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))))) (, ,))))))

root(ROOT-0, a-1)
amod(rewriterules-4, >-3)
dep(a-1, rewriterules-4)
amod(apr_array_append-6, =-5)
dep(rewriterules-4, apr_array_append-6)
dep(apr_array_append-6, p-8)
dep(>-12, overrides-10)
appos(p-8, >-12)
dep(>-12, rewriterules-13)

!/. 

(ROOT (NP (. !)))


base/NN -/: >/JJR rewriterules/NNS )/-RRB- ;/: 

(ROOT (NP (NP (NP (NN base)) (: -) (NP (NP (JJR >)) (NP (NNS rewriterules))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, base-1)
dep(base-1, >-3)
dep(>-3, rewriterules-4)

!/. }/-RRB- 

(ROOT (NP (. !) (-RRB- -RCB-)))


}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


else/RB {/-LRB- 

(ROOT (FRAG (RB else) (ADVP (-LRB- -LCB-))))

root(ROOT-0, else-1)

a/DT -/: >/JJR rewriteconds/NN =/JJ overrides/NNS -/: >/JJR rewriteconds/NNS ;/: 

(ROOT (NP (NP (ADJP (DT a) (PRN (: -) (NP (NP (JJR >) (NN rewriteconds)) (NP (JJ =) (NNS overrides))) (: -))) (JJR >) (NNS rewriteconds)) (: ;)))

root(ROOT-0, rewriteconds-9)
amod(rewriteconds-9, a-1)
amod(rewriteconds-4, >-3)
dep(a-1, rewriteconds-4)
amod(overrides-6, =-5)
dep(rewriteconds-4, overrides-6)
amod(rewriteconds-9, >-8)

***************/NN 

(ROOT (NP (NN ***************)))

root(ROOT-0, ***************-1)

***/NN 339,344/CD ****/CD 

(ROOT (FRAG (NP (NN ***)) (NP (CD 339,344) (CD ****))))

root(ROOT-0, ***-1)
num(****-3, 339,344-2)
dep(***-1, ****-3)

--/: 357,365/CD --/: 

(ROOT (PRN (: --) (NP (CD 357,365)) (: --)))

root(ROOT-0, 357,365-2)

if/IN (/-LRB- !/. 

(ROOT (FRAG (IN if) (ADVP (-LRB- -LRB-) (. !))))

root(ROOT-0, if-1)

strcasecmp/NN (/-LRB- w/NN ,/, "/`` inherit/VB "/'' )/-RRB- )/-RRB- {/-LRB- 

(ROOT (NP (NP (NP (NN strcasecmp)) (PRN (-LRB- -LRB-) (NP (NP (NN w)) (, ,) (NP (`` ``) (VB inherit) ('' ''))) (-RRB- -RRB-)) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, strcasecmp-1)
dep(strcasecmp-1, w-3)
appos(w-3, inherit-6)

options/NNS |/NN =/JJ OPTION_INHERIT/NN ;/: 

(ROOT (NP (NP (NP (NNS options)) (NP (NN |) (JJ =) (NN OPTION_INHERIT))) (: ;)))

root(ROOT-0, options-1)
nn(OPTION_INHERIT-4, |-2)
amod(OPTION_INHERIT-4, =-3)
dep(options-1, OPTION_INHERIT-4)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


+/CC else/RB if/IN (/-LRB- !/. 

(ROOT (S (VP (CC +) (VP (ADVP (RB else) (IN if)) (-LRB- -LRB-))) (. !)))

root(ROOT-0, if-3)
cc(if-3, +-1)
advmod(if-3, else-2)

strcasecmp/NN (/-LRB- w/NN ,/, "/`` before/RB "/'' )/-RRB- )/-RRB- {/-LRB- 

(ROOT (NP (NP (NP (NN strcasecmp)) (PRN (-LRB- -LRB-) (NP (NP (NN w)) (, ,) (NP (`` ``) (RB before) ('' ''))) (-RRB- -RRB-)) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, strcasecmp-1)
dep(strcasecmp-1, w-3)
appos(w-3, before-6)

+/CC options/NNS |/NN =/JJ OPTION_INHERIT_BEFORE/NN ;/: 

(ROOT (S (NP (CC +)) (ADJP (NNS options)) (PP (PP (ADVP (NN |)) (ADJP (JJ =))) (ADVP (NN OPTION_INHERIT_BEFORE))) (: ;)))

root(ROOT-0, options-2)
dep(options-2, +-1)
dep(options-2, |-3)
dep(|-3, =-4)
dep(|-3, OPTION_INHERIT_BEFORE-5)

+/CC }/-RRB- 

(ROOT (S (VP (CC +) (VP (-RRB- -RCB-)))))

cc(-RCB--2, +-1)

else/RB if/IN (/-LRB- !/. 

(ROOT (FRAG (RB else) (ADJP (IN if) (ADVP (-LRB- -LRB-))) (. !)))

root(ROOT-0, else-1)
dep(else-1, if-2)

strncasecmp/NN (/-LRB- w/NN ,/, "/`` MaxRedirects/NN =/JJ "/'' ,/, 13/CD )/-RRB- )/-RRB- {/-LRB- 

(ROOT (NP (NP (NP (NN strncasecmp)) (PRN (-LRB- -LRB-) (NP (NP (NN w)) (, ,) (NP (`` ``) (NN MaxRedirects) (JJ =) ('' '')) (, ,) (NP (CD 13))) (-RRB- -RRB-)) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, strncasecmp-1)
dep(strncasecmp-1, w-3)
appos(w-3, MaxRedirects-6)
amod(MaxRedirects-6, =-7)
amod(w-3, 13-10)

limit/NN =/JJ atoi/NN (/-LRB- &/CC w/NN [/-LRB- 13/CD ]/-RRB- )/-RRB- ;/: 

(ROOT (NP (NP (NN limit) (JJ =) (NN atoi)) (PRN (-LRB- -LRB-) (NP (NP (CC &) (NN w)) (-LRB- -LSB-) (NP (CD 13) (-RRB- -RSB-))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, atoi-3)
nn(atoi-3, limit-1)
amod(atoi-3, =-2)
cc(w-6, &-5)
dep(atoi-3, w-6)
punct(w-6, -LSB--7)
dep(w-6, 13-8)
punct(13-8, -RSB--9)

if/IN (/-LRB- limit/NN </JJR =/JJ 0/CD )/-RRB- {/-LRB- 

(ROOT (SBAR (IN if) (S (-LRB- -LRB-) (NP (NP (NP (NN limit)) (JJR <)) (ADJP (JJ =) (NP-TMP (CD 0)))) (-RRB- -RRB-) (VP (-LRB- -LCB-)))))

mark(-LCB--8, if-1)
dep(<-4, limit-3)
nsubj(-LCB--8, <-4)
amod(<-4, =-5)
tmod(=-5, 0-6)

