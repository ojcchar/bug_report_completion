-/: DFOREGROUND/NN mutes/NNS setsid/NN (/-LRB- )/-RRB- call/VBP so/RB entire/JJ httpd/NN processes/NNS collection/NN (/-LRB- master/NN +/CC childs/NNS )/-RRB- inherites/NNS process/NN group/NN from/IN the/DT parent/NN process/NN which/WDT is/VBZ usually/RB some/DT sort/NN of/IN supervisor/NN process/NN ./. 

(ROOT (NP (: -) (NP (NP (NN DFOREGROUND) (NNS mutes) (NN setsid)) (SBAR (S (-LRB- -LRB-) (NP (-RRB- -RRB-)) (VP (VBP call) (NP (NP (RB so) (JJ entire) (NN httpd) (NNS processes) (NN collection) (PRN (-LRB- -LRB-) (NP (NP (NN master)) (CC +) (NP (NNS childs))) (-RRB- -RRB-)) (NNS inherites)) (NP (NP (NN process) (NN group)) (PP (IN from) (NP (DT the) (NN parent) (NN process)))) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB usually)) (NP (NP (DT some) (NN sort)) (PP (IN of) (NP (NN supervisor) (NN process)))))))))))) (. .)))

root(ROOT-0, setsid-4)
nn(setsid-4, DFOREGROUND-2)
nn(setsid-4, mutes-3)
rcmod(setsid-4, call-7)
advmod(inherites-18, so-8)
amod(inherites-18, entire-9)
nn(inherites-18, httpd-10)
nn(inherites-18, processes-11)
nn(inherites-18, collection-12)
dep(inherites-18, master-14)
conj_+(master-14, childs-16)
dep(inherites-18, childs-16)
dobj(call-7, inherites-18)
nn(group-20, process-19)
dep(inherites-18, group-20)
det(process-24, the-22)
nn(process-24, parent-23)
prep_from(group-20, process-24)
nsubj(sort-29, which-25)
cop(sort-29, is-26)
advmod(sort-29, usually-27)
det(sort-29, some-28)
rcmod(inherites-18, sort-29)
nn(process-32, supervisor-31)
prep_of(sort-29, process-32)

Regardless/RB of/IN fact/NN that/IN https/NNS is/VBZ NOT/NNP process/NN group/NN leader/NN in/IN given/VBN case/NN httpd/NN uses/VBZ */SYM _/CD killpg/NN (/-LRB- )/-RRB- call/NN [/-LRB- s/NNS ]/-RRB- during/IN cleanup/NN stage/NN what/WDT effectively/RB kills/VBZ entire/JJ process/NN group/NN httpd/NN do/VBP not/RB own/VB ./. 

(ROOT (SINV (PP (ADVP (RB Regardless)) (IN of) (NP (NP (NN fact)) (SBAR (IN that) (S (NP (NNS https)) (VP (VBZ is) (NP (NP (NNP NOT) (NN process) (NN group) (NN leader)) (PP (IN in) (NP (VBN given) (NN case) (NN httpd))))))))) (VP (VBZ uses)) (SBAR (X (SYM *)) (S (NP (NP (CD _) (NN killpg) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-) (NN call) (-LRB- -LSB-) (NNS s)) (-RRB- -RSB-))) (PP (IN during) (NP (NP (NN cleanup) (NN stage)) (SBAR (WHNP (WDT what)) (S (ADVP (RB effectively)) (VP (VBZ kills) (NP (JJ entire) (NN process) (NN group) (NN httpd)))))))) (VP (VBP do) (RB not) (VP (VB own))))) (. .)))

root(ROOT-0, uses-15)
prep_regardless_of(uses-15, fact-3)
mark(leader-10, that-4)
nsubj(leader-10, https-5)
cop(leader-10, is-6)
nn(leader-10, NOT-7)
nn(leader-10, process-8)
nn(leader-10, group-9)
dep(fact-3, leader-10)
amod(httpd-14, given-12)
nn(httpd-14, case-13)
prep_in(leader-10, httpd-14)
dep(own-37, *-16)
num(killpg-18, _-17)
nsubj(own-37, killpg-18)
nn(s-23, call-21)
punct(s-23, -LSB--22)
appos(killpg-18, s-23)
punct(s-23, -RSB--24)
nn(stage-27, cleanup-26)
prep_during(killpg-18, stage-27)
nsubj(kills-30, what-28)
advmod(kills-30, effectively-29)
rcmod(stage-27, kills-30)
amod(httpd-34, entire-31)
nn(httpd-34, process-32)
nn(httpd-34, group-33)
dobj(kills-30, httpd-34)
aux(own-37, do-35)
neg(own-37, not-36)
dep(uses-15, own-37)

This/DT is/VBZ complete/JJ disaster/NN and/CC apache/NN must/MD not/RB do/VB this/DT ./. 

(ROOT (S (NP (DT This)) (VP (VBZ is) (ADJP (JJ complete) (SBAR (S (NP (NN disaster) (CC and) (NN apache)) (VP (MD must) (RB not) (VP (VB do) (NP (DT this)))))))) (. .)))

root(ROOT-0, complete-3)
nsubj(complete-3, This-1)
cop(complete-3, is-2)
nsubj(do-9, disaster-4)
conj_and(disaster-4, apache-6)
nsubj(do-9, apache-6)
aux(do-9, must-7)
neg(do-9, not-8)
ccomp(complete-3, do-9)
dobj(do-9, this-10)

httpd/NN should/MD check/VB whether/IN it/PRP is/VBZ process/NN group/NN leader/NN or/CC not/RB first/RB ./. 

(ROOT (S (NP (NN httpd)) (VP (MD should) (VP (VB check) (SBAR (IN whether) (S (NP (PRP it)) (VP (VBZ is) (NP (NP (NN process) (NN group) (NN leader)) (CC or) (NP (RB not) (RB first)))))))) (. .)))

root(ROOT-0, check-3)
nsubj(check-3, httpd-1)
aux(check-3, should-2)
mark(leader-9, whether-4)
nsubj(leader-9, it-5)
cop(leader-9, is-6)
nn(leader-9, process-7)
nn(leader-9, group-8)
ccomp(check-3, leader-9)
neg(first-12, not-11)
ccomp(check-3, first-12)
conj_or(leader-9, first-12)

If/IN not/RB ,/, it/PRP must/MD not/RB kill/VB process/NN group/NN it/PRP belongs/VBZ ./. 

(ROOT (S (FRAG (IN If) (RB not)) (, ,) (NP (PRP it)) (VP (MD must) (RB not) (VP (VB kill) (NP (NP (NN process) (NN group)) (SBAR (S (NP (PRP it)) (VP (VBZ belongs))))))) (. .)))

root(ROOT-0, kill-7)
dep(kill-7, If-1)
neg(If-1, not-2)
nsubj(kill-7, it-4)
aux(kill-7, must-5)
neg(kill-7, not-6)
nn(group-9, process-8)
dobj(kill-7, group-9)
nsubj(belongs-11, it-10)
rcmod(group-9, belongs-11)

Saying/VBG that/IN I/PRP see/VBP no/DT other/JJ way/NN as/IN to/TO keep/VB childs/NNS PIDs/NNS somewhere/RB and/CC kill/VB them/PRP separately/RB one/CD by/IN one/CD ./. 

(ROOT (S (VP (VBG Saying) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP see) (NP (DT no) (JJ other) (NN way)) (SBAR (IN as) (S (VP (TO to) (VP (VP (VB keep) (NP (NNS childs) (NNS PIDs)) (ADVP (RB somewhere))) (CC and) (VP (VB kill) (NP (PRP them)) (ADVP (RB separately) (NP (CD one)) (PP (IN by) (NP (CD one))))))))))))) (. .)))

root(ROOT-0, Saying-1)
mark(see-4, that-2)
nsubj(see-4, I-3)
ccomp(Saying-1, see-4)
neg(way-7, no-5)
amod(way-7, other-6)
dobj(see-4, way-7)
mark(keep-10, as-8)
aux(keep-10, to-9)
advcl(see-4, keep-10)
nn(PIDs-12, childs-11)
dobj(keep-10, PIDs-12)
advmod(keep-10, somewhere-13)
advcl(see-4, kill-15)
conj_and(keep-10, kill-15)
dobj(kill-15, them-16)
advmod(kill-15, separately-17)
pobj(separately-17, one-18)
prep_by(separately-17, one-20)

In/IN theory/NN "/`` httpd/NN -/: DFOREGROUND/NN -/: DNO_DETACH/NN "/'' should/MD make/VB apache/NN run/NN as/RB well/RB behaved/VBD application/NN ,/, but/CC we/PRP see/VBP that/IN this/DT does/VBZ not/RB work/VB at/IN all/DT ./. 

(ROOT (S (S (PP (IN In) (NP (NN theory))) (NP (`` ``) (NP (NP (NN httpd)) (: -) (NP (NN DFOREGROUND))) (: -) (NP (NN DNO_DETACH)) ('' '')) (VP (MD should) (VP (VB make) (SBAR (S (NP (NN apache) (NN run)) (ADVP (RB as) (RB well)) (VP (VBD behaved) (NP (NN application)))))))) (, ,) (CC but) (S (NP (PRP we)) (VP (VBP see) (SBAR (IN that) (S (NP (DT this)) (VP (VBZ does) (RB not) (VP (VB work) (ADVP (IN at) (DT all)))))))) (. .)))

root(ROOT-0, make-11)
prep_in(make-11, theory-2)
nsubj(make-11, httpd-4)
dep(httpd-4, DFOREGROUND-6)
dep(httpd-4, DNO_DETACH-8)
aux(make-11, should-10)
nn(run-13, apache-12)
nsubj(behaved-16, run-13)
advmod(well-15, as-14)
advmod(behaved-16, well-15)
ccomp(make-11, behaved-16)
dobj(behaved-16, application-17)
nsubj(see-21, we-20)
conj_but(make-11, see-21)
mark(work-26, that-22)
nsubj(work-26, this-23)
aux(work-26, does-24)
neg(work-26, not-25)
ccomp(see-21, work-26)
advmod(work-26, at-27)
pobj(at-27, all-28)

In/IN some/DT cases/NNS it/PRP can/MD kill/VB init/NN and/CC this/DT is/VBZ what/WP must/MD never/RB happen/VB ./. 

(ROOT (S (S (PP (IN In) (NP (DT some) (NNS cases))) (NP (PRP it)) (VP (MD can) (VP (VB kill) (NP (NN init))))) (CC and) (S (NP (DT this)) (VP (VBZ is) (SBAR (WHNP (WP what)) (S (VP (MD must) (ADVP (RB never)) (VP (VB happen))))))) (. .)))

root(ROOT-0, kill-6)
det(cases-3, some-2)
prep_in(kill-6, cases-3)
nsubj(kill-6, it-4)
aux(kill-6, can-5)
dobj(kill-6, init-7)
nsubj(is-10, this-9)
conj_and(kill-6, is-10)
nsubj(happen-14, what-11)
aux(happen-14, must-12)
neg(happen-14, never-13)
ccomp(is-10, happen-14)

