when/WRB you/PRP have/VBP a/DT filename/NN which/WDT consists/VBZ of/IN multibyte/JJ characters/NNS ,/, this/DT is/VBZ cut/VBN by/IN mod_autoindex/NN also/RB after/IN 20/CD bytes/NNS ./. 

(ROOT (S (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP have) (NP (NP (DT a) (NN filename)) (SBAR (WHNP (WDT which)) (S (VP (VBZ consists) (PP (IN of) (NP (JJ multibyte) (NNS characters)))))))))) (, ,) (NP (DT this)) (VP (VBZ is) (VP (VBN cut) (PP (IN by) (NP (NN mod_autoindex))) (PP (ADVP (RB also)) (IN after) (NP (CD 20) (NNS bytes))))) (. .)))

root(ROOT-0, cut-14)
advmod(have-3, when-1)
nsubj(have-3, you-2)
advcl(cut-14, have-3)
det(filename-5, a-4)
dobj(have-3, filename-5)
nsubj(consists-7, which-6)
rcmod(filename-5, consists-7)
amod(characters-10, multibyte-9)
prep_of(consists-7, characters-10)
nsubjpass(cut-14, this-12)
auxpass(cut-14, is-13)
agent(cut-14, mod_autoindex-16)
advmod(cut-14, also-17)
num(bytes-20, 20-19)
prep_after(cut-14, bytes-20)

That/DT may/MD result/VB in/IN invalid/JJ UTF-8/NN sequences/NNS ./. 

(ROOT (S (NP (DT That)) (VP (MD may) (VP (VB result) (PP (IN in) (NP (JJ invalid) (NN UTF-8) (NNS sequences))))) (. .)))

root(ROOT-0, result-3)
nsubj(result-3, That-1)
aux(result-3, may-2)
amod(sequences-7, invalid-5)
nn(sequences-7, UTF-8-6)
prep_in(result-3, sequences-7)

The/DT cut/NN should/MD be/VB made/VBN after/IN 20/CD characters/NNS (/-LRB- might/MD be/VB multibyte/JJ . . ./: )/-RRB- 

(ROOT (S (NP (DT The) (NN cut)) (VP (MD should) (VP (VB be) (VP (VBN made) (PP (IN after) (NP (NP (CD 20) (NNS characters)) (PRN (-LRB- -LRB-) (VP (MD might) (VP (VB be) (FRAG (ADJP (JJ multibyte)) (: ...)))) (-RRB- -RRB-)))))))))

root(ROOT-0, made-5)
det(cut-2, The-1)
nsubjpass(made-5, cut-2)
aux(made-5, should-3)
auxpass(made-5, be-4)
num(characters-8, 20-7)
prep_after(made-5, characters-8)
aux(be-11, might-10)
dep(characters-8, be-11)
dep(be-11, multibyte-12)

