The/DT functions/NNS and/CC structures/NNS in/IN mod_ssl/NN 's/POS public/JJ API/NN (/-LRB- mod_ssl/NN ./. 

(ROOT (S (NP (NP (DT The) (NNS functions) (CC and) (NNS structures)) (PP (IN in) (NP (NP (NN mod_ssl) (POS 's)) (JJ public) (NN API)))) (VP (-LRB- -LRB-) (NP (NN mod_ssl))) (. .)))

root(ROOT-0, mod_ssl-11)
det(functions-2, The-1)
nsubj(mod_ssl-11, functions-2)
conj_and(functions-2, structures-4)
nsubj(mod_ssl-11, structures-4)
poss(API-9, mod_ssl-6)
amod(API-9, public-8)
prep_in(functions-2, API-9)

h/NN )/-RRB- are/VBP not/RB exported/VBN correctly/RB using/VBG AP_DECLARE/NN and/CC AP_DECALRE_NONSTD/NN for/IN use/NN on/IN win32/NN systems/NNS ./. 

(ROOT (S (LST (NN h)) (-RRB- -RRB-) (VP (VBP are) (RB not) (VP (VBN exported) (ADVP (RB correctly)) (S (VP (VBG using) (NP (NN AP_DECLARE) (CC and) (NN AP_DECALRE_NONSTD)) (PP (IN for) (NP (NP (NN use)) (PP (IN on) (NP (NN win32) (NNS systems))))))))) (. .)))

root(ROOT-0, exported-5)
dep(exported-5, h-1)
auxpass(exported-5, are-3)
neg(exported-5, not-4)
advmod(exported-5, correctly-6)
xcomp(exported-5, using-7)
dobj(using-7, AP_DECLARE-8)
dobj(using-7, AP_DECALRE_NONSTD-10)
conj_and(AP_DECLARE-8, AP_DECALRE_NONSTD-10)
prep_for(using-7, use-12)
nn(systems-15, win32-14)
prep_on(use-12, systems-15)

I/PRP was/VBD trying/VBG to/TO compile/VB mod_log_sql/NN with/IN mod_ssl/NN support/NN under/IN windows/NNS 2k/JJ and/CC ran/VBD into/IN this/DT */SYM road/NN block/NN */NN ./. 

(ROOT (S (NP (PRP I)) (VP (VP (VBD was) (VP (VBG trying) (S (VP (TO to) (VP (VB compile) (S (NP (NP (NN mod_log_sql)) (PP (IN with) (NP (NP (NN mod_ssl) (NN support)) (PP (IN under) (NP (NNS windows)))))) (ADJP (JJ 2k)))))))) (CC and) (VP (VBD ran) (PP (IN into) (NP (NP (DT this)) (X (SYM *))))) (NP (NN road) (NN block) (NN *))) (. .)))

root(ROOT-0, trying-3)
nsubj(trying-3, I-1)
nsubj(ran-14, I-1)
aux(trying-3, was-2)
aux(compile-5, to-4)
xcomp(trying-3, compile-5)
nsubj(2k-12, mod_log_sql-6)
nn(support-9, mod_ssl-8)
prep_with(mod_log_sql-6, support-9)
prep_under(support-9, windows-11)
xcomp(compile-5, 2k-12)
conj_and(trying-3, ran-14)
prep_into(ran-14, this-16)
dep(this-16, *-17)
nn(*-20, road-18)
nn(*-20, block-19)
dobj(trying-3, *-20)

Namely/RB I/PRP am/VBP accessing/VBG the/DT ssl_module/JJ struct/NN (/-LRB- via/IN the/DT myConnConfig/NN macro/NN )/-RRB- and/CC ssl_var_lookup/NN function/NN in/IN the/DT SSL/NN functionity/NN of/IN my/PRP$ module/NN ./. 

(ROOT (S (ADVP (RB Namely)) (NP (PRP I)) (VP (VBP am) (VP (VBG accessing) (NP (NP (DT the) (JJ ssl_module) (NN struct)) (PRN (-LRB- -LRB-) (PP (IN via) (NP (DT the) (NN myConnConfig) (NN macro))) (-RRB- -RRB-)) (CC and) (NP (NP (NN ssl_var_lookup) (NN function)) (PP (IN in) (NP (NP (DT the) (NN SSL) (NN functionity)) (PP (IN of) (NP (PRP$ my) (NN module))))))))) (. .)))

root(ROOT-0, accessing-4)
advmod(accessing-4, Namely-1)
nsubj(accessing-4, I-2)
aux(accessing-4, am-3)
det(struct-7, the-5)
amod(struct-7, ssl_module-6)
dobj(accessing-4, struct-7)
det(macro-12, the-10)
nn(macro-12, myConnConfig-11)
prep_via(struct-7, macro-12)
nn(function-16, ssl_var_lookup-15)
dobj(accessing-4, function-16)
conj_and(struct-7, function-16)
det(functionity-20, the-18)
nn(functionity-20, SSL-19)
prep_in(function-16, functionity-20)
poss(module-23, my-22)
prep_of(functionity-20, module-23)

