All/DT of/IN the/DT spanish/NNP (/-LRB- es/NNS )/-RRB- server/NN error/NN messages/NNS are/VBP '/`` semi/NN '/'' translated/VBN or/CC textually/RB translated/VBN ,/, which/WDT should/MD not/RB be/VB the/DT case/NN ./. 

(ROOT (S (NP (NP (DT All)) (PP (IN of) (NP (NP (DT the) (NNP spanish) (PRN (-LRB- -LRB-) (NP (NNS es)) (-RRB- -RRB-)) (NN server)) (NP (NN error) (NNS messages))))) (VP (VBP are) (NP (NP (`` `) (NP (NN semi)) ('' ') (VP (VP (VBN translated)) (CC or) (VP (ADVP (RB textually)) (VBN translated)))) (, ,) (SBAR (WHNP (WDT which)) (S (VP (MD should) (RB not) (VP (VB be) (NP (DT the) (NN case)))))))) (. .)))

root(ROOT-0, semi-13)
nsubj(semi-13, All-1)
det(server-8, the-3)
nn(server-8, spanish-4)
appos(server-8, es-6)
prep_of(All-1, server-8)
nn(messages-10, error-9)
dep(server-8, messages-10)
cop(semi-13, are-11)
dep(semi-13, translated-15)
advmod(translated-18, textually-17)
dep(semi-13, translated-18)
conj_or(translated-15, translated-18)
nsubj(case-25, which-20)
aux(case-25, should-21)
neg(case-25, not-22)
cop(case-25, be-23)
det(case-25, the-24)
rcmod(semi-13, case-25)

As/IN far/RB as/IN I/PRP would/MD say/VB ,/, translations/NNS for/IN errors/NNS should/MD be/VB made/VBN such/JJ that/IN the/DT end/NN user/NN can/MD understand/VB what/WP is/VBZ going/VBG on/RP ./. 

(ROOT (S (SBAR (IN As) (S (ADVP (RB far) (PP (IN as) (NP (PRP I)))) (VP (MD would) (VP (VB say))))) (, ,) (NP (NP (NNS translations)) (PP (IN for) (NP (NNS errors)))) (VP (MD should) (VP (VB be) (VP (VBN made) (PP (JJ such)) (SBAR (IN that) (S (NP (DT the) (NN end) (NN user)) (VP (MD can) (VP (VB understand) (SBAR (WHNP (WP what)) (S (VP (VBZ is) (VP (VBG going) (PRT (RP on))))))))))))) (. .)))

root(ROOT-0, made-13)
mark(say-6, As-1)
advmod(say-6, far-2)
prep_as(far-2, I-4)
aux(say-6, would-5)
advcl(made-13, say-6)
nsubjpass(made-13, translations-8)
prep_for(translations-8, errors-10)
aux(made-13, should-11)
auxpass(made-13, be-12)
prep(made-13, such-14)
mark(understand-20, that-15)
det(user-18, the-16)
nn(user-18, end-17)
nsubj(understand-20, user-18)
aux(understand-20, can-19)
ccomp(made-13, understand-20)
nsubj(going-23, what-21)
aux(going-23, is-22)
ccomp(understand-20, going-23)
prt(going-23, on-24)

So/IN I/PRP am/VBP submitting/VBG translations/NNS that/WDT do/VBP exactly/RB that/IN ./. 

(ROOT (S (IN So) (NP (PRP I)) (VP (VBP am) (VP (VBG submitting) (NP (NP (NNS translations)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (ADVP (RB exactly)) (ADVP (IN that)))))))) (. .)))

root(ROOT-0, submitting-4)
dep(submitting-4, So-1)
nsubj(submitting-4, I-2)
aux(submitting-4, am-3)
dobj(submitting-4, translations-5)
nsubj(do-7, that-6)
rcmod(translations-5, do-7)
advmod(do-7, exactly-8)
advmod(do-7, that-9)

HTTP_NOT_ACCEPTABLE/NNP :/: 

(ROOT (NP (NNP HTTP_NOT_ACCEPTABLE) (: :)))

root(ROOT-0, HTTP_NOT_ACCEPTABLE-1)

Content-language/NN :/: es/NNS Content-type/JJ :/: text/html/NN Body/NN :/: ----------/CD es/NNS --/: </JJR !/. 

(ROOT (FRAG (NP (NP (NN Content-language)) (: :) (NP (NP (NNS es)) (ADJP (JJ Content-type))) (: :) (NP (NN text/html) (NN Body))) (: :) (NP (NP (CD ----------) (NNS es)) (: --) (NP (JJR <))) (. !)))

root(ROOT-0, Content-language-1)
dep(Content-language-1, es-3)
amod(es-3, Content-type-4)
nn(Body-7, text/html-6)
dep(Content-language-1, Body-7)
num(es-10, -----------9)
dep(Content-language-1, es-10)
dep(es-10, <-12)

--/: #set/NN var/NN =/JJ "/`` TITLE/NN "/'' value/NN =/JJ "/`` Ning/NNP &/CC uacute/NN ;/: n/NN objecto/NN apropiado/NN disponible/JJ !/. "/'' 

(ROOT (FRAG (NP (NP (NP (NP (LST (: --)) (NP (NN #set) (NN var)) (PP (JJ =) (NP (`` ``) (NN TITLE) ('' '') (NN value)))) (JJ =)) (`` ``) (NP (NNP Ning) (CC &) (NP (NN uacute)))) (: ;) (NP (NP (NN n) (NN objecto) (NN apropiado)) (ADJP (JJ disponible)))) (. !) ('' '')))

root(ROOT-0, var-3)
nn(var-3, #set-2)
prep(var-3, =-4)
nn(value-8, TITLE-6)
dep(=-4, value-8)
amod(var-3, =-9)
dep(var-3, Ning-11)
dep(var-3, uacute-13)
conj_and(Ning-11, uacute-13)
nn(apropiado-17, n-15)
nn(apropiado-17, objecto-16)
dep(var-3, apropiado-17)
amod(apropiado-17, disponible-18)

--/: >/JJR </JJR !/. 

(ROOT (PRN (: --) (FRAG (ADJP (JJR >)) (ADJP (JJR <))) (. !)))

root(ROOT-0, >-2)
dep(>-2, <-3)

--/: #include/NN virtual/JJ =/JJ "/`` include/top/NN ./. 

(ROOT (NP (NP (NP (LST (: --)) (NP (NN #include)) (PP (JJ virtual) (NP (JJ =)))) (NP (`` ``) (NN include/top))) (. .)))

root(ROOT-0, #include-2)
prep(#include-2, virtual-3)
dep(virtual-3, =-4)
dep(#include-2, include/top-6)

html/NN "/'' --/: >/JJR 

(ROOT (NP (NP (NN html) ('' '')) (: --) (NP (JJR >))))

root(ROOT-0, html-1)
dep(html-1, >-4)

Una/NNP representaci/NNP &/CC oacute/NN ;/: n/NN apropiada/FW de/FW los/FW recursos/FW solicitados/FW no/DT ha/NN podido/FW ser/FW localizada/FW en/FW este/FW servidor/FW ./. 

(ROOT (NP (NP (NP (NNP Una) (NNP representaci)) (CC &) (NP (NN oacute))) (: ;) (NP (NP (NN n) (FW apropiada) (FW de) (FW los) (FW recursos) (FW solicitados)) (NP (DT no) (NN ha) (FW podido) (FW ser) (FW localizada) (FW en) (FW este) (FW servidor))) (. .)))

root(ROOT-0, representaci-2)
nn(representaci-2, Una-1)
conj_and(representaci-2, oacute-4)
dep(representaci-2, n-6)
nn(n-6, apropiada-7)
nn(n-6, de-8)
nn(n-6, los-9)
nn(n-6, recursos-10)
dep(n-6, solicitados-11)
neg(ha-13, no-12)
dep(n-6, ha-13)
nn(ha-13, podido-14)
nn(ha-13, ser-15)
nn(ha-13, localizada-16)
nn(ha-13, en-17)
nn(ha-13, este-18)
dep(ha-13, servidor-19)

</JJR !/. 

(ROOT (FRAG (ADJP (JJR <)) (. !)))

root(ROOT-0, <-1)

--/: #include/NN virtual/JJ =/JJ "/`` include/bottom/NN ./. 

(ROOT (NP (NP (NP (LST (: --)) (NP (NN #include)) (PP (JJ virtual) (NP (JJ =)))) (NP (`` ``) (NN include/bottom))) (. .)))

root(ROOT-0, #include-2)
prep(#include-2, virtual-3)
dep(virtual-3, =-4)
dep(#include-2, include/bottom-6)

html/NN "/'' --/: >/JJR 

(ROOT (NP (NP (NN html) ('' '')) (: --) (NP (JJR >))))

root(ROOT-0, html-1)
dep(html-1, >-4)

----------/CD es/NNS --/: 

(ROOT (NP (NP (CD ----------) (NNS es)) (: --)))

root(ROOT-0, es-2)
num(es-2, -----------1)

