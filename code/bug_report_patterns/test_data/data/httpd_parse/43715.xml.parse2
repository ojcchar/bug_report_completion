Five/CD modules/NNS which/WDT define/VBP optional/JJ functions/NNS do/VBP not/RB have/VB header/NN files/NNS installed/VBN on/IN Windows/NNP ./. 

(ROOT (S (NP (NP (CD Five) (NNS modules)) (SBAR (WHNP (WDT which)) (S (VP (VBP define) (NP (JJ optional) (NNS functions)))))) (VP (VBP do) (RB not) (VP (VB have) (NP (NP (NN header) (NNS files)) (VP (VBN installed) (PP (IN on) (NP (NNP Windows))))))) (. .)))

root(ROOT-0, have-9)
num(modules-2, Five-1)
nsubj(have-9, modules-2)
nsubj(define-4, which-3)
rcmod(modules-2, define-4)
amod(functions-6, optional-5)
dobj(define-4, functions-6)
aux(have-9, do-7)
neg(have-9, not-8)
nn(files-11, header-10)
dobj(have-9, files-11)
vmod(files-11, installed-12)
prep_on(installed-12, Windows-14)

They/PRP are/VBP :/: mod_cache/NN ./. 

(ROOT (S (NP (PRP They)) (VP (VBP are) (: :) (NP (NN mod_cache))) (. .)))

root(ROOT-0, mod_cache-4)
nsubj(mod_cache-4, They-1)
cop(mod_cache-4, are-2)

h/NN mod_dbd/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_dbd)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_dbd-2)

h/NN mod_log_config/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_log_config)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_log_config-2)

h/NN mod_rewrite/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_rewrite)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_rewrite-2)

h/NN mod_ssl/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_ssl)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_ssl-2)

h/NN 

(ROOT (NP (NN h)))

root(ROOT-0, h-1)

This/DT prevents/VBZ using/VBG the/DT APR_OPTIONAL_FN_TYPE/NNP macro/NN with/IN these/DT modules/NNS '/POS optional/JJ functions/NNS ./. 

(ROOT (S (NP (DT This)) (VP (VBZ prevents) (S (VP (VBG using) (NP (DT the) (NNP APR_OPTIONAL_FN_TYPE) (NN macro)) (PP (IN with) (NP (NP (DT these) (NNS modules) (POS ')) (JJ optional) (NNS functions)))))) (. .)))

root(ROOT-0, prevents-2)
nsubj(prevents-2, This-1)
xcomp(prevents-2, using-3)
det(macro-6, the-4)
nn(macro-6, APR_OPTIONAL_FN_TYPE-5)
dobj(using-3, macro-6)
det(modules-9, these-8)
poss(functions-12, modules-9)
amod(functions-12, optional-11)
prep_with(using-3, functions-12)

The/DT other/JJ five/CD modules/NNS with/IN optional/JJ functions/NNS are/VBP correctly/RB installed/VBN :/: mod_cgi/NNS ./. 

(ROOT (UCP (S (NP (NP (DT The) (JJ other) (CD five) (NNS modules)) (PP (IN with) (NP (JJ optional) (NNS functions)))) (VP (VBP are) (ADVP (RB correctly)) (VP (VBN installed)))) (: :) (NP (NNS mod_cgi)) (. .)))

root(ROOT-0, installed-10)
det(modules-4, The-1)
amod(modules-4, other-2)
num(modules-4, five-3)
nsubjpass(installed-10, modules-4)
amod(functions-7, optional-6)
prep_with(modules-4, functions-7)
auxpass(installed-10, are-8)
advmod(installed-10, correctly-9)
dep(installed-10, mod_cgi-12)

h/NN mod_core/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_core)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_core-2)

h/NN mod_dav/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_dav)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_dav-2)

h/NN mod_include/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_include)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_include-2)

h/NN mod_proxy/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_proxy)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_proxy-2)

h/NN mod_so/NN ./. 

(ROOT (NP (NP (NN h)) (NP (NN mod_so)) (. .)))

root(ROOT-0, h-1)
dep(h-1, mod_so-2)

h/NN 

(ROOT (NP (NN h)))

root(ROOT-0, h-1)

This/DT is/VBZ only/RB a/DT problem/NN with/IN Windows/NNP installs/VBZ ./. 

(ROOT (S (NP (DT This)) (VP (VBZ is) (ADVP (RB only)) (NP (NP (DT a) (NN problem)) (PP (IN with) (NP (NP (NNP Windows)) (VP (VBZ installs)))))) (. .)))

root(ROOT-0, problem-5)
nsubj(problem-5, This-1)
cop(problem-5, is-2)
advmod(problem-5, only-3)
det(problem-5, a-4)
prep_with(problem-5, Windows-7)
dep(Windows-7, installs-8)

A/DT patch/NN is/VBZ provided/VBN for/IN libhttpd.dsp/NN which/WDT adds/VBZ the/DT missing/VBG headers/NNS to/TO the/DT project/NN and/CC copies/NNS them/PRP to/TO ./. 

(ROOT (S (NP (DT A) (NN patch)) (VP (VBZ is) (VP (VBN provided) (PP (IN for) (NP (NP (NN libhttpd.dsp)) (SBAR (WHNP (WDT which)) (S (VP (VBZ adds) (NP (DT the) (VBG missing) (NNS headers)) (PP (TO to) (NP (NP (DT the) (NN project)) (CC and) (NP (NP (NNS copies)) (VP (NP (PRP them)) (PP (TO to))))))))))))) (. .)))

root(ROOT-0, provided-4)
det(patch-2, A-1)
nsubjpass(provided-4, patch-2)
auxpass(provided-4, is-3)
prep_for(provided-4, libhttpd.dsp-6)
nsubj(adds-8, which-7)
rcmod(libhttpd.dsp-6, adds-8)
det(headers-11, the-9)
amod(headers-11, missing-10)
dobj(adds-8, headers-11)
det(project-14, the-13)
prep_to(adds-8, project-14)
prep_to(adds-8, copies-16)
conj_and(project-14, copies-16)
dep(copies-16, them-17)
prep(them-17, to-18)

\/NN include/VBP with/IN a/DT custom/NN build/VB step/NN ,/, like/IN the/DT correctly/RB installed/VBN headers/NNS ./. 

(ROOT (S (NP (NN \)) (VP (VBP include) (SBAR (IN with) (S (NP (DT a) (NN custom)) (VP (VB build) (NP (NP (NN step)) (, ,) (PP (IN like) (NP (DT the) (ADJP (ADVP (RB correctly)) (VBN installed)) (NNS headers)))))))) (. .)))

root(ROOT-0, include-2)
nsubj(include-2, \-1)
mark(build-6, with-3)
det(custom-5, a-4)
nsubj(build-6, custom-5)
advcl(include-2, build-6)
dobj(build-6, step-7)
det(headers-13, the-10)
advmod(installed-12, correctly-11)
amod(headers-13, installed-12)
prep_like(step-7, headers-13)

