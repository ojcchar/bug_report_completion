Using/VBG mod_ldap/NN ,/, I/PRP 'm/VBP seeing/VBG a/DT lot/NN of/IN entries/NNS in/IN the/DT error/NN log/NN like/IN this/DT :/: 

(ROOT (S (S (VP (VBG Using) (NP (NN mod_ldap)))) (, ,) (NP (PRP I)) (VP (VBP 'm) (VP (VBG seeing) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NP (NNS entries)) (PP (IN in) (NP (NP (DT the) (NN error) (NN log)) (PP (IN like) (NP (DT this)))))))))) (: :)))

root(ROOT-0, seeing-6)
vmod(seeing-6, Using-1)
dobj(Using-1, mod_ldap-2)
nsubj(seeing-6, I-4)
aux(seeing-6, 'm-5)
det(lot-8, a-7)
dobj(seeing-6, lot-8)
prep_of(lot-8, entries-10)
det(log-14, the-12)
nn(log-14, error-13)
prep_in(entries-10, log-14)
prep_like(log-14, this-16)

[/-LRB- Sun/NNP Sep/NNP 26/CD 19:20:40/CD 2004/CD ]/-RRB- [/-LRB- crit/NN ]/-RRB- (/-LRB- 13/CD )/-RRB- Permission/NN denied/VBD :/: failed/VBD to/TO init/VB caching/NN lock/NN in/IN child/NN process/NN 

(ROOT (S (NP (-LRB- -LSB-) (NNP Sun) (NNP Sep) (CD 26) (CD 19:20:40) (CD 2004) (-RRB- -RSB-) (-LRB- -LSB-) (NN crit)) (VP (-RRB- -RSB-) (PRN (-LRB- -LRB-) (NP-TMP (CD 13)) (-RRB- -RRB-)) (NP (NP (NN Permission)) (SBAR (S (VP (VBD denied)))) (: :) (SBAR (S (VP (VBD failed) (S (VP (TO to) (VP (VB init) (NP (NN caching) (NN lock)) (PP (IN in) (NP (NN child) (NN process)))))))))))))

root(ROOT-0, Permission-14)
punct(crit-9, -LSB--1)
nn(crit-9, Sun-2)
nn(crit-9, Sep-3)
num(crit-9, 26-4)
num(crit-9, 19:20:40-5)
num(crit-9, 2004-6)
punct(crit-9, -RSB--7)
punct(crit-9, -LSB--8)
nsubj(Permission-14, crit-9)
punct(Permission-14, -RSB--10)
dep(Permission-14, 13-12)
rcmod(Permission-14, denied-15)
rcmod(Permission-14, failed-17)
aux(init-19, to-18)
xcomp(failed-17, init-19)
nn(lock-21, caching-20)
dobj(init-19, lock-21)
nn(process-24, child-23)
prep_in(init-19, process-24)

I/PRP 'd/MD be/VB happy/JJ to/TO change/VB the/DT permissions/NNS to/TO allow/VB "/`` nobody/NN "/'' to/TO write/VB the/DT file/NN ,/, but/CC I/PRP have/VBP no/DT idea/NN where/WRB it/PRP is/VBZ trying/VBG to/TO write/VB the/DT file/NN (/-LRB- or/CC lock/VB it/PRP ,/, for/IN that/DT matter/NN )/-RRB- ./. 

(ROOT (S (S (NP (PRP I)) (VP (MD 'd) (VP (VB be) (ADJP (JJ happy) (S (VP (TO to) (VP (VB change) (S (NP (DT the) (NNS permissions)) (VP (TO to) (VP (VB allow) (S (NP (`` ``) (NN nobody) ('' '')) (VP (TO to) (VP (VB write) (NP (DT the) (NN file))))))))))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP have) (NP (NP (DT no) (NN idea)) (SBAR (WHADVP (WRB where)) (S (NP (PRP it)) (VP (VBZ is) (VP (VBG trying) (S (VP (TO to) (VP (VB write) (NP (DT the) (NN file))))))))))) (PRN (-LRB- -LRB-) (CC or) (S (VP (VB lock) (NP (PRP it)) (, ,) (PP (IN for) (NP (DT that) (NN matter))))) (-RRB- -RRB-))) (. .)))

root(ROOT-0, happy-4)
nsubj(happy-4, I-1)
aux(happy-4, 'd-2)
cop(happy-4, be-3)
aux(change-6, to-5)
xcomp(happy-4, change-6)
det(permissions-8, the-7)
dobj(change-6, permissions-8)
aux(allow-10, to-9)
xcomp(change-6, allow-10)
dobj(allow-10, nobody-12)
aux(write-15, to-14)
xcomp(allow-10, write-15)
det(file-17, the-16)
dobj(write-15, file-17)
nsubj(have-21, I-20)
conj_but(happy-4, have-21)
neg(idea-23, no-22)
dobj(have-21, idea-23)
advmod(trying-27, where-24)
nsubj(trying-27, it-25)
aux(trying-27, is-26)
rcmod(idea-23, trying-27)
aux(write-29, to-28)
xcomp(trying-27, write-29)
det(file-31, the-30)
dobj(write-29, file-31)
cc(lock-34, or-33)
parataxis(have-21, lock-34)
dobj(lock-34, it-35)
det(matter-39, that-38)
prep_for(lock-34, matter-39)

Can/MD the/DT file/NN location/NN be/VB added/VBN to/TO the/DT error/NN message/NN ,/, and/CC can/MD you/PRP tell/VB me/PRP where/WRB it/PRP is/VBZ trying/VBG to/TO write/VB and/CC lock/VB the/DT file/NN ?/. 

(ROOT (SQ (SQ (MD Can) (NP (DT the) (NN file) (NN location)) (VP (VB be) (VP (VBN added) (PP (TO to) (NP (DT the) (NN error) (NN message)))))) (, ,) (CC and) (SQ (MD can) (NP (PRP you)) (VP (VB tell) (NP (PRP me)) (SBAR (WHADVP (WRB where)) (S (NP (PRP it)) (VP (VBZ is) (VP (VBG trying) (S (VP (TO to) (VP (VB write) (CC and) (VB lock) (NP (DT the) (NN file))))))))))) (. ?)))

root(ROOT-0, added-6)
aux(added-6, Can-1)
det(location-4, the-2)
nn(location-4, file-3)
nsubjpass(added-6, location-4)
auxpass(added-6, be-5)
det(message-10, the-8)
nn(message-10, error-9)
prep_to(added-6, message-10)
aux(tell-15, can-13)
nsubj(tell-15, you-14)
conj_and(added-6, tell-15)
dobj(tell-15, me-16)
advmod(trying-20, where-17)
nsubj(trying-20, it-18)
aux(trying-20, is-19)
ccomp(tell-15, trying-20)
aux(write-22, to-21)
xcomp(trying-20, write-22)
xcomp(trying-20, lock-24)
conj_and(write-22, lock-24)
det(file-26, the-25)
dobj(write-22, file-26)

Thanks/NNS !/. 

(ROOT (NP (NNS Thanks) (. !)))

root(ROOT-0, Thanks-1)

