Created/VBN attachment/NN 23871/CD patch/NN to/TO correct/VB the/DT problem/NN 

(ROOT (VP (VBN Created) (NP (NN attachment) (CD 23871) (NN patch)) (S (VP (TO to) (VP (VB correct) (NP (DT the) (NN problem)))))))

root(ROOT-0, Created-1)
nn(patch-4, attachment-2)
num(patch-4, 23871-3)
dobj(Created-1, patch-4)
aux(correct-6, to-5)
vmod(Created-1, correct-6)
det(problem-8, the-7)
dobj(correct-6, problem-8)

The/DT server/NN signature/NN shows/VBZ the/DT incorrect/JJ platform/NN ./. 

(ROOT (S (NP (DT The) (NN server) (NN signature)) (VP (VBZ shows) (NP (DT the) (JJ incorrect) (NN platform))) (. .)))

root(ROOT-0, shows-4)
det(signature-3, The-1)
nn(signature-3, server-2)
nsubj(shows-4, signature-3)
det(platform-7, the-5)
amod(platform-7, incorrect-6)
dobj(shows-4, platform-7)

A/DT lot/NN of/IN people/NNS keep/VBP mailing/VBG me/PRP that/IN my/PRP$ binaries/NNS I/PRP provide/VBP for/IN win64/NN are/VBP horribly/RB broken/VBN due/JJ to/TO this/DT ./. 

(ROOT (S (NP (NP (DT A) (NN lot)) (PP (IN of) (NP (NNS people)))) (VP (VBP keep) (S (VP (VBG mailing) (NP (PRP me)) (SBAR (IN that) (S (NP (NP (PRP$ my) (NNS binaries)) (SBAR (S (NP (PRP I)) (VP (VBP provide) (PP (IN for) (NP (NN win64))))))) (VP (VBP are) (ADVP (RB horribly)) (VP (VBN broken) (S (ADJP (JJ due) (PP (TO to) (NP (DT this)))))))))))) (. .)))

root(ROOT-0, keep-5)
det(lot-2, A-1)
nsubj(keep-5, lot-2)
prep_of(lot-2, people-4)
xcomp(keep-5, mailing-6)
dobj(mailing-6, me-7)
mark(broken-17, that-8)
poss(binaries-10, my-9)
nsubjpass(broken-17, binaries-10)
nsubj(provide-12, I-11)
rcmod(binaries-10, provide-12)
prep_for(provide-12, win64-14)
auxpass(broken-17, are-15)
advmod(broken-17, horribly-16)
ccomp(mailing-6, broken-17)
xcomp(broken-17, due-18)
prep_to(due-18, this-20)

I/PRP do/VBP n't/RB consider/VB it/PRP broken/VBN ,/, just/RB incorrect/JJ and/CC trivial/JJ to/TO fix/VB ./. 

(ROOT (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VP (VB consider) (S (NP (PRP it)) (VP (VBN broken)))) (, ,) (ADJP (RB just) (JJ incorrect) (CC and) (JJ trivial) (S (VP (TO to) (VP (VB fix))))))) (. .)))

root(ROOT-0, consider-4)
nsubj(consider-4, I-1)
aux(consider-4, do-2)
neg(consider-4, n't-3)
nsubj(broken-6, it-5)
dep(consider-4, broken-6)
advmod(incorrect-9, just-8)
acomp(consider-4, incorrect-9)
acomp(consider-4, trivial-11)
conj_and(incorrect-9, trivial-11)
aux(fix-13, to-12)
xcomp(incorrect-9, fix-13)

I/PRP 've/VBP attached/VBN a/DT simple/JJ 3/CD line/NN fix/NN for/IN os/win32/os/NNS ./. 

(ROOT (S (NP (PRP I)) (VP (VBP 've) (VP (VBN attached) (NP (NP (DT a) (JJ simple) (CD 3) (NN line) (NN fix)) (PP (IN for) (NP (NNS os/win32/os)))))) (. .)))

root(ROOT-0, attached-3)
nsubj(attached-3, I-1)
aux(attached-3, 've-2)
det(fix-8, a-4)
amod(fix-8, simple-5)
num(fix-8, 3-6)
nn(fix-8, line-7)
dobj(attached-3, fix-8)
prep_for(fix-8, os/win32/os-10)

h/NN that/WDT hopefully/RB is/VBZ conform/VB the/DT coding/VBG guide/NN lines/NNS ./. 

(ROOT (S (NP (NP (NN h)) (SBAR (WHNP (WDT that)) (S (ADVP (RB hopefully)) (VP (VBZ is))))) (VP (VB conform) (NP (DT the) (VBG coding) (NN guide) (NNS lines))) (. .)))

root(ROOT-0, conform-5)
nsubj(conform-5, h-1)
nsubj(is-4, that-2)
advmod(is-4, hopefully-3)
rcmod(h-1, is-4)
det(lines-9, the-6)
amod(lines-9, coding-7)
nn(lines-9, guide-8)
dobj(conform-5, lines-9)

If/IN it/PRP 's/VBZ not/RB I/PRP 'll/MD be/VB happy/JJ to/TO correct/VB it/PRP ./. 

(ROOT (S (SBAR (IN If) (S (NP (PRP it)) (VP (VBZ 's) (RB not) (NP (PRP I))))) (VP (MD 'll) (VP (VB be) (ADJP (JJ happy) (S (VP (TO to) (VP (VB correct) (NP (PRP it)))))))) (. .)))

root(ROOT-0, happy-8)
mark(I-5, If-1)
nsubj(I-5, it-2)
cop(I-5, 's-3)
neg(I-5, not-4)
csubj(happy-8, I-5)
aux(happy-8, 'll-6)
cop(happy-8, be-7)
aux(correct-10, to-9)
xcomp(happy-8, correct-10)
dobj(correct-10, it-11)

The/DT patch/NN is/VBZ tested/VBN against/IN 2.2.11/CD ,/, 2.2.10/CD and/CC 2.2.8/CD and/CC works/VBZ on/IN all/DT of/IN those/DT ./. 

(ROOT (S (NP (DT The) (NN patch)) (VP (VP (VBZ is) (VP (VBN tested) (PP (IN against) (NP (CD 2.2.11) (, ,) (CD 2.2.10) (CC and) (CD 2.2.8))))) (CC and) (VP (VBZ works) (PP (IN on) (NP (NP (DT all)) (PP (IN of) (NP (DT those))))))) (. .)))

root(ROOT-0, tested-4)
det(patch-2, The-1)
nsubjpass(tested-4, patch-2)
nsubj(works-12, patch-2)
auxpass(tested-4, is-3)
prep_against(tested-4, 2.2.11-6)
num(2.2.11-6, 2.2.10-8)
prep_against(tested-4, 2.2.8-10)
conj_and(2.2.11-6, 2.2.8-10)
conj_and(tested-4, works-12)
prep_on(works-12, all-14)
prep_of(all-14, those-16)

