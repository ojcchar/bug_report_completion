Hi/NN there/RB ,/, 

(ROOT (PRN (NN Hi) (ADVP (RB there)) (, ,)))

root(ROOT-0, there-2)
dep(there-2, Hi-1)

Thought/NNP this/DT bug/NN is/VBZ related/JJ to/TO bug/NN #/# 50247/CD ,/, but/CC as/IN per/IN Eric/NNP 's/POS suggestion/NN I/PRP 'm/VBP opening/VBG a/DT new/JJ bug/NN ./. 

(ROOT (S (S (NP (NP (NNP Thought)) (NP (DT this) (NN bug))) (VP (VBZ is) (ADJP (JJ related) (PP (TO to) (NP (NP (NN bug)) (NP (# #) (CD 50247))))))) (, ,) (CC but) (S (PP (IN as) (PP (IN per) (NP (NP (NNP Eric) (POS 's)) (NN suggestion)))) (NP (PRP I)) (VP (VBP 'm) (VP (VBG opening) (NP (DT a) (JJ new) (NN bug))))) (. .)))

root(ROOT-0, related-5)
nsubj(related-5, Thought-1)
det(bug-3, this-2)
dep(Thought-1, bug-3)
cop(related-5, is-4)
prep_to(related-5, bug-7)
dep(50247-9, #-8)
dep(bug-7, 50247-9)
prepc_as_per(opening-19, per-13)
poss(suggestion-16, Eric-14)
pobj(opening-19, suggestion-16)
nsubj(opening-19, I-17)
aux(opening-19, 'm-18)
conj_but(related-5, opening-19)
det(bug-22, a-20)
amod(bug-22, new-21)
dobj(opening-19, bug-22)

The/DT httpd/NN in/IN question/NN is/VBZ 2.2.16/CD running/VBG on/IN EC2/NN ./. 

(ROOT (S (NP (NP (DT The) (NN httpd)) (PP (IN in) (NP (NN question)))) (VP (VBZ is) (NP (NP (CD 2.2.16)) (VP (VBG running) (PP (IN on) (NP (NN EC2)))))) (. .)))

root(ROOT-0, 2.2.16-6)
det(httpd-2, The-1)
nsubj(2.2.16-6, httpd-2)
prep_in(httpd-2, question-4)
cop(2.2.16-6, is-5)
vmod(2.2.16-6, running-7)
prep_on(running-7, EC2-9)

We/PRP see/VBP that/IN after/IN ~/CD 10/CD minutes/NNS of/IN significant/JJ load/NN ,/, some/DT of/IN the/DT worker/NN processes/NNS get/VBP hang/VB on/IN poll/NN (/-LRB- )/-RRB- ./. 

(ROOT (S (NP (PRP We)) (VP (VBP see) (SBAR (IN that) (S (PP (IN after) (NP (NP (QP (CD ~) (CD 10)) (NNS minutes)) (PP (IN of) (NP (JJ significant) (NN load))))) (, ,) (NP (NP (DT some)) (PP (IN of) (NP (DT the) (NN worker) (NNS processes)))) (VP (VBP get) (VP (VB hang) (PP (IN on) (NP (NN poll) (-LRB- -LRB-)))))))) (-RRB- -RRB-) (. .)))

root(ROOT-0, see-2)
nsubj(see-2, We-1)
mark(hang-18, that-3)
number(10-6, ~-5)
num(minutes-7, 10-6)
prep_after(hang-18, minutes-7)
amod(load-10, significant-9)
prep_of(minutes-7, load-10)
nsubj(hang-18, some-12)
det(processes-16, the-14)
nn(processes-16, worker-15)
prep_of(some-12, processes-16)
aux(hang-18, get-17)
ccomp(see-2, hang-18)
prep_on(hang-18, poll-20)

By/IN hang/VBP I/PRP mean/VB that/DT poll/NN (/-LRB- )/-RRB- call/NN did/VBD n't/RB finish/VB for/IN more/JJR than/IN 30/CD seconds/NNS ./. 

(ROOT (S (SBAR (IN By) (S (VP (VBP hang) (S (NP (PRP I)) (VP (VB mean)))))) (NP (DT that) (NN poll) (-LRB- -LRB-) (-RRB- -RRB-) (NN call)) (VP (VBD did) (RB n't) (VP (VB finish) (PP (IN for) (NP (QP (JJR more) (IN than) (CD 30)) (NNS seconds))))) (. .)))

root(ROOT-0, finish-12)
mark(hang-2, By-1)
advcl(finish-12, hang-2)
nsubj(mean-4, I-3)
ccomp(hang-2, mean-4)
det(call-9, that-5)
nn(call-9, poll-6)
nsubj(finish-12, call-9)
aux(finish-12, did-10)
neg(finish-12, n't-11)
mwe(than-15, more-14)
quantmod(30-16, than-15)
num(seconds-17, 30-16)
prep_for(finish-12, seconds-17)

This/DT is/VBZ the/DT stacktrace/NN from/IN one/CD of/IN the/DT processes/NNS that/WDT are/VBP in/IN this/DT state/NN :/: 

(ROOT (S (NP (DT This)) (VP (VBZ is) (NP (NP (DT the) (NN stacktrace)) (PP (IN from) (NP (CD one))) (PP (IN of) (NP (NP (DT the) (NNS processes)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (PP (IN in) (NP (DT this) (NN state)))))))))) (: :)))

root(ROOT-0, stacktrace-4)
nsubj(stacktrace-4, This-1)
cop(stacktrace-4, is-2)
det(stacktrace-4, the-3)
prep_from(stacktrace-4, one-6)
det(processes-9, the-8)
prep_of(stacktrace-4, processes-9)
nsubj(are-11, that-10)
rcmod(processes-9, are-11)
det(state-14, this-13)
prep_in(are-11, state-14)

#/# 0/CD 0x00007f76fa70c748/NN in/IN poll/NN (/-LRB- )/-RRB- from/IN //: lib64/libc/NN ./. 

(ROOT (FRAG (PP (NP (# #) (CD 0)) (PP (NP (NP (NN 0x00007f76fa70c748)) (PP (IN in) (NP (NN poll) (-LRB- -LRB-))) (-RRB- -RRB-)) (PP (IN from)))) (: /) (NP (NN lib64/libc)) (. .)))

root(ROOT-0, lib64/libc-10)
dep(0-2, #-1)
dep(from-8, 0-2)
dep(from-8, 0x00007f76fa70c748-3)
prep_in(0x00007f76fa70c748-3, poll-5)
prep(lib64/libc-10, from-8)
punct(lib64/libc-10, /-9)

so/RB .6/CD #/# 1/CD 0x00007f76fabe2822/NN in/IN apr_wait_for_io_or_timeout/NN (/-LRB- )/-RRB- from/IN //: usr/lib64/libapr/JJ -1/CD ./. 

(ROOT (FRAG (FRAG (NP (RB so) (CD .6)) (NP (NP (# #) (CD 1)) (NP (NP (NN 0x00007f76fabe2822)) (PP (IN in) (NP (NN apr_wait_for_io_or_timeout))) (PRN (-LRB- -LRB-) (UCP (ADVP (-RRB- -RRB-)) (PP (IN from))))))) (: /) (FRAG (ADJP (JJ usr/lib64/libapr) (NP-TMP (CD -1))) (. .))))

root(ROOT-0, .6-2)
advmod(.6-2, so-1)
dep(1-4, #-3)
dep(.6-2, 1-4)
dep(1-4, 0x00007f76fabe2822-5)
prep_in(0x00007f76fabe2822-5, apr_wait_for_io_or_timeout-7)
prep(-RRB--9, from-10)
punct(.6-2, /-11)
dep(.6-2, usr/lib64/libapr-12)
tmod(usr/lib64/libapr-12, -1-13)

so/RB .0/CD #/# 2/CD 0x00007f76fabdd2da/NN in/IN apr_socket_recv/NN (/-LRB- )/-RRB- from/IN //: usr/lib64/libapr/JJ -1/CD ./. 

(ROOT (FRAG (FRAG (NP (RB so) (CD .0)) (NP (NP (# #) (CD 2)) (NP (NP (NN 0x00007f76fabdd2da)) (PP (IN in) (NP (NN apr_socket_recv))) (PRN (-LRB- -LRB-) (UCP (ADVP (-RRB- -RRB-)) (PP (IN from))))))) (: /) (FRAG (ADJP (JJ usr/lib64/libapr) (NP-TMP (CD -1))) (. .))))

root(ROOT-0, .0-2)
advmod(.0-2, so-1)
dep(2-4, #-3)
dep(.0-2, 2-4)
dep(2-4, 0x00007f76fabdd2da-5)
prep_in(0x00007f76fabdd2da-5, apr_socket_recv-7)
prep(-RRB--9, from-10)
punct(.0-2, /-11)
dep(.0-2, usr/lib64/libapr-12)
tmod(usr/lib64/libapr-12, -1-13)

so/RB .0/CD #/# 3/CD 0x00007f76fc0dfddd/NN in/IN ap_lingering_close/NN (/-LRB- )/-RRB- #/# 4/CD 0x00007f76fc0eaa7e/NN in/IN ??/NN 

(ROOT (NP (NP (RB so) (CD .0)) (NP (NP (ADJP (# #) (CD 3)) (NN 0x00007f76fc0dfddd)) (PP (IN in) (NP (NP (NN ap_lingering_close)) (-LRB- -LRB-) (PP (-RRB- -RRB-) (NP (ADJP (# #) (CD 4)) (NN 0x00007f76fc0eaa7e))) (PP (IN in) (NP (NN ??))))))))

root(ROOT-0, .0-2)
advmod(.0-2, so-1)
number(3-4, #-3)
amod(0x00007f76fc0dfddd-5, 3-4)
dep(.0-2, 0x00007f76fc0dfddd-5)
prep_in(0x00007f76fc0dfddd-5, ap_lingering_close-7)
number(4-11, #-10)
amod(0x00007f76fc0eaa7e-12, 4-11)
prep(ap_lingering_close-7, 0x00007f76fc0eaa7e-12)
prep_in(ap_lingering_close-7, ??-14)

(/-LRB- )/-RRB- #/# 5/CD 0x00007f76fc0ead1a/NN in/IN ??/NN 

(ROOT (NP (-LRB- -LRB-) (NP (-RRB- -RRB-)) (PP (NP (ADJP (# #) (CD 5)) (NN 0x00007f76fc0ead1a)) (IN in) (NP (NN ??)))))

number(5-4, #-3)
amod(0x00007f76fc0ead1a-5, 5-4)
npadvmod(-RRB--2, 0x00007f76fc0ead1a-5)
prep_in(-RRB--2, ??-7)

(/-LRB- )/-RRB- #/# 6/CD 0x00007f76fc0eadd0/NN in/IN ??/NN 

(ROOT (NP (-LRB- -LRB-) (NP (-RRB- -RRB-)) (PP (NP (ADJP (# #) (CD 6)) (NN 0x00007f76fc0eadd0)) (IN in) (NP (NN ??)))))

number(6-4, #-3)
amod(0x00007f76fc0eadd0-5, 6-4)
npadvmod(-RRB--2, 0x00007f76fc0eadd0-5)
prep_in(-RRB--2, ??-7)

(/-LRB- )/-RRB- #/# 7/CD 0x00007f76fc0eb908/NN in/IN ap_mpm_run/NN (/-LRB- )/-RRB- #/# 8/CD 0x00007f76fc0c54fb/NN in/IN main/JJ (/-LRB- )/-RRB- 

(ROOT (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-) (ADJP (# #) (CD 7)) (NN 0x00007f76fc0eb908)) (PP (IN in) (NP (NP (NN ap_mpm_run)) (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-) (ADJP (# #) (CD 8)) (NN 0x00007f76fc0c54fb)) (PP (IN in) (NP (JJ main)))) (-LRB- -LRB-))))) (-RRB- -RRB-)))

root(ROOT-0, 0x00007f76fc0eb908-5)
number(7-4, #-3)
amod(0x00007f76fc0eb908-5, 7-4)
prep_in(0x00007f76fc0eb908-5, ap_mpm_run-7)
number(8-11, #-10)
amod(0x00007f76fc0c54fb-12, 8-11)
dep(ap_mpm_run-7, 0x00007f76fc0c54fb-12)
prep_in(0x00007f76fc0c54fb-12, main-14)

Please/VB let/VB me/PRP know/VB if/IN there/EX 's/VBZ any/DT more/JJR information/NN I/PRP can/MD provide/VB -/: this/DT problem/NN is/VBZ obviously/RB a/DT major/JJ concern/NN to/TO us/PRP ./. 

(ROOT (S (S (INTJ (VB Please)) (VP (VB let) (S (NP (PRP me)) (VP (VB know) (SBAR (IN if) (S (NP (EX there)) (VP (VBZ 's) (NP (NP (DT any) (JJR more) (NN information)) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB provide))))))))))))) (: -) (S (NP (DT this) (NN problem)) (VP (VBZ is) (ADVP (RB obviously)) (NP (NP (DT a) (JJ major) (NN concern)) (PP (TO to) (NP (PRP us)))))) (. .)))

root(ROOT-0, let-2)
discourse(let-2, Please-1)
nsubj(know-4, me-3)
ccomp(let-2, know-4)
mark('s-7, if-5)
expl('s-7, there-6)
advcl(know-4, 's-7)
det(information-10, any-8)
amod(information-10, more-9)
nsubj('s-7, information-10)
nsubj(provide-13, I-11)
aux(provide-13, can-12)
rcmod(information-10, provide-13)
det(problem-16, this-15)
nsubj(concern-21, problem-16)
cop(concern-21, is-17)
advmod(concern-21, obviously-18)
det(concern-21, a-19)
amod(concern-21, major-20)
parataxis(let-2, concern-21)
prep_to(concern-21, us-23)

Thanks/NNS ,/, Tal/NNP 

(ROOT (NP (NP (NNS Thanks)) (, ,) (NP (NNP Tal))))

root(ROOT-0, Thanks-1)
appos(Thanks-1, Tal-3)

