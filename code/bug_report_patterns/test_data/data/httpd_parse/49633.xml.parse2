In/IN an/DT AD/NN environment/NN a/DT user/NN 's/POS primary/JJ group/NN is/VBZ not/RB stored/VBN in/IN the/DT member/NN attribute/NN ./. 

(ROOT (S (PP (IN In) (NP (DT an) (NN AD) (NN environment))) (NP (NP (DT a) (NN user) (POS 's)) (JJ primary) (NN group)) (VP (VBZ is) (RB not) (VP (VBN stored) (PP (IN in) (NP (DT the) (NN member) (NN attribute))))) (. .)))

root(ROOT-0, stored-12)
det(environment-4, an-2)
nn(environment-4, AD-3)
prep_in(stored-12, environment-4)
det(user-6, a-5)
poss(group-9, user-6)
amod(group-9, primary-8)
nsubjpass(stored-12, group-9)
auxpass(stored-12, is-10)
neg(stored-12, not-11)
det(attribute-16, the-14)
nn(attribute-16, member-15)
prep_in(stored-12, attribute-16)

Instead/RB ,/, the/DT group/NN 's/POS RID/VB value/NN is/VBZ stored/VBN in/IN the/DT primaryGroupID/NN attribute/NN of/IN the/DT user/NN ./. 

(ROOT (S (ADVP (RB Instead)) (, ,) (NP (NP (DT the) (NP (NN group) (POS 's))) (SBAR (S (VP (VB RID) (NP (NN value)))))) (VP (VBZ is) (VP (VBN stored) (PP (IN in) (NP (NP (DT the) (NN primaryGroupID) (NN attribute)) (PP (IN of) (NP (DT the) (NN user))))))) (. .)))

root(ROOT-0, stored-9)
advmod(stored-9, Instead-1)
det(group-4, the-3)
nsubjpass(stored-9, group-4)
possessive(group-4, 's-5)
rcmod(group-4, RID-6)
dobj(RID-6, value-7)
auxpass(stored-9, is-8)
det(attribute-13, the-11)
nn(attribute-13, primaryGroupID-12)
prep_in(stored-9, attribute-13)
det(user-16, the-15)
prep_of(attribute-13, user-16)

To/TO find/VB the/DT user/NN 's/POS primary/JJ group/NN name/NN you/PRP need/VBP to/TO find/VB the/DT domain/NN SID/NNP and/CC then/RB search/VB for/IN the/DT group/NN that/WDT has/VBZ the/DT SID/NNP value/NN </JJR domain/NN SID/NNP >/JJR -/: </JJR group/NN RID/VB >/JJR in/IN their/PRP$ objectSid/NN attribute/NN ./. 

(ROOT (S (S (VP (TO To) (VP (VB find) (NP (NP (DT the) (NN user) (POS 's)) (JJ primary) (NN group) (NN name))))) (NP (PRP you)) (VP (VBP need) (S (VP (TO to) (VP (VP (VB find) (NP (DT the) (NN domain) (NNP SID))) (CC and) (ADVP (RB then)) (VP (VB search) (PP (IN for) (NP (NP (DT the) (NN group)) (SBAR (WHNP (WDT that)) (S (VP (VBZ has) (NP (NP (DT the) (NNP SID) (NN value)) (VP (NP (NP (JJR <) (NN domain)) (NNP SID)) (ADJP (ADJP (JJR >)) (: -) (ADJP (JJR <) (SBAR (S (NP (NN group)) (VP (VB RID) (NP (JJR >)) (PP (IN in) (NP (PRP$ their) (NN objectSid) (NN attribute)))))))))))))))))))) (. .)))

root(ROOT-0, need-10)
aux(find-2, To-1)
dep(need-10, find-2)
det(user-4, the-3)
poss(name-8, user-4)
amod(name-8, primary-6)
nn(name-8, group-7)
dobj(find-2, name-8)
nsubj(need-10, you-9)
aux(find-12, to-11)
xcomp(need-10, find-12)
det(SID-15, the-13)
nn(SID-15, domain-14)
dobj(find-12, SID-15)
advmod(search-18, then-17)
xcomp(need-10, search-18)
conj_and(find-12, search-18)
det(group-21, the-20)
prep_for(search-18, group-21)
nsubj(has-23, that-22)
rcmod(group-21, has-23)
det(value-26, the-24)
nn(value-26, SID-25)
dobj(has-23, value-26)
amod(domain-28, <-27)
nn(SID-29, domain-28)
dobj(>-30, SID-29)
dep(value-26, >-30)
dep(>-30, <-32)
nsubj(RID-34, group-33)
ccomp(<-32, RID-34)
dobj(RID-34, >-35)
poss(attribute-39, their-37)
nn(attribute-39, objectSid-38)
prep_in(RID-34, attribute-39)

The/DT following/NN is/VBZ an/DT example/NN in/IN Python/NNP using/VBG py-ldap/NN for/IN doing/VBG this/DT :/: 

(ROOT (S (NP (DT The) (NN following)) (VP (VBZ is) (NP (NP (DT an) (NN example)) (PP (IN in) (NP (NP (NNP Python)) (VP (VBG using) (NP (NN py-ldap)) (PP (IN for) (S (VP (VBG doing) (NP (DT this)))))))))) (: :)))

root(ROOT-0, example-5)
det(following-2, The-1)
nsubj(example-5, following-2)
cop(example-5, is-3)
det(example-5, an-4)
prep_in(example-5, Python-7)
vmod(Python-7, using-8)
dobj(using-8, py-ldap-9)
prepc_for(using-8, doing-11)
dobj(doing-11, this-12)

--/: 

(ROOT (NP (: --)))


def/NN sid2str/NN (/-LRB- self/NN ,/, sid/NN )/-RRB- :/: 

(ROOT (NP (NP (NN def) (NN sid2str)) (PRN (-LRB- -LRB-) (NP (NP (NN self)) (, ,) (NP (NN sid))) (-RRB- -RRB-)) (: :)))

root(ROOT-0, sid2str-2)
nn(sid2str-2, def-1)
dep(sid2str-2, self-4)
appos(self-4, sid-6)

srl/NN =/JJ ord/NN (/-LRB- sid/NN [/-LRB- 0/CD ]/-RRB- )/-RRB- 

(ROOT (NP (NP (NN srl) (JJ =) (NN ord)) (PRN (-LRB- -LRB-) (NP (NN sid)) (-LRB- -LSB-) (NP (CD 0) (-RRB- -RSB-)) (-RRB- -RRB-))))

root(ROOT-0, ord-3)
nn(ord-3, srl-1)
amod(ord-3, =-2)
appos(ord-3, sid-5)
punct(sid-5, -LSB--6)
dep(sid-5, 0-7)
punct(0-7, -RSB--8)

number_sub_id/NN =/JJ ord/NN (/-LRB- sid/NN [/-LRB- 1/CD ]/-RRB- )/-RRB- 

(ROOT (NP (NP (NN number_sub_id) (JJ =) (NN ord)) (PRN (-LRB- -LRB-) (NP (NN sid)) (-LRB- -LSB-) (NP (CD 1) (-RRB- -RSB-)) (-RRB- -RRB-))))

root(ROOT-0, ord-3)
nn(ord-3, number_sub_id-1)
amod(ord-3, =-2)
appos(ord-3, sid-5)
punct(sid-5, -LSB--6)
dep(sid-5, 1-7)
punct(1-7, -RSB--8)

iav/NN =/JJ struct.unpack/NN (/-LRB- '/'' !/. 

(ROOT (FRAG (NP (NN iav)) (NP (JJ =) (NN struct.unpack) (-LRB- -LRB-) ('' ')) (. !)))

root(ROOT-0, iav-1)
amod(struct.unpack-3, =-2)
dep(iav-1, struct.unpack-3)

Q/NNP '/POS ,/, '/'' \/SYM x00/CD \/CD x00/NN '/'' +/CC sid/VBD [/-LRB- 2:8/CD ]/-RRB- )/-RRB- [/-LRB- 0/CD ]/-RRB- 

(ROOT (S (NP (NNP Q) (POS ')) (PRN (, ,) ('' ') (S (NP (NP (QP (SYM \) (CD x00) (CD \))) (SBAR (S (NP (NN x00)) ('' ') (VP (CC +) (VP (VBD sid)))))) (VP (-LRB- -LSB-) (NP (CD 2:8))))) (VP (-RRB- -RSB-) (-RRB- -RRB-) (VP (-LRB- -LSB-) (NP (CD 0)))) (-RRB- -RSB-)))

root(ROOT-0, 0-17)
nsubj(0-17, Q-1)
dep(\-7, \-5)
number(\-7, x00-6)
nsubj(2:8-13, \-7)
nsubj(sid-11, x00-8)
cc(sid-11, +-10)
rcmod(\-7, sid-11)
punct(2:8-13, -LSB--12)
parataxis(0-17, 2:8-13)
punct(0-17, -RSB--14)
punct(0-17, -LSB--16)
punct(0-17, -RSB--18)

sub_ids/NNS =/JJ [/-LRB- 

(ROOT (S (NP (NNS sub_ids)) (VP (JJ =)) (-LRB- -LSB-)))

root(ROOT-0, =-2)
nsubj(=-2, sub_ids-1)
punct(=-2, -LSB--3)

struct.unpack/NN (/-LRB- '/'' </JJR I/CD '/'' ,/, sid/NN [/-LRB- 8/CD +4/CD */SYM i/FW :12/FW +4/CD */SYM i/FW ]/-RRB- )/-RRB- [/-LRB- 0/CD ]/-RRB- 

(ROOT (S (NP (NP (NN struct.unpack)) (PRN (-LRB- -LRB-) (VP ('' ') (PP (NP (JJR <)) (NP (NP (CD I)) ('' ') (, ,) (NP (NP (NP (NN sid)) (-LRB- -LSB-) (NP (QP (CD 8) (CD +4))) (X (SYM *))) (NP (FW i) (FW :12))))) (ADVP (ADVP (CD +4)) (SBAR (X (SYM *)) (S (NP (FW i)) (VP (-RRB- -RSB-)))))) (-RRB- -RRB-))) (VP (-LRB- -LSB-) (NP (CD 0))) (-RRB- -RSB-)))

root(ROOT-0, 0-21)
nsubj(0-21, struct.unpack-1)
dep(struct.unpack-1, <-4)
dep(<-4, I-5)
appos(I-5, sid-8)
punct(sid-8, -LSB--9)
number(+4-11, 8-10)
dep(sid-8, +4-11)
dep(sid-8, *-12)
nn(:12-14, i-13)
dep(sid-8, :12-14)
advmod(<-4, +4-15)
dep(-RSB--18, *-16)
nsubj(-RSB--18, i-17)
advcl(+4-15, -RSB--18)
punct(0-21, -LSB--20)
punct(0-21, -RSB--22)

for/IN i/FW in/FW range/NN (/-LRB- number_sub_id/NN )/-RRB- 

(ROOT (PP (IN for) (NP (NP (FW i)) (PP (FW in) (NP (NN range))) (PRN (-LRB- -LRB-) (NP (NN number_sub_id)) (-RRB- -RRB-)))))

root(ROOT-0, for-1)
pobj(for-1, i-2)
prep(i-2, in-3)
pobj(in-3, range-4)
appos(i-2, number_sub_id-6)

]/-RRB- 

(ROOT (NP (-RRB- -RSB-)))

root(ROOT-0, -RSB--1)

return/NN 'S/POS -/: %/NN d/SYM -/: %/NN d/SYM -/: %/NN s/NNS '/POS %/NN (/-LRB- 

(ROOT (NP (NP (NP (NN return) (POS 'S)) (NP (NP (: -) (NN %)) (NP (SYM d)))) (: -) (NP (NP (NN %)) (NP (SYM d))) (: -) (NP (NP (NN %)) (NP (NP (NNS s) (POS ')) (NN %))) (-LRB- -LRB-)))

root(ROOT-0, return-1)
possessive(return-1, 'S-2)
dep(return-1, %-4)
dep(%-4, d-5)
dep(return-1, %-7)
dep(%-7, d-8)
dep(return-1, %-10)
poss(%-13, s-11)
dep(%-10, %-13)

srl/NN ,/, 

(ROOT (FRAG (PP (NN srl)) (, ,)))

root(ROOT-0, srl-1)

iav/NN ,/, 

(ROOT (FRAG (PP (NN iav)) (, ,)))

root(ROOT-0, iav-1)

'/'' -/: '/'' ./. 

(ROOT (X (X ('' ')) (: -) (VP ('' ')) (. .)))


join/VB (/-LRB- [/-LRB- str/NN (/-LRB- s/NNS )/-RRB- for/IN s/NNS in/IN sub_ids/NNS ]/-RRB- )/-RRB- ,/, 

(ROOT (VP (VB join) (PRN (-LRB- -LRB-) (ADVP (-LRB- -LSB-)) (ADJP (ADJP (ADJP (NN str)) (PRN (-LRB- -LRB-) (NP (NNS s)) (-RRB- -RRB-))) (PP (IN for) (NP (NP (NNS s)) (PP (IN in) (NP (NNS sub_ids) (-RRB- -RSB-))) (-RRB- -RRB-)))) (, ,))))

root(ROOT-0, join-1)
dep(str-4, -LSB--3)
dep(join-1, str-4)
dep(str-4, s-6)
prep_for(str-4, s-9)
prep_in(s-9, sub_ids-11)
punct(sub_ids-11, -RSB--12)

)/-RRB- 

(ROOT (NP (-RRB- -RRB-)))


#/# Get/VB RID/VB of/IN primary/JJ group/NN >/JJR >/JJR >/JJR pri_grp_rid/NN =/JJ l.search/JJ _/NN s/NNS (/-LRB- '/`` cn/NN =/JJ users/NNS ,/, dc/NN =/JJ example/NN ,/, dc/NN =/JJ com/NN '/'' ,/, ldap.SCOPE/NNP _/CD SUBTREE/NNP ,/, '/`` sAMAccountName/NN =/JJ tmclaughlin/NN '/'' ,/, [/-LRB- '/`` primaryGroupID/NN '/'' ]/-RRB- )/-RRB- [/-LRB- 0/CD ]/-RRB- [/-LRB- 1/CD ]/-RRB- [/-LRB- '/`` primaryGroupID/NN '/'' ]/-RRB- [/-LRB- 0/CD ]/-RRB- #/# Get/VB domain/NN SID/NNP >/JJR >/JJR >/JJR domain_sid/NN =/JJ l.search/JJ _/NN s/NNS (/-LRB- '/`` dc/NN =/JJ example/NN ,/, dc/NN =/JJ com/NN '/'' ,/, ldap.SCOPE/NN _/CD BASE/NN )/-RRB- [/-LRB- 0/CD ]/-RRB- [/-LRB- 1/CD ]/-RRB- [/-LRB- '/`` objectSid/NN '/'' ]/-RRB- [/-LRB- 0/CD ]/-RRB- #/# Convert/VB domain/NN SID/NNP to/TO string/VB form/NN >/JJR >/JJR >/JJR domain_sid_s/NNS =/JJ sid2str/NN (/-LRB- domain_sid/NN )/-RRB- #/# Search/VB for/IN group/NN with/IN </JJR domain/NN SID/NNP >/JJR -/: </JJR group/NN RID/VB >/JJR objectSid/NN value/NN >/JJR >/JJR >/JJR pprint.pprint/NN (/-LRB- l.search/JJ _/NN s/NNS (/-LRB- '/`` ou/NN =/JJ groups/NNS ,/, dc/NN =/JJ example/NN ,/, dc/NN =/JJ com/NN '/'' ,/, ldap.SCOPE/NNP _/CD SUBTREE/NNP ,/, '/`` objectSid/NN =/JJ %/NN s/NNS -/: %/NN s/NNS '/POS %/NN (/-LRB- domain_sid_s/NNS ,/, pri_grp_rid/NN )/-RRB- ,/, [/-LRB- '/`` cn/NN '/'' ]/-RRB- )/-RRB- )/-RRB- 

(ROOT (SINV (VP (# #) (VP (VB Get) (VP (VB RID) (PP (IN of) (NP (JJ primary) (NN group))) (NP (NP (ADJP (NP (JJR >)) (JJR >)) (JJR >) (NN pri_grp_rid)) (SBAR (S (NP (NP (JJ =) (JJ l.search) (NN _) (NNS s)) (PRN (-LRB- -LRB-) (NP (NP (NP (`` `) (NP (NN cn) (JJ =) (NNS users)) (, ,) (NP (NN dc) (JJ =) (NN example)) (, ,) (NP (NN dc) (JJ =) (NN com)) ('' ')) (, ,) (NP (NNP ldap.SCOPE) (CD _))) (NP (NNP SUBTREE))) (, ,) (NP (NP (`` `) (NN sAMAccountName) (JJ =) (NN tmclaughlin) ('' ')) (, ,) (NP (-LRB- -LSB-) (`` `) (NN primaryGroupID) ('' ') (-RRB- -RSB-))) (-RRB- -RRB-)) (-LRB- -LSB-) (NP (NP (CD 0) (-RRB- -RSB-)) (PP (-LRB- -LSB-) (NP (CD 1)))) (-RRB- -RSB-) (NP (-LRB- -LSB-) (`` `) (NN primaryGroupID) ('' ')) (-RRB- -RSB-)) (VP (-LRB- -LSB-) (NP (CD 0)) (NP (-RRB- -RSB-) (ADJP (# #) (VB Get)) (NN domain)) (NP (NP (NNP SID)) (JJR >)) (NP (ADJP (NP (JJR >)) (JJR >)) (NN domain_sid)) (NP (NP (JJ =) (JJ l.search) (NN _) (NNS s)) (PRN (-LRB- -LRB-) (`` `) (NP (NN dc)) (NP (NP (JJ =) (NN example) (, ,) (NN dc) (JJ =) (NN com) ('' ')) (, ,) (NP (NN ldap.SCOPE) (CD _) (NN BASE))) (-RRB- -RRB-))) (PP (-LRB- -LSB-) (NP (CD 0) (-RRB- -RSB-))) (NP-TMP (-LRB- -LSB-) (CD 1)) (-RRB- -RSB-) (NP (NP (-LRB- -LSB-) (`` `) (NN objectSid) ('' ') (-RRB- -RSB-)) (PP (-LRB- -LSB-) (NP (CD 0)))) (-RRB- -RSB-) (NP (NP (ADJP (# #) (VB Convert)) (NN domain)) (NP-TMP (NNP SID)) (S (VP (TO to) (VP (VB string) (ADJP (ADJP (NP (NN form)) (JJR >)) (JJR >)) (NP (NP (JJR >) (NNS domain_sid_s)) (VP (NP (NP (JJ =) (NN sid2str)) (PRN (-LRB- -LRB-) (NP (NN domain_sid)) (-RRB- -RRB-))) (ADJP (ADJP (NP (NP (# #) (VB Search)) (PP (IN for) (NP (NP (NN group)) (PP (IN with) (NP (NP (JJR <) (NN domain)) (NP-TMP (NNP SID))))))) (JJR >)) (: -) (ADJP (JJR <) (SBAR (S (NP (NN group)) (VP (VB RID) (NP (JJR >) (NN objectSid) (NN value)))))))))))))))))))) (NP (NP (JJR >)) (NP (NP (JJR >)) (NP (NP (JJR >) (NN pprint.pprint)) (-LRB- -LRB-) (NP (JJ l.search) (NN _) (NNS s)) (PRN (-LRB- -LRB-) (NP (NP (NP (`` `) (NP (NN ou) (JJ =) (NNS groups)) (, ,) (NP (NN dc) (JJ =) (NN example)) (, ,) (NP (NN dc) (JJ =) (NN com)) ('' ')) (, ,) (NP (NP (NNP ldap.SCOPE) (CD _)) (NP (NNP SUBTREE)))) (, ,) (NP (NP (NP (`` `) (NN objectSid)) (NP (QP (JJ =) (NN %)) (NNS s))) (: -) (NP (NP (NP (NN %) (NNS s) (POS ')) (NN %)) (PRN (-LRB- -LRB-) (NP (NP (NNS domain_sid_s)) (, ,) (NP (NN pri_grp_rid))) (-RRB- -RRB-)))) (, ,) (-LRB- -LSB-) (NP (`` `) (NN cn) ('' ') (-RRB- -RSB-))) (-RRB- -RRB-)) (-RRB- -RRB-))))))

root(ROOT-0, RID-3)
dep(RID-3, #-1)
aux(RID-3, Get-2)
amod(group-6, primary-5)
prep_of(RID-3, group-6)
npadvmod(>-8, >-7)
amod(pri_grp_rid-10, >-8)
amod(pri_grp_rid-10, >-9)
dobj(RID-3, pri_grp_rid-10)
amod(s-14, =-11)
amod(s-14, l.search-12)
nn(s-14, _-13)
nsubj(0-58, s-14)
nn(users-19, cn-17)
amod(users-19, =-18)
dep(s-14, users-19)
nn(example-23, dc-21)
amod(example-23, =-22)
appos(users-19, example-23)
nn(com-27, dc-25)
amod(com-27, =-26)
appos(users-19, com-27)
appos(users-19, ldap.SCOPE-30)
num(ldap.SCOPE-30, _-31)
appos(users-19, SUBTREE-32)
nn(tmclaughlin-37, sAMAccountName-35)
amod(tmclaughlin-37, =-36)
dep(users-19, tmclaughlin-37)
punct(primaryGroupID-42, -LSB--40)
appos(tmclaughlin-37, primaryGroupID-42)
punct(primaryGroupID-42, -RSB--44)
punct(s-14, -LSB--46)
dep(s-14, 0-47)
punct(0-47, -RSB--48)
punct(1-50, -LSB--49)
prep(0-47, 1-50)
punct(s-14, -RSB--51)
punct(primaryGroupID-54, -LSB--52)
dep(s-14, primaryGroupID-54)
punct(s-14, -RSB--56)
punct(0-58, -LSB--57)
rcmod(pri_grp_rid-10, 0-58)
punct(domain-62, -RSB--59)
amod(domain-62, #-60)
dep(#-60, Get-61)
iobj(0-58, domain-62)
dep(>-64, SID-63)
iobj(0-58, >-64)
npadvmod(>-66, >-65)
amod(domain_sid-67, >-66)
iobj(0-58, domain_sid-67)
amod(s-71, =-68)
amod(s-71, l.search-69)
nn(s-71, _-70)
dobj(0-58, s-71)
dep(s-71, dc-74)
amod(com-80, =-75)
nn(com-80, example-76)
nn(com-80, dc-78)
amod(com-80, =-79)
dep(dc-74, com-80)
nn(BASE-85, ldap.SCOPE-83)
num(BASE-85, _-84)
appos(com-80, BASE-85)
punct(0-88, -LSB--87)
prep(0-58, 0-88)
punct(0-88, -RSB--89)
punct(1-91, -LSB--90)
tmod(0-58, 1-91)
punct(0-58, -RSB--92)
punct(objectSid-95, -LSB--93)
dobj(0-58, objectSid-95)
punct(objectSid-95, -RSB--97)
punct(0-99, -LSB--98)
prep(objectSid-95, 0-99)
punct(0-58, -RSB--100)
amod(domain-103, #-101)
dep(#-101, Convert-102)
dobj(0-58, domain-103)
tmod(domain-103, SID-104)
aux(string-106, to-105)
vmod(domain-103, string-106)
npadvmod(>-108, form-107)
acomp(string-106, >-108)
dep(>-108, >-109)
amod(domain_sid_s-111, >-110)
dobj(string-106, domain_sid_s-111)
amod(sid2str-113, =-112)
dobj(>-125, sid2str-113)
appos(sid2str-113, domain_sid-115)
dep(Search-118, #-117)
npadvmod(>-125, Search-118)
prep_for(Search-118, group-120)
amod(domain-123, <-122)
prep_with(group-120, domain-123)
tmod(domain-123, SID-124)
dep(domain_sid_s-111, >-125)
dep(>-125, <-127)
nsubj(RID-129, group-128)
ccomp(<-127, RID-129)
amod(value-132, >-130)
nn(value-132, objectSid-131)
dobj(RID-129, value-132)
nsubj(RID-3, >-133)
dep(>-133, >-134)
amod(pprint.pprint-136, >-135)
dep(>-134, pprint.pprint-136)
amod(s-140, l.search-138)
nn(s-140, _-139)
dep(pprint.pprint-136, s-140)
nn(groups-145, ou-143)
amod(groups-145, =-144)
dep(pprint.pprint-136, groups-145)
nn(example-149, dc-147)
amod(example-149, =-148)
appos(groups-145, example-149)
nn(com-153, dc-151)
amod(com-153, =-152)
appos(groups-145, com-153)
appos(groups-145, ldap.SCOPE-156)
num(ldap.SCOPE-156, _-157)
appos(ldap.SCOPE-156, SUBTREE-158)
appos(groups-145, objectSid-161)
quantmod(%-163, =-162)
num(s-164, %-163)
dep(objectSid-161, s-164)
nn(s-167, %-166)
poss(%-169, s-167)
dep(objectSid-161, %-169)
dep(%-169, domain_sid_s-171)
appos(domain_sid_s-171, pri_grp_rid-173)
punct(groups-145, -LSB--176)
dep(groups-145, cn-178)
punct(cn-178, -RSB--180)

[/-LRB- (/-LRB- '/`` CN/NN =/JJ Domain/NN Users/NNS ,/, OU/NN =/JJ Groups/NNS ,/, DC/NN =/JJ example/NN ,/, DC/NN =/JJ com/NN '/'' ,/, 

(ROOT (NP (NP (NP (-LRB- -LSB-)) (-LRB- -LRB-) (NP (NP (`` `) (NN CN)) (NP (JJ =) (NN Domain)))) (NP (NP (NNS Users)) (, ,) (NP (NP (NN OU) (JJ =) (NNS Groups)) (, ,) (NP (NP (NN DC)) (NP (JJ =) (NN example) (, ,) (NN DC) (JJ =) (NN com) ('' '))) (, ,)))))

root(ROOT-0, -LSB--1)
dep(-LSB--1, CN-4)
amod(Domain-6, =-5)
dep(CN-4, Domain-6)
dep(-LSB--1, Users-7)
nn(Groups-11, OU-9)
amod(Groups-11, =-10)
appos(Users-7, Groups-11)
appos(Groups-11, DC-13)
amod(com-19, =-14)
nn(com-19, example-15)
nn(com-19, DC-17)
amod(com-19, =-18)
dep(DC-13, com-19)

{/-LRB- '/`` cn/NN '/'' :/: [/-LRB- '/`` Domain/NN Users/NNS '/POS ]/-RRB- }/-RRB- )/-RRB- ]/-RRB- 

(ROOT (S (-LRB- -LCB-) (NP (`` `) (NN cn) ('' ')) (VP (: :) (NP (NP (-LRB- -LSB-)) (`` `) (NP (NP (NN Domain) (NNS Users) (POS ')) (-RRB- -RSB-)) (-RRB- -RCB-))) (-RRB- -RRB-) (-RRB- -RSB-)))

root(ROOT-0, -LSB--6)
nsubj(-LSB--6, cn-3)
nn(Users-9, Domain-8)
dep(-LSB--6, Users-9)
punct(Users-9, -RSB--11)
punct(-LSB--6, -RSB--14)

--/: 

(ROOT (NP (: --)))


I/PRP have/VBP some/DT more/JJR on/IN AD/NN primary/JJ groups/NNS here/RB :/: http://blogs.freebsdish.org/tmclaugh/2010/07/21/finding-a-users-primary-group-in-ad//NN 

(ROOT (S (NP (PRP I)) (VP (VBP have) (NP (NP (NP (DT some) (JJR more)) (PP (IN on) (NP (NP (NN AD) (JJ primary) (NNS groups)) (ADVP (RB here))))) (: :) (NP (NN http://blogs.freebsdish.org/tmclaugh/2010/07/21/finding-a-users-primary-group-in-ad/))))))

root(ROOT-0, have-2)
nsubj(have-2, I-1)
det(more-4, some-3)
dobj(have-2, more-4)
nn(groups-8, AD-6)
amod(groups-8, primary-7)
prep_on(more-4, groups-8)
advmod(groups-8, here-9)
dep(more-4, http://blogs.freebsdish.org/tmclaugh/2010/07/21/finding-a-users-primary-group-in-ad/-11)

