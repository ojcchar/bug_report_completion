When/WRB I/PRP set/VBD LogLevel/NNP to/TO debug/VB ,/, debug/VB level/NN log/NN messages/NNS from/IN mod_ldap/NN are/VBP going/VBG to/TO stdout/NN rather/RB than/IN my/PRP$ ErrorLog/NNP ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBD set) (S (NP (NNP LogLevel)) (VP (TO to) (VP (VB debug))))))) (, ,) (VP (VB debug) (SBAR (S (NP (NP (NN level) (NN log) (NNS messages)) (PP (IN from) (NP (NN mod_ldap)))) (VP (VBP are) (VP (VBG going) (PP (TO to) (NP (NP (NN stdout)) (CONJP (RB rather) (IN than)) (NP (PRP$ my) (NNP ErrorLog))))))))) (. .)))

root(ROOT-0, debug-8)
advmod(set-3, When-1)
nsubj(set-3, I-2)
advcl(debug-8, set-3)
dobj(set-3, LogLevel-4)
aux(debug-6, to-5)
xcomp(set-3, debug-6)
nn(messages-11, level-9)
nn(messages-11, log-10)
nsubj(going-15, messages-11)
prep_from(messages-11, mod_ldap-13)
aux(going-15, are-14)
ccomp(debug-8, going-15)
prep_to(going-15, stdout-17)
poss(ErrorLog-21, my-20)
prep_to(going-15, ErrorLog-21)
conj_negcc(stdout-17, ErrorLog-21)

