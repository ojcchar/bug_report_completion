When/WRB trying/VBG to/TO start/VB Apache/NNP I/PRP get/VBP this/DT message/NN in/IN my/PRP$ log/NN :/: "/'' [/-LRB- Thu/NNP Dec/NNP 23/CD 07:47:39/CD 2004/CD ]/-RRB- [/-LRB- crit/NN ]/-RRB- (/-LRB- OS/NN 2/CD )/-RRB- The/DT system/NN can/MD not/RB find/VB the/DT file/NN specified/VBN ./. 

(ROOT (S (S (SBAR (WHADVP (WRB When)) (S (VP (VBG trying) (S (VP (TO to) (VP (VB start) (NP (NNP Apache)))))))) (NP (PRP I)) (VP (VBP get) (NP (NP (DT this) (NN message)) (PP (IN in) (NP (PRP$ my) (NN log)))))) (: :) ('' '') (PP (-LRB- -LSB-) (NP (NP (NNP Thu) (NNP Dec) (CD 23)) (SBAR (S (NP (NP (CD 07:47:39) (CD 2004)) (PP (-RRB- -RSB-) (NP (NP (-LRB- -LSB-) (NN crit)) (-RRB- -RSB-) (PRN (-LRB- -LRB-) (NP (NN OS) (CD 2)) (-RRB- -RRB-)) (NP (DT The) (NN system))))) (VP (MD can) (RB not) (VP (VB find) (NP (NP (DT the) (NN file)) (VP (VBN specified))))))))) (. .)))

root(ROOT-0, get-7)
advmod(trying-2, When-1)
advcl(get-7, trying-2)
aux(start-4, to-3)
xcomp(trying-2, start-4)
dobj(start-4, Apache-5)
nsubj(get-7, I-6)
det(message-9, this-8)
dobj(get-7, message-9)
poss(log-12, my-11)
prep_in(message-9, log-12)
punct(Dec-17, -LSB--15)
nn(Dec-17, Thu-16)
prep(get-7, Dec-17)
num(Dec-17, 23-18)
num(2004-20, 07:47:39-19)
nsubj(find-33, 2004-20)
punct(crit-23, -RSB--21)
punct(crit-23, -LSB--22)
prep(2004-20, crit-23)
punct(crit-23, -RSB--24)
appos(crit-23, OS-26)
num(OS-26, 2-27)
det(system-30, The-29)
dep(crit-23, system-30)
aux(find-33, can-31)
neg(find-33, not-32)
rcmod(Dec-17, find-33)
det(file-35, the-34)
dobj(find-33, file-35)
vmod(file-35, specified-36)

:/: Parent/NNP :/: Unable/JJ to/TO connect/VB child/NN stdout/NN to/TO NUL/NN ./. 

(ROOT (NP (: :) (NP (NP (NNP Parent)) (: :) (NP (NP (ADJP (JJ Unable) (S (VP (TO to) (VP (VB connect) (NP (NN child)))))) (NN stdout)) (PP (TO to) (NP (NN NUL))))) (. .)))

root(ROOT-0, Parent-2)
amod(stdout-8, Unable-4)
aux(connect-6, to-5)
xcomp(Unable-4, connect-6)
dobj(connect-6, child-7)
dep(Parent-2, stdout-8)
prep_to(stdout-8, NUL-10)

\/NN n/NN [/-LRB- Thu/NNP Dec/NNP 23/CD 07:47:39/CD 2004/CD ]/-RRB- [/-LRB- crit/NN ]/-RRB- (/-LRB- OS/NN 2/CD )/-RRB- The/DT system/NN can/MD not/RB find/VB the/DT file/NN specified/VBN ./. 

(ROOT (S (NP (NN \) (NN n) (-LRB- -LSB-) (NNP Thu)) (NP-TMP (NNP Dec) (CD 23)) (NP (NP (CD 07:47:39) (CD 2004)) (PP (-RRB- -RSB-) (NP (NP (-LRB- -LSB-) (NN crit)) (-RRB- -RSB-) (PRN (-LRB- -LRB-) (NP (NN OS) (CD 2)) (-RRB- -RRB-)) (NP (DT The) (NN system))))) (VP (MD can) (RB not) (VP (VB find) (NP (NP (DT the) (NN file)) (VP (VBN specified))))) (. .)))

root(ROOT-0, find-21)
nn(Thu-4, \-1)
nn(Thu-4, n-2)
punct(Thu-4, -LSB--3)
nsubj(find-21, Thu-4)
tmod(find-21, Dec-5)
num(Dec-5, 23-6)
num(2004-8, 07:47:39-7)
nsubj(find-21, 2004-8)
punct(crit-11, -RSB--9)
punct(crit-11, -LSB--10)
prep(2004-8, crit-11)
punct(crit-11, -RSB--12)
appos(crit-11, OS-14)
num(OS-14, 2-15)
det(system-18, The-17)
dep(crit-11, system-18)
aux(find-21, can-19)
neg(find-21, not-20)
det(file-23, the-22)
dobj(find-21, file-23)
vmod(file-23, specified-24)

:/: master_main/NN :/: create/VB child/NN process/NN failed/VBD ./. 

(ROOT (NP (: :) (NP (NP (NN master_main)) (: :) (S (S (VP (VB create) (NP (NN child) (NN process)))) (VP (VBD failed)))) (. .)))

root(ROOT-0, master_main-2)
csubj(failed-7, create-4)
nn(process-6, child-5)
dobj(create-4, process-6)
dep(master_main-2, failed-7)

Exiting/VBG ./. "/'' 

(ROOT (FRAG (S (VP (VBG Exiting))) (. .) ('' '')))

root(ROOT-0, Exiting-1)

It/PRP would/MD help/VB a/DT lot/NN to/TO get/VB to/TO know/VB :/: 

(ROOT (S (NP (PRP It)) (VP (MD would) (VP (VB help) (NP (DT a) (NN lot) (S (VP (TO to) (VP (VB get) (S (VP (TO to) (VP (VB know)))))))))) (: :)))

root(ROOT-0, help-3)
nsubj(help-3, It-1)
aux(help-3, would-2)
det(lot-5, a-4)
dobj(help-3, lot-5)
aux(get-7, to-6)
vmod(lot-5, get-7)
aux(know-9, to-8)
xcomp(get-7, know-9)

*/SYM What/WP module/NN is/VBZ reporting/VBG this/DT error/NN 

(ROOT (X (X (SYM *)) (NP (NP (WP What) (NN module)) (SBAR (S (VP (VBZ is) (VP (VBG reporting) (NP (DT this) (NN error)))))))))

root(ROOT-0, module-3)
dep(module-3, *-1)
det(module-3, What-2)
aux(reporting-5, is-4)
rcmod(module-3, reporting-5)
det(error-7, this-6)
dobj(reporting-5, error-7)

*/SYM What/WP file/NN could/MD not/RB be/VB found/VBN 

(ROOT (X (X (SYM *)) (NP (NP (WP What) (NN file)) (SBAR (S (VP (MD could) (RB not) (VP (VB be) (VP (VBN found)))))))))

root(ROOT-0, file-3)
dep(file-3, *-1)
det(file-3, What-2)
aux(found-7, could-4)
neg(found-7, not-5)
auxpass(found-7, be-6)
rcmod(file-3, found-7)

*/SYM What/WP is/VBZ the/DT use/NN of/IN the/DT file/NN 

(ROOT (FRAG (X (X (SYM *)) (NP (WP What))) (VP (VBZ is) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (DT the) (NN file)))))))

root(ROOT-0, use-5)
dep(What-2, *-1)
dep(use-5, What-2)
cop(use-5, is-3)
det(use-5, the-4)
det(file-8, the-7)
prep_of(use-5, file-8)

This/DT could/MD be/VB achieved/VBN by/IN better/JJR documentation/NN and/CC logging/VBG in/IN code/NN ./. 

(ROOT (S (NP (DT This)) (VP (MD could) (VP (VB be) (VP (VBN achieved) (PP (IN by) (NP (NP (JJR better) (NN documentation)) (CC and) (NP (NP (VBG logging)) (PP (IN in) (NP (NN code))))))))) (. .)))

root(ROOT-0, achieved-4)
nsubjpass(achieved-4, This-1)
aux(achieved-4, could-2)
auxpass(achieved-4, be-3)
amod(documentation-7, better-6)
agent(achieved-4, documentation-7)
agent(achieved-4, logging-9)
conj_and(documentation-7, logging-9)
prep_in(logging-9, code-11)

It/PRP might/MD not/RB be/VB considered/VBN as/IN a/DT bug/NN ,/, but/CC I/PRP feel/VBP it/PRP belongs/VBZ in/IN Bugzilla/NNP because/IN the/DT logfile/JJ fails/VBZ to/TO explain/VB what/WP really/RB happened/VBD ./. 

(ROOT (S (S (NP (PRP It)) (VP (MD might) (RB not) (VP (VB be) (VP (VBN considered) (PP (IN as) (NP (DT a) (NN bug))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP feel) (SBAR (S (NP (PRP it)) (VP (VBZ belongs) (PP (IN in) (NP (NNP Bugzilla))) (SBAR (IN because) (S (NP (DT the) (JJ logfile)) (VP (VBZ fails) (S (VP (TO to) (VP (VB explain) (SBAR (WHNP (WP what)) (S (ADVP (RB really)) (VP (VBD happened))))))))))))))) (. .)))

root(ROOT-0, considered-5)
nsubjpass(considered-5, It-1)
aux(considered-5, might-2)
neg(considered-5, not-3)
auxpass(considered-5, be-4)
det(bug-8, a-7)
prep_as(considered-5, bug-8)
nsubj(feel-12, I-11)
conj_but(considered-5, feel-12)
nsubj(belongs-14, it-13)
ccomp(feel-12, belongs-14)
prep_in(belongs-14, Bugzilla-16)
mark(fails-20, because-17)
det(logfile-19, the-18)
nsubj(fails-20, logfile-19)
advcl(belongs-14, fails-20)
aux(explain-22, to-21)
xcomp(fails-20, explain-22)
nsubj(happened-25, what-23)
advmod(happened-25, really-24)
ccomp(explain-22, happened-25)

The/DT loglevel/NN was/VBD set/VBN to/TO debug/VB and/CC the/DT "/`` error/NN "/'' has/VBZ been/VBN reported/VBN on/IN three/CD different/JJ installation/NN with/IN various/JJ configurations/NNS ./. 

(ROOT (S (S (NP (DT The) (NN loglevel)) (VP (VBD was) (VP (VBN set) (S (VP (TO to) (VP (VB debug))))))) (CC and) (S (NP (DT the) (`` ``) (NN error) ('' '')) (VP (VBZ has) (VP (VBN been) (VP (VBN reported) (PP (IN on) (NP (NP (CD three) (JJ different) (NN installation)) (PP (IN with) (NP (JJ various) (NNS configurations))))))))) (. .)))

root(ROOT-0, set-4)
det(loglevel-2, The-1)
nsubjpass(set-4, loglevel-2)
auxpass(set-4, was-3)
aux(debug-6, to-5)
xcomp(set-4, debug-6)
det(error-10, the-8)
nsubjpass(reported-14, error-10)
aux(reported-14, has-12)
auxpass(reported-14, been-13)
conj_and(set-4, reported-14)
num(installation-18, three-16)
amod(installation-18, different-17)
prep_on(reported-14, installation-18)
amod(configurations-21, various-20)
prep_with(installation-18, configurations-21)

One/CD of/IN them/PRP trying/VBG to/TO host/NN Bugzilla/NN ./. 

(ROOT (NP (NP (CD One)) (PP (IN of) (S (NP (PRP them)) (VP (VBG trying) (PP (TO to) (NP (NN host) (NN Bugzilla)))))) (. .)))

root(ROOT-0, One-1)
nsubj(trying-4, them-3)
prepc_of(One-1, trying-4)
nn(Bugzilla-7, host-6)
prep_to(trying-4, Bugzilla-7)

