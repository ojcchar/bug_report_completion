Created/VBN attachment/NN 23900/CD Fix/VB memory/NN leak/NN in/IN 2.0/CD mod_mem_cache/NN 

(ROOT (VP (VBN Created) (S (NP (NN attachment) (CD 23900)) (VP (VB Fix) (NP (NN memory) (NN leak)) (PP (IN in) (NP (CD 2.0) (NN mod_mem_cache)))))))

root(ROOT-0, Created-1)
nsubj(Fix-4, attachment-2)
num(attachment-2, 23900-3)
ccomp(Created-1, Fix-4)
nn(leak-6, memory-5)
dobj(Fix-4, leak-6)
num(mod_mem_cache-9, 2.0-8)
prep_in(Fix-4, mod_mem_cache-9)

In/IN 2.0.x/NN ,/, mod_mem_cache/NN has/VBZ a/DT memory/NN leak/NN ./. 

(ROOT (S (PP (IN In) (NP (NN 2.0.x))) (, ,) (NP (NN mod_mem_cache)) (VP (VBZ has) (NP (DT a) (NN memory) (NN leak))) (. .)))

root(ROOT-0, has-5)
prep_in(has-5, 2.0.x-2)
nsubj(has-5, mod_mem_cache-4)
det(leak-8, a-6)
nn(leak-8, memory-7)
dobj(has-5, leak-8)

The/DT attached/VBN patch/NN corrects/VBZ it/PRP ./. 

(ROOT (S (NP (DT The) (VBN attached) (NN patch)) (VP (VBZ corrects) (NP (PRP it))) (. .)))

root(ROOT-0, corrects-4)
det(patch-3, The-1)
amod(patch-3, attached-2)
nsubj(corrects-4, patch-3)
dobj(corrects-4, it-5)

The/DT problem/NN does/VBZ n't/RB happen/VB in/IN 2.2/CD or/CC trunk/NN ,/, since/IN mod_mem_cache/NN 's/POS memory/NN management/NN was/VBD completely/RB re-written/JJ for/IN 2.2/CD ./. 

(ROOT (S (NP (DT The) (NN problem)) (VP (VBZ does) (RB n't) (VP (VB happen) (PP (IN in) (NP (NP (CD 2.2)) (CC or) (NP (NN trunk)))) (, ,) (SBAR (IN since) (S (NP (NP (NN mod_mem_cache) (POS 's)) (NN memory) (NN management)) (VP (VBD was) (ADJP (RB completely) (JJ re-written)) (PP (IN for) (NP (CD 2.2)))))))) (. .)))

root(ROOT-0, happen-5)
det(problem-2, The-1)
nsubj(happen-5, problem-2)
aux(happen-5, does-3)
neg(happen-5, n't-4)
prep_in(happen-5, 2.2-7)
prep_in(happen-5, trunk-9)
conj_or(2.2-7, trunk-9)
mark(re-written-18, since-11)
poss(management-15, mod_mem_cache-12)
nn(management-15, memory-14)
nsubj(re-written-18, management-15)
cop(re-written-18, was-16)
advmod(re-written-18, completely-17)
advcl(happen-5, re-written-18)
prep_for(re-written-18, 2.2-20)

The/DT leak/NN occurs/VBZ when/WRB a/DT cache/NN entry/NN expires/VBZ ,/, the/DT cache/NN determines/VBZ that/IN it/PRP is/VBZ still/RB valid/JJ ,/, and/CC updates/NNS the/DT headers/NNS saved/VBN in/IN the/DT cache/NN entry/NN ./. 

(ROOT (S (S (NP (DT The) (NN leak)) (VP (VBZ occurs) (SBAR (WHADVP (WRB when)) (S (NP (DT a) (NN cache) (NN entry)) (VP (VBZ expires)))))) (PRN (, ,) (S (NP (DT the) (NN cache)) (VP (VBZ determines) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (ADVP (RB still)) (ADJP (JJ valid))))))) (, ,)) (CC and) (S (NP (NP (NNS updates)) (NP (DT the) (NNS headers))) (VP (VBN saved) (PP (IN in) (NP (DT the) (NN cache) (NN entry))))) (. .)))

root(ROOT-0, occurs-3)
det(leak-2, The-1)
nsubj(occurs-3, leak-2)
advmod(expires-8, when-4)
det(entry-7, a-5)
nn(entry-7, cache-6)
nsubj(expires-8, entry-7)
advcl(occurs-3, expires-8)
det(cache-11, the-10)
nsubj(determines-12, cache-11)
dep(occurs-3, determines-12)
mark(valid-17, that-13)
nsubj(valid-17, it-14)
cop(valid-17, is-15)
advmod(valid-17, still-16)
ccomp(determines-12, valid-17)
nsubj(saved-23, updates-20)
det(headers-22, the-21)
dep(updates-20, headers-22)
conj_and(occurs-3, saved-23)
det(entry-27, the-25)
nn(entry-27, cache-26)
prep_in(saved-23, entry-27)

The/DT previously/RB saved/VBN headers/NNS are/VBP never/RB freed/VBN ./. 

(ROOT (S (NP (DT The) (ADJP (RB previously) (VBN saved)) (NNS headers)) (VP (VBP are) (ADVP (RB never)) (VP (VBN freed))) (. .)))

root(ROOT-0, freed-7)
det(headers-4, The-1)
advmod(saved-3, previously-2)
amod(headers-4, saved-3)
nsubjpass(freed-7, headers-4)
auxpass(freed-7, are-5)
neg(freed-7, never-6)

Simply/RB adding/VBG free/JJ (/-LRB- )/-RRB- calls/VBZ before/IN saving/VBG the/DT new/JJ headers/NNS resulted/VBD in/IN instability/NN under/IN load/NN ,/, as/IN other/JJ threads/NNS might/MD still/RB be/VB accessing/VBG the/DT older/JJR saved/VBN headers/NNS ./. 

(ROOT (SINV (ADVP (RB Simply)) (VP (VBG adding) (ADJP (JJ free))) (PRN (-LRB- -LRB-) (-RRB- -RRB-) (VP (VBZ calls) (PP (IN before) (S (VP (VBG saving) (NP (DT the) (JJ new) (NNS headers))))))) (VP (VBD resulted) (PP (IN in) (NP (NN instability))) (PP (IN under))) (NP (NP (NN load)) (, ,) (SBAR (IN as) (S (NP (JJ other) (NNS threads)) (VP (MD might) (ADVP (RB still)) (VP (VB be) (VP (VBG accessing) (NP (NP (DT the) (JJR older)) (VP (VBN saved) (NP (NNS headers)))))))))) (. .)))

root(ROOT-0, adding-2)
advmod(adding-2, Simply-1)
acomp(adding-2, free-3)
dep(adding-2, calls-6)
prepc_before(calls-6, saving-8)
det(headers-11, the-9)
amod(headers-11, new-10)
dobj(saving-8, headers-11)
dep(adding-2, resulted-12)
prep_in(resulted-12, instability-14)
prep(resulted-12, under-15)
nsubj(adding-2, load-16)
mark(accessing-24, as-18)
amod(threads-20, other-19)
nsubj(accessing-24, threads-20)
aux(accessing-24, might-21)
advmod(accessing-24, still-22)
aux(accessing-24, be-23)
dep(load-16, accessing-24)
det(older-26, the-25)
dobj(accessing-24, older-26)
vmod(older-26, saved-27)
dobj(saved-27, headers-28)

The/DT patch/NN looks/VBZ at/IN the/DT reference/NN count/NN ,/, and/CC if/IN it/PRP might/MD not/RB be/VB safe/JJ to/TO free/VB the/DT old/JJ headers/NNS yet/RB ,/, remembers/VBZ the/DT pointers/NNS to/TO free/VB them/PRP later/RB ./. 

(ROOT (S (S (NP (DT The) (NN patch)) (VP (VBZ looks) (PP (IN at) (NP (DT the) (NN reference) (NN count))))) (, ,) (CC and) (S (SBAR (IN if) (S (NP (PRP it)) (VP (MD might) (RB not) (VP (VB be) (ADJP (JJ safe) (S (VP (TO to) (VP (VB free) (NP (DT the) (JJ old) (NNS headers)) (ADVP (RB yet))))))))) (, ,)) (VP (VBZ remembers) (S (NP (DT the) (NNS pointers)) (VP (TO to) (VP (VB free) (NP (PRP them)) (ADVP (RB later))))))) (. .)))

root(ROOT-0, looks-3)
det(patch-2, The-1)
nsubj(looks-3, patch-2)
det(count-7, the-5)
nn(count-7, reference-6)
prep_at(looks-3, count-7)
mark(safe-15, if-10)
nsubj(safe-15, it-11)
aux(safe-15, might-12)
neg(safe-15, not-13)
cop(safe-15, be-14)
csubj(remembers-23, safe-15)
aux(free-17, to-16)
xcomp(safe-15, free-17)
det(headers-20, the-18)
amod(headers-20, old-19)
dobj(free-17, headers-20)
advmod(free-17, yet-21)
conj_and(looks-3, remembers-23)
det(pointers-25, the-24)
dobj(remembers-23, pointers-25)
aux(free-27, to-26)
xcomp(remembers-23, free-27)
dobj(free-27, them-28)
advmod(free-27, later-29)

Some/DT alternative/JJ approaches/NNS would/MD have/VB been/VBN to/TO use/VB a/DT process-wide/JJ lock/NN to/TO make/VB sure/JJ no/DT other/JJ thread/NN could/MD access/VB the/DT entry/NN at/IN the/DT same/JJ time/NN ,/, but/CC that/DT would/MD likely/RB have/VB had/VBN terrible/JJ effects/NNS on/IN performance/NN ./. 

(ROOT (S (S (NP (DT Some) (JJ alternative) (NNS approaches)) (VP (MD would) (VP (VB have) (VP (VBN been) (S (VP (TO to) (VP (VB use) (NP (DT a) (JJ process-wide) (NN lock)) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (DT no) (JJ other) (NN thread)) (VP (MD could) (VP (VB access) (NP (DT the) (NN entry)) (PP (IN at) (NP (DT the) (JJ same) (NN time)))))))))))))))))) (, ,) (CC but) (S (NP (DT that)) (VP (MD would) (ADVP (RB likely)) (VP (VB have) (VP (VBN had) (NP (NP (JJ terrible) (NNS effects)) (PP (IN on) (NP (NN performance)))))))) (. .)))

root(ROOT-0, been-6)
det(approaches-3, Some-1)
amod(approaches-3, alternative-2)
nsubj(been-6, approaches-3)
aux(been-6, would-4)
aux(been-6, have-5)
aux(use-8, to-7)
xcomp(been-6, use-8)
det(lock-11, a-9)
amod(lock-11, process-wide-10)
dobj(use-8, lock-11)
aux(make-13, to-12)
vmod(use-8, make-13)
acomp(make-13, sure-14)
neg(thread-17, no-15)
amod(thread-17, other-16)
nsubj(access-19, thread-17)
aux(access-19, could-18)
ccomp(sure-14, access-19)
det(entry-21, the-20)
dobj(access-19, entry-21)
det(time-25, the-23)
amod(time-25, same-24)
prep_at(access-19, time-25)
nsubj(had-32, that-28)
aux(had-32, would-29)
advmod(had-32, likely-30)
aux(had-32, have-31)
conj_but(been-6, had-32)
amod(effects-34, terrible-33)
dobj(had-32, effects-34)
prep_on(effects-34, performance-36)

Or/CC a/DT per-cache-entry/JJ lock/NN might/MD have/VB been/VBN used/VBN ,/, but/CC managing/VBG those/DT would/MD require/VB a/DT pool/NN for/IN each/DT cache/NN entry/NN ,/, and/CC by/IN the/DT time/NN that/WDT was/VBD all/DT done/VBN ,/, we/PRP 'd/MD be/VB half-way/JJ to/TO the/DT 2.2/CD code/NN anyway/RB ./. 

(ROOT (S (CC Or) (S (NP (DT a) (JJ per-cache-entry) (NN lock)) (VP (MD might) (VP (VB have) (VP (VBN been) (VP (VBN used)))))) (, ,) (CC but) (S (S (VP (VBG managing) (SBAR (S (NP (DT those)) (VP (MD would) (VP (VB require) (NP (DT a) (NN pool)) (PP (PP (IN for) (NP (DT each) (NN cache) (NN entry))) (, ,) (CC and) (PP (IN by) (NP (NP (DT the) (NN time)) (SBAR (WHNP (WDT that)) (S (VP (VBD was) (VP (ADVP (DT all)) (VBN done)))))))))))))) (, ,) (NP (PRP we)) (VP (MD 'd) (VP (VB be) (ADJP (JJ half-way) (PP (TO to) (NP (DT the) (CD 2.2) (NN code)))) (ADVP (RB anyway))))) (. .)))

root(ROOT-0, used-8)
det(lock-4, a-2)
amod(lock-4, per-cache-entry-3)
nsubjpass(used-8, lock-4)
aux(used-8, might-5)
aux(used-8, have-6)
auxpass(used-8, been-7)
vmod(half-way-34, managing-11)
nsubj(require-14, those-12)
nsubj(require-14', those-12)
aux(require-14, would-13)
ccomp(managing-11, require-14)
ccomp(managing-11, require-14')
conj_and(require-14, require-14')
det(pool-16, a-15)
dobj(require-14, pool-16)
det(entry-20, each-18)
nn(entry-20, cache-19)
prep_for(require-14, entry-20)
det(time-25, the-24)
prep_by(require-14', time-25)
nsubjpass(done-29, that-26)
auxpass(done-29, was-27)
advmod(done-29, all-28)
rcmod(time-25, done-29)
nsubj(half-way-34, we-31)
aux(half-way-34, 'd-32)
cop(half-way-34, be-33)
conj_but(used-8, half-way-34)
det(code-38, the-36)
num(code-38, 2.2-37)
prep_to(half-way-34, code-38)
advmod(half-way-34, anyway-39)

I/PRP 've/VBP run/VBN this/DT for/IN hours/NNS ,/, and/CC a/DT slightly/RB earlier/JJR version/NN for/IN days/NNS ,/, under/IN the/DT same/JJ load/NN that/WDT originally/RB reproduced/VBD the/DT memory/NN leak/NN and/CC then/RB the/DT instability/NN with/IN the/DT simple/JJ fix/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP 've) (VP (VBN run) (NP (NP (NP (DT this)) (PP (IN for) (NP (NNS hours)))) (, ,) (CC and) (NP (DT a) (ADJP (RB slightly) (JJR earlier)) (NN version))) (PP (IN for) (NP (NNS days))) (, ,) (PP (IN under) (NP (NP (DT the) (JJ same) (NN load)) (SBAR (WHNP (WDT that)) (S (ADVP (RB originally)) (VP (VBD reproduced) (NP (NP (DT the) (NN memory) (NN leak)) (CC and) (ADVP (RB then)) (NP (DT the) (NN instability))) (PP (IN with) (NP (DT the) (JJ simple) (NN fix)))))))))) (. .)))

root(ROOT-0, run-3)
nsubj(run-3, I-1)
aux(run-3, 've-2)
dobj(run-3, this-4)
prep_for(this-4, hours-6)
det(version-12, a-9)
advmod(earlier-11, slightly-10)
amod(version-12, earlier-11)
dobj(run-3, version-12)
conj_and(this-4, version-12)
prep_for(run-3, days-14)
det(load-19, the-17)
amod(load-19, same-18)
prep_under(run-3, load-19)
nsubj(reproduced-22, that-20)
advmod(reproduced-22, originally-21)
rcmod(load-19, reproduced-22)
det(leak-25, the-23)
nn(leak-25, memory-24)
dobj(reproduced-22, leak-25)
advmod(instability-29, then-27)
det(instability-29, the-28)
dobj(reproduced-22, instability-29)
conj_and(leak-25, instability-29)
det(fix-33, the-31)
amod(fix-33, simple-32)
prep_with(reproduced-22, fix-33)

I/PRP do/VBP n't/RB know/VB if/IN mod_mem_cache/NN in/IN 2.0/CD is/VBZ used/VBN widely/RB enough/JJ to/TO warrant/VB fixing/VBG this/DT ./. 

(ROOT (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB know) (SBAR (IN if) (S (NP (NP (NN mod_mem_cache)) (PP (IN in) (NP (CD 2.0)))) (VP (VBZ is) (VP (VBN used) (ADJP (RB widely) (JJ enough) (S (VP (TO to) (VP (VB warrant) (S (VP (VBG fixing) (NP (DT this)))))))))))))) (. .)))

root(ROOT-0, know-4)
nsubj(know-4, I-1)
aux(know-4, do-2)
neg(know-4, n't-3)
mark(used-10, if-5)
nsubjpass(used-10, mod_mem_cache-6)
prep_in(mod_mem_cache-6, 2.0-8)
auxpass(used-10, is-9)
advcl(know-4, used-10)
advmod(enough-12, widely-11)
acomp(used-10, enough-12)
aux(warrant-14, to-13)
xcomp(enough-12, warrant-14)
xcomp(warrant-14, fixing-15)
dobj(fixing-15, this-16)

I/PRP 'd/MD rather/RB just/RB move/VB to/TO 2.2/CD myself/PRP ,/, but/CC could/MD n't/RB in/IN this/DT case/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VP (MD 'd) (RB rather) (ADVP (RB just)) (VP (VB move) (PP (TO to) (NP (CD 2.2))) (NP (PRP myself)))) (, ,) (CC but) (VP (MD could) (RB n't))) (PP (IN in) (NP (DT this) (NN case))) (. .)))

root(ROOT-0, move-5)
nsubj(move-5, I-1)
aux(move-5, 'd-2)
advmod(move-5, rather-3)
advmod(move-5, just-4)
prep_to(move-5, 2.2-7)
dobj(move-5, myself-8)
conj_but(move-5, could-11)
neg(could-11, n't-12)
det(case-15, this-14)
prep_in(move-5, case-15)

But/CC I/PRP wanted/VBD to/TO at/IN least/JJS provide/VB the/DT patch/NN ,/, in/IN case/NN someone/NN else/RB is/VBZ running/VBG into/IN the/DT problem/NN ./. 

(ROOT (S (CC But) (NP (PRP I)) (VP (VBD wanted) (S (VP (TO to) (VP (ADVP (IN at) (JJS least)) (VB provide) (NP (DT the) (NN patch))))) (, ,) (PP (IN in) (NP (NP (NN case)) (SBAR (S (NP (NN someone) (RB else)) (VP (VBZ is) (VP (VBG running) (PP (IN into) (NP (DT the) (NN problem)))))))))) (. .)))

root(ROOT-0, wanted-3)
cc(wanted-3, But-1)
nsubj(wanted-3, I-2)
aux(provide-7, to-4)
advmod(provide-7, at-5)
pobj(at-5, least-6)
xcomp(wanted-3, provide-7)
det(patch-9, the-8)
dobj(provide-7, patch-9)
prep_in(wanted-3, case-12)
nsubj(running-16, someone-13)
advmod(someone-13, else-14)
aux(running-16, is-15)
rcmod(case-12, running-16)
det(problem-19, the-18)
prep_into(running-16, problem-19)

