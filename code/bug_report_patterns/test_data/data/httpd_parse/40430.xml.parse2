httpd-2/NN .2.3/CD //: docs/error/HTTP/NN _/CD VARIANT_ALSO_VARIES/NN ./. 

(ROOT (FRAG (FRAG (NP (NN httpd-2)) (NP (CD .2.3))) (: /) (FRAG (NP (NN docs/error/HTTP)) (NP (CD _) (NN VARIANT_ALSO_VARIES)) (. .))))

root(ROOT-0, httpd-2-1)
dep(httpd-2-1, .2.3-2)
punct(httpd-2-1, /-3)
dep(httpd-2-1, docs/error/HTTP-4)
num(VARIANT_ALSO_VARIES-6, _-5)
dep(docs/error/HTTP-4, VARIANT_ALSO_VARIES-6)

html.var/NN contains/VBZ an/DT "/'' &/CC acute/JJ ;/: "/'' in/IN the/DT Italian/JJ message/NN which/WDT is/VBZ not/RB a/DT valid/JJ html/NN entity/NN ./. 

(ROOT (S (S (NP (NN html.var)) (VP (VBZ contains) (NP (NP (DT an) ('' '')) (CC &) (NP (JJ acute))))) (: ;) ('' '') (PP (IN in) (NP (NP (DT the) (JJ Italian) (NN message)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (RB not) (NP (DT a) (JJ valid) (NN html) (NN entity))))))) (. .)))

root(ROOT-0, contains-2)
nsubj(contains-2, html.var-1)
dobj(contains-2, an-3)
dobj(contains-2, acute-6)
conj_and(an-3, acute-6)
det(message-12, the-10)
amod(message-12, Italian-11)
prep_in(contains-2, message-12)
nsubj(entity-19, which-13)
cop(entity-19, is-14)
neg(entity-19, not-15)
det(entity-19, a-16)
amod(entity-19, valid-17)
nn(entity-19, html-18)
rcmod(message-12, entity-19)

I/PRP think/VBP it/PRP should/MD be/VB "/'' &/CC eacute/NN ;/: "/'' but/CC a/DT native/JJ Italian/JJ should/MD confirm/VB it/PRP ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (PRP it)) (VP (MD should) (VP (VB be) ('' '') (NP (CC &) (NN eacute)))))))) (: ;) ('' '') (S (CC but) (NP (DT a) (JJ native) (JJ Italian)) (VP (MD should) (VP (VB confirm) (NP (PRP it))))) (. .)))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
nsubj(eacute-8, it-3)
aux(eacute-8, should-4)
cop(eacute-8, be-5)
cc(eacute-8, &-7)
ccomp(think-2, eacute-8)
cc(confirm-16, but-11)
det(Italian-14, a-12)
amod(Italian-14, native-13)
nsubj(confirm-16, Italian-14)
aux(confirm-16, should-15)
parataxis(think-2, confirm-16)
dobj(confirm-16, it-17)

The/DT whole/JJ context/NN is/VBZ :/: Non/NNP &/CC egrave/NNP ;/: possibile/JJ accedere/NN all/DT '/`` entit/NN &/CC agrave/NN ;/: richiesta/NN perch/NN &/CC eacute/NN ;/: &/CC grave/NN ;/: essa/FW stessa/FW una/FW risorsa/FW negoziabile/NN ./. 

(ROOT (S (NP (DT The) (JJ whole) (NN context)) (VP (VBZ is) (NP (NP (: :) (NP (NP (NNP Non) (CC &) (NNP egrave)) (: ;) (NP (NP (JJ possibile) (NN accedere)) (NP (DT all) (`` `) (NN entit)))) (CC &) (NP (NP (NN agrave)) (: ;) (NP (NP (NN richiesta) (NN perch)) (CC &) (NP (NN eacute))))) (: ;) (CC &) (NP (NP (NN grave)) (: ;) (NP (NP (FW essa) (FW stessa) (FW una) (FW risorsa)) (NP (NN negoziabile)))))) (. .)))

root(ROOT-0, Non-6)
det(context-3, The-1)
amod(context-3, whole-2)
nsubj(Non-6, context-3)
cop(Non-6, is-4)
conj_and(Non-6, egrave-8)
amod(accedere-11, possibile-10)
dep(Non-6, accedere-11)
det(entit-14, all-12)
dep(accedere-11, entit-14)
conj_and(Non-6, agrave-16)
nn(perch-19, richiesta-18)
dep(agrave-16, perch-19)
dep(agrave-16, eacute-21)
conj_and(perch-19, eacute-21)
conj_and(Non-6, grave-24)
nn(risorsa-29, essa-26)
nn(risorsa-29, stessa-27)
nn(risorsa-29, una-28)
dep(grave-24, risorsa-29)
dep(risorsa-29, negoziabile-30)

