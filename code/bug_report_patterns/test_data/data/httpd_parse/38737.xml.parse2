I/PRP covered/VBD much/RB of/IN the/DT background/NN on/IN this/DT in/IN the/DT following/VBG mailing/NN list/NN thread/NN :/: 

(ROOT (S (NP (PRP I)) (VP (VBD covered) (NP (NP (RB much)) (PP (IN of) (NP (DT the) (NN background)))) (PP (IN on) (NP (NP (DT this)) (PP (IN in) (NP (DT the) (VBG following) (NN mailing) (NN list) (NN thread)))))) (: :)))

root(ROOT-0, covered-2)
nsubj(covered-2, I-1)
dobj(covered-2, much-3)
det(background-6, the-5)
prep_of(much-3, background-6)
prep_on(covered-2, this-8)
det(thread-14, the-10)
amod(thread-14, following-11)
nn(thread-14, mailing-12)
nn(thread-14, list-13)
prep_in(this-8, thread-14)

http://marc.theaimsgroup.com/?l=apache-httpd-dev&amp;m=113986864730305&amp;w=2/NN 

(ROOT (NP (NN http://marc.theaimsgroup.com/?l=apache-httpd-dev&amp;m=113986864730305&amp;w=2)))

root(ROOT-0, http://marc.theaimsgroup.com/?l=apache-httpd-dev&amp;m=113986864730305&amp;w=2-1)

The/DT usual/JJ firestorm/NN of/IN discussion/NN broke/VBD out/RP . . ./: anyway/RB ,/, as/IN I/PRP noted/VBD ,/, it/PRP 's/VBZ important/JJ to/TO me/PRP that/IN even/RB if/IN I/PRP issue/VBP an/DT ungraceful/JJ restart/VB or/CC shutdown/NN that/IN the/DT MPM/NNP manages/VBZ ,/, if/IN at/IN all/DT possible/JJ ,/, to/TO call/VB apr_pool_destroy/NN (/-LRB- pchild/NN )/-RRB- ./. 

(ROOT (S (S (NP (NP (DT The) (JJ usual) (NN firestorm)) (PP (IN of) (NP (NN discussion)))) (VP (VBD broke) (PRT (RP out)))) (: ...) (S (ADVP (RB anyway)) (, ,) (SBAR (IN as) (S (NP (PRP I)) (VP (VBD noted)))) (, ,) (NP (PRP it)) (VP (VBZ 's) (ADJP (JJ important) (PP (TO to) (NP (PRP me)))) (SBAR (SBAR (IN that) (SBAR (RB even) (IN if) (S (NP (PRP I)) (VP (VBP issue) (S (NP (DT an) (JJ ungraceful)) (VP (VB restart))))))) (CC or) (SBAR (NP (NN shutdown)) (IN that) (S (NP (DT the) (NNP MPM)) (VP (VBZ manages) (, ,) (SBAR (IN if) (FRAG (ADJP (ADVP (IN at) (DT all)) (JJ possible)))) (, ,) (S (VP (TO to) (VP (VB call) (NP (NP (NN apr_pool_destroy)) (PRN (-LRB- -LRB-) (NP (NN pchild)) (-RRB- -RRB-)))))))))))) (. .)))

root(ROOT-0, broke-6)
det(firestorm-3, The-1)
amod(firestorm-3, usual-2)
nsubj(broke-6, firestorm-3)
prep_of(firestorm-3, discussion-5)
prt(broke-6, out-7)
advmod(important-17, anyway-9)
mark(noted-13, as-11)
nsubj(noted-13, I-12)
advcl(important-17, noted-13)
nsubj(important-17, it-15)
cop(important-17, 's-16)
parataxis(broke-6, important-17)
prep_to(important-17, me-19)
mark(issue-24, that-20)
advmod(issue-24, even-21)
mark(issue-24, if-22)
nsubj(issue-24, I-23)
dep(important-17, issue-24)
det(ungraceful-26, an-25)
nsubj(restart-27, ungraceful-26)
ccomp(issue-24, restart-27)
dep(manages-33, shutdown-29)
mark(manages-33, that-30)
det(MPM-32, the-31)
nsubj(manages-33, MPM-32)
dep(important-17, manages-33)
conj_or(issue-24, manages-33)
mark(possible-38, if-35)
advmod(possible-38, at-36)
pobj(at-36, all-37)
advcl(manages-33, possible-38)
aux(call-41, to-40)
xcomp(manages-33, call-41)
dobj(call-41, apr_pool_destroy-42)
appos(apr_pool_destroy-42, pchild-44)

Otherwise/RB ,/, important/JJ cleanup/NN functions/NNS that/WDT are/VBP registered/VBN against/IN the/DT pool/NN do/VBP n't/RB get/VB invoked/VBN ;/: in/IN my/PRP$ case/NN ,/, that/DT 's/VBZ the/DT DB/NN disconnection/NN cleanups/NNS in/IN mod_dbd/JJ //: apr_dbd/NN ./. 

(ROOT (S (ADVP (RB Otherwise)) (, ,) (NP (NP (JJ important) (NN cleanup) (NNS functions)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBN registered) (PP (IN against) (NP (DT the) (NN pool)))))))) (VP (VBP do) (RB n't) (VP (VP (VB get) (VP (VBN invoked))) (PRN (: ;) (PP (IN in) (NP (NP (PRP$ my) (NN case)) (, ,) (SBAR (WHNP (DT that)) (S (VP (VBZ 's) (NP (NP (DT the) (NN DB) (NN disconnection) (NNS cleanups)) (PP (IN in) (ADJP (JJ mod_dbd))))))))) (: /)) (NP (NN apr_dbd)))) (. .)))

root(ROOT-0, invoked-15)
advmod(invoked-15, Otherwise-1)
amod(functions-5, important-3)
nn(functions-5, cleanup-4)
nsubjpass(invoked-15, functions-5)
nsubjpass(registered-8, that-6)
auxpass(registered-8, are-7)
rcmod(functions-5, registered-8)
det(pool-11, the-10)
prep_against(registered-8, pool-11)
aux(invoked-15, do-12)
neg(invoked-15, n't-13)
auxpass(invoked-15, get-14)
dep(invoked-15, in-17)
poss(case-19, my-18)
pobj(in-17, case-19)
nsubj(cleanups-26, that-21)
cop(cleanups-26, 's-22)
det(cleanups-26, the-23)
nn(cleanups-26, DB-24)
nn(cleanups-26, disconnection-25)
rcmod(case-19, cleanups-26)
prep_in(cleanups-26, mod_dbd-28)
punct(in-17, /-29)
dobj(invoked-15, apr_dbd-30)

To/TO summarize/VB ,/, on/IN Linux/NNP ,/, poll/NN (/-LRB- )/-RRB- does/VBZ n't/RB immediately/RB return/VB with/IN EBADF/NN if/IN another/DT thread/NN closes/VBZ the/DT socket/NN descriptor/NN ,/, as/IN described/VBN here/RB :/: 

(ROOT (FRAG (S (VP (TO To) (VP (VB summarize) (, ,) (PP (IN on) (NP (NP (NNP Linux)) (, ,) (NP (NP (NN poll)) (-LRB- -LRB-) (SBAR (WHNP (-RRB- -RRB-)) (S (VP (VBZ does) (RB n't) (ADVP (RB immediately)) (VP (VB return) (PP (IN with) (NP (NN EBADF))) (SBAR (IN if) (S (NP (DT another) (NN thread)) (VP (VBZ closes) (NP (DT the) (NN socket) (NN descriptor))))))))) (, ,) (SBAR (IN as) (S (VP (VBN described) (ADVP (RB here))))) (: :)))))))))

root(ROOT-0, summarize-2)
aux(summarize-2, To-1)
prep_on(summarize-2, Linux-5)
appos(Linux-5, poll-7)
aux(return-13, does-10)
neg(return-13, n't-11)
advmod(return-13, immediately-12)
rcmod(poll-7, return-13)
prep_with(return-13, EBADF-15)
mark(closes-19, if-16)
det(thread-18, another-17)
nsubj(closes-19, thread-18)
advcl(return-13, closes-19)
det(descriptor-22, the-20)
nn(descriptor-22, socket-21)
dobj(closes-19, descriptor-22)
mark(described-25, as-24)
dep(poll-7, described-25)
advmod(described-25, here-26)

http://bugme.osdl.org/show_bug.cgi?id=546/NN 

(ROOT (NP (NN http://bugme.osdl.org/show_bug.cgi?id=546)))

root(ROOT-0, http://bugme.osdl.org/show_bug.cgi?id=546-1)

When/WRB a/DT worker/NN thread/NN is/VBZ running/VBG process_socket/NN (/-LRB- )/-RRB- ,/, after/IN handling/VBG the/DT request/NN it/PRP then/RB waits/VBZ for/IN the/DT specified/VBN Keep-Alive/JJ period/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (DT a) (NN worker) (NN thread)) (VP (VBZ is) (VP (VBG running) (NP (NP (NN process_socket)) (-LRB- -LRB-) (PP (-RRB- -RRB-)) (, ,)) (PP (IN after) (S (VP (VBG handling) (NP (DT the) (NN request))))))))) (NP (PRP it)) (ADVP (RB then)) (VP (VBZ waits) (PP (IN for) (NP (DT the) (VBN specified) (JJ Keep-Alive) (NN period)))) (. .)))

root(ROOT-0, waits-17)
advmod(running-6, When-1)
det(thread-4, a-2)
nn(thread-4, worker-3)
nsubj(running-6, thread-4)
aux(running-6, is-5)
advcl(waits-17, running-6)
dobj(running-6, process_socket-7)
prepc_after(running-6, handling-12)
det(request-14, the-13)
dobj(handling-12, request-14)
nsubj(waits-17, it-15)
advmod(waits-17, then-16)
det(period-22, the-19)
amod(period-22, specified-20)
amod(period-22, Keep-Alive-21)
prep_for(waits-17, period-22)

This/DT is/VBZ actually/RB done/VBN inside/IN the/DT apr_bucket_read/NN (/-LRB- )/-RRB- in/IN ap_rgetline_core/NN (/-LRB- )/-RRB- ;/: the/DT apr_socket_recv/NN (/-LRB- )/-RRB- function/NN runs/VBZ apr_wait_for_io_or_timeout/NN (/-LRB- )/-RRB- ,/, which/WDT performs/VBZ a/DT poll/NN (/-LRB- )/-RRB- for/IN the/DT Keep-Alive/JJ period/NN ./. 

(ROOT (S (S (NP (DT This)) (VP (VBZ is) (ADVP (RB actually)) (VP (VBN done) (PP (IN inside) (NP (NP (DT the) (NN apr_bucket_read)) (PRN (-LRB- -LRB-) (VP (-RRB- -RRB-) (PP (IN in) (NP (NN ap_rgetline_core) (-LRB- -LRB-)))) (-RRB- -RRB-))))))) (: ;) (S (NP (DT the) (NN apr_socket_recv) (-LRB- -LRB-) (-RRB- -RRB-) (NN function)) (VP (VBZ runs) (NP (NP (NN apr_wait_for_io_or_timeout)) (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ performs) (NP (DT a) (NN poll))))) (-LRB- -LRB-)) (-RRB- -RRB-)) (PP (IN for) (NP (DT the) (JJ Keep-Alive) (NN period)))))) (. .)))

root(ROOT-0, done-4)
nsubjpass(done-4, This-1)
auxpass(done-4, is-2)
advmod(done-4, actually-3)
det(apr_bucket_read-7, the-6)
prep_inside(done-4, apr_bucket_read-7)
dep(apr_bucket_read-7, in-10)
pobj(in-10, ap_rgetline_core-11)
det(function-19, the-15)
nn(function-19, apr_socket_recv-16)
nsubj(runs-20, function-19)
parataxis(done-4, runs-20)
dobj(runs-20, apr_wait_for_io_or_timeout-21)
nsubj(performs-26, which-25)
rcmod(-RRB--23, performs-26)
det(poll-28, a-27)
dobj(performs-26, poll-28)
det(period-34, the-32)
amod(period-34, Keep-Alive-33)
prep_for(apr_wait_for_io_or_timeout-21, period-34)

When/WRB an/DT ungraceful/JJ restart/VB or/CC shutdown/NN message/NN is/VBZ received/VBN by/IN the/DT worker/NN MPM/NNP ,/, it/PRP uses/VBZ close_worker_sockets/NNS (/-LRB- )/-RRB- to/TO close/VB all/PDT the/DT sockets/NNS the/DT worker/NN threads/NNS might/MD be/VB polling/NN on/IN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (S (NP (DT an) (JJ ungraceful)) (VP (VB restart))) (CC or) (S (NP (NN shutdown) (NN message)) (VP (VBZ is) (VP (VBN received) (PP (IN by) (NP (DT the) (NN worker) (NNP MPM)))))))) (, ,) (NP (PRP it)) (VP (VBZ uses) (SBAR (S (NP (NNS close_worker_sockets) (-LRB- -LRB-)) (-RRB- -RRB-) (VP (TO to) (VP (VB close) (NP (NP (PDT all) (DT the) (NNS sockets)) (SBAR (S (NP (DT the) (NN worker) (NNS threads)) (VP (MD might) (VP (VB be) (NP (NN polling)) (PP (IN on)))))))))))) (. .)))

root(ROOT-0, uses-16)
advmod(restart-4, When-1)
det(ungraceful-3, an-2)
nsubj(restart-4, ungraceful-3)
advcl(uses-16, restart-4)
nn(message-7, shutdown-6)
nsubjpass(received-9, message-7)
auxpass(received-9, is-8)
conj_or(restart-4, received-9)
advcl(uses-16, received-9)
det(MPM-13, the-11)
nn(MPM-13, worker-12)
agent(received-9, MPM-13)
nsubj(uses-16, it-15)
nsubj(close-21, close_worker_sockets-17)
aux(close-21, to-20)
ccomp(uses-16, close-21)
predet(sockets-24, all-22)
det(sockets-24, the-23)
dobj(close-21, sockets-24)
det(threads-27, the-25)
nn(threads-27, worker-26)
nsubj(polling-30, threads-27)
aux(polling-30, might-28)
cop(polling-30, be-29)
rcmod(sockets-24, polling-30)
prep(polling-30, on-31)

On/IN Solaris/NNP ,/, for/IN example/NN ,/, that/WDT has/VBZ the/DT side-effect/NN of/IN immediately/RB causing/VBG apr_wait_for_io_or_timeout/NN (/-LRB- )/-RRB- to/TO return/VB EBADF/NN ,/, which/WDT curtails/VBZ all/PDT the/DT calling/VBG functions/NNS until/IN process_socket/NN (/-LRB- )/-RRB- returns/NNS and/CC the/DT worker/NN thread/NN notices/NNS the/DT workers_may_exit/NN flag/NN and/CC exits/NNS ./. 

(ROOT (S (PP (IN On) (NP (NNP Solaris))) (, ,) (S (PP (IN for) (NP (NN example))) (, ,) (NP (WDT that)) (VP (VBZ has) (NP (NP (NP (DT the) (NN side-effect)) (PP (IN of) (S (VP (ADVP (RB immediately)) (VBG causing) (NP (NN apr_wait_for_io_or_timeout)))))) (PRN (-LRB- -LRB-) (-RRB- -RRB-) (S (VP (TO to) (VP (VB return) (NP (NP (NN EBADF)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ curtails) (S (NP (PDT all) (DT the)) (VP (VBG calling) (NP (NNS functions)) (PP (IN until) (NP (NN process_socket)))))))))))) (-LRB- -LRB-) (-RRB- -RRB-)) (NP (NNS returns))))) (CC and) (S (NP (DT the) (NN worker) (NN thread) (NNS notices)) (NP (NP (DT the) (NN workers_may_exit) (NN flag)) (CC and) (NP (NNS exits)))) (. .)))

root(ROOT-0, has-8)
prep_on(has-8, Solaris-2)
prep_for(has-8, example-5)
nsubj(has-8, that-7)
det(side-effect-10, the-9)
dobj(has-8, side-effect-10)
advmod(causing-13, immediately-12)
prepc_of(side-effect-10, causing-13)
dobj(causing-13, apr_wait_for_io_or_timeout-14)
aux(return-18, to-17)
dep(side-effect-10, return-18)
dobj(return-18, EBADF-19)
nsubj(curtails-22, which-21)
rcmod(EBADF-19, curtails-22)
predet(the-24, all-23)
nsubj(calling-25, the-24)
dep(curtails-22, calling-25)
dobj(calling-25, functions-26)
prep_until(calling-25, process_socket-28)
dep(side-effect-10, returns-31)
det(notices-36, the-33)
nn(notices-36, worker-34)
nn(notices-36, thread-35)
dep(flag-39, notices-36)
det(flag-39, the-37)
nn(flag-39, workers_may_exit-38)
conj_and(has-8, flag-39)
conj_and(has-8, exits-41)
conj_and(flag-39, exits-41)

That/DT in/IN turn/NN allows/VBZ join_workers/NNS (/-LRB- )/-RRB- to/TO run/VB to/TO completion/NN ,/, after/IN which/WDT clean_child_exit/NN (/-LRB- )/-RRB- can/MD run/VB the/DT cleanups/NNS on/IN the/DT pchild/NN pool/NN and/CC all/DT child/NN memory/NN pools/NNS ./. 

(ROOT (S (NP (NP (DT That)) (PP (IN in) (NP (NN turn)))) (VP (VBZ allows) (SBAR (S (NP (NP (NNS join_workers)) (PRN (-LRB- -LRB-) (-RRB- -RRB-) (S (VP (TO to) (VP (VB run) (PP (TO to) (NP (NN completion))) (, ,) (SBAR (IN after) (FRAG (WHNP (WDT which) (NN clean_child_exit))))))) (-LRB- -LRB-) (-RRB- -RRB-))) (VP (MD can) (VP (VB run) (NP (DT the) (NNS cleanups)) (PP (IN on) (NP (NP (DT the) (NN pchild) (NN pool)) (CC and) (NP (DT all) (NN child) (NN memory) (NNS pools))))))))) (. .)))

root(ROOT-0, allows-4)
nsubj(allows-4, That-1)
prep_in(That-1, turn-3)
nsubj(run-19, join_workers-5)
aux(run-9, to-8)
dep(join_workers-5, run-9)
prep_to(run-9, completion-11)
mark(clean_child_exit-15, after-13)
det(clean_child_exit-15, which-14)
advcl(run-9, clean_child_exit-15)
aux(run-19, can-18)
ccomp(allows-4, run-19)
det(cleanups-21, the-20)
dobj(run-19, cleanups-21)
det(pool-25, the-23)
nn(pool-25, pchild-24)
prep_on(run-19, pool-25)
det(pools-30, all-27)
nn(pools-30, child-28)
nn(pools-30, memory-29)
prep_on(run-19, pools-30)
conj_and(pool-25, pools-30)

But/CC on/IN Linux/NNP ,/, the/DT worker/NN child/NN process/NN is/VBZ stuck/VBN waiting/VBG for/IN the/DT Keep-Alive/JJ period/NN for/IN the/DT polling/NN to/TO timeout/NN ,/, and/CC during/IN this/DT period/NN ,/, the/DT main/JJ httpd/NN process/NN often/RB decides/VBZ the/DT child/NN process/NN is/VBZ non-responsive/JJ ,/, and/CC sends/VBZ SIGKILL/NNP ./. 

(ROOT (S (CC But) (PP (IN on) (NP (NNP Linux))) (, ,) (S (NP (DT the) (NN worker) (NN child) (NN process)) (VP (VBZ is) (VP (VBN stuck) (S (VP (VBG waiting) (PP (IN for) (NP (NP (DT the) (JJ Keep-Alive) (NN period)) (PP (IN for) (NP (DT the) (NN polling))))) (PP (TO to) (NP (NN timeout)))))))) (, ,) (CC and) (S (PP (IN during) (NP (DT this) (NN period))) (, ,) (NP (DT the) (JJ main) (NN httpd) (NN process)) (ADVP (RB often)) (VP (VP (VBZ decides) (SBAR (S (NP (DT the) (NN child) (NN process)) (VP (VBZ is) (ADJP (JJ non-responsive)))))) (, ,) (CC and) (VP (VBZ sends) (NP (NNP SIGKILL))))) (. .)))

root(ROOT-0, stuck-10)
prep_on(stuck-10, Linux-3)
det(process-8, the-5)
nn(process-8, worker-6)
nn(process-8, child-7)
nsubjpass(stuck-10, process-8)
auxpass(stuck-10, is-9)
xcomp(stuck-10, waiting-11)
det(period-15, the-13)
amod(period-15, Keep-Alive-14)
prep_for(waiting-11, period-15)
det(polling-18, the-17)
prep_for(period-15, polling-18)
prep_to(waiting-11, timeout-20)
det(period-25, this-24)
prep_during(decides-32, period-25)
det(process-30, the-27)
amod(process-30, main-28)
nn(process-30, httpd-29)
nsubj(decides-32, process-30)
nsubj(sends-40, process-30)
advmod(decides-32, often-31)
conj_and(stuck-10, decides-32)
det(process-35, the-33)
nn(process-35, child-34)
nsubj(non-responsive-37, process-35)
cop(non-responsive-37, is-36)
ccomp(decides-32, non-responsive-37)
conj_and(stuck-10, sends-40)
conj_and(decides-32, sends-40)
dobj(sends-40, SIGKILL-41)

For/IN me/PRP ,/, that/DT means/VBZ my/PRP$ important/JJ cleanup/NN functions/NNS never/RB run/VBP ./. 

(ROOT (S (PP (IN For) (NP (PRP me))) (, ,) (NP (DT that)) (VP (VBZ means) (SBAR (S (NP (PRP$ my) (JJ important) (NN cleanup) (NNS functions)) (ADVP (RB never)) (VP (VBP run))))) (. .)))

root(ROOT-0, means-5)
prep_for(means-5, me-2)
nsubj(means-5, that-4)
poss(functions-9, my-6)
amod(functions-9, important-7)
nn(functions-9, cleanup-8)
nsubj(run-11, functions-9)
neg(run-11, never-10)
ccomp(means-5, run-11)

The/DT attached/VBN patch/NN is/VBZ the/DT simplest/JJS fix/NN I/PRP 've/VBP found/VBN ;/: it/PRP turns/VBZ out/RP that/IN by/IN simply/RB signalling/VBG the/DT worker/NN threads/NNS with/IN any/DT signal/NN is/VBZ sufficient/JJ ,/, because/IN then/RB poll/NN (/-LRB- )/-RRB- wakes/VBZ up/RP and/CC returns/NNS EBADF/NN (/-LRB- because/IN the/DT socket/NN descriptor/NN has/VBZ been/VBN closed/VBN )/-RRB- ./. 

(ROOT (S (S (NP (DT The) (VBN attached) (NN patch)) (VP (VBZ is) (NP (NP (DT the) (JJS simplest) (NN fix)) (SBAR (S (NP (PRP I)) (VP (VBP 've) (VP (VBN found)))))))) (: ;) (S (NP (PRP it)) (VP (VBZ turns) (PRT (RP out)) (SBAR (IN that) (S (S (PP (IN by) (S (ADVP (RB simply)) (VP (VBG signalling) (NP (DT the) (NN worker))))) (NP (NP (NNS threads)) (PP (IN with) (NP (DT any) (NN signal)))) (VP (VBZ is) (ADJP (JJ sufficient)) (, ,) (SBAR (IN because) (S (S (ADVP (RB then)) (NP (NN poll) (-LRB- -LRB-)) (-RRB- -RRB-) (VP (VBZ wakes) (PRT (RP up)))) (CC and) (S (NP (NNS returns)) (ADJP (NN EBADF))))))) (PRN (-LRB- -LRB-) (SBAR (IN because) (S (NP (DT the) (NN socket) (NN descriptor)) (VP (VBZ has) (VP (VBN been) (VP (VBN closed)))))) (-RRB- -RRB-)))))) (. .)))

root(ROOT-0, fix-7)
det(patch-3, The-1)
amod(patch-3, attached-2)
nsubj(fix-7, patch-3)
cop(fix-7, is-4)
det(fix-7, the-5)
amod(fix-7, simplest-6)
nsubj(found-10, I-8)
aux(found-10, 've-9)
rcmod(fix-7, found-10)
nsubj(turns-13, it-12)
parataxis(fix-7, turns-13)
prt(turns-13, out-14)
mark(sufficient-26, that-15)
advmod(signalling-18, simply-17)
prepc_by(sufficient-26, signalling-18)
det(worker-20, the-19)
dobj(signalling-18, worker-20)
nsubj(sufficient-26, threads-21)
det(signal-24, any-23)
prep_with(threads-21, signal-24)
cop(sufficient-26, is-25)
ccomp(turns-13, sufficient-26)
mark(wakes-33, because-28)
advmod(wakes-33, then-29)
nsubj(wakes-33, poll-30)
advcl(sufficient-26, wakes-33)
prt(wakes-33, up-34)
dep(EBADF-37, returns-36)
advcl(sufficient-26, EBADF-37)
conj_and(wakes-33, EBADF-37)
mark(closed-45, because-39)
det(descriptor-42, the-40)
nn(descriptor-42, socket-41)
nsubjpass(closed-45, descriptor-42)
aux(closed-45, has-43)
auxpass(closed-45, been-44)
dep(sufficient-26, closed-45)

At/IN first/JJ I/PRP assumed/VBD poll/NN (/-LRB- )/-RRB- would/MD return/VB EINTR/NNP ,/, but/CC luckily/RB ,/, that/DT 's/VBZ not/RB the/DT case/NN ,/, so/IN the/DT fix/NN gets/VBZ that/IN much/JJ simpler/JJR ./. 

(ROOT (S (S (PP (IN At) (NP (JJ first))) (NP (PRP I)) (VP (VBD assumed) (NP (NP (NN poll)) (SBAR (S (-LRB- -LRB-) (NP (-RRB- -RRB-)) (VP (MD would) (VP (VB return) (NP (NNP EINTR))))))))) (, ,) (CC but) (S (S (ADVP (RB luckily)) (, ,) (NP (DT that)) (VP (VBZ 's) (RB not) (NP (DT the) (NN case)))) (, ,) (IN so) (S (NP (DT the) (NN fix)) (VP (VBZ gets) (ADJP (ADJP (IN that) (JJ much)) (JJR simpler))))) (. .)))

root(ROOT-0, assumed-4)
prep_at(assumed-4, first-2)
nsubj(assumed-4, I-3)
dobj(assumed-4, poll-5)
aux(return-9, would-8)
rcmod(poll-5, return-9)
dobj(return-9, EINTR-10)
advmod(case-19, luckily-13)
nsubj(case-19, that-15)
cop(case-19, 's-16)
neg(case-19, not-17)
det(case-19, the-18)
conj_but(assumed-4, case-19)
dep(case-19, so-21)
det(fix-23, the-22)
nsubj(much-26, fix-23)
dep(much-26, gets-24)
dep(much-26, that-25)
parataxis(case-19, much-26)
dep(much-26, simpler-27)

