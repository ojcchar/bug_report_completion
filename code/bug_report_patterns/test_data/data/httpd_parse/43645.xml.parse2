I/PRP install/VBP Apache/NNP version/NN 2.0.59/CD ,/, when/WRB i/FW click/VBP on/IN apache.exe/NN it/PRP return/VB error/NN like/IN this/DT 

(ROOT (S (NP (PRP I)) (VP (VBP install) (NP (NP (NNP Apache) (NN version) (CD 2.0.59)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (FW i)) (VP (VBP click) (PP (IN on) (NP (NP (NN apache.exe)) (SBAR (S (NP (PRP it)) (VP (VB return) (NP (NN error)) (PP (IN like) (NP (DT this)))))))))))))))

root(ROOT-0, install-2)
nsubj(install-2, I-1)
nn(version-4, Apache-3)
dobj(install-2, version-4)
num(version-4, 2.0.59-5)
advmod(click-9, when-7)
nsubj(click-9, i-8)
rcmod(version-4, click-9)
prep_on(click-9, apache.exe-11)
nsubj(return-13, it-12)
rcmod(apache.exe-11, return-13)
dobj(return-13, error-14)
prep_like(return-13, this-16)

"/'' </JJR OS/NN 10048/CD >/JJR Only/RB one/CD usage/NN of/IN each/DT socket/NN address/NN (/-LRB- protocol/NN //: network/NN address/NN //: port/NN )/-RRB- is/VBZ normally/RB permitted/VBN :/: make_sock/NN :/: could/MD not/RB bind/VB to/TO adddress/VB 0.0.0.0:80/CD ,/, no/DT listening/VBG sockets/NNS available/JJ ,/, shutting/VBG down/RP ,/, unable/JJ to/TO open/VB logs/NNS "/'' 

(ROOT (S ('' '') (NP (JJR <) (NN OS)) (VP (VP (PP (NP (NP (CD 10048) (JJR >)) (ADVP (RB Only) (NP (CD one) (NN usage)))) (IN of) (NP (NP (DT each) (NN socket) (NN address)) (PRN (-LRB- -LRB-) (NP (NP (NP (NN protocol)) (PRN (: /) (NP (NN network) (NN address)) (: /))) (NP (NN port))) (-RRB- -RRB-)))) (VBZ is) (ADVP (RB normally)) (VP (VBN permitted))) (: :) (VP (NN make_sock)) (: :) (VP (MD could) (RB not) (VP (VB bind) (S (VP (TO to) (VP (VB adddress) (NP (NP (CD 0.0.0.0:80)) (PRN (, ,) (NP (DT no) (S (VP (VP (VBG listening) (S (NP (NNS sockets)) (ADJP (JJ available)))) (, ,) (VP (VBG shutting) (PRT (RP down)))))) (, ,)))))))) (ADJP (JJ unable) (S (VP (TO to) (VP (VB open)))))) (NNS logs) ('' '')))

root(ROOT-0, permitted-23)
amod(OS-3, <-2)
nsubjpass(permitted-23, OS-3)
num(>-5, 10048-4)
npadvmod(permitted-23, >-5)
advmod(>-5, Only-6)
num(usage-8, one-7)
pobj(Only-6, usage-8)
det(address-12, each-10)
nn(address-12, socket-11)
prep_of(permitted-23, address-12)
dep(address-12, protocol-14)
punct(address-17, /-15)
nn(address-17, network-16)
dep(protocol-14, address-17)
punct(address-17, /-18)
dep(protocol-14, port-19)
auxpass(permitted-23, is-21)
advmod(permitted-23, normally-22)
dep(permitted-23, make_sock-25)
aux(bind-29, could-27)
neg(bind-29, not-28)
dep(permitted-23, bind-29)
aux(adddress-31, to-30)
xcomp(bind-29, adddress-31)
dobj(adddress-31, 0.0.0.0:80-32)
dep(0.0.0.0:80-32, no-34)
dep(no-34, listening-35)
nsubj(available-37, sockets-36)
xcomp(listening-35, available-37)
dep(listening-35, shutting-39)
prt(shutting-39, down-40)
acomp(permitted-23, unable-42)
aux(open-44, to-43)
xcomp(unable-42, open-44)
dep(permitted-23, logs-45)

This/DT is/VBZ the/DT error/NN ,/, can/MD you/PRP please/VB tell/VB me/PRP that/IN how/WRB to/TO resolve/VB on/IN this/DT issue/NN ./. 

(ROOT (SQ (S (NP (DT This)) (VP (VBZ is) (NP (DT the) (NN error)))) (, ,) (SQ (MD can) (NP (PRP you)) (VP (VB please) (VP (VB tell) (NP (PRP me)) (SBAR (IN that) (FRAG (WHADVP (WRB how)))) (S (VP (TO to) (VP (VB resolve) (PP (IN on) (NP (DT this) (NN issue))))))))) (. .)))

root(ROOT-0, please-8)
nsubj(error-4, This-1)
cop(error-4, is-2)
det(error-4, the-3)
dep(please-8, error-4)
aux(please-8, can-6)
nsubj(please-8, you-7)
xcomp(please-8, tell-9)
dobj(tell-9, me-10)
mark(how-12, that-11)
dep(tell-9, how-12)
aux(resolve-14, to-13)
xcomp(tell-9, resolve-14)
det(issue-17, this-16)
prep_on(resolve-14, issue-17)

please/VB response/NN me/PRP as/RB soon/RB as/IN possible/JJ ./. 

(ROOT (S (VP (VB please) (NP (NP (NP (NN response)) (NP (PRP me))) (CONJP (RB as) (RB soon) (IN as)) (NP (JJ possible)))) (. .)))

root(ROOT-0, please-1)
dobj(please-1, response-2)
dep(response-2, me-3)
dobj(please-1, possible-7)
conj_soon(response-2, possible-7)

