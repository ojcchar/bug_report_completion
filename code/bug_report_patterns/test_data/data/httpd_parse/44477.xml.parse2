[/-LRB- Note/VB that/IN the/DT case/NN (/-LRB- ie/FW UPPER/NN -/: or/CC lowercase/JJ )/-RRB- of/IN text/NN in/IN "/`` double/JJ quotes/NNS "/'' should/MD be/VB paid/VBN attention/NN to/TO in/IN this/DT ticket/NN ./. ]/-RRB- 

(ROOT (S (-LRB- -LSB-) (VP (VB Note) (SBAR (IN that) (S (NP (NP (NP (DT the) (NN case)) (-LRB- -LRB-) (NP (NP (FW ie)) (ADJP (NN UPPER) (: -) (CC or) (JJ lowercase))) (-RRB- -RRB-)) (PP (IN of) (NP (NP (NN text)) (PP (IN in) (`` ``) (NP (JJ double) (NNS quotes)) ('' ''))))) (VP (MD should) (VP (VB be) (VP (VBN paid) (NP (NN attention)) (PP (TO to)) (PP (IN in) (NP (DT this) (NN ticket))))))))) (. .) (-RRB- -RSB-)))

root(ROOT-0, Note-2)
punct(Note-2, -LSB--1)
mark(paid-22, that-3)
det(case-5, the-4)
nsubjpass(paid-22, case-5)
dep(case-5, ie-7)
amod(ie-7, UPPER-8)
amod(ie-7, lowercase-11)
conj_or(UPPER-8, lowercase-11)
prep_of(case-5, text-14)
amod(quotes-18, double-17)
prep_in(text-14, quotes-18)
aux(paid-22, should-20)
auxpass(paid-22, be-21)
ccomp(Note-2, paid-22)
dobj(paid-22, attention-23)
prep(paid-22, to-24)
det(ticket-27, this-26)
prep_in(paid-22, ticket-27)
punct(Note-2, -RSB--29)

Apache/NNP 's/POS directory/NN redirection/NN engine/NN accepts/VBZ lowercase/JJ input/NN ./. 

(ROOT (S (NP (NP (NNP Apache) (POS 's)) (NN directory) (NN redirection) (NN engine)) (VP (VBZ accepts) (NP (JJ lowercase) (NN input))) (. .)))

root(ROOT-0, accepts-6)
poss(engine-5, Apache-1)
nn(engine-5, directory-3)
nn(engine-5, redirection-4)
nsubj(accepts-6, engine-5)
amod(input-8, lowercase-7)
dobj(accepts-6, input-8)

To/TO reproduce/VB behavior/NN (/-LRB- confirmed/VBN by/IN one/CD other/JJ person/NN )/-RRB- :/: 

(ROOT (FRAG (S (VP (TO To) (VP (VB reproduce) (S (NP (NP (NN behavior)) (-LRB- -LRB-) (VP (VBN confirmed) (PP (IN by) (PRN (NP (NP (CD one)) (NP (JJ other) (NN person))) (-RRB- -RRB-)))) (: :))))))))

root(ROOT-0, reproduce-2)
aux(reproduce-2, To-1)
xcomp(reproduce-2, behavior-3)
vmod(behavior-3, confirmed-5)
prep(confirmed-5, by-6)
dep(by-6, one-7)
amod(person-9, other-8)
dep(one-7, person-9)

#/# 1/CD Create/VB the/DT folder/NN "/'' //: foo/NN "/'' (/-LRB- or/CC whatever/WDT ,/, the/DT directory/NN name/NN does/VBZ n't/RB matter/NN )/-RRB- on/IN 

(ROOT (FRAG (NP (QP (# #) (CD 1))) (S (VP (VB Create) (SBAR (S (NP (NP (DT the) (NN folder) ('' '')) (PRN (: /) (NP (NP (NP (NP (NN foo) ('' '')) (-LRB- -LRB-) (PP (CC or) (NP (WDT whatever))) (, ,)) (NP (DT the) (NN directory))) (NP (NN name))))) (VP (VBZ does) (ADVP (RB n't)) (NP (NN matter)) (-RRB- -RRB-) (ADVP (IN on)))))))))

root(ROOT-0, 1-2)
number(1-2, #-1)
dep(1-2, Create-3)
det(folder-5, the-4)
nsubj(does-17, folder-5)
punct(foo-8, /-7)
dep(folder-5, foo-8)
prep(foo-8, or-11)
pobj(or-11, whatever-12)
det(directory-15, the-14)
dep(foo-8, directory-15)
dep(foo-8, name-16)
ccomp(Create-3, does-17)
neg(does-17, n't-18)
dobj(does-17, matter-19)
advmod(does-17, on-21)

any/DT server/NN ./. 

(ROOT (NP (DT any) (NN server) (. .)))

root(ROOT-0, server-2)
det(server-2, any-1)

#/# 2/CD Telnet/NN or/CC use/VB "/`` nc/NN "/'' to/TO connect/VB to/TO your/PRP$ server/NN ./. 

(ROOT (NP (NP (NP (# #) (CD 2)) (UCP (NP (NN Telnet)) (CC or) (S (VP (VB use) (S (NP (`` ``) (NN nc) ('' '')) (VP (TO to) (VP (VB connect) (PP (TO to) (NP (PRP$ your) (NN server)))))))))) (. .)))

root(ROOT-0, 2-2)
dep(2-2, #-1)
dep(2-2, Telnet-3)
dep(2-2, use-5)
conj_or(Telnet-3, use-5)
dobj(use-5, nc-7)
aux(connect-10, to-9)
xcomp(use-5, connect-10)
poss(server-13, your-12)
prep_to(connect-10, server-13)

Be/VB sure/JJ to/TO specify/VB port/NN 80/CD ./. 

(ROOT (S (VP (VB Be) (ADJP (JJ sure) (S (VP (TO to) (VP (VB specify) (NP (NN port) (CD 80))))))) (. .)))

root(ROOT-0, sure-2)
cop(sure-2, Be-1)
aux(specify-4, to-3)
xcomp(sure-2, specify-4)
dobj(specify-4, port-5)
num(port-5, 80-6)

#/# 3/CD Send/VB "/`` get/VB //: foo/NN "/'' and/CC Apache/NNP will/MD return/VB the/DT standard/JJ 301/CD "/`` this/DT is/VBZ located/JJ at/IN 

(ROOT (FRAG (NP (QP (# #) (CD 3))) (S (VP (VB Send) (VP (`` ``) (VB get) (PRN (: /) (S (NP (NP (NN foo)) ('' '') (CC and) (NP (NNP Apache))) (VP (MD will) (VP (VB return))))) (NP (NP (DT the) (JJ standard) (CD 301)) (SBAR (`` ``) (S (NP (DT this)) (VP (VBZ is) (ADJP (JJ located) (PP (IN at))))))))))))

root(ROOT-0, 3-2)
number(3-2, #-1)
dep(3-2, Send-3)
xcomp(Send-3, get-5)
punct(return-12, /-6)
nsubj(return-12, foo-7)
conj_and(foo-7, Apache-10)
nsubj(return-12, Apache-10)
aux(return-12, will-11)
parataxis(get-5, return-12)
det(301-15, the-13)
amod(301-15, standard-14)
dobj(get-5, 301-15)
nsubj(located-19, this-17)
cop(located-19, is-18)
dep(301-15, located-19)
prep(located-19, at-20)

//: foo/NN //: "/'' (/-LRB- note/VB the/DT trailing/VBG slash/VBP )/-RRB- ./. 

(ROOT (S (NP (PRN (: /) (NP (NN foo)) (: /))) (VP ('' '') (PRN (-LRB- -LRB-) (S (VP (VB note) (SBAR (S (NP (DT the) (VBG trailing)) (VP (VBP slash)))))) (-RRB- -RRB-))) (. .)))

root(ROOT-0, note-6)
punct(foo-2, /-1)
nsubj(note-6, foo-2)
punct(foo-2, /-3)
nsubj(slash-9, the-7)
amod(the-7, trailing-8)
ccomp(note-6, slash-9)

#/# 4/CD Now/RB send/VB "/`` get/VB //: foo/NN //: "/'' and/CC notice/VB how/WRB Apache/NNP sends/VBZ a/DT 501/CD -/: "/`` Not/RB Implemented/VBN ./. "/'' 

(ROOT (S (NP (# #) (CD 4)) (ADVP (RB Now)) (VP (VB send) (S (`` ``) (S (VP (VP (VB get) (PRN (: /) (NP (NN foo)) (: /))) ('' '') (CC and) (VP (VB notice) (SBAR (WHADVP (WRB how)) (FRAG (NP (NNP Apache))))))) (VP (VBZ sends) (NP (NP (DT a) (CD 501)) (: -) (`` ``) (SBAR (RB Not) (S (VP (VBN Implemented)))))))) (. .) ('' '')))

root(ROOT-0, send-4)
dep(4-2, #-1)
nsubj(send-4, 4-2)
advmod(send-4, Now-3)
csubj(sends-15, get-6)
punct(foo-8, /-7)
dep(get-6, foo-8)
punct(foo-8, /-9)
conj_and(get-6, notice-12)
csubj(sends-15, notice-12)
advmod(Apache-14, how-13)
dep(notice-12, Apache-14)
ccomp(send-4, sends-15)
det(501-17, a-16)
dobj(sends-15, 501-17)
dep(Implemented-21, Not-20)
dep(501-17, Implemented-21)

#/# 5/CD Finally/RB ,/, send/VB "/`` GET/VB //: foo/NN //: "/'' and/CC you/PRP will/MD recieve/VB the/DT correct/JJ response/NN ./. 

(ROOT (S (S (NP (NP (# #) (CD 5)) (ADVP (RB Finally))) (VP (VP (, ,) (S (VP (VB send) (NP (SBAR (`` ``) (S (VP (VB GET)))))))) (PRN (: /) (NP (NN foo)) (: /)))) ('' '') (CC and) (S (NP (PRP you)) (VP (MD will) (VP (VB recieve) (NP (DT the) (JJ correct) (NN response))))) (. .)))

root(ROOT-0, send-5)
dep(5-2, #-1)
nsubj(send-5, 5-2)
advmod(5-2, Finally-3)
dobj(send-5, GET-7)
punct(foo-9, /-8)
dep(send-5, foo-9)
punct(foo-9, /-10)
nsubj(recieve-15, you-13)
aux(recieve-15, will-14)
conj_and(send-5, recieve-15)
det(response-18, the-16)
amod(response-18, correct-17)
dobj(recieve-15, response-18)

To/TO expound/recap/emphasize/VB ,/, the/DT bug/NN appears/VBZ in/IN #/# 3/CD ,/, where/WRB Apache/NNP returns/NNS 301/CD -/: "/`` Moved/VBD Permanently/RB "/'' after/IN a/DT lowercase/JJ command/NN was/VBD sent/VBN ,/, instead/RB of/IN returning/VBG 501/CD ,/, which/WDT it/PRP should/MD to/TO be/VB standards/NNS conformant/NN ./. 

(ROOT (S (S (VP (TO To) (VP (VB expound/recap/emphasize)))) (, ,) (NP (DT the) (NN bug)) (VP (VBZ appears) (PP (IN in) (NP (NP (# #) (CD 3)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNP Apache) (NNS returns)) (NP (QP (CD 301))) (: -)) (`` ``) (VP (VBD Moved) (ADVP (RB Permanently)) ('' '') (SBAR (IN after) (S (NP (DT a) (JJ lowercase) (NN command)) (VP (VBD was) (VP (VBN sent) (PRN (, ,) (PP (RB instead) (IN of) (S (VP (VBG returning) (ADVP (CD 501))))) (, ,)) (SBAR (WHNP (WDT which)) (S (NP (PRP it)) (VP (MD should) (S (VP (TO to) (VP (VB be) (NP (NNS standards) (NN conformant)))))))))))))))))) (. .)))

root(ROOT-0, appears-6)
aux(expound/recap/emphasize-2, To-1)
advcl(appears-6, expound/recap/emphasize-2)
det(bug-5, the-4)
nsubj(appears-6, bug-5)
dep(3-9, #-8)
prep_in(appears-6, 3-9)
advmod(Moved-17, where-11)
nn(returns-13, Apache-12)
nsubj(Moved-17, returns-13)
dep(returns-13, 301-14)
rcmod(3-9, Moved-17)
advmod(Moved-17, Permanently-18)
mark(sent-25, after-20)
det(command-23, a-21)
amod(command-23, lowercase-22)
nsubjpass(sent-25, command-23)
auxpass(sent-25, was-24)
advcl(Moved-17, sent-25)
prepc_instead_of(sent-25, returning-29)
advmod(returning-29, 501-30)
dobj(should-34, which-32)
nsubj(should-34, it-33)
ccomp(sent-25, should-34)
aux(conformant-38, to-35)
cop(conformant-38, be-36)
nn(conformant-38, standards-37)
xcomp(should-34, conformant-38)

Note/VB that/DT Apache/NNP will/MD send/VB a/DT 501/CD if/IN you/PRP send/VBP "/`` get/VB //: thisdirdoesntexist/NN "/'' ,/, where/WRB '/`` thisdirdoesntexist/NN '/'' is/VBZ a/DT directory/NN on/IN the/DT server/NN that/IN ,/, well/RB ,/, does/VBZ n't/RB exist/VB ./. 

(ROOT (FRAG (S (VP (VB Note) (SBAR (S (NP (DT that) (NNP Apache)) (VP (MD will) (VP (VB send) (NP (DT a) (CD 501)) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP send) (`` ``) (S (VP (VB get)))))))))))) (: /) (NP (NP (NN thisdirdoesntexist) ('' '')) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (`` `) (NN thisdirdoesntexist) ('' ')) (VP (VBZ is) (NP (NP (DT a) (NN directory)) (PP (IN on) (NP (NP (DT the) (NN server)) (SBAR (WHNP (IN that)) (S (, ,) (ADVP (RB well)) (, ,) (VP (VBZ does) (RB n't) (VP (VB exist)))))))))))) (. .)))

root(ROOT-0, thisdirdoesntexist-14)
dep(thisdirdoesntexist-14, Note-1)
det(Apache-3, that-2)
nsubj(send-5, Apache-3)
aux(send-5, will-4)
ccomp(Note-1, send-5)
det(501-7, a-6)
dobj(send-5, 501-7)
mark(send-10, if-8)
nsubj(send-10, you-9)
advcl(send-5, send-10)
ccomp(send-10, get-12)
punct(thisdirdoesntexist-14, /-13)
advmod(directory-23, where-17)
nsubj(directory-23, thisdirdoesntexist-19)
cop(directory-23, is-21)
det(directory-23, a-22)
rcmod(thisdirdoesntexist-14, directory-23)
det(server-26, the-25)
prep_on(directory-23, server-26)
nsubj(exist-33, that-27)
advmod(exist-33, well-29)
aux(exist-33, does-31)
neg(exist-33, n't-32)
rcmod(server-26, exist-33)

This/DT has/VBZ only/RB been/VBN tested/VBN on/IN my/PRP$ system/NN ,/, and/CC not/RB tested/VBN elsewhere/RB ./. 

(ROOT (S (NP (DT This)) (VP (VP (VBZ has) (ADVP (RB only)) (VP (VBN been) (VP (VBN tested) (PP (IN on) (NP (PRP$ my) (NN system)))))) (, ,) (CC and) (RB not) (VP (VBN tested) (ADVP (RB elsewhere)))) (. .)))

root(ROOT-0, tested-5)
nsubjpass(tested-5, This-1)
nsubjpass(tested-12, This-1)
aux(tested-5, has-2)
advmod(tested-5, only-3)
auxpass(tested-5, been-4)
poss(system-8, my-7)
prep_on(tested-5, system-8)
neg(tested-12, not-11)
conj_and(tested-5, tested-12)
advmod(tested-12, elsewhere-13)

-/: dav7/NN 

(ROOT (PRN (: -) (ADVP (NN dav7))))

root(ROOT-0, dav7-2)

