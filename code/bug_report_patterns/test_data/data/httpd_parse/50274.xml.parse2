FastCGI/NN spec/NN indicates/VBZ that/IN CONTENT_LENGTH/NNP will/MD be/VB provided/VBN to/TO the/DT app/NN ,/, even/RB though/IN the/DT request/NN body/NN will/MD be/VB sent/VBN to/TO the/DT application/NN in/IN chunks/NNS ./. 

(ROOT (S (NP (NN FastCGI) (NN spec)) (VP (VBZ indicates) (SBAR (IN that) (S (NP (NNP CONTENT_LENGTH)) (VP (MD will) (VP (VB be) (VP (VBN provided) (PP (TO to) (NP (DT the) (NN app))) (, ,) (SBAR (RB even) (IN though) (S (NP (DT the) (NN request) (NN body)) (VP (MD will) (VP (VB be) (VP (VBN sent) (PP (TO to) (NP (NP (DT the) (NN application)) (PP (IN in) (NP (NNS chunks)))))))))))))))) (. .)))

root(ROOT-0, indicates-3)
nn(spec-2, FastCGI-1)
nsubj(indicates-3, spec-2)
mark(provided-8, that-4)
nsubjpass(provided-8, CONTENT_LENGTH-5)
aux(provided-8, will-6)
auxpass(provided-8, be-7)
ccomp(indicates-3, provided-8)
det(app-11, the-10)
prep_to(provided-8, app-11)
advmod(sent-20, even-13)
mark(sent-20, though-14)
det(body-17, the-15)
nn(body-17, request-16)
nsubjpass(sent-20, body-17)
aux(sent-20, will-18)
auxpass(sent-20, be-19)
advcl(provided-8, sent-20)
det(application-23, the-22)
prep_to(sent-20, application-23)
prep_in(application-23, chunks-25)

Furthermore/RB ,/, it/PRP suggests/VBZ that/IN the/DT app/NN could/MD compare/VB CONTENT_LENGTH/NN with/IN the/DT actual/JJ length/NN received/VBD to/TO determine/VB if/IN the/DT client/NN aborted/VBN before/IN sending/VBG the/DT entire/JJ body/NN ./. 

(ROOT (S (ADVP (RB Furthermore)) (, ,) (NP (PRP it)) (VP (VBZ suggests) (SBAR (IN that) (S (NP (DT the) (NN app)) (VP (MD could) (VP (VB compare) (NP (NN CONTENT_LENGTH)) (PP (IN with) (NP (NP (DT the) (JJ actual) (NN length)) (SBAR (S (VP (VBD received) (S (VP (TO to) (VP (VB determine) (SBAR (IN if) (S (NP (DT the) (NN client)) (VP (VBN aborted) (PP (IN before) (S (VP (VBG sending) (NP (DT the) (JJ entire) (NN body))))))))))))))))))))) (. .)))

root(ROOT-0, suggests-4)
advmod(suggests-4, Furthermore-1)
nsubj(suggests-4, it-3)
mark(compare-9, that-5)
det(app-7, the-6)
nsubj(compare-9, app-7)
aux(compare-9, could-8)
ccomp(suggests-4, compare-9)
dobj(compare-9, CONTENT_LENGTH-10)
det(length-14, the-12)
amod(length-14, actual-13)
prep_with(compare-9, length-14)
rcmod(length-14, received-15)
aux(determine-17, to-16)
xcomp(received-15, determine-17)
mark(aborted-21, if-18)
det(client-20, the-19)
nsubj(aborted-21, client-20)
advcl(determine-17, aborted-21)
prepc_before(aborted-21, sending-23)
det(body-26, the-24)
amod(body-26, entire-25)
dobj(sending-23, body-26)

mod_fastcgi/NNS :/: as/IN with/IN mod_cgi/NN //: mod_cgid/NN :/: the/DT request/NN fails/VBZ with/IN 411/CD if/IN the/DT client/NN does/VBZ n't/RB send/VB content-length/NN 

(ROOT (FRAG (X (NP (NNS mod_fastcgi)) (: :) (PP (IN as) (PP (IN with) (NP (NP (NN mod_cgi)) (PRN (: /) (NP (NP (NN mod_cgid)) (: :) (NP (DT the) (NN request)))))))) (VP (VBZ fails) (PP (IN with) (NP (CD 411))) (SBAR (IN if) (S (NP (DT the) (NN client)) (VP (VBZ does) (RB n't) (VP (VB send) (NP (NN content-length)))))))))

root(ROOT-0, fails-11)
dep(fails-11, mod_fastcgi-1)
prep(mod_fastcgi-1, as-3)
pcomp(as-3, with-4)
pobj(with-4, mod_cgi-5)
punct(mod_cgid-7, /-6)
dep(mod_cgi-5, mod_cgid-7)
det(request-10, the-9)
dep(mod_cgid-7, request-10)
prep_with(fails-11, 411-13)
mark(send-19, if-14)
det(client-16, the-15)
nsubj(send-19, client-16)
aux(send-19, does-17)
neg(send-19, n't-18)
advcl(fails-11, send-19)
dobj(send-19, content-length-20)

mod_fcgid/NN :/: request/NN is/VBZ fine/JJ if/IN client/NN does/VBZ n't/RB send/VB content-length/NN ,/, but/CC application/NN does/VBZ n't/RB get/VB CONTENT_LENGTH/NN (/-LRB- bug/NN )/-RRB- 

(ROOT (FRAG (NP (NN mod_fcgid)) (: :) (S (S (NP (NN request)) (VP (VBZ is) (ADJP (JJ fine)) (SBAR (IN if) (S (NP (NN client)) (VP (VBZ does) (RB n't) (VP (VB send) (NP (NN content-length)))))))) (, ,) (CC but) (S (NP (NN application)) (VP (VBZ does) (RB n't) (VP (VB get) (NP (NP (NN CONTENT_LENGTH)) (PRN (-LRB- -LRB-) (NP (NN bug)) (-RRB- -RRB-)))))))))

root(ROOT-0, mod_fcgid-1)
nsubj(fine-5, request-3)
cop(fine-5, is-4)
dep(mod_fcgid-1, fine-5)
mark(send-10, if-6)
nsubj(send-10, client-7)
aux(send-10, does-8)
neg(send-10, n't-9)
advcl(fine-5, send-10)
dobj(send-10, content-length-11)
nsubj(get-17, application-14)
aux(get-17, does-15)
neg(get-17, n't-16)
dep(mod_fcgid-1, get-17)
conj_but(fine-5, get-17)
dobj(get-17, CONTENT_LENGTH-18)
appos(CONTENT_LENGTH-18, bug-20)

mod_fcgid/JJ spools/NNS the/DT entire/JJ body/NN to/TO memory/disk/NN before/IN connecting/VBG to/TO the/DT app/NN ,/, so/IN it/PRP should/MD go/VB ahead/RB and/CC pass/VB over/RP a/DT computed/JJ CONTENT_LENGTH/NN value/NN ;/: that/DT would/MD also/RB resolve/VB a/DT Content-Length/JJ value/NN from/IN the/DT client/NN which/WDT becomes/VBZ invalid/JJ because/IN of/IN a/DT filter/NN ./. 

(ROOT (S (S (S (NP (NP (JJ mod_fcgid) (NNS spools)) (ADVP (NP (NP (DT the) (JJ entire) (NN body)) (PP (TO to) (NP (NN memory/disk)))) (IN before))) (VP (VBG connecting) (PP (TO to) (NP (DT the) (NN app))))) (, ,) (IN so) (S (NP (PRP it)) (VP (MD should) (VP (VP (VB go) (ADVP (RB ahead))) (CC and) (VP (VB pass) (PRT (RP over)) (NP (DT a) (JJ computed) (NN CONTENT_LENGTH) (NN value))))))) (: ;) (S (NP (DT that)) (VP (MD would) (ADVP (RB also)) (VP (VB resolve) (NP (DT a) (JJ Content-Length) (NN value)) (PP (IN from) (NP (NP (DT the) (NN client)) (SBAR (WHNP (WDT which)) (S (VP (VBZ becomes) (ADJP (JJ invalid) (PP (IN because) (PP (IN of) (NP (DT a) (NN filter))))))))))))) (. .)))

root(ROOT-0, connecting-9)
amod(spools-2, mod_fcgid-1)
nsubj(connecting-9, spools-2)
det(body-5, the-3)
amod(body-5, entire-4)
npadvmod(before-8, body-5)
prep_to(body-5, memory/disk-7)
advmod(spools-2, before-8)
det(app-12, the-11)
prep_to(connecting-9, app-12)
dep(connecting-9, so-14)
nsubj(go-17, it-15)
nsubj(pass-20, it-15)
aux(go-17, should-16)
parataxis(connecting-9, go-17)
advmod(go-17, ahead-18)
parataxis(connecting-9, pass-20)
conj_and(go-17, pass-20)
prt(pass-20, over-21)
det(value-25, a-22)
amod(value-25, computed-23)
nn(value-25, CONTENT_LENGTH-24)
dobj(pass-20, value-25)
nsubj(resolve-30, that-27)
aux(resolve-30, would-28)
advmod(resolve-30, also-29)
parataxis(connecting-9, resolve-30)
det(value-33, a-31)
amod(value-33, Content-Length-32)
dobj(resolve-30, value-33)
det(client-36, the-35)
prep_from(resolve-30, client-36)
nsubj(becomes-38, which-37)
rcmod(client-36, becomes-38)
acomp(becomes-38, invalid-39)
prepc_because_of(invalid-39, of-41)
det(filter-43, a-42)
pobj(invalid-39, filter-43)

http://mail-archives.apache.org/mod_mbox/httpd-users/201011.mbox/%3C4CE100C5.5030502@comp.lancs.ac.uk%3E/NN 

(ROOT (NP (NN http://mail-archives.apache.org/mod_mbox/httpd-users/201011.mbox/%3C4CE100C5.5030502@comp.lancs.ac.uk%3E)))

root(ROOT-0, http://mail-archives.apache.org/mod_mbox/httpd-users/201011.mbox/%3C4CE100C5.5030502@comp.lancs.ac.uk%3E-1)

