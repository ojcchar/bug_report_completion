The/DT worker/NN MPM/NNP code/NN lacks/VBZ a/DT bit/NN of/IN code/NN from/IN the/DT prefork/NN MPM/NNP that/WDT would/MD allow/VB it/PRP to/TO respect/VB the/DT GracefulShutdownTimeout/NN value/NN ./. 

(ROOT (S (NP (DT The) (NN worker) (NNP MPM) (NN code)) (VP (VBZ lacks) (NP (NP (DT a) (NN bit)) (PP (IN of) (NP (NP (NN code)) (PP (IN from) (NP (DT the) (NN prefork) (NNP MPM))))) (SBAR (WHNP (WDT that)) (S (VP (MD would) (VP (VB allow) (S (NP (PRP it)) (VP (TO to) (VP (VB respect) (NP (DT the) (NN GracefulShutdownTimeout) (NN value))))))))))) (. .)))

root(ROOT-0, lacks-5)
det(code-4, The-1)
nn(code-4, worker-2)
nn(code-4, MPM-3)
nsubj(lacks-5, code-4)
det(bit-7, a-6)
dobj(lacks-5, bit-7)
prep_of(bit-7, code-9)
det(MPM-13, the-11)
nn(MPM-13, prefork-12)
prep_from(code-9, MPM-13)
nsubj(allow-16, that-14)
aux(allow-16, would-15)
rcmod(bit-7, allow-16)
dobj(allow-16, it-17)
aux(respect-19, to-18)
xcomp(allow-16, respect-19)
det(value-22, the-20)
nn(value-22, GracefulShutdownTimeout-21)
dobj(respect-19, value-22)

If/IN the/DT default/NN value/NN of/IN zero/CD is/VBZ used/VBN ,/, the/DT code/NN works/VBZ ,/, but/CC if/IN a/DT non-zero/JJ value/NN is/VBZ supplied/VBN ,/, it/PRP is/VBZ not/RB respected/VBN and/CC a/DT non-graceful/JJ shutdown/NN begins/VBZ immediately/RB ./. 

(ROOT (S (S (SBAR (IN If) (S (NP (NP (DT the) (NN default) (NN value)) (PP (IN of) (NP (CD zero)))) (VP (VBZ is) (VP (VBN used))))) (, ,) (NP (DT the) (NN code)) (VP (VBZ works))) (, ,) (CC but) (S (S (SBAR (IN if) (S (NP (DT a) (JJ non-zero) (NN value)) (VP (VBZ is) (VP (VBN supplied))))) (, ,) (NP (PRP it)) (VP (VBZ is) (RB not) (ADJP (VBN respected)))) (CC and) (S (NP (DT a) (JJ non-graceful) (NN shutdown)) (VP (VBZ begins) (ADVP (RB immediately))))) (. .)))

root(ROOT-0, works-12)
mark(used-8, If-1)
det(value-4, the-2)
nn(value-4, default-3)
nsubjpass(used-8, value-4)
prep_of(value-4, zero-6)
auxpass(used-8, is-7)
advcl(works-12, used-8)
det(code-11, the-10)
nsubj(works-12, code-11)
mark(supplied-20, if-15)
det(value-18, a-16)
amod(value-18, non-zero-17)
nsubjpass(supplied-20, value-18)
auxpass(supplied-20, is-19)
advcl(respected-25, supplied-20)
nsubjpass(respected-25, it-22)
auxpass(respected-25, is-23)
neg(respected-25, not-24)
conj_but(works-12, respected-25)
det(shutdown-29, a-27)
amod(shutdown-29, non-graceful-28)
nsubj(begins-30, shutdown-29)
conj_but(works-12, begins-30)
conj_and(respected-25, begins-30)
advmod(begins-30, immediately-31)

A/DT patch/NN is/VBZ supplied/VBN to/TO copy/VB over/IN the/DT necessary/JJ lines/NNS from/IN prefork.c/NN to/TO worker.c/NN ./. 

(ROOT (S (NP (DT A) (NN patch)) (VP (VBZ is) (VP (VBN supplied) (S (VP (TO to) (VP (VB copy) (PP (IN over) (NP (NP (DT the) (JJ necessary) (NNS lines)) (PP (IN from) (NP (NN prefork.c))))) (PP (TO to) (NP (NN worker.c)))))))) (. .)))

root(ROOT-0, supplied-4)
det(patch-2, A-1)
nsubjpass(supplied-4, patch-2)
auxpass(supplied-4, is-3)
aux(copy-6, to-5)
xcomp(supplied-4, copy-6)
det(lines-10, the-8)
amod(lines-10, necessary-9)
prep_over(copy-6, lines-10)
prep_from(lines-10, prefork.c-12)
prep_to(copy-6, worker.c-14)

