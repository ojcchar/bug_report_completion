The/DT following/VBG code/NN in/IN util_ldap_cache_mgr/NN ./. 

(ROOT (NP (NP (DT The) (VBG following) (NN code)) (PP (IN in) (NP (NN util_ldap_cache_mgr))) (. .)))

root(ROOT-0, code-3)
det(code-3, The-1)
amod(code-3, following-2)
prep_in(code-3, util_ldap_cache_mgr-5)

c/NN gets/VBZ stuck/VBN in/IN an/DT infinite/JJ loop/NN :/: 

(ROOT (S (NP (NN c)) (VP (VBZ gets) (VP (VBN stuck) (PP (IN in) (NP (DT an) (JJ infinite) (NN loop))))) (: :)))

root(ROOT-0, stuck-3)
nsubjpass(stuck-3, c-1)
auxpass(stuck-3, gets-2)
det(loop-7, an-5)
amod(loop-7, infinite-6)
prep_in(stuck-3, loop-7)

for/IN (/-LRB- i/FW =/JJ 0/CD ;/: i/LS </JJR cache/NN -/: >/JJR size/NN ;/: +/CC +/CC i/LS )/-RRB- {/-LRB- if/IN (/-LRB- cache/NN -/: >/JJR nodes/NNS [/-LRB- i/FW ]/-RRB- !/. 

(ROOT (NP (NP (NP (IN for)) (-LRB- -LRB-) (NP (NP (FW i)) (ADJP (JJ =) (NP-TMP (CD 0)))) (: ;)) (ADJP (ADJP (ADJP (LS i) (JJR <)) (PRN (NP (NP (NN cache)) (: -) (NP (NP (JJR >) (NN size) (: ;)) (CC +) (NP (CC +) (LS i)))) (-RRB- -RRB-))) (PRN (-LRB- -LCB-) (PP (IN if) (NP (-LRB- -LRB-) (NP (NN cache)) (: -) (SBAR (S (NP (JJR >) (NNS nodes)) (VP (-LRB- -LSB-) (NP (FW i))))))) (-RRB- -RSB-))) (. !)))

root(ROOT-0, for-1)
dep(for-1, i-3)
amod(i-3, =-4)
tmod(=-4, 0-5)
dep(<-8, i-7)
amod(for-1, <-8)
dep(<-8, cache-9)
amod(size-12, >-11)
dep(cache-9, size-12)
dep(cache-9, +-15)
conj_+(size-12, +-15)
dep(+-15, i-16)
dep(<-8, if-19)
pobj(if-19, cache-21)
amod(nodes-24, >-23)
nsubj(i-26, nodes-24)
punct(i-26, -LSB--25)
rcmod(cache-21, i-26)
punct(if-19, -RSB--27)

=/JJ NULL/NN )/-RRB- {/-LRB- nchains/NNS +/CC +/CC ;/: >/JJR >/JJR for/IN (/-LRB- n/NN =/JJ cache/NN -/: >/JJR nodes/NNS [/-LRB- i/FW ]/-RRB- ;/: n/NN !/. 

(ROOT (S (SBAR (PRN (NP (NP (JJ =)) (NP (NN NULL))) (-RRB- -RRB-)) (S (-LRB- -LCB-) (NP (NNS nchains)) (VP (CC +) (VP (CC +))))) (: ;) (S (NP (NP (ADJP (JJR >)) (JJR >)) (PP (IN for) (PRN (-LRB- -LRB-) (NP (NP (NN n) (JJ =) (NN cache)) (: -) (NP (JJR >) (NNS nodes))) (-LRB- -LSB-)) (NP (FW i)))) (VP (-RRB- -RSB-) (: ;) (NP (NN n)))) (. !)))

root(ROOT-0, n-23)
dep(+-7, =-1)
dep(=-1, NULL-2)
nsubj(+-7, nchains-5)
cc(+-7, +-6)
dep(n-23, +-7)
amod(>-10, >-9)
nsubj(n-23, >-10)
nn(cache-15, n-13)
amod(cache-15, =-14)
dep(>-10, cache-15)
amod(nodes-18, >-17)
dep(cache-15, nodes-18)
punct(cache-15, -LSB--19)
prep_for(>-10, i-20)
punct(n-23, -RSB--21)

=/JJ NULL/NN ;/: n/NN =/JJ n/NN -/: >/JJR next/JJ )/-RRB- totchainlen/NN +/CC +/CC ;/: }/-RRB- }/-RRB- 

(ROOT (PRN (NP (NP (JJ =) (NN NULL)) (: ;) (NP (NP (NN n)) (ADJP (ADJP (ADJP (JJ =)) (PRN (NP (NP (NN n)) (: -) (NP (JJR >) (JJ next))) (-RRB- -RRB-))) (PRN (NP (NP (NN totchainlen)) (CC +) (NP (CC +) (: ;))) (-RRB- -RCB-))))) (-RRB- -RCB-)))

root(ROOT-0, NULL-2)
amod(NULL-2, =-1)
dep(NULL-2, n-4)
amod(n-4, =-5)
dep(=-5, n-6)
dep(n-6, >-8)
amod(>-8, next-9)
dep(=-5, totchainlen-11)
dep(=-5, +-13)
conj_+(totchainlen-11, +-13)

In/IN the/DT above/JJ case/NN ,/, the/DT variables/NNS n/NN ,/, cache/NN -/: >/JJR nodes/NNS [/-LRB- i/FW ]/-RRB- and/CC n/NN -/: >/JJR next/IN all/DT point/NN to/TO the/DT same/JJ object/NN ,/, so/IN "/`` n/NN =/JJ n/NN -/: >/JJR next/JJ "/'' causes/VBZ an/DT infinite/JJ loop/NN ./. 

(ROOT (S (PP (IN In) (NP (DT the) (JJ above) (NN case))) (, ,) (S (NP (NP (DT the) (NNS variables) (NN n)) (, ,) (NP (NP (NN cache)) (: -) (NP (NP (JJR >) (NNS nodes)) (PP (-LRB- -LSB-) (NP (FW i)))))) (VP (VP (-RRB- -RSB-)) (CC and) (VP (ADJP (ADJP (NN n)) (: -) (ADJP (JJR >))) (PP (IN next) (NP (NP (DT all) (NN point)) (PP (TO to) (NP (DT the) (JJ same) (NN object)))))))) (, ,) (IN so) (S (NP (`` ``) (NP (NN n) (JJ =) (NN n)) (: -) (NP (JJR >) (JJ next)) ('' '')) (VP (VBZ causes) (NP (DT an) (JJ infinite) (NN loop)))) (. .)))

root(ROOT-0, -RSB--16)
det(case-4, the-2)
amod(case-4, above-3)
prep_in(-RSB--16, case-4)
det(n-8, the-6)
nn(n-8, variables-7)
nsubj(-RSB--16, n-8)
appos(n-8, cache-10)
amod(nodes-13, >-12)
dep(cache-10, nodes-13)
punct(i-15, -LSB--14)
prep(nodes-13, i-15)
conj_and(-RSB--16, n-18)
dep(n-18, >-20)
det(point-23, all-22)
prep_next(n-18, point-23)
det(object-27, the-25)
amod(object-27, same-26)
prep_to(point-23, object-27)
dep(-RSB--16, so-29)
nn(n-33, n-31)
amod(n-33, =-32)
nsubj(causes-38, n-33)
dep(n-33, >-35)
amod(>-35, next-36)
parataxis(-RSB--16, causes-38)
det(loop-41, an-39)
amod(loop-41, infinite-40)
dobj(causes-38, loop-41)

