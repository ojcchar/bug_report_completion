Fix/VB for/IN this/DT bug/NN mentioned/VBN in/IN http://nagoya.apache.org/bugzilla/show_bug.cgi/NNS ?/. 

(ROOT (SQ (VP (VB Fix) (PP (IN for) (NP (NP (DT this) (NN bug)) (VP (VBN mentioned) (PP (IN in) (NP (NNS http://nagoya.apache.org/bugzilla/show_bug.cgi))))))) (. ?)))

root(ROOT-0, Fix-1)
det(bug-4, this-3)
prep_for(Fix-1, bug-4)
vmod(bug-4, mentioned-5)
prep_in(mentioned-5, http://nagoya.apache.org/bugzilla/show_bug.cgi-7)

id/NN =/JJ 24329/CD is/VBZ not/RB quite/RB good/JJ ,/, because/IN it/PRP caused/VBD that/IN ssl-std/NN ./. 

(ROOT (S (NP (NP (NN id)) (ADJP (JJ =) (NP-TMP (CD 24329)))) (VP (VBZ is) (RB not) (ADJP (RB quite) (JJ good)) (, ,) (SBAR (IN because) (S (NP (PRP it)) (VP (VBD caused) (PP (IN that) (NP (NN ssl-std))))))) (. .)))

root(ROOT-0, good-7)
nsubj(good-7, id-1)
amod(id-1, =-2)
tmod(=-2, 24329-3)
cop(good-7, is-4)
neg(good-7, not-5)
advmod(good-7, quite-6)
mark(caused-11, because-9)
nsubj(caused-11, it-10)
advcl(good-7, caused-11)
prep_that(caused-11, ssl-std-13)

conf/NN which/WDT is/VBZ produced/VBN by/IN Makefile.in/NN contains/VBZ improper/JJ symbolic/JJ part/NN of/IN paths/NNS (/-LRB- pseudo_variables/NNS fo/VBP '/`` configure/NN '/'' utility/NN on/IN unix/JJ platforms/NNS )/-RRB- rather/RB than/IN real/JJ paths/NNS ./. 

(ROOT (S (NP (NP (NN conf)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN produced) (PP (IN by) (NP (NN Makefile.in)))))))) (VP (VBZ contains) (NP (NP (JJ improper) (JJ symbolic) (NN part)) (PP (IN of) (NP (NP (NP (NNS paths)) (PRN (-LRB- -LRB-) (S (NP (NNS pseudo_variables)) (VP (VBP fo) (S (NP (`` `) (NN configure) ('' ')) (ADJP (NN utility) (PP (IN on) (NP (JJ unix) (NNS platforms))))))) (-RRB- -RRB-))) (CONJP (RB rather) (IN than)) (NP (JJ real) (NNS paths)))))) (. .)))

root(ROOT-0, contains-7)
nsubj(contains-7, conf-1)
nsubjpass(produced-4, which-2)
auxpass(produced-4, is-3)
rcmod(conf-1, produced-4)
agent(produced-4, Makefile.in-6)
amod(part-10, improper-8)
amod(part-10, symbolic-9)
dobj(contains-7, part-10)
prep_of(part-10, paths-12)
nsubj(fo-15, pseudo_variables-14)
dep(paths-12, fo-15)
nsubj(utility-19, configure-17)
xcomp(fo-15, utility-19)
amod(platforms-22, unix-21)
prep_on(utility-19, platforms-22)
amod(paths-27, real-26)
prep_of(part-10, paths-27)
conj_negcc(paths-12, paths-27)

Following/VBG patch/NN (/-LRB- tested/VBN on/IN the/DT real/JJ installation/NN of/IN Apache2/NN .0/CD )/-RRB- makes/VBZ (/-LRB- I/PRP hope/VBP )/-RRB- better/JJR solution/NN and/CC is/VBZ symmetrical/JJ for/IN httpd-std/NN ./. 

(ROOT (S (S (S (VP (VBG Following) (NP (NP (NN patch)) (PRN (-LRB- -LRB-) (VP (VBN tested) (PP (IN on) (NP (NP (DT the) (JJ real) (NN installation)) (PP (IN of) (NP (NN Apache2) (CD .0)))))) (-RRB- -RRB-))))) (VP (VBZ makes) (PRN (-LRB- -LRB-) (S (NP (PRP I)) (VP (VBP hope))) (-RRB- -RRB-)) (NP (JJR better) (NN solution)))) (CC and) (S (VP (VBZ is) (ADJP (JJ symmetrical) (PP (IN for) (NP (NN httpd-std)))))) (. .)))

root(ROOT-0, makes-13)
csubj(makes-13, Following-1)
csubj(symmetrical-22, Following-1)
dobj(Following-1, patch-2)
dep(patch-2, tested-4)
det(installation-8, the-6)
amod(installation-8, real-7)
prep_on(tested-4, installation-8)
prep_of(installation-8, Apache2-10)
num(Apache2-10, .0-11)
nsubj(hope-16, I-15)
parataxis(makes-13, hope-16)
amod(solution-19, better-18)
dobj(makes-13, solution-19)
cop(symmetrical-22, is-21)
conj_and(makes-13, symmetrical-22)
prep_for(symmetrical-22, httpd-std-24)

conf.in/NN ,/, httpd-win/NN ./. 

(ROOT (NP (NP (NN conf.in)) (, ,) (NP (NN httpd-win)) (. .)))

root(ROOT-0, conf.in-1)
appos(conf.in-1, httpd-win-3)

conf/NN pair/NN ./. 

(ROOT (NP (NP (NN conf)) (NP (NN pair)) (. .)))

root(ROOT-0, conf-1)
dep(conf-1, pair-2)

(/-LRB- sorry/JJ for/IN my/PRP$ '/`` english/JJ '/'' )/-RRB- 

(ROOT (PRN (-LRB- -LRB-) (FRAG (ADJP (JJ sorry) (PP (IN for) (NP (PRP$ my)))) (ADJP (`` `) (JJ english) ('' '))) (-RRB- -RRB-)))

root(ROOT-0, sorry-2)
prep_for(sorry-2, my-4)
dep(sorry-2, english-6)

Index/NN :/: Makefile.win/NN 

(ROOT (NP (NP (NN Index)) (: :) (NP (NN Makefile.win))))

root(ROOT-0, Index-1)
dep(Index-1, Makefile.win-3)

===================================================================/NN 

(ROOT (NP (NN ===================================================================)))

root(ROOT-0, ===================================================================-1)

RCS/NNS file/NN :/: //: home/cvspublic/httpd/NN -2.0/CD //: Makefile.win/NNP ,/, v/LS 

(ROOT (NP (NP (NNS RCS) (NN file) (: :)) (PRN (: /) (NP (NN home/cvspublic/httpd) (CD -2.0)) (: /)) (NP (NNP Makefile.win) (, ,) (LS v))))

root(ROOT-0, file-2)
nn(file-2, RCS-1)
punct(home/cvspublic/httpd-5, /-4)
dep(file-2, home/cvspublic/httpd-5)
num(home/cvspublic/httpd-5, -2.0-6)
punct(home/cvspublic/httpd-5, /-7)
dep(file-2, Makefile.win-8)
dep(Makefile.win-8, v-10)

retrieving/VBG revision/NN 1.120.2.13/CD 

(ROOT (S (VP (VBG retrieving) (NP (NN revision) (CD 1.120.2.13)))))

root(ROOT-0, retrieving-1)
dobj(retrieving-1, revision-2)
num(revision-2, 1.120.2.13-3)

diff/SYM -/: u/SYM -/: r1/NN .120.2.13/CD Makefile.win/NN 

(ROOT (SINV (VP (SYM diff) (: -) (FRAG (X (SYM u)) (: -) (NP (NN r1)))) (NP (CD .120.2.13) (NN Makefile.win))))

root(ROOT-0, diff-1)
dep(r1-5, u-3)
dep(diff-1, r1-5)
num(Makefile.win-7, .120.2.13-6)
nsubj(diff-1, Makefile.win-7)

--/: Makefile.win/NN 18/CD Nov/NNP 2003/CD 00:46:02/CD -0000/CD 1.120.2.13/CD 

(ROOT (PRN (: --) (S (NP (NP (NP (NN Makefile.win) (CD 18)) (NP-TMP (NNP Nov) (CD 2003))) (NP (CD 00:46:02))) (NP (CD -0000) (CD 1.120.2.13)))))

root(ROOT-0, 1.120.2.13-8)
dep(1.120.2.13-8, Makefile.win-2)
num(Makefile.win-2, 18-3)
tmod(Makefile.win-2, Nov-4)
num(Nov-4, 2003-5)
dep(Makefile.win-2, 00:46:02-6)
num(1.120.2.13-8, -0000-7)

+/CC +/CC +/CC Makefile.win/NN 24/CD Nov/NNP 2003/CD 09:32:04/CD -0000/CD 

(ROOT (NP (NP (NP (CC +) (CC +)) (CC +) (NP (NP (NN Makefile.win) (CD 24)) (NP-TMP (NNP Nov) (CD 2003)))) (NP (CD 09:32:04) (CD -0000))))

root(ROOT-0, +-1)
conj_+(+-1, Makefile.win-4)
num(Makefile.win-4, 24-5)
tmod(Makefile.win-4, Nov-6)
num(Nov-6, 2003-7)
num(-0000-9, 09:32:04-8)
dep(+-1, -0000-9)

@@/NN -451,10/CD +451,10/CD @@/NN 

(ROOT (NP (NP (NN @@)) (NP (CD -451,10)) (NP (CD +451,10) (NN @@))))

root(ROOT-0, @@-1)
dep(@@-1, -451,10-2)
num(@@-4, +451,10-3)
dep(@@-1, @@-4)

-/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD logs/NNS "/'' 

(ROOT (PRN (: -) (NP (NP (NN mkdir)) (SBAR (`` ``) (S (VP ($ $) (S (NP (NP (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \)))) (NP (NNS logs)) ('' '')))))))

root(ROOT-0, mkdir-2)
dep(logs-9, $-4)
dep(logs-9, INSTDIR-6)
dep(INSTDIR-6, \-8)
dep(mkdir-2, logs-9)

-/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD modules/NNS "/'' 

(ROOT (PRN (: -) (NP (NP (NN mkdir)) (SBAR (`` ``) (S (VP ($ $) (S (NP (NP (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \)))) (NP (NNS modules)) ('' '')))))))

root(ROOT-0, mkdir-2)
dep(modules-9, $-4)
dep(modules-9, INSTDIR-6)
dep(INSTDIR-6, \-8)
dep(mkdir-2, modules-9)

-/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD proxy/NN "/'' 

(ROOT (PRN (: -) (NP (NP (NN mkdir)) (NP (NP (`` ``) ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \)) (NP (NN proxy) ('' ''))))))

root(ROOT-0, mkdir-2)
dep(INSTDIR-6, $-4)
dep(mkdir-2, INSTDIR-6)
dep(INSTDIR-6, \-8)
dep(INSTDIR-6, proxy-9)

-/: -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS "/'' 

(ROOT (NP (NP (: -)) (: -) (S (NP (NN mkdir)) (NP (`` ``) (NP ($ $)) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (CD \) (NNS symbols)) ('' '')))))

dep($-5, mkdir-3)
dep(--1, $-5)
appos($-5, INSTDIR-7)
num(symbols-10, \-9)
dep($-5, symbols-10)

-/: -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS \/VBP exe/NN "/'' 

(ROOT (FRAG (NP (: -)) (: -) (S (NP (NN mkdir)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (NP (CD \) (NNS symbols)) (SBAR (S (VP (VBP \) (NP (NN exe) ('' ''))))))))))

nsubj(symbols-10, mkdir-3)
dep(symbols-10, $-5)
dep(symbols-10, INSTDIR-7)
num(symbols-10, \-9)
dep(--1, symbols-10)
rcmod(symbols-10, \-11)
dobj(\-11, exe-12)

-/: -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS \/VBP dll/NN "/'' 

(ROOT (FRAG (NP (: -)) (: -) (S (NP (NN mkdir)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (NP (CD \) (NNS symbols)) (SBAR (S (VP (VBP \) (NP (NN dll) ('' ''))))))))))

nsubj(symbols-10, mkdir-3)
dep(symbols-10, $-5)
dep(symbols-10, INSTDIR-7)
num(symbols-10, \-9)
dep(--1, symbols-10)
rcmod(symbols-10, \-11)
dobj(\-11, dll-12)

-/: -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS \/VBP so/RB "/'' 

(ROOT (FRAG (NP (: -)) (: -) (S (NP (NN mkdir)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (NP (CD \) (NNS symbols)) (SBAR (S (VP (VBP \) (ADVP (RB so) ('' ''))))))))))

nsubj(symbols-10, mkdir-3)
dep(symbols-10, $-5)
dep(symbols-10, INSTDIR-7)
num(symbols-10, \-9)
dep(--1, symbols-10)
rcmod(symbols-10, \-11)
advmod(\-11, so-12)

+/CC -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS "/'' 

(ROOT (NP (NP (CC +)) (: -) (S (NP (NN mkdir)) (NP (`` ``) (NP ($ $)) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (CD \) (NNS symbols)) ('' '')))))

root(ROOT-0, +-1)
dep($-5, mkdir-3)
dep(+-1, $-5)
appos($-5, INSTDIR-7)
num(symbols-10, \-9)
dep($-5, symbols-10)

+/CC -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS \/VBP exe/NN "/'' 

(ROOT (FRAG (NP (CC +)) (: -) (S (NP (NN mkdir)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (NP (CD \) (NNS symbols)) (SBAR (S (VP (VBP \) (NP (NN exe) ('' ''))))))))))

root(ROOT-0, +-1)
nsubj(symbols-10, mkdir-3)
dep(symbols-10, $-5)
dep(symbols-10, INSTDIR-7)
num(symbols-10, \-9)
dep(+-1, symbols-10)
rcmod(symbols-10, \-11)
dobj(\-11, exe-12)

+/CC -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS \/VBP dll/NN "/'' 

(ROOT (FRAG (NP (CC +)) (: -) (S (NP (NN mkdir)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (NP (CD \) (NNS symbols)) (SBAR (S (VP (VBP \) (NP (NN dll) ('' ''))))))))))

root(ROOT-0, +-1)
nsubj(symbols-10, mkdir-3)
dep(symbols-10, $-5)
dep(symbols-10, INSTDIR-7)
num(symbols-10, \-9)
dep(+-1, symbols-10)
rcmod(symbols-10, \-11)
dobj(\-11, dll-12)

+/CC -/: mkdir/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD symbols/NNS \/VBP so/RB "/'' 

(ROOT (FRAG (NP (CC +)) (: -) (S (NP (NN mkdir)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (NP (CD \) (NNS symbols)) (SBAR (S (VP (VBP \) (ADVP (RB so) ('' ''))))))))))

root(ROOT-0, +-1)
nsubj(symbols-10, mkdir-3)
dep(symbols-10, $-5)
dep(symbols-10, INSTDIR-7)
num(symbols-10, \-9)
dep(+-1, symbols-10)
rcmod(symbols-10, \-11)
advmod(\-11, so-12)

copy/NN ABOUT_APACHE/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD ABOUT_APACHE/NN ./. 

(ROOT (S (NP (NN copy) (NN ABOUT_APACHE)) (`` ``) (VP ($ $) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-)) (NP (CD \) (NN ABOUT_APACHE))) (. .)))

root(ROOT-0, ABOUT_APACHE-9)
nn(ABOUT_APACHE-2, copy-1)
nsubj(ABOUT_APACHE-9, ABOUT_APACHE-2)
dep(ABOUT_APACHE-9, $-4)
dep(ABOUT_APACHE-9, INSTDIR-6)
num(ABOUT_APACHE-9, \-8)

txt/NN "/'' </JJR ./. 

(ROOT (NP (NP (NN txt) ('' '')) (NP (JJR <)) (. .)))

root(ROOT-0, txt-1)
dep(txt-1, <-3)

y/NN 

(ROOT (NP (NN y)))

root(ROOT-0, y-1)

copy/NN CHANGES/NNS "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD CHANGES.txt/NN "/'' </JJR ./. 

(ROOT (S (NP (NN copy) (NNS CHANGES)) (VP (NP (`` ``) (NP (NP ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \) (NN CHANGES.txt))) ('' '') (ADJP (JJR <)))) (. .)))

root(ROOT-0, INSTDIR-6)
nn(CHANGES-2, copy-1)
nsubj(INSTDIR-6, CHANGES-2)
dep(INSTDIR-6, $-4)
num(CHANGES.txt-9, \-8)
dep(INSTDIR-6, CHANGES.txt-9)
amod(INSTDIR-6, <-11)

y/NN 

(ROOT (NP (NN y)))

root(ROOT-0, y-1)

copy/NN INSTALL/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD INSTALL.txt/NN "/'' </JJR ./. 

(ROOT (S (NP (NN copy)) (VP (NN INSTALL) (NP (`` ``) (NP (NP ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \) (NN INSTALL.txt))) ('' '') (ADJP (JJR <)))) (. .)))

root(ROOT-0, INSTALL-2)
nsubj(INSTALL-2, copy-1)
dep(INSTDIR-6, $-4)
dobj(INSTALL-2, INSTDIR-6)
num(INSTALL.txt-9, \-8)
dep(INSTDIR-6, INSTALL.txt-9)
amod(INSTDIR-6, <-11)

y/NN 

(ROOT (NP (NN y)))

root(ROOT-0, y-1)

@@/NN -630,8/CD +630,8/CD @@/NN 

(ROOT (NP (NP (NN @@)) (NP (CD -630,8)) (NP (CD +630,8) (NN @@))))

root(ROOT-0, @@-1)
dep(@@-1, -630,8-2)
num(@@-4, +630,8-3)
dep(@@-1, @@-4)

</JJR </JJR 

(ROOT (FRAG (ADJP (JJR <)) (ADJP (JJR <))))

root(ROOT-0, <-1)
dep(<-1, <-2)

if/IN not/RB exist/VB "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD conf/NN \/CD httpd.conf/NN "/'' \/IN 

(ROOT (FRAG (CONJP (IN if) (RB not)) (S (VP (VB exist) (NP (`` ``) (NP (NP ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \) (NN conf)) (NP (CD \) (NN httpd.conf))) ('' '') (ADJP (IN \)))))))

root(ROOT-0, exist-3)
cc(exist-3, not-2)
dep(INSTDIR-7, $-5)
dobj(exist-3, INSTDIR-7)
num(conf-10, \-9)
dep(INSTDIR-7, conf-10)
num(httpd.conf-12, \-11)
dep(INSTDIR-7, httpd.conf-12)
amod(INSTDIR-7, \-14)

copy/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD conf/NN \/CD httpd.default.conf/NN "/'' "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- 

(ROOT (X (NP (NP (NN copy)) (NP (NP (`` ``) ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \)))) (NP (NN conf) (CD \)) (NP (NP (NN httpd.default.conf) ('' '')) (NP (`` ``) ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)))))

root(ROOT-0, httpd.default.conf-10)
dep(httpd.default.conf-10, copy-1)
dep(INSTDIR-5, $-3)
dep(copy-1, INSTDIR-5)
dep(INSTDIR-5, \-7)
dep(httpd.default.conf-10, conf-8)
num(conf-8, \-9)
dep(INSTDIR-15, $-13)
dep(httpd.default.conf-10, INSTDIR-15)

\/NN conf/NN \/CD httpd.conf/NN "/'' 

(ROOT (NP (NP (NN \) (NN conf)) (NP (CD \)) (NP (NN httpd.conf) ('' ''))))

root(ROOT-0, conf-2)
nn(conf-2, \-1)
dep(conf-2, \-3)
dep(conf-2, httpd.conf-4)

-/: copy/NN docs/NNS \/VBP conf/FW \/FW ssl-std/NN ./. 

(ROOT (S (: -) (NP (NN copy) (NNS docs)) (VP (VBP \) (NP (ADJP (FW conf) (FW \)) (NN ssl-std))) (. .)))

root(ROOT-0, \-4)
nn(docs-3, copy-2)
nsubj(\-4, docs-3)
amod(ssl-std-7, conf-5)
dep(conf-5, \-6)
dobj(\-4, ssl-std-7)

conf.in/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD conf/NN \/CD ssl.default.conf/NN "/'' </JJR ./. 

(ROOT (S (NP (NN conf.in)) (VP (NP (`` ``) (NP (NP ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \) (NN conf)) (NP (CD \) (NN ssl.default.conf))) ('' '') (ADJP (JJR <)))) (. .)))

root(ROOT-0, INSTDIR-5)
nsubj(INSTDIR-5, conf.in-1)
dep(INSTDIR-5, $-3)
num(conf-8, \-7)
dep(INSTDIR-5, conf-8)
num(ssl.default.conf-10, \-9)
dep(INSTDIR-5, ssl.default.conf-10)
amod(INSTDIR-5, <-12)

y/NN 

(ROOT (NP (NN y)))

root(ROOT-0, y-1)

-/: -/: awk/SYM -/: f/SYM </JJR </JJR script.awk/CD "/`` docs/conf/ssl-std/NN ./. 

(ROOT (PRN (: -) (FRAG (: -) (ADVP (SYM awk) (: -)) (NP (NP (SYM f)) (ADJP (NP (JJR <)) (JJR <)) (PP (CD script.awk) (`` ``) (NP (NN docs/conf/ssl-std))))) (. .)))

root(ROOT-0, f-5)
dep(f-5, awk-3)
npadvmod(<-7, <-6)
amod(f-5, <-7)
prep(f-5, script.awk-8)
dep(script.awk-8, docs/conf/ssl-std-10)

conf/NN "/'' "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- "/'' 

(ROOT (S (VP (NN conf) ('' '') (NP (NP (`` ``) ($ $)) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-))) ('' ''))))

root(ROOT-0, conf-1)
dobj(conf-1, $-4)
appos($-4, INSTDIR-6)

>/JJR "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD conf/NN \/CD ssl.default.conf/NN "/'' 

(ROOT (X (NP (NP (JJR >)) (NP (`` ``) ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-))) (NP (CD \) (NN conf)) (NP (NP (CD \)) (NP (NN ssl.default.conf) ('' '')))))

root(ROOT-0, \-9)
dep(\-9, >-1)
dep(INSTDIR-5, $-3)
dep(>-1, INSTDIR-5)
num(conf-8, \-7)
dep(\-9, conf-8)
dep(\-9, ssl.default.conf-10)

+/CC copy/NN docs/NNS \/VBP conf/FW \/FW ssl-win/NN ./. 

(ROOT (S (NP (CC +) (NP (NP (NN copy)) (NP (NNS docs)))) (VP (VBP \) (NP (ADJP (FW conf) (FW \)) (NN ssl-win))) (. .)))

root(ROOT-0, \-4)
cc(copy-2, +-1)
nsubj(\-4, copy-2)
dep(copy-2, docs-3)
amod(ssl-win-7, conf-5)
dep(conf-5, \-6)
dobj(\-4, ssl-win-7)

conf/NN "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD conf/NN \/CD ssl.default.conf/NN "/'' </JJR ./. 

(ROOT (S (NP (NN conf)) (VP (NP (`` ``) (NP (NP ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-)) (NP (CD \) (NN conf)) (NP (CD \) (NN ssl.default.conf))) ('' '') (ADJP (JJR <)))) (. .)))

root(ROOT-0, INSTDIR-5)
nsubj(INSTDIR-5, conf-1)
dep(INSTDIR-5, $-3)
num(conf-8, \-7)
dep(INSTDIR-5, conf-8)
num(ssl.default.conf-10, \-9)
dep(INSTDIR-5, ssl.default.conf-10)
amod(INSTDIR-5, <-12)

y/NN 

(ROOT (NP (NN y)))

root(ROOT-0, y-1)

+/CC -/: awk/SYM -/: f/SYM </JJR </JJR script.awk/CD "/`` docs/conf/ssl-win/NN ./. 

(ROOT (S (NP (CC +)) (: -) (VP (SYM awk) (: -) (NP (NP (NP (SYM f)) (ADJP (NP (JJR <)) (JJR <))) (NP (NP (CD script.awk)) (`` ``) (NP (NN docs/conf/ssl-win))))) (. .)))

root(ROOT-0, f-5)
nsubj(f-5, +-1)
dep(f-5, awk-3)
npadvmod(<-7, <-6)
amod(f-5, <-7)
dep(f-5, script.awk-8)
dep(script.awk-8, docs/conf/ssl-win-10)

conf/NN "/'' "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- "/'' 

(ROOT (S (VP (NN conf) ('' '') (NP (NP (`` ``) ($ $)) (PRN (-LRB- -LRB-) (NP (NN INSTDIR)) (-RRB- -RRB-))) ('' ''))))

root(ROOT-0, conf-1)
dobj(conf-1, $-4)
appos($-4, INSTDIR-6)

>/JJR "/`` $/$ (/-LRB- INSTDIR/NN )/-RRB- \/CD conf/NN \/CD ssl.default.conf/NN "/'' 

(ROOT (X (NP (NP (JJR >)) (NP (`` ``) ($ $) (-LRB- -LRB-) (NN INSTDIR) (-RRB- -RRB-))) (NP (CD \) (NN conf)) (NP (NP (CD \)) (NP (NN ssl.default.conf) ('' '')))))

root(ROOT-0, \-9)
dep(\-9, >-1)
dep(INSTDIR-5, $-3)
dep(>-1, INSTDIR-5)
num(conf-8, \-7)
dep(\-9, conf-8)
dep(\-9, ssl.default.conf-10)

BEGIN/VB {/-LRB- 

(ROOT (S (VP (VB BEGIN)) (-LRB- -LCB-)))

root(ROOT-0, BEGIN-1)

serverroot/NN =/JJ ARGV/NN [/-LRB- 2/CD ]/-RRB- ;/: 

(ROOT (NP (NP (NN serverroot) (JJ =) (NN ARGV)) (-LRB- -LSB-) (NP (CD 2) (-RRB- -RSB-)) (: ;)))

root(ROOT-0, ARGV-3)
nn(ARGV-3, serverroot-1)
amod(ARGV-3, =-2)
punct(ARGV-3, -LSB--4)
dep(ARGV-3, 2-5)
punct(2-5, -RSB--6)

delete/VB ARGV/NNP [/-LRB- 2/CD ]/-RRB- ;/: 

(ROOT (S (VP (VB delete) (NP (NP (NNP ARGV)) (PP (-LRB- -LSB-) (NP (CD 2) (-RRB- -RSB-))))) (: ;)))

root(ROOT-0, delete-1)
dobj(delete-1, ARGV-2)
punct(2-4, -LSB--3)
prep(ARGV-2, 2-4)
punct(2-4, -RSB--5)

Index/NN :/: docs/conf/ssl-win/NN ./. 

(ROOT (NP (NP (NN Index)) (: :) (NP (NN docs/conf/ssl-win)) (. .)))

root(ROOT-0, Index-1)
dep(Index-1, docs/conf/ssl-win-3)

conf/NN 

(ROOT (NP (NN conf)))

root(ROOT-0, conf-1)

===================================================================/NN 

(ROOT (NP (NN ===================================================================)))

root(ROOT-0, ===================================================================-1)

+/CC +/CC +/CC docs/conf/ssl-win/NN ./. 

(ROOT (S (NP (CC +)) (VP (CC +) (NP (CC +) (NN docs/conf/ssl-win))) (. .)))

root(ROOT-0, docs/conf/ssl-win-4)
nsubj(docs/conf/ssl-win-4, +-1)
cc(docs/conf/ssl-win-4, +-2)
cc(docs/conf/ssl-win-4, +-3)

conf/NN Fri/NNP Nov/NNP 21/CD 11:04:38/CD 2003/CD 

(ROOT (NP (NP (NN conf)) (NP (NNP Fri) (NNP Nov) (CD 21)) (NP (CD 11:04:38) (CD 2003))))

root(ROOT-0, conf-1)
nn(Nov-3, Fri-2)
dep(conf-1, Nov-3)
num(Nov-3, 21-4)
num(2003-6, 11:04:38-5)
dep(conf-1, 2003-6)

@@/NN 0,0/CD +1,249/CD @@/NN 

(ROOT (NP (NP (NN @@)) (NP (NP (QP (CD 0,0) (CD +1,249))) (NP (NN @@)))))

root(ROOT-0, @@-1)
number(+1,249-3, 0,0-2)
dep(@@-1, +1,249-3)
dep(+1,249-3, @@-4)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC #/# This/DT is/VBZ the/DT Apache/NNP server/NN configuration/NN file/NN providing/VBG SSL/NN support/NN ./. 

(ROOT (S (NP (CC +) (# #)) (NP (DT This)) (VP (VBZ is) (NP (NP (DT the) (NNP Apache) (NN server) (NN configuration) (NN file)) (VP (VBG providing) (NP (NN SSL) (NN support))))) (. .)))

root(ROOT-0, file-9)
nsubj(file-9, +-1)
dep(+-1, #-2)
nsubj(file-9, This-3)
cop(file-9, is-4)
det(file-9, the-5)
nn(file-9, Apache-6)
nn(file-9, server-7)
nn(file-9, configuration-8)
vmod(file-9, providing-10)
nn(support-12, SSL-11)
dobj(providing-10, support-12)

+/CC #/# It/PRP contains/VBZ the/DT configuration/NN directives/NNS to/TO instruct/VB the/DT server/NN how/WRB to/TO 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (PRP It)) (VP (VBZ contains) (S (NP (DT the) (NN configuration) (NNS directives)) (VP (TO to) (VP (VB instruct) (NP (DT the) (NN server)) (SBAR (WHADVP (WRB how)) (S (VP (TO to)))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(contains-4, It-3)
ccomp(#-2, contains-4)
det(directives-7, the-5)
nn(directives-7, configuration-6)
dobj(contains-4, directives-7)
aux(instruct-9, to-8)
xcomp(contains-4, instruct-9)
det(server-11, the-10)
dobj(instruct-9, server-11)
advmod(to-13, how-12)
xcomp(instruct-9, to-13)

+/CC #/# serve/VB pages/NNS over/IN an/DT https/NN connection/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB serve) (NP (NNS pages)) (PP (IN over) (NP (DT an) (NN https) (NN connection))))) (. .)))

root(ROOT-0, serve-3)
nsubj(serve-3, +-1)
dep(serve-3, #-2)
dobj(serve-3, pages-4)
det(connection-8, an-6)
nn(connection-8, https-7)
prep_over(serve-3, connection-8)

For/IN detailing/VBG information/NN about/IN these/DT 

(ROOT (PP (IN For) (S (VP (VBG detailing) (NP (NN information)) (PP (IN about) (NP (DT these)))))))

root(ROOT-0, For-1)
pcomp(For-1, detailing-2)
dobj(detailing-2, information-3)
prep_about(detailing-2, these-5)

+/CC #/# directives/NNS see/VBP </JJR URL/NN :/: http://httpd.apache.org/docs-2.0/mod/mod_ssl.html&gt;/NN 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (NNS directives)) (VP (VBP see) (NP (JJR <) (NN URL) (: :) (NN http://httpd.apache.org/docs-2.0/mod/mod_ssl.html&gt;))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(see-4, directives-3)
ccomp(#-2, see-4)
amod(http://httpd.apache.org/docs-2.0/mod/mod_ssl.html&gt;-8, <-5)
nn(http://httpd.apache.org/docs-2.0/mod/mod_ssl.html&gt;-8, URL-6)
dobj(see-4, http://httpd.apache.org/docs-2.0/mod/mod_ssl.html&gt;-8)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC #/# For/IN the/DT moment/NN ,/, see/VB </JJR URL/NN :/: http://www.modssl.org/docs/&gt;/NN for/IN this/DT info/NN ./. 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN For) (NP (DT the) (NN moment)))) (, ,) (VP (VB see) (NP (JJR <) (NN URL) (: :) (NN http://www.modssl.org/docs/&gt;)) (PP (IN for) (NP (DT this) (NN info))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
det(moment-5, the-4)
prep_for(#-2, moment-5)
dep(#-2, see-7)
amod(http://www.modssl.org/docs/&gt;-11, <-8)
nn(http://www.modssl.org/docs/&gt;-11, URL-9)
dobj(see-7, http://www.modssl.org/docs/&gt;-11)
det(info-14, this-13)
prep_for(see-7, info-14)

+/CC #/# The/DT documents/NNS are/VBP still/RB being/VBG prepared/VBN from/IN material/NN donated/VBN by/IN the/DT 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT The) (NNS documents)) (VP (VBP are) (ADVP (RB still)) (VP (VBG being) (VP (VBN prepared) (PP (IN from) (NP (NP (NN material)) (VP (VBN donated) (PP (IN by) (NP (DT the))))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
det(documents-4, The-3)
nsubjpass(prepared-8, documents-4)
aux(prepared-8, are-5)
advmod(prepared-8, still-6)
auxpass(prepared-8, being-7)
ccomp(#-2, prepared-8)
prep_from(prepared-8, material-10)
vmod(material-10, donated-11)
agent(donated-11, the-13)

+/CC #/# modssl/FW project/NN ./. 

(ROOT (S (NP (CC +)) (VP (NP (NP (# #) (FW modssl)) (NP (NN project)))) (. .)))

root(ROOT-0, modssl-3)
nsubj(modssl-3, +-1)
dep(modssl-3, #-2)
dep(modssl-3, project-4)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC #/# Do/VBP NOT/RB simply/RB read/VB the/DT instructions/NNS in/IN here/RB without/IN understanding/VBG 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VBP Do) (RB NOT) (ADVP (RB simply)) (VP (VB read) (NP (NP (DT the) (NNS instructions)) (PP (IN in) (NP (RB here)))) (PP (IN without) (S (VP (VBG understanding)))))))))

root(ROOT-0, read-6)
nsubj(read-6, +-1)
dep(read-6, #-2)
aux(read-6, Do-3)
neg(read-6, NOT-4)
advmod(read-6, simply-5)
det(instructions-8, the-7)
dobj(read-6, instructions-8)
prep(instructions-8, in-9)
pobj(in-9, here-10)
prepc_without(read-6, understanding-12)

+/CC #/# what/WP they/PRP do/VBP ./. 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (WHNP (WP what)) (S (NP (PRP they)) (VP (VBP do))))) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
dobj(do-5, what-3)
nsubj(do-5, they-4)
ccomp(#-2, do-5)

They/PRP 're/VBP here/RB only/RB as/IN hints/NNS or/CC reminders/NNS ./. 

(ROOT (S (NP (PRP They)) (VP (VBP 're) (ADVP (RB here)) (ADVP (RB only)) (PP (IN as) (NP (NNS hints) (CC or) (NNS reminders)))) (. .)))

root(ROOT-0, 're-2)
nsubj('re-2, They-1)
advmod('re-2, here-3)
advmod('re-2, only-4)
prep_as('re-2, hints-6)
prep_as('re-2, reminders-8)
conj_or(hints-6, reminders-8)

If/IN you/PRP are/VBP unsure/JJ 

(ROOT (SBAR (IN If) (S (NP (PRP you)) (VP (VBP are) (ADJP (JJ unsure))))))

root(ROOT-0, unsure-4)
mark(unsure-4, If-1)
nsubj(unsure-4, you-2)
cop(unsure-4, are-3)

+/CC #/# consult/VB the/DT online/JJ docs/NNS ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB consult) (NP (DT the) (JJ online) (NNS docs)))) (. .)))

root(ROOT-0, consult-3)
nsubj(consult-3, +-1)
dep(consult-3, #-2)
det(docs-6, the-4)
amod(docs-6, online-5)
dobj(consult-3, docs-6)

You/PRP have/VBP been/VBN warned/VBN ./. 

(ROOT (S (NP (PRP You)) (VP (VBP have) (VP (VBN been) (VP (VBN warned)))) (. .)))

root(ROOT-0, warned-4)
nsubjpass(warned-4, You-1)
aux(warned-4, have-2)
auxpass(warned-4, been-3)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC </JJR IfDefine/NNP SSL/NNP >/JJR 

(ROOT (S (NP (CC +) (NP (NP (JJR <)) (NP (NNP IfDefine) (NNP SSL)))) (ADJP (JJR >))))

root(ROOT-0, >-5)
cc(<-2, +-1)
dep(>-5, <-2)
nn(SSL-4, IfDefine-3)
dep(<-2, SSL-4)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Until/IN documentation/NN is/VBZ completed/VBN ,/, please/VB check/NN http://www.modssl.org//NN 

(ROOT (S (VP (CC +) (VP (# #) (SBAR (IN Until) (S (NP (NN documentation)) (VP (VBZ is) (VP (VBN completed)))))) (, ,) (VP (VB please) (NP (NN check) (NN http://www.modssl.org/))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
mark(completed-6, Until-3)
nsubjpass(completed-6, documentation-4)
auxpass(completed-6, is-5)
advcl(#-2, completed-6)
dep(#-2, please-8)
nn(http://www.modssl.org/-10, check-9)
dobj(please-8, http://www.modssl.org/-10)

+/CC #/# for/IN additional/JJ config/NN examples/NNS and/CC module/NN docmentation/NN ./. 

(ROOT (S (VP (CC +) (VP (VP (# #) (PP (IN for) (NP (JJ additional) (NN config) (NNS examples)))) (CC and) (VP (NN module) (NN docmentation)))) (. .)))

root(ROOT-0, #-2)
amod(examples-6, additional-4)
nn(examples-6, config-5)
prep_for(#-2, examples-6)
conj_and(#-2, module-8)
dep(module-8, docmentation-9)

Directives/NNS 

(ROOT (NP (NNS Directives)))

root(ROOT-0, Directives-1)

+/CC #/# and/CC features/NNS of/IN mod_ssl/NN are/VBP largely/RB unchanged/JJ from/IN the/DT mod_ssl/NN project/NN 

(ROOT (S (NP (CC +) (NP (# #)) (CC and) (NP (NP (NNS features)) (PP (IN of) (NP (NN mod_ssl))))) (VP (VBP are) (ADJP (RB largely) (JJ unchanged) (PP (IN from) (NP (DT the) (NN mod_ssl) (NN project)))))))

root(ROOT-0, unchanged-9)
nsubj(unchanged-9, #-2)
conj_and(#-2, features-4)
nsubj(unchanged-9, features-4)
prep_of(features-4, mod_ssl-6)
cop(unchanged-9, are-7)
advmod(unchanged-9, largely-8)
det(project-13, the-11)
nn(project-13, mod_ssl-12)
prep_from(unchanged-9, project-13)

+/CC #/# for/IN Apache/NNP 1.3/CD ./. 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN for) (NP (NNP Apache) (CD 1.3))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
prep_for(#-2, Apache-4)
num(Apache-4, 1.3-5)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC #/# When/WRB we/PRP also/RB provide/VBP SSL/NN we/PRP have/VBP to/TO listen/VB to/TO the/DT 

(ROOT (S (VP (CC +) (VP (# #) (SBAR (WHADVP (WRB When)) (S (NP (PRP we)) (ADVP (RB also)) (VP (VBP provide) (NP (NP (NN SSL)) (SBAR (S (NP (PRP we)) (VP (VBP have) (S (VP (TO to) (VP (VB listen) (PP (TO to) (NP (DT the)))))))))))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
advmod(provide-6, When-3)
nsubj(provide-6, we-4)
advmod(provide-6, also-5)
advcl(#-2, provide-6)
dobj(provide-6, SSL-7)
nsubj(have-9, we-8)
rcmod(SSL-7, have-9)
aux(listen-11, to-10)
xcomp(have-9, listen-11)
prep_to(listen-11, the-13)

+/CC #/# standard/JJ HTTP/NNP port/NN (/-LRB- see/VB above/IN )/-RRB- and/CC to/TO the/DT HTTPS/NNP port/NN 

(ROOT (UCP (S (VP (CC +) (VP (# #) (NP (JJ standard) (NNP HTTP) (NN port)) (PRN (-LRB- -LRB-) (S (VP (VB see) (ADVP (IN above)))) (-RRB- -RRB-))))) (CC and) (PP (TO to) (NP (DT the) (NNP HTTPS) (NN port)))))

root(ROOT-0, port-5)
dep(port-5, #-2)
amod(port-5, standard-3)
nn(port-5, HTTP-4)
parataxis(port-5, see-7)
advmod(see-7, above-8)
conj_and(port-5, to-11)
det(port-14, the-12)
nn(port-14, HTTPS-13)
pobj(to-11, port-14)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC #/# Note/VB :/: Configurations/NNS that/WDT use/VBP IPv6/NN but/CC not/RB IPv4-mapped/JJ addresses/NNS need/VBP two/CD 

(ROOT (S (VP (CC +) (VP (# #) (NP (NP (VB Note)) (: :) (NP (NP (NNS Configurations)) (SBAR (WHNP (WDT that)) (S (VP (VBP use) (SBAR (S (NP (ADJP (NN IPv6) (CONJP (CC but) (RB not)) (JJ IPv4-mapped)) (NNS addresses)) (VP (VBP need) (NP (CD two))))))))))))))

root(ROOT-0, Note-3)
cc(Note-3, +-1)
dep(Note-3, #-2)
dep(Note-3, Configurations-5)
nsubj(use-7, that-6)
rcmod(Configurations-5, use-7)
amod(addresses-12, IPv6-8)
conj_negcc(IPv6-8, IPv4-mapped-11)
amod(addresses-12, IPv4-mapped-11)
nsubj(need-13, addresses-12)
ccomp(use-7, need-13)
dobj(need-13, two-14)

+/CC #/# Listen/VB directives/NNS :/: "/`` Listen/VB [/-LRB- :/: :]/CD :443/CD "/'' and/CC "/`` Listen/VB 0.0.0.0:443/CD "/'' 

(ROOT (S (VP (CC +) (VP (ADVP (# #)) (VB Listen) (NP (NP (NNS directives)) (: :) (`` ``) (S (VP (VB Listen) (NP (NP (-LRB- -LSB-)) (: :) (NP (CD :]) (CD :443))))) ('' ''))) (CC and) (VP (`` ``) (VB Listen) (NP (CD 0.0.0.0:443)) ('' '')))))

root(ROOT-0, Listen-3)
advmod(Listen-3, #-2)
dobj(Listen-3, directives-4)
dep(directives-4, Listen-7)
dobj(Listen-7, -LSB--8)
num(:443-11, :]-10)
dep(-LSB--8, :443-11)
conj_and(Listen-3, Listen-15)
dobj(Listen-15, 0.0.0.0:443-16)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC Listen/VB 443/CD 

(ROOT (NP (S (NP (CC +)) (VP (VB Listen) (NP (CD 443))))))

root(ROOT-0, Listen-2)
nsubj(Listen-2, +-1)
dobj(Listen-2, 443-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC ##/SYM 

(ROOT (VP (CC +) (X (SYM ##))))

root(ROOT-0, +-1)
dep(+-1, ##-2)

+/CC ##/CD SSL/NN Global/JJ Context/NN 

(ROOT (S (NP (CC +) (NP (NP (CD ##)) (NP (NN SSL)))) (ADJP (JJ Global) (NP (NN Context)))))

root(ROOT-0, Global-4)
cc(##-2, +-1)
dep(Global-4, ##-2)
dep(##-2, SSL-3)
dep(Global-4, Context-5)

+/CC ##/SYM 

(ROOT (VP (CC +) (X (SYM ##))))

root(ROOT-0, +-1)
dep(+-1, ##-2)

+/CC ##/CD All/DT SSL/NN configuration/NN in/IN this/DT context/NN applies/VBZ both/CC to/TO 

(ROOT (S (NP (CC +) (NP (NP (CD ##)) (NP (NP (DT All) (NN SSL) (NN configuration)) (PP (IN in) (NP (DT this) (NN context)))))) (VP (VBZ applies) (ADVP (CC both)) (PP (TO to)))))

root(ROOT-0, applies-9)
cc(##-2, +-1)
nsubj(applies-9, ##-2)
det(configuration-5, All-3)
nn(configuration-5, SSL-4)
dep(##-2, configuration-5)
det(context-8, this-7)
prep_in(configuration-5, context-8)
advmod(applies-9, both-10)
prep(applies-9, to-11)

+/CC ##/IN the/DT main/JJ server/NN and/CC all/DT SSL-enabled/JJ virtual/JJ hosts/NNS ./. 

(ROOT (S (NP (CC +)) (PP (IN ##) (NP (NP (DT the) (JJ main) (NN server)) (CC and) (NP (DT all) (JJ SSL-enabled) (JJ virtual) (NNS hosts)))) (. .)))

root(ROOT-0, +-1)
dep(+-1, ##-2)
det(server-5, the-3)
amod(server-5, main-4)
pobj(##-2, server-5)
det(hosts-10, all-7)
amod(hosts-10, SSL-enabled-8)
amod(hosts-10, virtual-9)
pobj(##-2, hosts-10)
conj_and(server-5, hosts-10)

+/CC ##/SYM 

(ROOT (VP (CC +) (X (SYM ##))))

root(ROOT-0, +-1)
dep(+-1, ##-2)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC #/# Some/DT MIME-types/NNS for/IN downloading/VBG Certificates/NNS and/CC CRLs/NNS 

(ROOT (S (VP (CC +) (VP (# #) (NP (DT Some) (NNS MIME-types)) (PP (IN for) (S (VP (VBG downloading) (NP (NNS Certificates) (CC and) (NNS CRLs)))))))))

root(ROOT-0, MIME-types-4)
cc(MIME-types-4, +-1)
dep(MIME-types-4, #-2)
det(MIME-types-4, Some-3)
prepc_for(MIME-types-4, downloading-6)
dobj(downloading-6, Certificates-7)
dobj(downloading-6, CRLs-9)
conj_and(Certificates-7, CRLs-9)

+/CC #/# 

(ROOT (S (VP (CC +) (VP (# #)))))

root(ROOT-0, #-2)
cc(#-2, +-1)

+/CC AddType/NNP application/x-x/NN 509-ca-cert/JJ ./. 

(ROOT (S (NP (CC +)) (VP (NP (NP (NNP AddType) (NN application/x-x)) (ADJP (JJ 509-ca-cert)))) (. .)))

root(ROOT-0, application/x-x-3)
nsubj(application/x-x-3, +-1)
nn(application/x-x-3, AddType-2)
amod(application/x-x-3, 509-ca-cert-4)

crt/NN 

(ROOT (NP (NN crt)))

root(ROOT-0, crt-1)

+/CC AddType/NNP application/x-pkcs/NNS 7-crl/NN ./. 

(ROOT (S (NP (CC +)) (VP (NP (NP (NNP AddType) (NNS application/x-pkcs)) (NP (NN 7-crl)))) (. .)))

root(ROOT-0, application/x-pkcs-3)
nsubj(application/x-pkcs-3, +-1)
nn(application/x-pkcs-3, AddType-2)
dep(application/x-pkcs-3, 7-crl-4)

crl/NN 

(ROOT (NP (NN crl)))

root(ROOT-0, crl-1)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Pass/VB Phrase/NNP Dialog/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Pass) (NP (NNP Phrase) (NNP Dialog)))) (: :)))

root(ROOT-0, Pass-3)
nsubj(Pass-3, +-1)
dep(Pass-3, #-2)
nn(Dialog-5, Phrase-4)
dobj(Pass-3, Dialog-5)

+/CC #/# Configure/VB the/DT pass/NN phrase/NN gathering/NN process/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Configure) (NP (DT the) (NN pass) (NN phrase) (NN gathering) (NN process)))) (. .)))

root(ROOT-0, Configure-3)
nsubj(Configure-3, +-1)
dep(Configure-3, #-2)
det(process-8, the-4)
nn(process-8, pass-5)
nn(process-8, phrase-6)
nn(process-8, gathering-7)
dobj(Configure-3, process-8)

+/CC #/# The/DT filtering/VBG dialog/NN program/NN (/-LRB- '/`` builtin/NN '/'' is/VBZ a/DT internal/JJ 

(ROOT (S (VP (CC +) (VP (# #) (NP (NP (DT The) (VBG filtering) (NN dialog) (NN program)) (SBAR (S (-LRB- -LRB-) (NP (`` `) (NN builtin) ('' ')) (VP (VBZ is) (NP (DT a) (JJ internal))))))))))

root(ROOT-0, program-6)
cc(program-6, +-1)
dep(program-6, #-2)
det(program-6, The-3)
amod(program-6, filtering-4)
nn(program-6, dialog-5)
nsubj(internal-13, builtin-9)
cop(internal-13, is-11)
det(internal-13, a-12)
rcmod(program-6, internal-13)

+/CC #/# terminal/JJ dialog/NN )/-RRB- has/VBZ to/TO provide/VB the/DT pass/NN phrase/NN on/IN stdout/NN ./. 

(ROOT (S (NP (CC +)) (PRN (# #) (NP (JJ terminal) (NN dialog)) (-RRB- -RRB-)) (VP (VBZ has) (S (VP (TO to) (VP (VB provide) (NP (DT the) (NN pass) (NN phrase)) (PP (IN on) (NP (NN stdout))))))) (. .)))

root(ROOT-0, has-6)
nsubj(has-6, +-1)
dep(dialog-4, #-2)
amod(dialog-4, terminal-3)
dep(has-6, dialog-4)
aux(provide-8, to-7)
xcomp(has-6, provide-8)
det(phrase-11, the-9)
nn(phrase-11, pass-10)
dobj(provide-8, phrase-11)
prep_on(provide-8, stdout-13)

+/CC SSLPassPhraseDialog/NN builtin/NN 

(ROOT (NP (NP (CC +) (NN SSLPassPhraseDialog)) (NP (NN builtin))))

root(ROOT-0, SSLPassPhraseDialog-2)
cc(SSLPassPhraseDialog-2, +-1)
dep(SSLPassPhraseDialog-2, builtin-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Inter-Process/NNPS Session/NN Cache/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNPS Inter-Process)) (PP (NN Session) (NP (NNP Cache)))) (: :)))

root(ROOT-0, Inter-Process-3)
nsubj(Inter-Process-3, +-1)
dep(Inter-Process-3, #-2)
prep(Inter-Process-3, Session-4)
dep(Session-4, Cache-5)

+/CC #/# Configure/VB the/DT SSL/NNP Session/NN Cache/NNP :/: First/NNP the/DT mechanism/NN 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Configure) (NP (NP (NP (DT the) (NNP SSL) (NN Session)) (NP (NNP Cache))) (: :) (NP (NP (NNP First)) (NP (DT the) (NN mechanism))))))))

root(ROOT-0, Configure-3)
nsubj(Configure-3, +-1)
dep(Configure-3, #-2)
det(Session-6, the-4)
nn(Session-6, SSL-5)
dobj(Configure-3, Session-6)
appos(Session-6, Cache-7)
dep(Session-6, First-9)
det(mechanism-11, the-10)
dep(First-9, mechanism-11)

+/CC #/# to/TO use/VB and/CC second/JJ the/DT expiring/VBG timeout/NN (/-LRB- in/IN seconds/NNS )/-RRB- ./. 

(ROOT (S (NP (CC +)) (VP (VP (# #) (S (VP (TO to) (VP (VB use))))) (CC and) (VP (NP (NP (JJ second)) (NP (NP (DT the) (VBG expiring) (NN timeout)) (PRN (-LRB- -LRB-) (PP (IN in) (NP (NNS seconds))) (-RRB- -RRB-)))))) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(second-6, +-1)
aux(use-4, to-3)
xcomp(#-2, use-4)
conj_and(#-2, second-6)
det(timeout-9, the-7)
amod(timeout-9, expiring-8)
dep(second-6, timeout-9)
prep_in(timeout-9, seconds-12)

+/CC #SSLSessionCache/NNP none/NN 

(ROOT (FRAG (NP (CC +) (NNP #SSLSessionCache) (NN none))))

root(ROOT-0, none-3)
cc(none-3, +-1)
nn(none-3, #SSLSessionCache-2)

+/CC #SSLSessionCache/NN shmht/NN :/: logs/ssl/NN _/NN scache/NN (/-LRB- 512000/CD )/-RRB- 

(ROOT (FRAG (NP-TMP (NP (CC +) (NN #SSLSessionCache)) (NP (NN shmht))) (: :) (NP (NP (NN logs/ssl)) (NP (NP (NN _) (NN scache)) (PRN (-LRB- -LRB-) (NP (CD 512000)) (-RRB- -RRB-))))))

root(ROOT-0, #SSLSessionCache-2)
cc(#SSLSessionCache-2, +-1)
dep(#SSLSessionCache-2, shmht-3)
dep(#SSLSessionCache-2, logs/ssl-5)
nn(scache-7, _-6)
dep(logs/ssl-5, scache-7)
appos(scache-7, 512000-9)

+/CC #SSLSessionCache/NN shmcb/NN :/: logs/ssl/NN _/NN scache/NN (/-LRB- 512000/CD )/-RRB- 

(ROOT (FRAG (NP-TMP (NP (CC +) (NN #SSLSessionCache)) (NP (NN shmcb))) (: :) (NP (NP (NN logs/ssl)) (NP (NP (NN _) (NN scache)) (PRN (-LRB- -LRB-) (NP (CD 512000)) (-RRB- -RRB-))))))

root(ROOT-0, #SSLSessionCache-2)
cc(#SSLSessionCache-2, +-1)
dep(#SSLSessionCache-2, shmcb-3)
dep(#SSLSessionCache-2, logs/ssl-5)
nn(scache-7, _-6)
dep(logs/ssl-5, scache-7)
appos(scache-7, 512000-9)

+/CC SSLSessionCache/NN dbm/NN :/: logs/ssl/NN _/CD scache/NN 

(ROOT (NP (NP (CC +) (NN SSLSessionCache)) (NP (NP (NN dbm)) (: :) (NP (NN logs/ssl) (CD _) (NN scache)))))

root(ROOT-0, SSLSessionCache-2)
cc(SSLSessionCache-2, +-1)
dep(SSLSessionCache-2, dbm-3)
nn(scache-7, logs/ssl-5)
num(scache-7, _-6)
dep(dbm-3, scache-7)

+/CC SSLSessionCacheTimeout/NN 300/CD 

(ROOT (NP (NP (CC +) (NN SSLSessionCacheTimeout)) (NP (CD 300))))

root(ROOT-0, SSLSessionCacheTimeout-2)
cc(SSLSessionCacheTimeout-2, +-1)
dep(SSLSessionCacheTimeout-2, 300-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Semaphore/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP Semaphore))) (: :)))

root(ROOT-0, Semaphore-3)
nsubj(Semaphore-3, +-1)
dep(Semaphore-3, #-2)

+/CC #/# Configure/VB the/DT path/NN to/TO the/DT mutual/JJ exclusion/NN semaphore/NN the/DT 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Configure) (NP (DT the) (NN path)) (PP (TO to) (NP (NP (DT the) (JJ mutual) (NN exclusion) (NN semaphore)) (X (DT the))))))))

root(ROOT-0, Configure-3)
nsubj(Configure-3, +-1)
dep(Configure-3, #-2)
det(path-5, the-4)
dobj(Configure-3, path-5)
det(semaphore-10, the-7)
amod(semaphore-10, mutual-8)
nn(semaphore-10, exclusion-9)
prep_to(Configure-3, semaphore-10)
dep(semaphore-10, the-11)

+/CC #/# SSL/NNP engine/NN uses/VBZ internally/RB for/IN inter-process/JJ synchronization/NN ./. 

(ROOT (S (NP (CC +) (# #) (NNP SSL) (NN engine)) (VP (VBZ uses) (ADVP (RB internally)) (PP (IN for) (NP (JJ inter-process) (NN synchronization)))) (. .)))

root(ROOT-0, uses-5)
cc(engine-4, +-1)
dep(engine-4, #-2)
nn(engine-4, SSL-3)
nsubj(uses-5, engine-4)
advmod(uses-5, internally-6)
amod(synchronization-9, inter-process-8)
prep_for(uses-5, synchronization-9)

+/CC SSLMutex/NN file/NN :/: logs/ssl/NN _/NN mutex/NN 

(ROOT (NP (NP (NP (CC +) (NN SSLMutex)) (VP (NN file))) (: :) (NP (NN logs/ssl) (NN _) (NN mutex))))

root(ROOT-0, SSLMutex-2)
cc(SSLMutex-2, +-1)
dep(SSLMutex-2, file-3)
nn(mutex-7, logs/ssl-5)
nn(mutex-7, _-6)
dep(SSLMutex-2, mutex-7)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Pseudo/NNP Random/NNP Number/NNP Generator/NNP (/-LRB- PRNG/NNP )/-RRB- :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NNP Pseudo) (NNP Random) (NNP Number) (NNP Generator)) (PRN (-LRB- -LRB-) (NNP PRNG) (-RRB- -RRB-)))) (: :)))

root(ROOT-0, Generator-6)
nsubj(Generator-6, +-1)
dep(Generator-6, #-2)
nn(Generator-6, Pseudo-3)
nn(Generator-6, Random-4)
nn(Generator-6, Number-5)
appos(Generator-6, PRNG-8)

+/CC #/# Configure/VB one/CD or/CC more/JJR sources/NNS to/TO seed/NN the/DT PRNG/NN of/IN the/DT 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Configure) (NP (QP (CD one) (CC or) (JJR more)) (NNS sources)) (PP (TO to) (NP (NP (NN seed) (DT the) (NN PRNG)) (PP (IN of) (NP (DT the)))))))))

root(ROOT-0, Configure-3)
nsubj(Configure-3, +-1)
dep(Configure-3, #-2)
num(sources-7, one-4)
conj_or(one-4, more-6)
num(sources-7, more-6)
dobj(Configure-3, sources-7)
nn(PRNG-11, seed-9)
det(PRNG-11, the-10)
prep_to(Configure-3, PRNG-11)
prep_of(PRNG-11, the-13)

+/CC #/# SSL/NNP library/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP SSL) (NN library))) (. .)))

root(ROOT-0, library-4)
nsubj(library-4, +-1)
dep(library-4, #-2)
nn(library-4, SSL-3)

The/DT seed/NN data/NNS should/MD be/VB of/IN good/JJ random/JJ quality/NN ./. 

(ROOT (S (NP (DT The) (NN seed) (NNS data)) (VP (MD should) (VP (VB be) (PP (IN of) (NP (JJ good) (JJ random) (NN quality))))) (. .)))

root(ROOT-0, be-5)
det(data-3, The-1)
nn(data-3, seed-2)
nsubj(be-5, data-3)
aux(be-5, should-4)
amod(quality-9, good-7)
amod(quality-9, random-8)
prep_of(be-5, quality-9)

+/CC #/# WARNING/VBG !/. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VBG WARNING))) (. !)))

root(ROOT-0, WARNING-3)
nsubj(WARNING-3, +-1)
dep(WARNING-3, #-2)

On/IN some/DT platforms/NNS //: dev/random/NN blocks/VBZ if/IN not/RB enough/JJ entropy/NN 

(ROOT (PP (IN On) (NP (NP (NP (DT some) (NNS platforms)) (PRN (: /) (S (NP (NN dev/random)) (VP (VBZ blocks))))) (CONJP (IN if) (RB not)) (NP (JJ enough) (NN entropy)))))

root(ROOT-0, On-1)
det(platforms-3, some-2)
pobj(On-1, platforms-3)
punct(blocks-6, /-4)
nsubj(blocks-6, dev/random-5)
dep(platforms-3, blocks-6)
amod(entropy-10, enough-9)
pobj(On-1, entropy-10)
conj_negcc(platforms-3, entropy-10)

+/CC #/# is/VBZ available/JJ ./. 

(ROOT (S (NP (CC +)) (ADVP (# #)) (VP (VBZ is) (ADJP (JJ available))) (. .)))

root(ROOT-0, available-4)
nsubj(available-4, +-1)
advmod(available-4, #-2)
cop(available-4, is-3)

This/DT means/VBZ you/PRP then/RB can/MD not/RB use/VB the/DT //: dev/random/JJ device/NN 

(ROOT (S (NP (DT This)) (VP (VBZ means) (SBAR (S (NP (PRP you)) (ADVP (RB then)) (VP (MD can) (RB not) (VP (VB use) (FRAG (X (DT the)) (: /) (NP (JJ dev/random) (NN device))))))))))

root(ROOT-0, means-2)
nsubj(means-2, This-1)
nsubj(use-7, you-3)
advmod(use-7, then-4)
aux(use-7, can-5)
neg(use-7, not-6)
ccomp(means-2, use-7)
dep(device-11, the-8)
punct(device-11, /-9)
amod(device-11, dev/random-10)
dep(use-7, device-11)

+/CC #/# because/IN it/PRP would/MD lead/VB to/TO very/RB long/JJ connection/NN times/NNS (/-LRB- as/RB long/RB as/IN 

(ROOT (S (VP (CC +) (VP (# #) (SBAR (IN because) (S (NP (PRP it)) (VP (MD would) (VP (VB lead) (PP (TO to) (NP (NP (ADJP (RB very) (JJ long)) (NN connection) (NNS times)) (PRN (-LRB- -LRB-) (UCP (ADVP (RB as) (RB long)) (PP (IN as))))))))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
mark(lead-6, because-3)
nsubj(lead-6, it-4)
aux(lead-6, would-5)
advcl(#-2, lead-6)
advmod(long-9, very-8)
amod(times-11, long-9)
nn(times-11, connection-10)
prep_to(lead-6, times-11)
advmod(long-14, as-13)
dep(times-11, long-14)
prep(long-14, as-15)

+/CC #/# it/PRP requires/VBZ to/TO make/VB more/JJR entropy/NN available/JJ )/-RRB- ./. 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (PRP it)) (VP (VBZ requires) (S (VP (TO to) (VP (VB make) (S (NP (JJR more) (NN entropy)) (ADJP (JJ available)))))))))) (-RRB- -RRB-) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(requires-4, it-3)
ccomp(#-2, requires-4)
aux(make-6, to-5)
xcomp(requires-4, make-6)
amod(entropy-8, more-7)
nsubj(available-9, entropy-8)
xcomp(make-6, available-9)

But/CC usually/RB those/DT 

(ROOT (FRAG (CC But) (ADVP (RB usually)) (NP (DT those))))

root(ROOT-0, those-3)
cc(those-3, But-1)
dep(those-3, usually-2)

+/CC #/# platforms/NNS additionally/RB provide/VBP a/DT //: dev/urandom/JJ device/NN which/WDT does/VBZ n't/RB 

(ROOT (S (NP (CC +) (NP (NP (# #) (NNS platforms)) (ADVP (RB additionally)))) (VP (VBP provide) (NP (DT a) (PRN (: /) (NP (JJ dev/urandom) (NN device)))) (SBAR (WHNP (WDT which)) (S (VP (VBZ does) (RB n't)))))))

root(ROOT-0, provide-5)
cc(platforms-3, +-1)
dep(platforms-3, #-2)
nsubj(provide-5, platforms-3)
advmod(platforms-3, additionally-4)
det(device-9, a-6)
punct(device-9, /-7)
amod(device-9, dev/urandom-8)
dobj(provide-5, device-9)
nsubj(does-11, which-10)
dep(provide-5, does-11)
neg(does-11, n't-12)

+/CC #/# block/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN block))) (. .)))

root(ROOT-0, block-3)
nsubj(block-3, +-1)
dep(block-3, #-2)

So/RB ,/, if/IN available/JJ ,/, use/VB this/DT one/CD instead/RB ./. 

(ROOT (S (VP (ADVP (ADVP (RB So)) (PRN (, ,) (SBAR (IN if) (FRAG (ADJP (JJ available)))) (, ,))) (VB use) (NP (NP (DT this) (CD one)) (ADVP (RB instead)))) (. .)))

root(ROOT-0, use-6)
advmod(use-6, So-1)
mark(available-4, if-3)
dep(So-1, available-4)
det(one-8, this-7)
dobj(use-6, one-8)
advmod(one-8, instead-9)

Read/VB the/DT mod_ssl/NN User/NN 

(ROOT (S (VP (VB Read) (NP (DT the) (NN mod_ssl) (NN User)))))

root(ROOT-0, Read-1)
det(User-4, the-2)
nn(User-4, mod_ssl-3)
dobj(Read-1, User-4)

+/CC #/# Manual/NNP for/IN more/JJR details/NNS ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NNP Manual)) (PP (IN for) (NP (JJR more) (NNS details))))) (. .)))

root(ROOT-0, Manual-3)
nsubj(Manual-3, +-1)
dep(Manual-3, #-2)
amod(details-6, more-5)
prep_for(Manual-3, details-6)

+/CC SSLRandomSeed/NN startup/NN builtin/NN 

(ROOT (NP (NP (CC +) (NN SSLRandomSeed)) (NP (NN startup) (NN builtin))))

root(ROOT-0, SSLRandomSeed-2)
cc(SSLRandomSeed-2, +-1)
nn(builtin-4, startup-3)
dep(SSLRandomSeed-2, builtin-4)

+/CC SSLRandomSeed/NN connect/VBP builtin/NN 

(ROOT (FRAG (NP (NP (CC +) (NN SSLRandomSeed)) (SBAR (S (VP (VBP connect) (NP (NN builtin))))))))

root(ROOT-0, SSLRandomSeed-2)
cc(SSLRandomSeed-2, +-1)
rcmod(SSLRandomSeed-2, connect-3)
dobj(connect-3, builtin-4)

+/CC #SSLRandomSeed/NN startup/NN file/NN :/: //: dev/random/NN 512/CD 

(ROOT (NP (NP (NP (NP (CC +) (NN #SSLRandomSeed)) (SBAR (S (NP (NP (NN startup)) (NP (ADJP (NN file))) (: :))))) (PRN (: /) (NP (NN dev/random)))) (NP (CD 512))))

root(ROOT-0, #SSLRandomSeed-2)
cc(#SSLRandomSeed-2, +-1)
rcmod(#SSLRandomSeed-2, startup-3)
dep(startup-3, file-4)
punct(dev/random-7, /-6)
dep(#SSLRandomSeed-2, dev/random-7)
dep(#SSLRandomSeed-2, 512-8)

+/CC #SSLRandomSeed/NN startup/NN file/NN :/: //: dev/urandom/NN 512/CD 

(ROOT (NP (NP (NP (NP (CC +) (NN #SSLRandomSeed)) (SBAR (S (NP (NP (NN startup)) (NP (ADJP (NN file))) (: :))))) (PRN (: /) (NP (NN dev/urandom)))) (NP (CD 512))))

root(ROOT-0, #SSLRandomSeed-2)
cc(#SSLRandomSeed-2, +-1)
rcmod(#SSLRandomSeed-2, startup-3)
dep(startup-3, file-4)
punct(dev/urandom-7, /-6)
dep(#SSLRandomSeed-2, dev/urandom-7)
dep(#SSLRandomSeed-2, 512-8)

+/CC #SSLRandomSeed/NN connect/VBP file/NN :/: //: dev/random/NN 512/CD 

(ROOT (S (NP (CC +)) (VP (NP (NP (NN #SSLRandomSeed)) (SBAR (S (VP (VBP connect) (NP (NN file))) (: :)))) (PRN (: /) (NP (NP (NN dev/random)) (NP (CD 512)))))))

root(ROOT-0, #SSLRandomSeed-2)
nsubj(#SSLRandomSeed-2, +-1)
rcmod(#SSLRandomSeed-2, connect-3)
dobj(connect-3, file-4)
punct(dev/random-7, /-6)
dep(#SSLRandomSeed-2, dev/random-7)
dep(dev/random-7, 512-8)

+/CC #SSLRandomSeed/NN connect/VBP file/NN :/: //: dev/urandom/NN 512/CD 

(ROOT (S (NP (CC +)) (VP (NP (NP (NN #SSLRandomSeed)) (SBAR (S (VP (VBP connect) (NP (NN file))) (: :)))) (PRN (: /) (NP (NP (NN dev/urandom)) (NP (CD 512)))))))

root(ROOT-0, #SSLRandomSeed-2)
nsubj(#SSLRandomSeed-2, +-1)
rcmod(#SSLRandomSeed-2, connect-3)
dobj(connect-3, file-4)
punct(dev/urandom-7, /-6)
dep(#SSLRandomSeed-2, dev/urandom-7)
dep(dev/urandom-7, 512-8)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC ##/SYM 

(ROOT (VP (CC +) (X (SYM ##))))

root(ROOT-0, +-1)
dep(+-1, ##-2)

+/CC ##/CD SSL/NNP Virtual/NNP Host/NNP Context/NNP 

(ROOT (S (NP (CC +) (NP (NP (CD ##)) (NP (NNP SSL) (NNP Virtual) (NNP Host)))) (ADJP (NNP Context))))

root(ROOT-0, Context-6)
cc(##-2, +-1)
dep(Context-6, ##-2)
nn(Host-5, SSL-3)
nn(Host-5, Virtual-4)
dep(##-2, Host-5)

+/CC ##/SYM 

(ROOT (VP (CC +) (X (SYM ##))))

root(ROOT-0, +-1)
dep(+-1, ##-2)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC </JJR VirtualHost/NNP _/CD default/NN _/CD :443/CD >/JJR 

(ROOT (S (NP (CC +) (NP (NP (JJR <)) (NP (NP (NNP VirtualHost) (CD _) (NN default)) (NP (QP (CD _) (CD :443)))))) (ADJP (JJR >))))

root(ROOT-0, >-8)
cc(<-2, +-1)
dep(>-8, <-2)
nn(default-5, VirtualHost-3)
num(default-5, _-4)
dep(<-2, default-5)
number(:443-7, _-6)
dep(default-5, :443-7)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# General/NNP setup/NN for/IN the/DT virtual/JJ host/NN 

(ROOT (NP (NP (CC +) (# #) (NNP General) (NN setup)) (PP (IN for) (NP (DT the) (JJ virtual) (NN host)))))

root(ROOT-0, setup-4)
cc(setup-4, +-1)
dep(setup-4, #-2)
nn(setup-4, General-3)
det(host-8, the-6)
amod(host-8, virtual-7)
prep_for(setup-4, host-8)

+/CC DocumentRoot/NNP "/'' @@/CD ServerRoot@@/htdocs/NNS "/'' 

(ROOT (S (NP (CC +)) (VP (NNP DocumentRoot) ('' '') (NP (CD @@) (NNS ServerRoot@@/htdocs)) ('' ''))))

root(ROOT-0, ServerRoot@@/htdocs-5)
nsubj(ServerRoot@@/htdocs-5, +-1)
dep(ServerRoot@@/htdocs-5, DocumentRoot-2)
num(ServerRoot@@/htdocs-5, @@-4)

+/CC ServerName/NNP www.example.com/NNP :443/CD 

(ROOT (NP (NP (CC +) (NNP ServerName) (NNP www.example.com)) (NP (CD :443))))

root(ROOT-0, www.example.com-3)
cc(www.example.com-3, +-1)
nn(www.example.com-3, ServerName-2)
dep(www.example.com-3, :443-4)

+/CC ServerAdmin/NNP you@example.com/NNP 

(ROOT (NP (CC +) (NNP ServerAdmin) (NNP you@example.com)))

root(ROOT-0, you@example.com-3)
cc(you@example.com-3, +-1)
nn(you@example.com-3, ServerAdmin-2)

+/CC ErrorLog/NNP logs/error/NNP _/CD log/NN 

(ROOT (S (NP (CC +) (NP (NP (NNP ErrorLog) (NNP logs/error)) (NP (CD _)))) (ADJP (NN log))))

root(ROOT-0, log-5)
cc(logs/error-3, +-1)
nn(logs/error-3, ErrorLog-2)
dep(log-5, logs/error-3)
dep(logs/error-3, _-4)

+/CC TransferLog/NNP logs/access/VBZ _/CD log/NN 

(ROOT (S (NP (CC +)) (NP-TMP (NNP TransferLog)) (VP (VBZ logs/access) (NP (CD _) (NN log)))))

root(ROOT-0, logs/access-3)
nsubj(logs/access-3, +-1)
tmod(logs/access-3, TransferLog-2)
num(log-5, _-4)
dobj(logs/access-3, log-5)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# SSL/NNP Engine/NNP Switch/VB :/: 

(ROOT (S (NP (CC +)) (VP (# #) (S (NP (NNP SSL) (NNP Engine)) (VP (VB Switch)))) (: :)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nn(Engine-4, SSL-3)
nsubj(Switch-5, Engine-4)
ccomp(#-2, Switch-5)

+/CC #/# Enable/Disable/JJ SSL/NN for/IN this/DT virtual/JJ host/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (JJ Enable/Disable) (NN SSL)) (PP (IN for) (NP (DT this) (JJ virtual) (NN host)))) (. .)))

root(ROOT-0, SSL-4)
nsubj(SSL-4, +-1)
dep(SSL-4, #-2)
amod(SSL-4, Enable/Disable-3)
det(host-8, this-6)
amod(host-8, virtual-7)
prep_for(SSL-4, host-8)

+/CC SSLEngine/NN on/IN 

(ROOT (NP (NP (CC +) (NN SSLEngine)) (PP (IN on))))

root(ROOT-0, SSLEngine-2)
cc(SSLEngine-2, +-1)
prep(SSLEngine-2, on-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# SSL/NNP Cipher/NNP Suite/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP SSL) (NNP Cipher) (NNP Suite))) (: :)))

root(ROOT-0, Suite-5)
nsubj(Suite-5, +-1)
dep(Suite-5, #-2)
nn(Suite-5, SSL-3)
nn(Suite-5, Cipher-4)

+/CC #/# List/VB the/DT ciphers/NNS that/IN the/DT client/NN is/VBZ permitted/VBN to/TO negotiate/VB ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB List) (NP (DT the) (NNS ciphers)) (SBAR (IN that) (S (NP (DT the) (NN client)) (VP (VBZ is) (VP (VBN permitted) (S (VP (TO to) (VP (VB negotiate)))))))))) (. .)))

root(ROOT-0, List-3)
nsubj(List-3, +-1)
dep(List-3, #-2)
det(ciphers-5, the-4)
dobj(List-3, ciphers-5)
mark(permitted-10, that-6)
det(client-8, the-7)
nsubjpass(permitted-10, client-8)
auxpass(permitted-10, is-9)
ccomp(List-3, permitted-10)
aux(negotiate-12, to-11)
xcomp(permitted-10, negotiate-12)

+/CC #/# See/VB the/DT mod_ssl/NN documentation/NN for/IN a/DT complete/JJ list/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB See) (NP (DT the) (NN mod_ssl) (NN documentation)) (PP (IN for) (NP (DT a) (JJ complete) (NN list))))) (. .)))

root(ROOT-0, See-3)
nsubj(See-3, +-1)
dep(See-3, #-2)
det(documentation-6, the-4)
nn(documentation-6, mod_ssl-5)
dobj(See-3, documentation-6)
det(list-10, a-8)
amod(list-10, complete-9)
prep_for(See-3, list-10)

+/CC SSLCipherSuite/NN ALL/NN :/: !/. 

(ROOT (FRAG (PP (CC +) (NP (NN SSLCipherSuite) (NN ALL)) (: :)) (. !)))

root(ROOT-0, +-1)
nn(ALL-3, SSLCipherSuite-2)
pobj(+-1, ALL-3)

ADH/NNP :/: !/. 

(ROOT (FRAG (ADVP (NNP ADH) (: :)) (. !)))

root(ROOT-0, ADH-1)

EXPORT56/NNP :/: RC4/NN +/CC RSA/NN :/: +/CC HIGH/NNP :/: +/CC MEDIUM/NNP :/: +/CC LOW/RB :/: +/CC SSLv2/NN :/: +/CC EXP/NNP :/: +/CC eNULL/NN 

(ROOT (FRAG (NP (NP (NNP EXPORT56)) (: :) (NP (NP (NN RC4)) (CC +) (NP (NP (NP (NN RSA)) (PRN (: :) (S (NP (CC +) (NP (NP (NNP HIGH)) (PRN (: :) (S (NP (CC +) (NP (NP (NNP MEDIUM)) (PRN (: :) (S (NP (CC +)) (ADJP (RB LOW))) (: :)))) (NP (CC +)))))) (NP (NN SSLv2))) (: :))) (CC +) (NP (NNP EXP)))) (: :) (NP (CC +) (NN eNULL)))))

root(ROOT-0, EXPORT56-1)
dep(EXPORT56-1, RC4-3)
dep(EXPORT56-1, RSA-5)
conj_+(RC4-3, RSA-5)
cc(HIGH-8, +-7)
dep(SSLv2-17, HIGH-8)
cc(MEDIUM-11, +-10)
dep(+-16, MEDIUM-11)
dep(LOW-14, +-13)
dep(MEDIUM-11, LOW-14)
dep(HIGH-8, +-16)
dep(RSA-5, SSLv2-17)
conj_+(RC4-3, EXP-20)
conj_+(RSA-5, EXP-20)
cc(eNULL-23, +-22)
dep(EXPORT56-1, eNULL-23)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Server/NN Certificate/NN :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN Server) (NN Certificate))) (: :)))

root(ROOT-0, Certificate-4)
nsubj(Certificate-4, +-1)
dep(Certificate-4, #-2)
nn(Certificate-4, Server-3)

+/CC #/# Point/NN SSLCertificateFile/NN at/IN a/DT PEM/NN encoded/VBD certificate/NN ./. 

(ROOT (S (NP (CC +) (NP (NP (ADJP (# #) (NN Point)) (NN SSLCertificateFile)) (PP (IN at) (NP (DT a) (NN PEM))))) (VP (VBD encoded) (NP (NN certificate))) (. .)))

root(ROOT-0, encoded-8)
cc(SSLCertificateFile-4, +-1)
number(Point-3, #-2)
amod(SSLCertificateFile-4, Point-3)
nsubj(encoded-8, SSLCertificateFile-4)
det(PEM-7, a-6)
prep_at(SSLCertificateFile-4, PEM-7)
dobj(encoded-8, certificate-9)

If/IN 

(ROOT (PP (IN If)))

root(ROOT-0, If-1)

+/CC #/# the/DT certificate/NN is/VBZ encrypted/JJ ,/, then/RB you/PRP will/MD be/VB prompted/VBN for/IN a/DT 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (S (NP (DT the) (NN certificate)) (VP (VBZ is) (ADJP (JJ encrypted)))) (, ,) (RB then) (S (NP (PRP you)) (VP (MD will) (VP (VB be) (VP (VBN prompted) (PP (IN for) (NP (DT a))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
det(certificate-4, the-3)
nsubj(encrypted-6, certificate-4)
cop(encrypted-6, is-5)
dep(#-2, encrypted-6)
advmod(prompted-12, then-8)
nsubjpass(prompted-12, you-9)
aux(prompted-12, will-10)
auxpass(prompted-12, be-11)
parataxis(encrypted-6, prompted-12)
prep_for(prompted-12, a-14)

+/CC #/# pass/VB phrase/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB pass) (NP (NN phrase)))) (. .)))

root(ROOT-0, pass-3)
nsubj(pass-3, +-1)
dep(pass-3, #-2)
dobj(pass-3, phrase-4)

Note/VB that/IN a/DT kill/NN -/: HUP/NN will/MD prompt/VB again/RB ./. 

(ROOT (S (VP (VB Note) (SBAR (IN that) (S (NP (NP (DT a) (NN kill)) (: -) (NP (NN HUP))) (VP (MD will) (VP (VB prompt) (ADVP (RB again))))))) (. .)))

root(ROOT-0, Note-1)
mark(prompt-8, that-2)
det(kill-4, a-3)
nsubj(prompt-8, kill-4)
dep(kill-4, HUP-6)
aux(prompt-8, will-7)
ccomp(Note-1, prompt-8)
advmod(prompt-8, again-9)

Keep/VB 

(ROOT (S (VP (VB Keep))))

root(ROOT-0, Keep-1)

+/CC #/# in/IN mind/NN that/IN if/IN you/PRP have/VBP both/CC an/DT RSA/NN and/CC a/DT DSA/NN certificate/NN you/PRP 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN in) (NP (NN mind))) (SBAR (IN that) (IN if) (S (NP (PRP you)) (VP (VBP have) (S (NP (CC both) (NP (DT an) (NN RSA)) (CC and) (NP (DT a) (NN DSA) (NN certificate))) (NP (PRP you))))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
prep_in(#-2, mind-4)
mark(have-8, that-5)
mark(have-8, if-6)
nsubj(have-8, you-7)
advcl(#-2, have-8)
preconj(RSA-11, both-9)
det(RSA-11, an-10)
nsubj(you-16, RSA-11)
det(certificate-15, a-13)
nn(certificate-15, DSA-14)
conj_and(RSA-11, certificate-15)
nsubj(you-16, certificate-15)
xcomp(have-8, you-16)

+/CC #/# can/MD configure/VB both/CC in/IN parallel/NN (/-LRB- to/TO also/RB allow/VB the/DT use/NN of/IN DSA/NN 

(ROOT (S (NP (CC +)) (NP-TMP (# #)) (VP (MD can) (VP (VB configure) (PP (CC both) (PP (IN in) (NP (NP (NN parallel)) (SBAR (S (-LRB- -LRB-) (VP (TO to) (VP (ADVP (RB also)) (VB allow) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NN DSA)))))))))))))))

root(ROOT-0, configure-4)
nsubj(configure-4, +-1)
tmod(configure-4, #-2)
aux(configure-4, can-3)
dep(configure-4, both-5)
prep_in(configure-4, parallel-7)
aux(allow-11, to-9)
advmod(allow-11, also-10)
vmod(parallel-7, allow-11)
det(use-13, the-12)
dobj(allow-11, use-13)
prep_of(use-13, DSA-15)

+/CC #/# ciphers/NNS ,/, etc./FW ./. )/-RRB- 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NNS ciphers)) (, ,) (NP (FW etc.)))) (. .) (-RRB- -RRB-)))

root(ROOT-0, ciphers-3)
nsubj(ciphers-3, +-1)
dep(ciphers-3, #-2)
appos(ciphers-3, etc.-5)

+/CC SSLCertificateFile/NN @@/CD ServerRoot@@/conf/ssl.crt/server.crt/NN 

(ROOT (NP (NP (CC +) (NN SSLCertificateFile)) (NP (CD @@) (NN ServerRoot@@/conf/ssl.crt/server.crt))))

root(ROOT-0, SSLCertificateFile-2)
cc(SSLCertificateFile-2, +-1)
num(ServerRoot@@/conf/ssl.crt/server.crt-4, @@-3)
dep(SSLCertificateFile-2, ServerRoot@@/conf/ssl.crt/server.crt-4)

+/CC #SSLCertificateFile/JJ @@/NN ServerRoot@@/conf/ssl.crt/server-dsa.crt/NN 

(ROOT (S (NP (CC +) (NP (NP (JJ #SSLCertificateFile)) (NP (NN @@)))) (ADJP (NN ServerRoot@@/conf/ssl.crt/server-dsa.crt))))

root(ROOT-0, ServerRoot@@/conf/ssl.crt/server-dsa.crt-4)
cc(#SSLCertificateFile-2, +-1)
dep(ServerRoot@@/conf/ssl.crt/server-dsa.crt-4, #SSLCertificateFile-2)
dep(#SSLCertificateFile-2, @@-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Server/NN Private/JJ Key/NN :/: 

(ROOT (S (VP (CC +) (# #) (ADVP (NN Server)) (NP (JJ Private) (NN Key))) (: :)))

root(ROOT-0, Key-5)
cc(Key-5, +-1)
dep(Key-5, #-2)
advmod(Key-5, Server-3)
amod(Key-5, Private-4)

+/CC #/# If/IN the/DT key/NN is/VBZ not/RB combined/VBN with/IN the/DT certificate/NN ,/, use/VB this/DT 

(ROOT (S (VP (CC +) (VP (# #) (SBAR (IN If) (S (NP (DT the) (NN key)) (VP (VBZ is) (RB not) (VP (VBN combined) (PP (IN with) (NP (DT the) (NN certificate)))))))) (, ,) (VP (VB use) (NP (DT this))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
mark(combined-8, If-3)
det(key-5, the-4)
nsubjpass(combined-8, key-5)
auxpass(combined-8, is-6)
neg(combined-8, not-7)
advcl(#-2, combined-8)
det(certificate-11, the-10)
prep_with(combined-8, certificate-11)
dep(#-2, use-13)
dobj(use-13, this-14)

+/CC #/# directive/NN to/TO point/VB at/IN the/DT key/JJ file/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN directive)) (S (VP (TO to) (VP (VB point) (PP (IN at) (NP (DT the) (JJ key) (NN file))))))) (. .)))

root(ROOT-0, directive-3)
nsubj(directive-3, +-1)
dep(directive-3, #-2)
aux(point-5, to-4)
vmod(directive-3, point-5)
det(file-9, the-7)
amod(file-9, key-8)
prep_at(point-5, file-9)

Keep/VB in/IN mind/NN that/IN if/IN 

(ROOT (VP (VB Keep) (PP (IN in) (NP (NN mind))) (SBAR (IN that) (FRAG (ADJP (IN if))))))

root(ROOT-0, Keep-1)
prep_in(Keep-1, mind-3)
mark(if-5, that-4)
dep(Keep-1, if-5)

+/CC #/# you/PRP 've/VBP both/CC a/DT RSA/NN and/CC a/DT DSA/NN private/JJ key/NN you/PRP can/MD configure/VB 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (PRP you)) (VP (VBP 've) (NP (CC both) (NP (DT a) (NN RSA)) (CC and) (NP (DT a) (NN DSA) (JJ private) (NN key)) (SBAR (S (NP (PRP you)) (VP (MD can) (VP (VB configure))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj('ve-4, you-3)
ccomp(#-2, 've-4)
preconj(RSA-7, both-5)
det(RSA-7, a-6)
dobj('ve-4, RSA-7)
det(key-12, a-9)
nn(key-12, DSA-10)
amod(key-12, private-11)
dobj('ve-4, key-12)
conj_and(RSA-7, key-12)
nsubj(configure-15, you-13)
aux(configure-15, can-14)
dep(RSA-7, configure-15)

+/CC #/# both/CC in/IN parallel/NN (/-LRB- to/TO also/RB allow/VB the/DT use/NN of/IN DSA/NNP ciphers/NNS ,/, etc./FW ./. )/-RRB- 

(ROOT (S (VP (CC +) (VP (# #) (PP (CC both) (PP (IN in) (NP (NP (NN parallel)) (PRN (-LRB- -LRB-) (S (VP (TO to) (VP (ADVP (RB also)) (VB allow) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (NP (NNP DSA) (NNS ciphers)) (, ,) (NP (FW etc.) (. .)))))))) (-RRB- -RRB-)))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
dep(#-2, both-3)
prep_in(#-2, parallel-5)
aux(allow-9, to-7)
advmod(allow-9, also-8)
dep(parallel-5, allow-9)
det(use-11, the-10)
dobj(allow-9, use-11)
nn(ciphers-14, DSA-13)
prep_of(use-11, ciphers-14)
appos(ciphers-14, etc.-16)

+/CC SSLCertificateKeyFile/NN @@/CD ServerRoot@@/conf/ssl.key/server.key/NN 

(ROOT (NP (NP (CC +) (NN SSLCertificateKeyFile)) (NP (CD @@) (NN ServerRoot@@/conf/ssl.key/server.key))))

root(ROOT-0, SSLCertificateKeyFile-2)
cc(SSLCertificateKeyFile-2, +-1)
num(ServerRoot@@/conf/ssl.key/server.key-4, @@-3)
dep(SSLCertificateKeyFile-2, ServerRoot@@/conf/ssl.key/server.key-4)

+/CC #SSLCertificateKeyFile/JJ @@/NN ServerRoot@@/conf/ssl.key/server-dsa.key/NN 

(ROOT (S (NP (CC +) (NP (NP (JJ #SSLCertificateKeyFile)) (NP (NN @@)))) (ADJP (NN ServerRoot@@/conf/ssl.key/server-dsa.key))))

root(ROOT-0, ServerRoot@@/conf/ssl.key/server-dsa.key-4)
cc(#SSLCertificateKeyFile-2, +-1)
dep(ServerRoot@@/conf/ssl.key/server-dsa.key-4, #SSLCertificateKeyFile-2)
dep(#SSLCertificateKeyFile-2, @@-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Server/NN Certificate/NNP Chain/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN Server) (NNP Certificate) (NNP Chain))) (: :)))

root(ROOT-0, Chain-5)
nsubj(Chain-5, +-1)
dep(Chain-5, #-2)
nn(Chain-5, Server-3)
nn(Chain-5, Certificate-4)

+/CC #/# Point/NN SSLCertificateChainFile/NN at/IN a/DT file/NN containing/VBG the/DT 

(ROOT (S (VP (CC +) (VP (# #) (NP (NN Point) (NN SSLCertificateChainFile)) (PP (IN at) (NP (NP (DT a) (NN file)) (VP (VBG containing) (NP (DT the)))))))))

root(ROOT-0, SSLCertificateChainFile-4)
cc(SSLCertificateChainFile-4, +-1)
dep(SSLCertificateChainFile-4, #-2)
nn(SSLCertificateChainFile-4, Point-3)
det(file-7, a-6)
prep_at(SSLCertificateChainFile-4, file-7)
vmod(file-7, containing-8)
dobj(containing-8, the-9)

+/CC #/# concatenation/NN of/IN PEM/NN encoded/VBD CA/NNP certificates/NNS which/WDT form/VBP the/DT 

(ROOT (S (NP (CC +) (NP (NP (# #) (NN concatenation)) (PP (IN of) (NP (NN PEM))))) (VP (VBD encoded) (NP (NP (NNP CA) (NNS certificates)) (SBAR (WHNP (WDT which)) (S (VP (VBP form) (NP (DT the)))))))))

root(ROOT-0, encoded-6)
cc(concatenation-3, +-1)
dep(concatenation-3, #-2)
nsubj(encoded-6, concatenation-3)
prep_of(concatenation-3, PEM-5)
nn(certificates-8, CA-7)
dobj(encoded-6, certificates-8)
nsubj(form-10, which-9)
rcmod(certificates-8, form-10)
dobj(form-10, the-11)

+/CC #/# certificate/NN chain/NN for/IN the/DT server/NN certificate/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN certificate) (NN chain)) (PP (IN for) (NP (DT the) (NN server) (NN certificate)))) (. .)))

root(ROOT-0, chain-4)
nsubj(chain-4, +-1)
dep(chain-4, #-2)
nn(chain-4, certificate-3)
det(certificate-8, the-6)
nn(certificate-8, server-7)
prep_for(chain-4, certificate-8)

Alternatively/RB 

(ROOT (ADVP (RB Alternatively)))

root(ROOT-0, Alternatively-1)

+/CC #/# the/DT referenced/VBN file/NN can/MD be/VB the/DT same/JJ as/IN SSLCertificateFile/NN 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT the) (VBN referenced) (NN file)) (VP (MD can) (VP (VB be) (NP (NP (DT the) (JJ same)) (PP (IN as) (NP (NN SSLCertificateFile)))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
det(file-5, the-3)
amod(file-5, referenced-4)
nsubj(same-9, file-5)
aux(same-9, can-6)
cop(same-9, be-7)
det(same-9, the-8)
ccomp(#-2, same-9)
prep_as(same-9, SSLCertificateFile-11)

+/CC #/# when/WRB the/DT CA/NNP certificates/NNS are/VBP directly/RB appended/VBN to/TO the/DT server/NN 

(ROOT (S (VP (CC +) (VP (# #) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NNP CA) (NNS certificates)) (VP (VBP are) (ADVP (RB directly)) (VP (VBN appended) (PP (TO to) (NP (DT the) (NN server)))))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
advmod(appended-9, when-3)
det(certificates-6, the-4)
nn(certificates-6, CA-5)
nsubjpass(appended-9, certificates-6)
auxpass(appended-9, are-7)
advmod(appended-9, directly-8)
advcl(#-2, appended-9)
det(server-12, the-11)
prep_to(appended-9, server-12)

+/CC #/# certificate/NN for/IN convinience/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN certificate)) (PP (IN for) (NP (NN convinience)))) (. .)))

root(ROOT-0, certificate-3)
nsubj(certificate-3, +-1)
dep(certificate-3, #-2)
prep_for(certificate-3, convinience-5)

+/CC #SSLCertificateChainFile/JJ @@/NN ServerRoot@@/conf/ssl.crt/ca.crt/NN 

(ROOT (S (NP (CC +) (NP (NP (JJ #SSLCertificateChainFile)) (NP (NN @@)))) (ADJP (NN ServerRoot@@/conf/ssl.crt/ca.crt))))

root(ROOT-0, ServerRoot@@/conf/ssl.crt/ca.crt-4)
cc(#SSLCertificateChainFile-2, +-1)
dep(ServerRoot@@/conf/ssl.crt/ca.crt-4, #SSLCertificateChainFile-2)
dep(#SSLCertificateChainFile-2, @@-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Certificate/NNP Authority/NNP (/-LRB- CA/NNP )/-RRB- :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NNP Certificate) (NNP Authority)) (PRN (-LRB- -LRB-) (NP (NNP CA)) (-RRB- -RRB-)))) (: :)))

root(ROOT-0, Authority-4)
nsubj(Authority-4, +-1)
dep(Authority-4, #-2)
nn(Authority-4, Certificate-3)
appos(Authority-4, CA-6)

+/CC #/# Set/VB the/DT CA/NNP certificate/NN verification/NN path/NN where/WRB to/TO find/VB CA/NNP 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Set) (NP (DT the) (NNP CA) (NN certificate) (NN verification) (NN path)) (SBAR (WHADVP (WRB where)) (S (VP (TO to) (VP (VB find) (NP (NNP CA))))))))))

root(ROOT-0, Set-3)
nsubj(Set-3, +-1)
dep(Set-3, #-2)
det(path-8, the-4)
nn(path-8, CA-5)
nn(path-8, certificate-6)
nn(path-8, verification-7)
dobj(Set-3, path-8)
advmod(find-11, where-9)
aux(find-11, to-10)
xcomp(Set-3, find-11)
dobj(find-11, CA-12)

+/CC #/# certificates/NNS for/IN client/NN authentication/NN or/CC alternatively/RB one/CD 

(ROOT (S (VP (CC +) (VP (# #) (UCP (NP (NP (NNS certificates)) (PP (IN for) (NP (NN client) (NN authentication)))) (CC or) (RRC (ADVP (RB alternatively)) (NP (CD one))))))))

root(ROOT-0, certificates-3)
dep(certificates-3, #-2)
nn(authentication-6, client-5)
prep_for(certificates-3, authentication-6)
advmod(one-9, alternatively-8)
conj_or(certificates-3, one-9)

+/CC #/# huge/JJ file/NN containing/VBG all/DT of/IN them/PRP (/-LRB- file/NN must/MD be/VB PEM/NN encoded/VBN )/-RRB- 

(ROOT (S (VP (CC +) (VP (# #) (NP (JJ huge) (NN file)) (S (VP (VBG containing) (NP (NP (DT all)) (PP (IN of) (NP (PRP them))) (PRN (-LRB- -LRB-) (S (NP (NN file)) (VP (MD must) (VP (VB be) (ADJP (NN PEM) (VBN encoded))))) (-RRB- -RRB-)))))))))

root(ROOT-0, file-4)
cc(file-4, +-1)
dep(file-4, #-2)
amod(file-4, huge-3)
xcomp(file-4, containing-5)
dobj(containing-5, all-6)
prep_of(all-6, them-8)
nsubjpass(encoded-14, file-10)
aux(encoded-14, must-11)
auxpass(encoded-14, be-12)
dep(encoded-14, PEM-13)
dep(all-6, encoded-14)

+/CC #/# Note/VB :/: Inside/IN SSLCACertificatePath/NN you/PRP need/VBP hash/JJ symlinks/NNS 

(ROOT (S (S (NP (CC +)) (VP (# #) (VP (VB Note)))) (: :) (S (PP (IN Inside) (NP (NN SSLCACertificatePath))) (NP (PRP you)) (VP (VBP need) (NP (JJ hash) (NNS symlinks))))))

root(ROOT-0, Note-3)
nsubj(Note-3, +-1)
dep(Note-3, #-2)
prep_inside(need-8, SSLCACertificatePath-6)
nsubj(need-8, you-7)
parataxis(Note-3, need-8)
amod(symlinks-10, hash-9)
dobj(need-8, symlinks-10)

+/CC #/# to/TO point/VB to/TO the/DT certificate/NN files/NNS ./. 

(ROOT (S (VP (CC +) (VP (# #) (S (VP (TO to) (VP (VB point) (PP (TO to) (NP (DT the) (NN certificate) (NNS files)))))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
aux(point-4, to-3)
xcomp(#-2, point-4)
det(files-8, the-6)
nn(files-8, certificate-7)
prep_to(point-4, files-8)

Use/VB the/DT provided/VBN 

(ROOT (S (VP (VB Use) (NP (NP (DT the)) (VP (VBN provided))))))

root(ROOT-0, Use-1)
dobj(Use-1, the-2)
vmod(the-2, provided-3)

+/CC #/# Makefile/NNP to/TO update/VB the/DT hash/NN symlinks/NNS after/IN changes/NNS ./. 

(ROOT (S (NP (CC +)) (VP (# #) (S (NP (NNP Makefile)) (VP (TO to) (VP (VB update) (NP (DT the) (NN hash) (NNS symlinks)) (PP (IN after) (NP (NNS changes))))))) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
dobj(#-2, Makefile-3)
aux(update-5, to-4)
xcomp(#-2, update-5)
det(symlinks-8, the-6)
nn(symlinks-8, hash-7)
dobj(update-5, symlinks-8)
prep_after(update-5, changes-10)

+/CC #SSLCACertificatePath/NN @@/CD ServerRoot@@/conf/ssl.crt/NN 

(ROOT (NP (NP (CC +) (NN #SSLCACertificatePath)) (NP (CD @@) (NN ServerRoot@@/conf/ssl.crt))))

root(ROOT-0, #SSLCACertificatePath-2)
cc(#SSLCACertificatePath-2, +-1)
num(ServerRoot@@/conf/ssl.crt-4, @@-3)
dep(#SSLCACertificatePath-2, ServerRoot@@/conf/ssl.crt-4)

+/CC #SSLCACertificateFile/JJ @@/NN ServerRoot@@/conf/ssl.crt/ca-bundle.crt/NN 

(ROOT (S (NP (CC +) (NP (NP (JJ #SSLCACertificateFile)) (NP (NN @@)))) (ADJP (NN ServerRoot@@/conf/ssl.crt/ca-bundle.crt))))

root(ROOT-0, ServerRoot@@/conf/ssl.crt/ca-bundle.crt-4)
cc(#SSLCACertificateFile-2, +-1)
dep(ServerRoot@@/conf/ssl.crt/ca-bundle.crt-4, #SSLCACertificateFile-2)
dep(#SSLCACertificateFile-2, @@-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Certificate/NNP Revocation/NNP Lists/NNP (/-LRB- CRL/NNP )/-RRB- :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NNP Certificate) (NNP Revocation) (NNP Lists)) (PRN (-LRB- -LRB-) (NNP CRL) (-RRB- -RRB-)))) (: :)))

root(ROOT-0, Lists-5)
nsubj(Lists-5, +-1)
dep(Lists-5, #-2)
nn(Lists-5, Certificate-3)
nn(Lists-5, Revocation-4)
appos(Lists-5, CRL-7)

+/CC #/# Set/VB the/DT CA/NNP revocation/NN path/NN where/WRB to/TO find/VB CA/NNP CRLs/NNP for/IN client/NN 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Set) (NP (DT the) (NNP CA) (NN revocation) (NN path)) (SBAR (WHADVP (WRB where)) (S (VP (TO to) (VP (VB find) (NP (NP (NNP CA) (NNP CRLs)) (PP (IN for) (NP (NN client))))))))))))

root(ROOT-0, Set-3)
nsubj(Set-3, +-1)
dep(Set-3, #-2)
det(path-7, the-4)
nn(path-7, CA-5)
nn(path-7, revocation-6)
dobj(Set-3, path-7)
advmod(find-10, where-8)
aux(find-10, to-9)
xcomp(Set-3, find-10)
nn(CRLs-12, CA-11)
dobj(find-10, CRLs-12)
prep_for(CRLs-12, client-14)

+/CC #/# authentication/NN or/CC alternatively/RB one/CD huge/JJ file/NN containing/VBG all/DT 

(ROOT (S (NP (NP (CC +) (NP (# #) (NN authentication)) (CC or) (NP (RB alternatively) (CD one) (JJ huge) (NN file))) (VP (VBG containing) (NP (DT all))))))

root(ROOT-0, authentication-3)
dep(authentication-3, #-2)
advmod(file-8, alternatively-5)
num(file-8, one-6)
amod(file-8, huge-7)
conj_or(authentication-3, file-8)
vmod(authentication-3, containing-9)
dobj(containing-9, all-10)

+/CC #/# of/IN them/PRP (/-LRB- file/NN must/MD be/VB PEM/NN encoded/VBN )/-RRB- 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN of) (NP (PRP them))) (PRN (-LRB- -LRB-) (S (NP (NN file)) (VP (MD must) (VP (VB be) (ADJP (NN PEM) (VBN encoded))))) (-RRB- -RRB-))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
prep_of(#-2, them-4)
nsubjpass(encoded-10, file-6)
aux(encoded-10, must-7)
auxpass(encoded-10, be-8)
dep(encoded-10, PEM-9)
parataxis(#-2, encoded-10)

+/CC #/# Note/VB :/: Inside/IN SSLCARevocationPath/NN you/PRP need/VBP hash/JJ symlinks/NNS 

(ROOT (S (S (NP (CC +)) (VP (# #) (VP (VB Note)))) (: :) (S (PP (IN Inside) (NP (NN SSLCARevocationPath))) (NP (PRP you)) (VP (VBP need) (NP (JJ hash) (NNS symlinks))))))

root(ROOT-0, Note-3)
nsubj(Note-3, +-1)
dep(Note-3, #-2)
prep_inside(need-8, SSLCARevocationPath-6)
nsubj(need-8, you-7)
parataxis(Note-3, need-8)
amod(symlinks-10, hash-9)
dobj(need-8, symlinks-10)

+/CC #/# to/TO point/VB to/TO the/DT certificate/NN files/NNS ./. 

(ROOT (S (VP (CC +) (VP (# #) (S (VP (TO to) (VP (VB point) (PP (TO to) (NP (DT the) (NN certificate) (NNS files)))))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
aux(point-4, to-3)
xcomp(#-2, point-4)
det(files-8, the-6)
nn(files-8, certificate-7)
prep_to(point-4, files-8)

Use/VB the/DT provided/VBN 

(ROOT (S (VP (VB Use) (NP (NP (DT the)) (VP (VBN provided))))))

root(ROOT-0, Use-1)
dobj(Use-1, the-2)
vmod(the-2, provided-3)

+/CC #/# Makefile/NNP to/TO update/VB the/DT hash/NN symlinks/NNS after/IN changes/NNS ./. 

(ROOT (S (NP (CC +)) (VP (# #) (S (NP (NNP Makefile)) (VP (TO to) (VP (VB update) (NP (DT the) (NN hash) (NNS symlinks)) (PP (IN after) (NP (NNS changes))))))) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
dobj(#-2, Makefile-3)
aux(update-5, to-4)
xcomp(#-2, update-5)
det(symlinks-8, the-6)
nn(symlinks-8, hash-7)
dobj(update-5, symlinks-8)
prep_after(update-5, changes-10)

+/CC #SSLCARevocationPath/NN @@/CD ServerRoot@@/conf/ssl.crl/NN 

(ROOT (NP (NP (CC +) (NN #SSLCARevocationPath)) (NP (CD @@) (NN ServerRoot@@/conf/ssl.crl))))

root(ROOT-0, #SSLCARevocationPath-2)
cc(#SSLCARevocationPath-2, +-1)
num(ServerRoot@@/conf/ssl.crl-4, @@-3)
dep(#SSLCARevocationPath-2, ServerRoot@@/conf/ssl.crl-4)

+/CC #SSLCARevocationFile/JJ @@/NN ServerRoot@@/conf/ssl.crl/ca-bundle.crl/NN 

(ROOT (S (NP (CC +) (NP (NP (JJ #SSLCARevocationFile)) (NP (NN @@)))) (ADJP (NN ServerRoot@@/conf/ssl.crl/ca-bundle.crl))))

root(ROOT-0, ServerRoot@@/conf/ssl.crl/ca-bundle.crl-4)
cc(#SSLCARevocationFile-2, +-1)
dep(ServerRoot@@/conf/ssl.crl/ca-bundle.crl-4, #SSLCARevocationFile-2)
dep(#SSLCARevocationFile-2, @@-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Client/NNP Authentication/NNP (/-LRB- Type/NN )/-RRB- :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NNP Client) (NNP Authentication)) (PRN (-LRB- -LRB-) (NP (NN Type)) (-RRB- -RRB-)))) (: :)))

root(ROOT-0, Authentication-4)
nsubj(Authentication-4, +-1)
dep(Authentication-4, #-2)
nn(Authentication-4, Client-3)
appos(Authentication-4, Type-6)

+/CC #/# Client/NNP certificate/NN verification/NN type/NN and/CC depth/NN ./. 

(ROOT (NP (NP (CC +) (NP (# #) (NNP Client) (NN certificate) (NN verification) (NN type)) (CC and) (NP (NN depth))) (. .)))

root(ROOT-0, type-6)
dep(type-6, #-2)
nn(type-6, Client-3)
nn(type-6, certificate-4)
nn(type-6, verification-5)
conj_and(type-6, depth-8)

Types/NNS are/VBP 

(ROOT (S (NP (NNS Types)) (VP (VBP are))))

root(ROOT-0, are-2)
nsubj(are-2, Types-1)

+/CC #/# none/NN ,/, optional/JJ ,/, require/VB and/CC optional_no_ca/NN ./. 

(ROOT (S (VP (CC +) (VP (# #) (NP (NP (NN none)) (, ,) (NP (JJ optional)))) (, ,) (VP (VP (VB require)) (CC and) (VP (NN optional_no_ca)))) (. .)))

root(ROOT-0, none-3)
cc(none-3, +-1)
dep(none-3, #-2)
appos(none-3, optional-5)
dep(none-3, require-7)
dep(none-3, optional_no_ca-9)
conj_and(require-7, optional_no_ca-9)

Depth/NN is/VBZ a/DT 

(ROOT (S (NP (NN Depth)) (VP (VBZ is) (NP (DT a)))))

root(ROOT-0, a-3)
nsubj(a-3, Depth-1)
cop(a-3, is-2)

+/CC #/# number/NN which/WDT specifies/VBZ how/WRB deeply/RB to/TO verify/VB the/DT certificate/NN 

(ROOT (S (VP (CC +) (VP (# #) (NP (NP (NN number)) (SBAR (WHNP (WDT which)) (S (VP (VBZ specifies) (SBAR (WHADVP (WRB how) (RB deeply)) (S (VP (TO to) (VP (VB verify) (NP (DT the) (NN certificate))))))))))))))

root(ROOT-0, number-3)
cc(number-3, +-1)
dep(number-3, #-2)
nsubj(specifies-5, which-4)
rcmod(number-3, specifies-5)
advmod(deeply-7, how-6)
advmod(verify-9, deeply-7)
aux(verify-9, to-8)
ccomp(specifies-5, verify-9)
det(certificate-11, the-10)
dobj(verify-9, certificate-11)

+/CC #/# issuer/NN chain/NN before/IN deciding/VBG the/DT certificate/NN is/VBZ not/RB valid/JJ ./. 

(ROOT (S (S (VP (CC +) (VP (# #) (NP (NN issuer) (NN chain)) (PP (IN before) (S (VP (VBG deciding) (NP (DT the) (NN certificate)))))))) (VP (VBZ is) (RB not) (ADJP (JJ valid))) (. .)))

root(ROOT-0, valid-11)
cc(chain-4, +-1)
dep(chain-4, #-2)
nn(chain-4, issuer-3)
csubj(valid-11, chain-4)
prepc_before(chain-4, deciding-6)
det(certificate-8, the-7)
dobj(deciding-6, certificate-8)
cop(valid-11, is-9)
neg(valid-11, not-10)

+/CC #SSLVerifyClient/JJ require/VBP 

(ROOT (S (NP (CC +)) (ADJP (JJ #SSLVerifyClient) (SBAR (S (VP (VBP require)))))))

root(ROOT-0, #SSLVerifyClient-2)
dep(#SSLVerifyClient-2, +-1)
ccomp(#SSLVerifyClient-2, require-3)

+/CC #SSLVerifyDepth/NN 10/CD 

(ROOT (NP (NP (CC +) (NN #SSLVerifyDepth)) (NP (CD 10))))

root(ROOT-0, #SSLVerifyDepth-2)
cc(#SSLVerifyDepth-2, +-1)
dep(#SSLVerifyDepth-2, 10-3)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Access/NN Control/NN :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN Access) (NN Control))) (: :)))

root(ROOT-0, Control-4)
nsubj(Control-4, +-1)
dep(Control-4, #-2)
nn(Control-4, Access-3)

+/CC #/# With/IN SSLRequire/NN you/PRP can/MD do/VB per-directory/JJ access/NN control/NN based/VBN 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (PP (IN With) (NP (NN SSLRequire))) (NP (PRP you)) (VP (MD can) (VP (VB do) (NP (NP (JJ per-directory) (NN access) (NN control)) (VP (VBN based))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
prep_with(do-7, SSLRequire-4)
nsubj(do-7, you-5)
aux(do-7, can-6)
ccomp(#-2, do-7)
amod(control-10, per-directory-8)
nn(control-10, access-9)
dobj(do-7, control-10)
vmod(control-10, based-11)

+/CC #/# on/IN arbitrary/JJ complex/NN boolean/NN expressions/NNS containing/VBG server/NN 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN on) (NP (JJ arbitrary) (NN complex) (NN boolean) (NNS expressions))) (S (VP (VBG containing) (NP (NN server))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
amod(expressions-7, arbitrary-4)
nn(expressions-7, complex-5)
nn(expressions-7, boolean-6)
prep_on(#-2, expressions-7)
xcomp(#-2, containing-8)
dobj(containing-8, server-9)

+/CC #/# variable/JJ checks/NNS and/CC other/JJ lookup/NN directives/NNS ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (JJ variable) (NNS checks)) (CC and) (NP (JJ other) (NN lookup) (NNS directives)))) (. .)))

root(ROOT-0, checks-4)
nsubj(checks-4, +-1)
dep(checks-4, #-2)
amod(checks-4, variable-3)
amod(directives-8, other-6)
nn(directives-8, lookup-7)
conj_and(checks-4, directives-8)

The/DT syntax/NN is/VBZ a/DT 

(ROOT (S (NP (DT The) (NN syntax)) (VP (VBZ is) (NP (DT a)))))

root(ROOT-0, a-4)
det(syntax-2, The-1)
nsubj(a-4, syntax-2)
cop(a-4, is-3)

+/CC #/# mixture/NN between/IN C/NN and/CC Perl/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NN mixture)) (PP (IN between) (NP (NN C) (CC and) (NN Perl))))) (. .)))

root(ROOT-0, mixture-3)
nsubj(mixture-3, +-1)
dep(mixture-3, #-2)
prep_between(mixture-3, C-5)
prep_between(mixture-3, Perl-7)
conj_and(C-5, Perl-7)

See/VB the/DT mod_ssl/NN documentation/NN 

(ROOT (S (VP (VB See) (NP (DT the) (NN mod_ssl) (NN documentation)))))

root(ROOT-0, See-1)
det(documentation-4, the-2)
nn(documentation-4, mod_ssl-3)
dobj(See-1, documentation-4)

+/CC #/# for/IN more/JJR details/NNS ./. 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN for) (NP (JJR more) (NNS details))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
amod(details-5, more-4)
prep_for(#-2, details-5)

+/CC #/# </JJR Location/NNP //: >/JJR 

(ROOT (S (NP (CC +) (NP (NP (# #) (JJR <)) (NP (NNP Location) (: /)))) (ADJP (JJR >))))

root(ROOT-0, >-6)
cc(<-3, +-1)
dep(<-3, #-2)
dep(>-6, <-3)
dep(<-3, Location-4)
punct(Location-4, /-5)

+/CC #SSLRequire/NN (/-LRB- %/NN {/-LRB- SSL_CIPHER/NN }/-RRB- !/. 

(ROOT (NP (NP (NP (CC +) (NN #SSLRequire)) (-LRB- -LRB-) (NP (NP (NN %)) (NP (-LRB- -LCB-) (NN SSL_CIPHER) (-RRB- -RCB-)))) (. !)))

root(ROOT-0, #SSLRequire-2)
cc(#SSLRequire-2, +-1)
dep(#SSLRequire-2, %-4)
appos(%-4, SSL_CIPHER-6)

~/NN m/NN //: ^/CD (/-LRB- EXP/NN |/CD NULL/NN )/-RRB- //: \/SYM 

(ROOT (NP (NP (NN ~) (NN m)) (PRN (: /) (NP (NP (NP (CD ^)) (-LRB- -LRB-) (NP (NN EXP) (CD |) (NN NULL)) (-RRB- -RRB-)) (PP (: /) (X (SYM \)))))))

root(ROOT-0, m-2)
nn(m-2, ~-1)
punct(^-4, /-3)
dep(m-2, ^-4)
nn(NULL-8, EXP-6)
num(NULL-8, |-7)
dep(^-4, NULL-8)
punct(\-11, /-10)
prep(^-4, \-11)

+/CC #/# and/CC %/NN {/-LRB- SSL_CLIENT_S_DN_O/NN }/-RRB- eq/NN "/`` Snake/NNP Oil/NNP ,/, Ltd./NNP "/'' \/IN 

(ROOT (S (VP (CC +) (VP (VP (# #)) (CC and) (VP (S (VP (NN %) (PRN (-LRB- -LCB-) (NP (NN SSL_CLIENT_S_DN_O)) (-RRB- -RCB-)) (NP (NP (NN eq)) (`` ``) (NP (NNP Snake) (NNP Oil)) (, ,) (NP (NNP Ltd.)) ('' '')))) (PP (IN \)))))))

root(ROOT-0, #-2)
conj_and(#-2, %-4)
dep(%-4, SSL_CLIENT_S_DN_O-6)
dobj(%-4, eq-8)
nn(Oil-11, Snake-10)
dep(eq-8, Oil-11)
appos(eq-8, Ltd.-13)
prep(%-4, \-15)

+/CC #/# and/CC %/NN {/-LRB- SSL_CLIENT_S_DN_OU/NN }/-RRB- in/IN {/-LRB- "/`` Staff/NN "/'' ,/, "/`` CA/NNP "/'' ,/, "/`` Dev/NNP "/'' }/-RRB- \/SYM 

(ROOT (S (VP (CC +) (VP (VP (# #)) (CC and) (VP (NN %) (NP (NP (NP (NP (NP (-LRB- -LCB-) (NN SSL_CLIENT_S_DN_OU) (-RRB- -RCB-)) (PP (IN in))) (-LRB- -LCB-) (NP (`` ``) (NN Staff) ('' '')) (, ,)) (NP (`` ``) (NP (NNP CA)) ('' '') (PRN (, ,) (`` ``) (NP (NNP Dev)) ('' '') (-RRB- -RCB-)))) (X (SYM \))))))))

root(ROOT-0, #-2)
conj_and(#-2, %-4)
dobj(%-4, SSL_CLIENT_S_DN_OU-6)
prep(SSL_CLIENT_S_DN_OU-6, in-8)
dep(SSL_CLIENT_S_DN_OU-6, Staff-11)
dep(SSL_CLIENT_S_DN_OU-6, CA-15)
dep(CA-15, Dev-19)
dep(SSL_CLIENT_S_DN_OU-6, \-22)

+/CC #/# and/CC %/NN {/-LRB- TIME_WDAY/NN }/-RRB- >/JJR =/JJ 1/CD and/CC %/NN {/-LRB- TIME_WDAY/NN }/-RRB- </JJR =/JJ 5/CD \/CD 

(ROOT (NP (NP (NP (NP (CC +) (NP (# #)) (CC and) (NP (NN %))) (-LRB- -LCB-) (NP (NN TIME_WDAY)) (-RRB- -RCB-)) (ADJP (JJR >) (JJ =))) (NP (NP (CD 1)) (CC and) (NP (NP (NP (NP (NN %)) (-LRB- -LCB-) (NP (NN TIME_WDAY)) (-RRB- -RCB-)) (ADJP (JJR <) (JJ =))) (QP (CD 5) (CD \))))))

root(ROOT-0, #-2)
conj_and(#-2, %-4)
dep(#-2, TIME_WDAY-6)
dep(=-9, >-8)
amod(#-2, =-9)
dep(#-2, 1-10)
dep(#-2, %-12)
conj_and(1-10, %-12)
dep(%-12, TIME_WDAY-14)
dep(=-17, <-16)
amod(%-12, =-17)
number(\-19, 5-18)
num(%-12, \-19)

+/CC #/# and/CC %/NN {/-LRB- TIME_HOUR/NN }/-RRB- >/JJR =/JJ 8/CD and/CC %/NN {/-LRB- TIME_HOUR/NN }/-RRB- </JJR =/JJ 20/CD )/-RRB- \/SYM 

(ROOT (S (VP (CC +) (VP (VP (# #)) (CC and) (VP (NN %) (NP (NP (NP (-LRB- -LCB-) (NN TIME_HOUR) (-RRB- -RCB-)) (ADJP (ADJP (JJR >)) (PRN (NP (NP (NP (JJ =) (CD 8)) (CC and) (NP (NP (NP (NN %)) (-LRB- -LCB-) (NP (NN TIME_HOUR)) (-RRB- -RCB-)) (ADJP (JJR <) (JJ =)))) (NP (CD 20))) (-RRB- -RRB-)))) (X (SYM \))))))))

root(ROOT-0, #-2)
conj_and(#-2, %-4)
dobj(%-4, TIME_HOUR-6)
amod(TIME_HOUR-6, >-8)
amod(8-10, =-9)
dep(>-8, 8-10)
dep(>-8, %-12)
conj_and(8-10, %-12)
dep(%-12, TIME_HOUR-14)
dep(=-17, <-16)
amod(%-12, =-17)
dep(8-10, 20-18)
dep(TIME_HOUR-6, \-20)

+/CC #/# or/CC %/NN {/-LRB- REMOTE_ADDR/NN }/-RRB- =/JJ ~/NN m/NN //: ^/CD 192/CD \/NN .76/CD \/CD .162/CD \/NN ./. 

(ROOT (S (NP (CC +) (NP (NP (QP (# #) (CC or)) (NN %)) (PRN (-LRB- -LCB-) (NP (NN REMOTE_ADDR)) (-RRB- -RCB-)) (NP-TMP (JJ =) (NN ~)))) (VP (NN m) (PRN (: /) (NP (NP (QP (CD ^) (CD 192))) (PP (NN \) (NP (CD .76))))) (NP (QP (CD \) (CD .162)) (NN \))) (. .)))

root(ROOT-0, m-10)
cc(%-4, +-1)
number(or-3, #-2)
num(%-4, or-3)
nsubj(m-10, %-4)
appos(%-4, REMOTE_ADDR-6)
amod(~-9, =-8)
tmod(%-4, ~-9)
punct(192-13, /-11)
number(192-13, ^-12)
dep(m-10, 192-13)
prep(192-13, \-14)
dep(\-14, .76-15)
number(.162-17, \-16)
num(\-18, .162-17)
dobj(m-10, \-18)

[/-LRB- 0-9/CD ]/-RRB- +/CC $/$ //: 

(ROOT (NP (NP (-LRB- -LSB-) (CD 0-9)) (NP (-RRB- -RSB-) (CC +) (NP ($ $) (: /)))))

root(ROOT-0, 0-9-2)
punct(0-9-2, -LSB--1)
punct($-5, -RSB--3)
cc($-5, +-4)
dep(0-9-2, $-5)
punct($-5, /-6)

+/CC #/# </JJR //: Location/NNP >/JJR 

(ROOT (S (NP (CC +) (NP (NP (# #) (JJR <)) (PRN (: /) (NP (NNP Location))))) (ADJP (JJR >))))

root(ROOT-0, >-6)
cc(<-3, +-1)
dep(<-3, #-2)
dep(>-6, <-3)
punct(Location-5, /-4)
dep(<-3, Location-5)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# SSL/NNP Engine/NNP Options/NNPS :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP SSL) (NNP Engine) (NNPS Options))) (: :)))

root(ROOT-0, Options-5)
nsubj(Options-5, +-1)
dep(Options-5, #-2)
nn(Options-5, SSL-3)
nn(Options-5, Engine-4)

+/CC #/# Set/VB various/JJ options/NNS for/IN the/DT SSL/NNP engine/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Set) (NP (JJ various) (NNS options)) (PP (IN for) (NP (DT the) (NNP SSL) (NN engine))))) (. .)))

root(ROOT-0, Set-3)
nsubj(Set-3, +-1)
dep(Set-3, #-2)
amod(options-5, various-4)
dobj(Set-3, options-5)
det(engine-9, the-7)
nn(engine-9, SSL-8)
prep_for(Set-3, engine-9)

+/CC #/# o/NN FakeBasicAuth/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN o) (NNP FakeBasicAuth))) (: :)))

root(ROOT-0, FakeBasicAuth-4)
nsubj(FakeBasicAuth-4, +-1)
dep(FakeBasicAuth-4, #-2)
nn(FakeBasicAuth-4, o-3)

+/CC #/# Translate/VB the/DT client/NN X./NNP 509/CD into/IN a/DT Basic/JJ Authorisation/NN ./. 

(ROOT (S (NP (CC +) (NP (NP (# #) (VB Translate)) (NP (DT the) (NN client)))) (VP (NNP X.) (NP (CD 509)) (PP (IN into) (NP (DT a) (JJ Basic) (NN Authorisation)))) (. .)))

root(ROOT-0, 509-7)
cc(Translate-3, +-1)
dep(Translate-3, #-2)
nsubj(509-7, Translate-3)
det(client-5, the-4)
dep(Translate-3, client-5)
dep(509-7, X.-6)
det(Authorisation-11, a-9)
amod(Authorisation-11, Basic-10)
prep_into(509-7, Authorisation-11)

This/DT means/VBZ that/IN 

(ROOT (S (NP (DT This)) (VP (VBZ means) (ADVP (IN that)))))

root(ROOT-0, means-2)
nsubj(means-2, This-1)
advmod(means-2, that-3)

+/CC #/# the/DT standard/JJ Auth/DBMAuth/NN methods/NNS can/MD be/VB used/VBN for/IN access/NN control/NN ./. 

(ROOT (S (NP (CC +) (# #)) (NP (DT the) (JJ standard) (NN Auth/DBMAuth) (NNS methods)) (VP (MD can) (VP (VB be) (VP (VBN used) (PP (IN for) (NP (NN access) (NN control)))))) (. .)))

root(ROOT-0, used-9)
nsubjpass(used-9, +-1)
dep(+-1, #-2)
det(methods-6, the-3)
amod(methods-6, standard-4)
nn(methods-6, Auth/DBMAuth-5)
nsubjpass(used-9, methods-6)
aux(used-9, can-7)
auxpass(used-9, be-8)
nn(control-12, access-11)
prep_for(used-9, control-12)

The/DT 

(ROOT (FRAG (DT The)))

root(ROOT-0, The-1)

+/CC #/# user/NN name/NN is/VBZ the/DT '/`` one/CD line/NN '/'' version/NN of/IN the/DT client/NN 's/POS X./NNP 509/CD certificate/NN ./. 

(ROOT (S (NP (CC +) (# #) (NN user) (NN name)) (VP (VBZ is) (NP (NP (DT the) (`` `) (NP (CD one) (NN line)) ('' ') (NN version)) (PP (IN of) (NP (NP (DT the) (NN client) (POS 's)) (NNP X.) (ADJP (CD 509)) (NN certificate))))) (. .)))

root(ROOT-0, version-11)
cc(name-4, +-1)
dep(name-4, #-2)
nn(name-4, user-3)
nsubj(version-11, name-4)
cop(version-11, is-5)
det(version-11, the-6)
num(line-9, one-8)
nn(version-11, line-9)
det(client-14, the-13)
poss(certificate-18, client-14)
nn(certificate-18, X.-16)
amod(certificate-18, 509-17)
prep_of(version-11, certificate-18)

+/CC #/# Note/VB that/IN no/DT password/NN is/VBZ obtained/VBN from/IN the/DT user/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB Note) (SBAR (IN that) (S (NP (DT no) (NN password)) (VP (VBZ is) (VP (VBN obtained) (PP (IN from) (NP (DT the) (NN user))))))))) (. .)))

root(ROOT-0, Note-3)
nsubj(Note-3, +-1)
dep(Note-3, #-2)
mark(obtained-8, that-4)
neg(password-6, no-5)
nsubjpass(obtained-8, password-6)
auxpass(obtained-8, is-7)
ccomp(Note-3, obtained-8)
det(user-11, the-10)
prep_from(obtained-8, user-11)

Every/DT entry/NN in/IN the/DT user/NN 

(ROOT (NP (NP (DT Every) (NN entry)) (PP (IN in) (NP (DT the) (NN user)))))

root(ROOT-0, entry-2)
det(entry-2, Every-1)
det(user-5, the-4)
prep_in(entry-2, user-5)

+/CC #/# file/VB needs/NNS this/DT password/NN :/: '/`` xxj31ZMTZzkVA/NN '/'' ./. 

(ROOT (S (NP (CC +)) (VP (# #) (VP (VB file) (NP (NP (NP (NNS needs)) (NP (DT this) (NN password))) (: :) (NP (`` `) (NN xxj31ZMTZzkVA) ('' '))))) (. .)))

root(ROOT-0, file-3)
nsubj(file-3, +-1)
dep(file-3, #-2)
dobj(file-3, needs-4)
det(password-6, this-5)
dep(needs-4, password-6)
dep(needs-4, xxj31ZMTZzkVA-9)

+/CC #/# o/NN ExportCertData/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN o) (NNP ExportCertData))) (: :)))

root(ROOT-0, ExportCertData-4)
nsubj(ExportCertData-4, +-1)
dep(ExportCertData-4, #-2)
nn(ExportCertData-4, o-3)

+/CC #/# This/DT exports/VBZ two/CD additional/JJ environment/NN variables/NNS :/: SSL_CLIENT_CERT/NN and/CC 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT This)) (VP (VBZ exports) (NP (NP (CD two) (JJ additional) (NN environment) (NNS variables)) (: :) (NP (NN SSL_CLIENT_CERT)) (ADVP (CC and)))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(exports-4, This-3)
ccomp(#-2, exports-4)
num(variables-8, two-5)
amod(variables-8, additional-6)
nn(variables-8, environment-7)
dobj(exports-4, variables-8)
dep(variables-8, SSL_CLIENT_CERT-10)
advmod(variables-8, and-11)

+/CC #/# SSL_SERVER_CERT/NNP ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP SSL_SERVER_CERT))) (. .)))

root(ROOT-0, SSL_SERVER_CERT-3)
nsubj(SSL_SERVER_CERT-3, +-1)
dep(SSL_SERVER_CERT-3, #-2)

These/DT contain/VBP the/DT PEM-encoded/JJ certificates/NNS of/IN the/DT 

(ROOT (S (NP (DT These)) (VP (VBP contain) (NP (NP (DT the) (JJ PEM-encoded) (NNS certificates)) (PP (IN of) (NP (DT the)))))))

root(ROOT-0, contain-2)
nsubj(contain-2, These-1)
det(certificates-5, the-3)
amod(certificates-5, PEM-encoded-4)
dobj(contain-2, certificates-5)
prep_of(certificates-5, the-7)

+/CC #/# server/NN (/-LRB- always/RB existing/VBG )/-RRB- and/CC the/DT client/NN (/-LRB- only/RB existing/VBG when/WRB client/NN 

(ROOT (S (VP (CC +) (VP (# #) (NP (NP (NN server)) (PRN (-LRB- -LRB-) (VP (ADVP (RB always)) (VBG existing)) (-RRB- -RRB-)) (CC and) (NP (NP (DT the) (NN client)) (PRN (-LRB- -LRB-) (VP (ADVP (RB only)) (VBG existing) (NP (WRB when))) (NN client))))))))

root(ROOT-0, server-3)
dep(server-3, #-2)
advmod(existing-6, always-5)
dep(server-3, existing-6)
det(client-10, the-9)
conj_and(server-3, client-10)
advmod(existing-13, only-12)
dep(client-10, existing-13)
dobj(existing-13, when-14)
dep(existing-13, client-15)

+/CC #/# authentication/NN is/VBZ used/VBN )/-RRB- ./. 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (NN authentication)) (VP (VBZ is) (VP (VBN used)))))) (-RRB- -RRB-) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubjpass(used-5, authentication-3)
auxpass(used-5, is-4)
ccomp(#-2, used-5)

This/DT can/MD be/VB used/VBN to/TO import/VB the/DT certificates/NNS 

(ROOT (S (NP (DT This)) (VP (MD can) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB import) (NP (DT the) (NNS certificates))))))))))

root(ROOT-0, used-4)
nsubjpass(used-4, This-1)
aux(used-4, can-2)
auxpass(used-4, be-3)
aux(import-6, to-5)
xcomp(used-4, import-6)
det(certificates-8, the-7)
dobj(import-6, certificates-8)

+/CC #/# into/IN CGI/NN scripts/NNS ./. 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN into) (NP (NN CGI) (NNS scripts))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
nn(scripts-5, CGI-4)
prep_into(#-2, scripts-5)

+/CC #/# o/NN StdEnvVars/NNS :/: 

(ROOT (NP (NP (CC +) (# #) (NN o) (NNS StdEnvVars)) (: :)))

root(ROOT-0, StdEnvVars-4)
cc(StdEnvVars-4, +-1)
dep(StdEnvVars-4, #-2)
nn(StdEnvVars-4, o-3)

+/CC #/# This/DT exports/VBZ the/DT standard/JJ SSL/TLS/NN related/JJ '/`` SSL/NNP _/CD */SYM '/'' environment/NN variables/NNS ./. 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT This)) (VP (VBZ exports) (NP (NP (NP (DT the) (JJ standard) (NN SSL/TLS)) (NP (NP (JJ related)) (`` `) (NP (NNP SSL) (CD _)))) (X (SYM *)))))) ('' ') (PP (NN environment) (NP (NNS variables)))) (. .)))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(exports-4, This-3)
ccomp(#-2, exports-4)
det(SSL/TLS-7, the-5)
amod(SSL/TLS-7, standard-6)
dobj(exports-4, SSL/TLS-7)
dep(SSL/TLS-7, related-8)
dep(related-8, SSL-10)
num(SSL-10, _-11)
dep(SSL/TLS-7, *-12)
prep(#-2, environment-14)
dep(environment-14, variables-15)

+/CC #/# Per/IN default/NN this/DT exportation/NN is/VBZ switched/VBN off/RP for/IN performance/NN reasons/NNS ,/, 

(ROOT (S (NP (CC +) (NP (NP (ADJP (# #) (IN Per)) (NN default)) (NP (DT this) (NN exportation)))) (VP (VBZ is) (VP (VBN switched) (PRT (RP off)) (PP (IN for) (NP (NN performance) (NNS reasons)) (, ,))))))

root(ROOT-0, switched-8)
cc(default-4, +-1)
number(Per-3, #-2)
amod(default-4, Per-3)
nsubjpass(switched-8, default-4)
det(exportation-6, this-5)
dep(default-4, exportation-6)
auxpass(switched-8, is-7)
prt(switched-8, off-9)
nn(reasons-12, performance-11)
prep_for(switched-8, reasons-12)

+/CC #/# because/IN the/DT extraction/NN step/NN is/VBZ an/DT expensive/JJ operation/NN and/CC is/VBZ usually/RB 

(ROOT (S (VP (CC +) (VP (# #) (SBAR (IN because) (S (NP (DT the) (NN extraction) (NN step)) (VP (VP (VBZ is) (NP (DT an) (JJ expensive) (NN operation))) (CC and) (VP (VBZ is) (ADVP (RB usually))))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
mark(operation-10, because-3)
det(step-6, the-4)
nn(step-6, extraction-5)
nsubj(operation-10, step-6)
nsubj(is-12, step-6)
cop(operation-10, is-7)
det(operation-10, an-8)
amod(operation-10, expensive-9)
advcl(#-2, operation-10)
advcl(#-2, is-12)
conj_and(operation-10, is-12)
advmod(is-12, usually-13)

+/CC #/# useless/JJ for/IN serving/VBG static/JJ content/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (ADJP (JJ useless) (PP (IN for) (S (VP (VBG serving) (NP (JJ static) (NN content))))))) (. .)))

root(ROOT-0, useless-3)
nsubj(useless-3, +-1)
dep(useless-3, #-2)
prepc_for(useless-3, serving-5)
amod(content-7, static-6)
dobj(serving-5, content-7)

So/RB one/CD usually/RB enables/VBZ the/DT 

(ROOT (SINV (ADVP (RB So) (NP (CD one))) (VP (ADVP (RB usually)) (VBZ enables)) (NP (DT the))))

root(ROOT-0, enables-4)
advmod(enables-4, So-1)
pobj(So-1, one-2)
advmod(enables-4, usually-3)
nsubj(enables-4, the-5)

+/CC #/# exportation/NN for/IN CGI/NNP and/CC SSI/NNP requests/NNS only/RB ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN exportation)) (PP (IN for) (NP (NNP CGI) (CC and) (NNP SSI) (NNS requests))) (ADVP (RB only))) (. .)))

root(ROOT-0, exportation-3)
nsubj(exportation-3, +-1)
dep(exportation-3, #-2)
nn(requests-8, CGI-5)
conj_and(CGI-5, SSI-7)
nn(requests-8, SSI-7)
prep_for(exportation-3, requests-8)
advmod(exportation-3, only-9)

+/CC #/# o/NN CompatEnvVars/NNS :/: 

(ROOT (NP (NP (CC +) (# #) (NN o) (NNS CompatEnvVars)) (: :)))

root(ROOT-0, CompatEnvVars-4)
cc(CompatEnvVars-4, +-1)
dep(CompatEnvVars-4, #-2)
nn(CompatEnvVars-4, o-3)

+/CC #/# This/DT exports/NNS obsolete/JJ environment/NN variables/NNS for/IN backward/RB compatibility/NN 

(ROOT (S (VP (CC +) (VP (# #) (NP (DT This) (NNS exports)) (NP (NP (JJ obsolete) (NN environment) (NNS variables)) (PP (IN for) (NP (RB backward) (NN compatibility))))))))

root(ROOT-0, exports-4)
cc(exports-4, +-1)
dep(exports-4, #-2)
det(exports-4, This-3)
amod(variables-7, obsolete-5)
nn(variables-7, environment-6)
dobj(exports-4, variables-7)
advmod(compatibility-10, backward-9)
prep_for(variables-7, compatibility-10)

+/CC #/# to/TO Apache-SSL/JJ 1.x/NN ,/, mod_ssl/NN 2.0.x/NN ,/, Sioux/NNP 1.0/CD and/CC Stronghold/NNP 2.x/FW ./. 

(ROOT (S (VP (CC +) (VP (# #) (PP (TO to) (NP (NP (JJ Apache-SSL) (NN 1.x)) (, ,) (NP (NN mod_ssl) (NN 2.0.x)) (, ,) (NP (NNP Sioux) (CD 1.0)) (CC and) (NP (NP (NNP Stronghold)) (NP (FW 2.x))))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
amod(1.x-5, Apache-SSL-4)
prep_to(#-2, 1.x-5)
nn(2.0.x-8, mod_ssl-7)
prep_to(#-2, 2.0.x-8)
conj_and(1.x-5, 2.0.x-8)
prep_to(#-2, Sioux-10)
conj_and(1.x-5, Sioux-10)
num(Sioux-10, 1.0-11)
prep_to(#-2, Stronghold-13)
conj_and(1.x-5, Stronghold-13)
dep(Stronghold-13, 2.x-14)

Use/VB this/DT 

(ROOT (S (VP (VB Use) (NP (DT this)))))

root(ROOT-0, Use-1)
dobj(Use-1, this-2)

+/CC #/# to/TO provide/VB compatibility/NN to/TO existing/VBG CGI/NNP scripts/NNS ./. 

(ROOT (S (VP (CC +) (VP (# #) (S (VP (TO to) (VP (VB provide) (NP (NN compatibility)) (PP (TO to) (NP (VBG existing) (NNP CGI) (NNS scripts)))))))) (. .)))

root(ROOT-0, #-2)
cc(#-2, +-1)
aux(provide-4, to-3)
xcomp(#-2, provide-4)
dobj(provide-4, compatibility-5)
amod(scripts-9, existing-7)
nn(scripts-9, CGI-8)
prep_to(provide-4, scripts-9)

+/CC #/# o/NN StrictRequire/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN o) (NNP StrictRequire))) (: :)))

root(ROOT-0, StrictRequire-4)
nsubj(StrictRequire-4, +-1)
dep(StrictRequire-4, #-2)
nn(StrictRequire-4, o-3)

+/CC #/# This/DT denies/VBZ access/NN when/WRB "/`` SSLRequireSSL/NN "/'' or/CC "/`` SSLRequire/NN "/'' applied/VBD even/RB 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT This)) (VP (VBZ denies) (NP (NP (NN access)) (SBAR (WHADVP (WRB when)) (S (NP (`` ``) (NN SSLRequireSSL) ('' '') (CC or) (`` ``) (NN SSLRequire) ('' '')) (VP (VBD applied) (ADVP (RB even))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(denies-4, This-3)
ccomp(#-2, denies-4)
dobj(denies-4, access-5)
advmod(applied-14, when-6)
nsubj(applied-14, SSLRequireSSL-8)
conj_or(SSLRequireSSL-8, SSLRequire-12)
nsubj(applied-14, SSLRequire-12)
rcmod(access-5, applied-14)
advmod(applied-14, even-15)

+/CC #/# under/IN a/DT "/`` Satisfy/VB any/DT "/'' situation/NN ,/, i.e./FW when/WRB it/PRP applies/VBZ access/NN is/VBZ denied/VBN 

(ROOT (S (VP (CC +) (VP (# #) (PP (IN under) (NP (NP (DT a) (`` ``) (S (VP (VB Satisfy) (NP (DT any)))) ('' '') (NN situation)) (, ,) (NP (NP (FW i.e.)) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ applies) (SBAR (S (NP (NN access)) (VP (VBZ is) (VP (VBN denied)))))))))))))))

root(ROOT-0, #-2)
cc(#-2, +-1)
det(situation-9, a-4)
dep(situation-9, Satisfy-6)
dobj(Satisfy-6, any-7)
prep_under(#-2, situation-9)
appos(situation-9, i.e.-11)
advmod(applies-14, when-12)
nsubj(applies-14, it-13)
rcmod(i.e.-11, applies-14)
nsubjpass(denied-17, access-15)
auxpass(denied-17, is-16)
ccomp(applies-14, denied-17)

+/CC #/# and/CC no/DT other/JJ module/NN can/MD change/VB it/PRP ./. 

(ROOT (S (NP (CC +) (NP (# #)) (CC and) (NP (DT no) (JJ other) (NN module))) (VP (MD can) (VP (VB change) (NP (PRP it)))) (. .)))

root(ROOT-0, change-8)
nsubj(change-8, #-2)
neg(module-6, no-4)
amod(module-6, other-5)
conj_and(#-2, module-6)
nsubj(change-8, module-6)
aux(change-8, can-7)
dobj(change-8, it-9)

+/CC #/# o/NN OptRenegotiate/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NN o) (NNP OptRenegotiate))) (: :)))

root(ROOT-0, OptRenegotiate-4)
nsubj(OptRenegotiate-4, +-1)
dep(OptRenegotiate-4, #-2)
nn(OptRenegotiate-4, o-3)

+/CC #/# This/DT enables/VBZ optimized/VBN SSL/NNP connection/NN renegotiation/NN handling/VBG when/WRB SSL/NN 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT This)) (VP (VBZ enables) (NP (NP (VBN optimized) (NNP SSL) (NN connection) (NN renegotiation)) (VP (VBG handling) (SBAR (WHADVP (WRB when)) (FRAG (NP (NN SSL))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(enables-4, This-3)
ccomp(#-2, enables-4)
amod(renegotiation-8, optimized-5)
nn(renegotiation-8, SSL-6)
nn(renegotiation-8, connection-7)
dobj(enables-4, renegotiation-8)
vmod(renegotiation-8, handling-9)
advmod(SSL-11, when-10)
advcl(handling-9, SSL-11)

+/CC #/# directives/NNS are/VBP used/VBN in/IN per-directory/JJ context/NN ./. 

(ROOT (S (NP (CC +) (# #)) (NP (NNS directives)) (VP (VBP are) (VP (VBN used) (PP (IN in) (NP (JJ per-directory) (NN context))))) (. .)))

root(ROOT-0, used-5)
nsubjpass(used-5, +-1)
dep(+-1, #-2)
nsubjpass(used-5, directives-3)
auxpass(used-5, are-4)
amod(context-8, per-directory-7)
prep_in(used-5, context-8)

+/CC #SSLOptions/NNS +/CC FakeBasicAuth/NNP +/CC ExportCertData/NNP +/CC CompatEnvVars/NNP +/CC StrictRequire/NNP 

(ROOT (S (NP (CC +) (NP (NNS #SSLOptions)) (CC +) (NP (NP (NNP FakeBasicAuth)) (CC +) (NP (NP (NNP ExportCertData) (CC +) (NNP CompatEnvVars)) (SBAR (S (NP (CC +))))))) (ADJP (NNP StrictRequire))))

root(ROOT-0, StrictRequire-10)
dep(StrictRequire-10, #SSLOptions-2)
conj_+(#SSLOptions-2, FakeBasicAuth-4)
dep(StrictRequire-10, FakeBasicAuth-4)
conj_+(#SSLOptions-2, ExportCertData-6)
conj_+(FakeBasicAuth-4, ExportCertData-6)
conj_+(FakeBasicAuth-4, CompatEnvVars-8)
conj_+(ExportCertData-6, CompatEnvVars-8)
rcmod(ExportCertData-6, +-9)

+/CC </JJR Files/NNS ~/VBP "/'' \/NN ./. 

(ROOT (S (NP (CC +)) (VP (S (NP (NP (NP (JJR <) (NNS Files)) (SBAR (S (VP (VBP ~) ('' ''))))) (NP (NN \))))) (. .)))

root(ROOT-0, Files-3)
nsubj(Files-3, +-1)
amod(Files-3, <-2)
rcmod(Files-3, ~-4)
dep(Files-3, \-6)

(/-LRB- cgi/NN |/CD shtml/NN |/NN phtml/NN |/CD php3/NN ?/. )/-RRB- 

(ROOT (PRN (-LRB- -LRB-) (FRAG (NP (NP (NN cgi) (CD |) (NN shtml) (NN |)) (NP (NP (NN phtml) (CD |)) (NN php3))) (. ?)) (-RRB- -RRB-)))

root(ROOT-0, |-5)
nn(|-5, cgi-2)
num(|-5, |-3)
nn(|-5, shtml-4)
nn(php3-8, phtml-6)
num(phtml-6, |-7)
dep(|-5, php3-8)

$/$ "/'' >/JJR 

(ROOT (FRAG (ADJP ($ $) ('' '')) (ADJP (JJR >))))

root(ROOT-0, $-1)
dep($-1, >-3)

+/CC SSLOptions/NNS +/CC StdEnvVars/NNS 

(ROOT (S (NP (CC +) (NP (NP (NNS SSLOptions)) (SBAR (S (NP (CC +)))))) (ADJP (NNS StdEnvVars))))

root(ROOT-0, StdEnvVars-4)
cc(SSLOptions-2, +-1)
dep(StdEnvVars-4, SSLOptions-2)
rcmod(SSLOptions-2, +-3)

+/CC </JJR //: Files/NNS >/JJR 

(ROOT (S (NP (CC +) (NP (NP (JJR <)) (PRN (: /) (NP (NNS Files))))) (ADJP (JJR >))))

root(ROOT-0, >-5)
cc(<-2, +-1)
dep(>-5, <-2)
punct(Files-4, /-3)
dep(<-2, Files-4)

+/CC </JJR Directory/NNP "/'' @@/CD ServerRoot@@/cgi-bin/NN "/'' >/JJR 

(ROOT (S (NP (CC +) (NP (NP (NP (JJR <)) (SBAR (S (VP (NNP Directory) (VP ('' '') (NP-TMP (CD @@))))))) (NP (NN ServerRoot@@/cgi-bin) ('' '')))) (ADJP (JJR >))))

root(ROOT-0, >-8)
cc(<-2, +-1)
dep(>-8, <-2)
dep(@@-5, Directory-3)
rcmod(<-2, @@-5)
dep(<-2, ServerRoot@@/cgi-bin-6)

+/CC SSLOptions/NNS +/CC StdEnvVars/NNS 

(ROOT (S (NP (CC +) (NP (NP (NNS SSLOptions)) (SBAR (S (NP (CC +)))))) (ADJP (NNS StdEnvVars))))

root(ROOT-0, StdEnvVars-4)
cc(SSLOptions-2, +-1)
dep(StdEnvVars-4, SSLOptions-2)
rcmod(SSLOptions-2, +-3)

+/CC </JJR //: Directory/NNP >/JJR 

(ROOT (S (NP (CC +) (NP (NP (JJR <)) (PRN (: /) (NP (NNP Directory))))) (ADJP (JJR >))))

root(ROOT-0, >-5)
cc(<-2, +-1)
dep(>-5, <-2)
punct(Directory-4, /-3)
dep(<-2, Directory-4)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# SSL/NNP Protocol/NNP Adjustments/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP SSL) (NNP Protocol) (NNP Adjustments))) (: :)))

root(ROOT-0, Adjustments-5)
nsubj(Adjustments-5, +-1)
dep(Adjustments-5, #-2)
nn(Adjustments-5, SSL-3)
nn(Adjustments-5, Protocol-4)

+/CC #/# The/DT safe/JJ and/CC default/NN but/CC still/RB SSL/TLS/NN standard/JJ compliant/JJ shutdown/NN 

(ROOT (NP (NP (NP (CC +) (NP (# #) (DT The) (JJ safe)) (CC and) (NP (NN default))) (CC but) (NP (ADVP (RB still)) (NN SSL/TLS))) (NP (JJ standard) (JJ compliant) (NN shutdown))))

root(ROOT-0, safe-4)
dep(safe-4, #-2)
det(safe-4, The-3)
conj_and(safe-4, default-6)
advmod(SSL/TLS-9, still-8)
conj_but(safe-4, SSL/TLS-9)
amod(shutdown-12, standard-10)
amod(shutdown-12, compliant-11)
dep(safe-4, shutdown-12)

+/CC #/# approach/NN is/VBZ that/IN mod_ssl/NN sends/VBZ the/DT close/JJ notify/VBP alert/JJ but/CC does/VBZ n't/RB wait/VB for/IN 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (NN approach)) (VP (VBZ is) (SBAR (IN that) (S (NP (NN mod_ssl)) (VP (VBZ sends) (SBAR (S (NP (DT the) (JJ close)) (VP (VP (VBP notify) (ADJP (JJ alert))) (CC but) (VP (VBZ does) (RB n't) (VP (VB wait) (PP (IN for))))))))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(is-4, approach-3)
ccomp(#-2, is-4)
mark(sends-7, that-5)
nsubj(sends-7, mod_ssl-6)
ccomp(is-4, sends-7)
det(close-9, the-8)
nsubj(notify-10, close-9)
nsubj(wait-15, close-9)
ccomp(sends-7, notify-10)
acomp(notify-10, alert-11)
aux(wait-15, does-13)
neg(wait-15, n't-14)
ccomp(sends-7, wait-15)
conj_but(notify-10, wait-15)
prep(wait-15, for-16)

+/CC #/# the/DT close/JJ notify/VBP alert/JJ from/IN client/NN ./. 

(ROOT (S (NP (CC +) (# #)) (NP (DT the) (JJ close)) (VP (VBP notify) (ADJP (JJ alert)) (PP (IN from) (NP (NN client)))) (. .)))

root(ROOT-0, notify-5)
nsubj(notify-5, +-1)
dep(+-1, #-2)
det(close-4, the-3)
nsubj(notify-5, close-4)
acomp(notify-5, alert-6)
prep_from(notify-5, client-8)

When/WRB you/PRP need/VBP a/DT different/JJ shutdown/NN 

(ROOT (SBAR (WHADVP (WRB When)) (S (NP (PRP you)) (VP (VBP need) (NP (DT a) (JJ different) (NN shutdown))))))

root(ROOT-0, need-3)
advmod(need-3, When-1)
nsubj(need-3, you-2)
det(shutdown-6, a-4)
amod(shutdown-6, different-5)
dobj(need-3, shutdown-6)

+/CC #/# approach/VBP you/PRP can/MD use/VB one/CD of/IN the/DT following/VBG variables/NNS :/: 

(ROOT (S (NP (CC +)) (ADVP (# #)) (VP (VBP approach) (SBAR (S (NP (PRP you)) (VP (MD can) (VP (VB use) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (VBG following) (NNS variables))))))))) (: :)))

root(ROOT-0, approach-3)
nsubj(approach-3, +-1)
advmod(approach-3, #-2)
nsubj(use-6, you-4)
aux(use-6, can-5)
ccomp(approach-3, use-6)
dobj(use-6, one-7)
det(variables-11, the-9)
amod(variables-11, following-10)
prep_of(one-7, variables-11)

+/CC #/# o/NN ssl-unclean-shutdown/NN :/: 

(ROOT (NP (NP (CC +) (# #) (ADJP (NN o)) (NN ssl-unclean-shutdown)) (: :)))

root(ROOT-0, ssl-unclean-shutdown-4)
cc(ssl-unclean-shutdown-4, +-1)
dep(ssl-unclean-shutdown-4, #-2)
amod(ssl-unclean-shutdown-4, o-3)

+/CC #/# This/DT forces/VBZ an/DT unclean/JJ shutdown/NN when/WRB the/DT connection/NN is/VBZ closed/VBN ,/, i.e./FW no/DT 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT This)) (VP (VBZ forces) (NP (NP (NP (DT an) (JJ unclean) (NN shutdown)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN connection)) (VP (VBZ is) (VP (VBN closed)))))) (, ,) (NP (NP (FW i.e.)) (NP (DT no))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(forces-4, This-3)
ccomp(#-2, forces-4)
det(shutdown-7, an-5)
amod(shutdown-7, unclean-6)
dobj(forces-4, shutdown-7)
advmod(closed-12, when-8)
det(connection-10, the-9)
nsubjpass(closed-12, connection-10)
auxpass(closed-12, is-11)
rcmod(shutdown-7, closed-12)
appos(shutdown-7, i.e.-14)
dep(i.e.-14, no-15)

+/CC #/# SSL/NNP close/RB notify/VBP alert/NN is/VBZ send/VB or/CC allowed/VBN to/TO received/VBN ./. 

(ROOT (S (NP (CC +) (# #) (NNP SSL) (RB close)) (VP (VBP notify) (SBAR (S (NP (NN alert)) (VP (VBZ is) (S (VP (VP (VB send)) (CC or) (VP (VBN allowed) (S (VP (TO to) (VP (VBN received))))))))))) (. .)))

root(ROOT-0, notify-5)
cc(SSL-3, +-1)
dep(SSL-3, #-2)
nsubj(notify-5, SSL-3)
advmod(SSL-3, close-4)
nsubj(is-7, alert-6)
ccomp(notify-5, is-7)
ccomp(is-7, send-8)
ccomp(is-7, allowed-10)
conj_or(send-8, allowed-10)
aux(received-12, to-11)
xcomp(allowed-10, received-12)

This/DT violates/VBZ 

(ROOT (S (NP (DT This)) (VP (VBZ violates))))

root(ROOT-0, violates-2)
nsubj(violates-2, This-1)

+/CC #/# the/DT SSL/TLS/NN standard/NN but/CC is/VBZ needed/VBN for/IN some/DT brain-dead/JJ browsers/NNS ./. 

(ROOT (S (NP (CC +)) (VP (VP (# #) (NP (DT the) (NN SSL/TLS) (NN standard))) (CC but) (VP (VBZ is) (VP (VBN needed) (PP (IN for) (NP (DT some) (JJ brain-dead) (NNS browsers)))))) (. .)))

root(ROOT-0, standard-5)
nsubj(standard-5, +-1)
nsubjpass(needed-8, +-1)
dep(standard-5, #-2)
det(standard-5, the-3)
nn(standard-5, SSL/TLS-4)
auxpass(needed-8, is-7)
conj_but(standard-5, needed-8)
det(browsers-12, some-10)
amod(browsers-12, brain-dead-11)
prep_for(needed-8, browsers-12)

Use/NN 

(ROOT (NP (NN Use)))

root(ROOT-0, Use-1)

+/CC #/# this/DT when/WRB you/PRP receive/VBP I/O/JJ errors/NNS because/IN of/IN the/DT standard/JJ approach/NN where/WRB 

(ROOT (S (VP (CC +) (VP (# #) (NP (NP (DT this)) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP receive) (NP (JJ I/O) (NNS errors)) (PP (IN because) (PP (IN of) (NP (NP (DT the) (JJ standard) (NN approach)) (FRAG (WHADVP (WRB where))))))))))))))

root(ROOT-0, this-3)
cc(this-3, +-1)
dep(this-3, #-2)
advmod(receive-6, when-4)
nsubj(receive-6, you-5)
rcmod(this-3, receive-6)
amod(errors-8, I/O-7)
dobj(receive-6, errors-8)
prepc_because_of(receive-6, of-10)
det(approach-13, the-11)
amod(approach-13, standard-12)
pobj(receive-6, approach-13)
dep(approach-13, where-14)

+/CC #/# mod_ssl/NN sends/VBZ the/DT close/JJ notify/VBP alert/JJ ./. 

(ROOT (S (NP (CC +) (# #)) (NP (NN mod_ssl)) (VP (VBZ sends) (SBAR (S (NP (DT the) (JJ close)) (VP (VBP notify) (ADJP (JJ alert)))))) (. .)))

root(ROOT-0, sends-4)
nsubj(sends-4, +-1)
dep(+-1, #-2)
nsubj(sends-4, mod_ssl-3)
det(close-6, the-5)
nsubj(notify-7, close-6)
ccomp(sends-4, notify-7)
acomp(notify-7, alert-8)

+/CC #/# o/NN ssl-accurate-shutdown/NN :/: 

(ROOT (NP (NP (CC +) (# #) (ADJP (NN o)) (NN ssl-accurate-shutdown)) (: :)))

root(ROOT-0, ssl-accurate-shutdown-4)
cc(ssl-accurate-shutdown-4, +-1)
dep(ssl-accurate-shutdown-4, #-2)
amod(ssl-accurate-shutdown-4, o-3)

+/CC #/# This/DT forces/VBZ an/DT accurate/JJ shutdown/NN when/WRB the/DT connection/NN is/VBZ closed/VBN ,/, i.e./FW a/DT 

(ROOT (S (NP (CC +)) (VP (# #) (SBAR (S (NP (DT This)) (VP (VBZ forces) (NP (NP (NP (DT an) (ADJP (JJ accurate)) (NN shutdown)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN connection)) (VP (VBZ is) (VP (VBN closed)))))) (, ,) (NP (NP (FW i.e.)) (NP (DT a))))))))))

root(ROOT-0, #-2)
nsubj(#-2, +-1)
nsubj(forces-4, This-3)
ccomp(#-2, forces-4)
det(shutdown-7, an-5)
amod(shutdown-7, accurate-6)
dobj(forces-4, shutdown-7)
advmod(closed-12, when-8)
det(connection-10, the-9)
nsubjpass(closed-12, connection-10)
auxpass(closed-12, is-11)
rcmod(shutdown-7, closed-12)
appos(shutdown-7, i.e.-14)
dep(i.e.-14, a-15)

+/CC #/# SSL/NNP close/RB notify/VBP alert/NN is/VBZ send/VB and/CC mod_ssl/VB waits/VBZ for/IN the/DT close/JJ notify/VBP 

(ROOT (S (NP (CC +) (# #) (NNP SSL) (RB close)) (VP (VBP notify) (SBAR (S (NP (NP (NN alert)) (SBAR (S (VP (VBZ is) (S (VP (VB send) (CC and) (VB mod_ssl))))))) (VP (VBZ waits) (SBAR (IN for) (S (NP (DT the) (JJ close)) (VP (VBP notify))))))))))

root(ROOT-0, notify-5)
cc(SSL-3, +-1)
dep(SSL-3, #-2)
nsubj(notify-5, SSL-3)
advmod(SSL-3, close-4)
nsubj(waits-11, alert-6)
rcmod(alert-6, is-7)
ccomp(is-7, send-8)
ccomp(is-7, mod_ssl-10)
conj_and(send-8, mod_ssl-10)
ccomp(notify-5, waits-11)
mark(notify-15, for-12)
det(close-14, the-13)
nsubj(notify-15, close-14)
advcl(waits-11, notify-15)

+/CC #/# alert/NN of/IN the/DT client/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (NN alert)) (PP (IN of) (NP (DT the) (NN client))))) (. .)))

root(ROOT-0, alert-3)
nsubj(alert-3, +-1)
dep(alert-3, #-2)
det(client-6, the-5)
prep_of(alert-3, client-6)

This/DT is/VBZ 100/CD %/NN SSL/TLS/NN standard/JJ compliant/JJ ,/, but/CC in/IN 

(ROOT (S (NP (DT This)) (VP (VP (VBZ is) (NP (NP (ADJP (CD 100) (NN %)) (NN SSL/TLS)) (ADJP (NP (JJ standard)) (JJ compliant)))) (, ,) (CC but) (VP (PP (IN in))))))

root(ROOT-0, SSL/TLS-5)
nsubj(SSL/TLS-5, This-1)
cop(SSL/TLS-5, is-2)
number(%-4, 100-3)
amod(SSL/TLS-5, %-4)
npadvmod(compliant-7, standard-6)
amod(SSL/TLS-5, compliant-7)
conj_but(SSL/TLS-5, in-10)

+/CC #/# practice/NN often/RB causes/VBZ hanging/VBG connections/NNS with/IN brain-dead/JJ browsers/NNS ./. 

(ROOT (S (NP (CC +)) (ADVP (NP (# #) (NN practice)) (RB often)) (VP (VBZ causes) (S (VP (VBG hanging) (NP (NNS connections)) (PP (IN with) (NP (JJ brain-dead) (NNS browsers)))))) (. .)))

root(ROOT-0, causes-5)
nsubj(causes-5, +-1)
dep(practice-3, #-2)
npadvmod(often-4, practice-3)
advmod(causes-5, often-4)
xcomp(causes-5, hanging-6)
dobj(hanging-6, connections-7)
amod(browsers-10, brain-dead-9)
prep_with(hanging-6, browsers-10)

Use/NN 

(ROOT (NP (NN Use)))

root(ROOT-0, Use-1)

+/CC #/# this/DT only/RB for/IN browsers/NNS where/WRB you/PRP know/VBP that/IN their/PRP$ SSL/NN implementation/NN 

(ROOT (S (VP (CC +) (VP (# #) (NP (DT this) (RB only)) (PP (IN for) (NP (NP (NNS browsers)) (SBAR (WHADVP (WRB where)) (S (NP (PRP you)) (VP (VBP know) (PP (IN that) (NP (PRP$ their) (NN SSL) (NN implementation))))))))))))

root(ROOT-0, only-4)
cc(only-4, +-1)
dep(only-4, #-2)
det(only-4, this-3)
prep_for(only-4, browsers-6)
advmod(know-9, where-7)
nsubj(know-9, you-8)
rcmod(browsers-6, know-9)
poss(implementation-13, their-11)
nn(implementation-13, SSL-12)
prep_that(know-9, implementation-13)

+/CC #/# works/VBZ correctly/RB ./. 

(ROOT (S (NP (CC +)) (ADVP (# #)) (VP (VBZ works) (ADVP (RB correctly))) (. .)))

root(ROOT-0, works-3)
nsubj(works-3, +-1)
advmod(works-3, #-2)
advmod(works-3, correctly-4)

+/CC #/# Notice/NNP :/: Most/JJS problems/NNS of/IN broken/JJ clients/NNS are/VBP also/RB related/VBN to/TO the/DT HTTP/NN 

(ROOT (S (NP (CC +) (NP (NP (# #) (NNP Notice)) (: :) (NP (NP (JJS Most) (NNS problems)) (PP (IN of) (NP (JJ broken) (NNS clients)))))) (VP (VBP are) (ADVP (RB also)) (VP (VBN related) (PP (TO to) (NP (DT the) (NN HTTP)))))))

root(ROOT-0, related-12)
cc(Notice-3, +-1)
dep(Notice-3, #-2)
nsubjpass(related-12, Notice-3)
amod(problems-6, Most-5)
dep(Notice-3, problems-6)
amod(clients-9, broken-8)
prep_of(problems-6, clients-9)
auxpass(related-12, are-10)
advmod(related-12, also-11)
det(HTTP-15, the-14)
prep_to(related-12, HTTP-15)

+/CC #/# keep-alive/JJ facility/NN ,/, so/RB you/PRP usually/RB additionally/RB want/VB to/TO disable/VB 

(ROOT (S (VP (CC +) (VP (# #) (NP (JJ keep-alive) (NN facility))) (, ,) (VP (ADVP (RB so) (NP (NP (PRP you)) (PP (RB usually) (ADVP (RB additionally))))) (VB want) (S (VP (TO to) (VP (VB disable))))))))

root(ROOT-0, facility-4)
cc(facility-4, +-1)
dep(facility-4, #-2)
amod(facility-4, keep-alive-3)
advmod(want-10, so-6)
pobj(so-6, you-7)
prep(you-7, usually-8)
dep(usually-8, additionally-9)
dep(facility-4, want-10)
aux(disable-12, to-11)
xcomp(want-10, disable-12)

+/CC #/# keep-alive/JJ for/IN those/DT clients/NNS ,/, too/RB ./. 

(ROOT (S (NP (CC +)) (VP (# #) (ADJP (JJ keep-alive)) (PP (IN for) (NP (DT those) (NNS clients))) (, ,) (ADVP (RB too))) (. .)))

root(ROOT-0, keep-alive-3)
nsubj(keep-alive-3, +-1)
dep(keep-alive-3, #-2)
det(clients-6, those-5)
prep_for(keep-alive-3, clients-6)
advmod(keep-alive-3, too-8)

Use/NNP variable/JJ "/`` nokeepalive/JJ "/'' for/IN this/DT ./. 

(ROOT (S (NP (NNP Use) (JJ variable)) (ADJP (`` ``) (JJ nokeepalive) ('' '') (PP (IN for) (NP (DT this)))) (. .)))

root(ROOT-0, nokeepalive-4)
dep(nokeepalive-4, Use-1)
amod(Use-1, variable-2)
prep_for(nokeepalive-4, this-7)

+/CC #/# Similarly/RB ,/, one/CD has/VBZ to/TO force/VB some/DT clients/NNS to/TO use/VB HTTP/1/NN .0/NN to/TO workaround/NN 

(ROOT (S (NP (CC +) (NP (NP (# #) (RB Similarly)) (, ,) (NP (CD one)))) (VP (VBZ has) (S (VP (TO to) (VP (VB force) (S (NP (DT some) (NNS clients)) (VP (TO to) (VP (VB use) (NP (NN HTTP/1) (NN .0)) (PP (TO to) (NP (NN workaround))))))))))))

root(ROOT-0, has-6)
cc(Similarly-3, +-1)
dep(Similarly-3, #-2)
nsubj(has-6, Similarly-3)
amod(Similarly-3, one-5)
aux(force-8, to-7)
xcomp(has-6, force-8)
det(clients-10, some-9)
dobj(force-8, clients-10)
aux(use-12, to-11)
xcomp(force-8, use-12)
nn(.0-14, HTTP/1-13)
dobj(use-12, .0-14)
prep_to(use-12, workaround-16)

+/CC #/# their/PRP$ broken/JJ HTTP/1/NN .1/NN implementation/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (PRP$ their) (JJ broken) (NN HTTP/1) (NN .1) (NN implementation))) (. .)))

root(ROOT-0, implementation-7)
nsubj(implementation-7, +-1)
dep(implementation-7, #-2)
poss(implementation-7, their-3)
amod(implementation-7, broken-4)
nn(implementation-7, HTTP/1-5)
nn(implementation-7, .1-6)

Use/NNP variables/NNS "/`` downgrade-1/NN .0/NN "/'' and/CC 

(ROOT (NP (NP (NNP Use) (NNS variables)) (NP (NP (`` ``) (NN downgrade-1) (NN .0) ('' '')) (ADVP (CC and)))))

root(ROOT-0, variables-2)
nn(variables-2, Use-1)
nn(.0-5, downgrade-1-4)
dep(variables-2, .0-5)
advmod(.0-5, and-7)

+/CC #/# "/`` force-response-1/JJ .0/NN "/'' for/IN this/DT ./. 

(ROOT (NP (NP (CC +) (# #) (`` ``) (JJ force-response-1) (NN .0) ('' '')) (PP (IN for) (NP (DT this))) (. .)))

root(ROOT-0, .0-5)
cc(.0-5, +-1)
dep(.0-5, #-2)
amod(.0-5, force-response-1-4)
prep_for(.0-5, this-8)

+/CC SetEnvIf/NNP User-Agent/NNP "/'' ./. 

(ROOT (S (NP (CC +)) (VP (NNP SetEnvIf) (NP (NNP User-Agent) ('' ''))) (. .)))

root(ROOT-0, User-Agent-3)
nsubj(User-Agent-3, +-1)
dep(User-Agent-3, SetEnvIf-2)

*/SYM MSIE/NN ./. 

(ROOT (FRAG (X (SYM *)) (VP (NN MSIE)) (. .)))

root(ROOT-0, MSIE-2)
dep(MSIE-2, *-1)

*/SYM "/'' \/IN 

(ROOT (FRAG (X (SYM *)) (PP (ADVP ('' '')) (IN \))))

root(ROOT-0, *-1)
prep(*-1, \-3)

+/CC nokeepalive/JJ ssl-unclean-shutdown/JJ \/NN 

(ROOT (S (NP (CC +) (NP (NP (JJ nokeepalive)) (ADJP (JJ ssl-unclean-shutdown)))) (ADJP (NN \))))

root(ROOT-0, \-4)
cc(nokeepalive-2, +-1)
dep(\-4, nokeepalive-2)
amod(nokeepalive-2, ssl-unclean-shutdown-3)

+/CC downgrade-1/NN .0/CD force-response-1/NN .0/CD 

(ROOT (NP (NP (CC +) (NN downgrade-1)) (NP (CD .0) (NN force-response-1)) (NP (CD .0))))

root(ROOT-0, downgrade-1-2)
cc(downgrade-1-2, +-1)
num(force-response-1-4, .0-3)
dep(downgrade-1-2, force-response-1-4)
dep(downgrade-1-2, .0-5)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC #/# Per-Server/NNP Logging/NNP :/: 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NNP Per-Server) (NNP Logging))) (: :)))

root(ROOT-0, Logging-4)
nsubj(Logging-4, +-1)
dep(Logging-4, #-2)
nn(Logging-4, Per-Server-3)

+/CC #/# The/DT home/NN of/IN a/DT custom/NN SSL/NN log/NN file/NN ./. 

(ROOT (S (NP (CC +)) (VP (# #) (NP (NP (DT The) (NN home)) (PP (IN of) (NP (DT a) (NN custom) (NN SSL) (NN log) (NN file))))) (. .)))

root(ROOT-0, home-4)
nsubj(home-4, +-1)
dep(home-4, #-2)
det(home-4, The-3)
det(file-10, a-6)
nn(file-10, custom-7)
nn(file-10, SSL-8)
nn(file-10, log-9)
prep_of(home-4, file-10)

Use/VB this/DT when/WRB you/PRP want/VBP a/DT 

(ROOT (S (VP (VB Use) (NP (NP (DT this)) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP want) (NP (DT a)))))))))

root(ROOT-0, Use-1)
dobj(Use-1, this-2)
advmod(want-5, when-3)
nsubj(want-5, you-4)
rcmod(this-2, want-5)
dobj(want-5, a-6)

+/CC #/# compact/JJ non-error/JJ SSL/NN logfile/NN on/IN a/DT virtual/JJ host/NN basis/NN ./. 

(ROOT (S (NP (CC +) (# #) (JJ compact) (JJ non-error) (NN SSL)) (VP (NN logfile) (PP (IN on) (NP (DT a) (JJ virtual) (NN host) (NN basis)))) (. .)))

root(ROOT-0, logfile-6)
cc(SSL-5, +-1)
dep(SSL-5, #-2)
amod(SSL-5, compact-3)
amod(SSL-5, non-error-4)
nsubj(logfile-6, SSL-5)
det(basis-11, a-8)
amod(basis-11, virtual-9)
nn(basis-11, host-10)
prep_on(logfile-6, basis-11)

+/CC CustomLog/NNP logs/ssl/NN _/CD request_log/NN \/NN 

(ROOT (S (NP (CC +) (NP (NP (NNP CustomLog) (NN logs/ssl)) (NP (CD _) (NN request_log)))) (ADJP (NN \))))

root(ROOT-0, \-6)
cc(logs/ssl-3, +-1)
nn(logs/ssl-3, CustomLog-2)
dep(\-6, logs/ssl-3)
num(request_log-5, _-4)
dep(logs/ssl-3, request_log-5)

+/CC "/'' %/NN t/NN %/NN h/NN %/NN {/-LRB- SSL_PROTOCOL/NN }/-RRB- x/CC %/NN {/-LRB- SSL_CIPHER/NN }/-RRB- x/CC \/NN "/'' %/NN r/NN \/NN "/'' %/NN b/NN "/'' 

(ROOT (VP (CC +) ('' '') (NP (NP (NP (NP (NN %) (NN t)) (NP (NP (NN %) (NN h) (NN %)) (-LRB- -LCB-) (NP (NN SSL_PROTOCOL)) (-RRB- -RCB-))) (CC x) (NP (NP (NN %)) (-LRB- -LCB-) (NP (NN SSL_CIPHER)) (-RRB- -RCB-))) (CC x) (NP (NP (NN \) ('' '') (NN %)) (NP (NN r) (NN \)))) ('' '') (NP (NN %) (NN b)) ('' '')))

root(ROOT-0, t-4)
nn(t-4, %-3)
nn(%-7, %-5)
nn(%-7, h-6)
dep(t-4, %-7)
dep(%-7, SSL_PROTOCOL-9)
conj_x(t-4, %-12)
dep(%-12, SSL_CIPHER-14)
nn(%-19, \-17)
conj_x(t-4, %-19)
nn(\-21, r-20)
dep(%-19, \-21)
nn(b-24, %-23)
dobj(t-4, b-24)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC </JJR //: VirtualHost/NNP >/JJR 

(ROOT (S (NP (CC +) (NP (NP (JJR <)) (PRN (: /) (NP (NNP VirtualHost))))) (ADJP (JJR >))))

root(ROOT-0, >-5)
cc(<-2, +-1)
dep(>-5, <-2)
punct(VirtualHost-4, /-3)
dep(<-2, VirtualHost-4)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

+/CC </JJR //: IfDefine/NN >/JJR 

(ROOT (S (NP (CC +) (NP (NP (JJR <)) (PRN (: /) (NP (NN IfDefine))))) (ADJP (JJR >))))

root(ROOT-0, >-5)
cc(<-2, +-1)
dep(>-5, <-2)
punct(IfDefine-4, /-3)
dep(<-2, IfDefine-4)

+/CC 

(ROOT (NP (CC +)))

root(ROOT-0, +-1)

