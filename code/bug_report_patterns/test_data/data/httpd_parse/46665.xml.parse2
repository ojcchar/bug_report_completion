I/PRP setup/NN a/DT proxy/NN to/TO a/DT tomcat/NN server/NN and/CC I/PRP have/VBP problem/NN with/IN the/DT ProxyPassMatch/NNP directive/NN ./. 

(ROOT (S (NP (PRP I)) (VP (NN setup) (SBAR (S (NP (NP (DT a) (NN proxy)) (PP (TO to) (NP (NP (DT a) (NN tomcat) (NN server)) (CC and) (NP (PRP I))))) (VP (VBP have) (NP (NN problem)) (PP (IN with) (NP (DT the) (NNP ProxyPassMatch) (NN directive))))))) (. .)))

root(ROOT-0, setup-2)
nsubj(setup-2, I-1)
det(proxy-4, a-3)
nsubj(have-11, proxy-4)
det(server-8, a-6)
nn(server-8, tomcat-7)
prep_to(proxy-4, server-8)
prep_to(proxy-4, I-10)
conj_and(server-8, I-10)
ccomp(setup-2, have-11)
dobj(have-11, problem-12)
det(directive-16, the-14)
nn(directive-16, ProxyPassMatch-15)
prep_with(have-11, directive-16)

If/IN I/PRP write/VBP :/: ProxyPassMatch/NNP ^/CD (/-LRB- //: ./. 

(ROOT (FRAG (SBAR (IN If) (S (NP (PRP I)) (VP (VBP write) (PRN (: :) (S (NP (NNP ProxyPassMatch) (CD ^)) (VP (-LRB- -LRB-))) (: /))))) (. .)))

root(ROOT-0, write-3)
mark(write-3, If-1)
nsubj(write-3, I-2)
nsubj(-LRB--7, ProxyPassMatch-5)
num(ProxyPassMatch-5, ^-6)
punct(-LRB--7, /-8)

*/SYM \/NN ./. 

(ROOT (FRAG (X (SYM *)) (VP (NN \)) (. .)))

root(ROOT-0, \-2)
dep(\-2, *-1)

page/NN )/-RRB- $/$ ajp/CD :/: //: //: hostname/JJ :8009/CD $/$ 1/CD then/RB I/PRP get/VBP the/DT following/VBG error/NN :/: Syntax/NN error/NN on/IN line/NN 573/CD of/IN C/NN :/: //: Program/NN Files/Apache/NNP Software/NNP Foundation/Apache2/NN .2/NN //: conf/httpd/NN ./. 

(ROOT (S (NP (NP (NN page)) (-RRB- -RRB-) (FRAG (FRAG (ADJP ($ $) (CD ajp)) (: :)) (: /) (FRAG (: /) (ADVP (JJ hostname) (NP (CD :8009))) (NP (NP ($ $) (CD 1)) (PP (RB then) (NP (PRP I))))))) (VP (VBP get) (NP (NP (DT the) (VBG following) (NN error)) (: :) (NP (NP (NN Syntax) (NN error)) (PP (IN on) (NP (NAC (NAC (NP (NN line) (CD 573)) (PP (IN of) (NP (NN C)) (: :))) (PRN (: /) (FRAG (NP (NN Program)) (NP (NNP Files/Apache) (NNP Software) (NN Foundation/Apache2) (NN .2))) (: /))) (NN conf/httpd)))))) (. .)))

root(ROOT-0, get-14)
nsubj(get-14, page-1)
dep(page-1, $-3)
number($-3, ajp-4)
punct($-3, /-6)
punct($-10, /-7)
dep($-10, hostname-8)
dep(hostname-8, :8009-9)
dep($-3, $-10)
num($-10, 1-11)
prep($-10, then-12)
pobj(then-12, I-13)
det(error-17, the-15)
amod(error-17, following-16)
dobj(get-14, error-17)
nn(error-20, Syntax-19)
dep(error-17, error-20)
dep(conf/httpd-34, line-22)
num(line-22, 573-23)
prep_of(line-22, C-25)
punct(Program-28, /-27)
dep(line-22, Program-28)
nn(.2-32, Files/Apache-29)
nn(.2-32, Software-30)
nn(.2-32, Foundation/Apache2-31)
dep(Program-28, .2-32)
punct(Program-28, /-33)
prep_on(error-20, conf/httpd-34)

conf/NN :/: ProxyPass/NNP Unable/JJ to/TO parse/VB URL/NN 

(ROOT (NP (NP (NN conf)) (: :) (NP (NP (NNP ProxyPass)) (ADJP (JJ Unable) (S (VP (TO to) (VP (VB parse) (NP (NN URL)))))))))

root(ROOT-0, conf-1)
dep(conf-1, ProxyPass-3)
amod(ProxyPass-3, Unable-4)
aux(parse-6, to-5)
xcomp(Unable-4, parse-6)
dobj(parse-6, URL-7)

I/PRP noticed/VBD that/IN it/PRP is/VBZ the/DT concatenation/NN of/IN hostname/NN +/CC port/NN +/CC $/$ 1/CD that/WDT causes/VBZ trouble/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBD noticed) (SBAR (IN that) (S (NP (PRP it)) (VP (VBZ is) (NP (NP (NP (DT the) (NN concatenation)) (PP (IN of) (NP (NP (NN hostname)) (CC +) (NP (NN port))))) (CC +) (NP (NP ($ $) (CD 1)) (SBAR (WHNP (WDT that)) (S (VP (VBZ causes) (NP (NN trouble))))))))))) (. .)))

root(ROOT-0, noticed-2)
nsubj(noticed-2, I-1)
mark(concatenation-7, that-3)
nsubj(concatenation-7, it-4)
cop(concatenation-7, is-5)
det(concatenation-7, the-6)
ccomp(noticed-2, concatenation-7)
prep_of(concatenation-7, hostname-9)
prep_of(concatenation-7, port-11)
conj_+(hostname-9, port-11)
ccomp(noticed-2, $-13)
conj_+(concatenation-7, $-13)
num($-13, 1-14)
nsubj(causes-16, that-15)
rcmod($-13, causes-16)
dobj(causes-16, trouble-17)

If/IN I/PRP remove/VB :8009/CD or/CC $/$ 1/CD ,/, the/DT directive/NN can/MD be/VB parsed/VBN ,/, but/CC of/IN course/NN it/PRP is/VBZ not/RB what/WP I/PRP want/VBP !/. 

(ROOT (S (S (SBAR (IN If) (S (NP (PRP I)) (VP (VB remove) (NP (NP (CD :8009)) (CC or) (NP ($ $) (CD 1)))))) (, ,) (NP (DT the) (NN directive)) (VP (MD can) (VP (VB be) (VP (VBN parsed))))) (, ,) (CC but) (S (PP (IN of) (NP (NN course))) (NP (PRP it)) (VP (VBZ is) (RB not) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBP want)))))) (. !)))

root(ROOT-0, parsed-13)
mark(remove-3, If-1)
nsubj(remove-3, I-2)
advcl(parsed-13, remove-3)
dobj(remove-3, :8009-4)
dobj(remove-3, $-6)
conj_or(:8009-4, $-6)
num($-6, 1-7)
det(directive-10, the-9)
nsubjpass(parsed-13, directive-10)
aux(parsed-13, can-11)
auxpass(parsed-13, be-12)
prep_of(is-19, course-17)
nsubj(is-19, it-18)
conj_but(parsed-13, is-19)
neg(is-19, not-20)
dobj(want-23, what-21)
nsubj(want-23, I-22)
ccomp(is-19, want-23)

I/PRP found/VBD the/DT following/VBG workaroud/NN :/: ProxyPassMatch/NNP ^/CD //: (/-LRB- ./. 

(ROOT (S (NP (PRP I)) (VP (VBD found) (NP (NP (DT the) (VBG following) (NN workaroud)) (: :) (NP (NP (NNP ProxyPassMatch) (CD ^)) (PRN (: /) (ADJP (-LRB- -LRB-)))))) (. .)))

root(ROOT-0, found-2)
nsubj(found-2, I-1)
det(workaroud-5, the-3)
amod(workaroud-5, following-4)
dobj(found-2, workaroud-5)
dep(workaroud-5, ProxyPassMatch-7)
num(ProxyPassMatch-7, ^-8)
punct(-LRB--10, /-9)

*/SYM \/NN ./. 

(ROOT (FRAG (X (SYM *)) (VP (NN \)) (. .)))

root(ROOT-0, \-2)
dep(\-2, *-1)

page/NN )/-RRB- $/$ ajp/CD :/: //: //: hostname/JJ :8009/CD //: $/$ 1/CD 

(ROOT (FRAG (S (ADJP (ADJP (ADJP (NN page)) (PRN (-RRB- -RRB-) (FRAG (ADJP ($ $) (CD ajp)) (: :)) (: /))) (PRN (: /) (S (NP (JJ hostname)) (NP (NP (CD :8009)) (PRN (: /) (NP ($ $) (CD 1))))))))))

root(ROOT-0, page-1)
dep(page-1, $-3)
number($-3, ajp-4)
punct($-3, /-6)
punct(:8009-9, /-7)
dep(:8009-9, hostname-8)
dep(page-1, :8009-9)
punct($-11, /-10)
dep(:8009-9, $-11)
num($-11, 1-12)

That/DT makes/VBZ it/PRP work/VB ./. 

(ROOT (S (NP (DT That)) (VP (VBZ makes) (S (NP (PRP it)) (VP (VB work)))) (. .)))

root(ROOT-0, makes-2)
nsubj(makes-2, That-1)
nsubj(work-4, it-3)
ccomp(makes-2, work-4)

Do/VB you/PRP confirm/VBP that/IN the/DT initial/JJ syntax/NN should/MD work/VB ?/. 

(ROOT (SQ (VP (VB Do) (SBAR (S (NP (PRP you)) (VP (VBP confirm) (SBAR (IN that) (S (NP (DT the) (JJ initial) (NN syntax)) (VP (MD should) (VP (VB work))))))))) (. ?)))

root(ROOT-0, Do-1)
nsubj(confirm-3, you-2)
ccomp(Do-1, confirm-3)
mark(work-9, that-4)
det(syntax-7, the-5)
amod(syntax-7, initial-6)
nsubj(work-9, syntax-7)
aux(work-9, should-8)
ccomp(confirm-3, work-9)

