<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>30419</id>
	<title>Weird caching behaviour of mod_cache and old Cookies</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">Hi,</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">I found some weird behaviour in mod_cache which I believe to be a bug.</sentence>
			<sentence id="2.2">First
of all my environment:</sentence>
		</paragraph>
		<paragraph id="3">
			<sentence id="3.1">I. Environment</sentence>
		</paragraph>
		<paragraph id="4">
			<sentence id="4.1">Apache: 2.0.50
OS: Linux</sentence>
		</paragraph>
		<paragraph id="5">
			<sentence id="5.1">Excerpt from my Apache configuration:</sentence>
		</paragraph>
		<paragraph id="6">
			<sentence id="6.1">&lt;VirtualHost 192.168.2.4:80&gt;
ServerName www.something.de
ServerAdmin admin@www.something.de
DocumentRoot "/var/httpd/test/www.something.de/docs"
ErrorLog "|/opt/apache-2.0.50/bin/rotatelogs /var/httpd/test/www.something.de/lo
gs/error_log 86400"
CustomLog "|/opt/apache-2.0.50/bin/rotatelogs /var/httpd/test/www.something.de/l
ogs/access_log 86400" combined</sentence>
		</paragraph>
		<paragraph id="7">
			<sentence id="7.1">&lt;Directory /var/httpd/test/www.something.de/docs&gt;
   Options None
   AllowOverride None
&lt;/Directory&gt;</sentence>
		</paragraph>
		<paragraph id="8">
			<sentence id="8.1">JkMount /* worker_ajp13</sentence>
		</paragraph>
		<paragraph id="9">
			<sentence id="9.1">CacheRoot /var/httpd/test/cache
CacheSize 256
CacheEnable disk /test
CacheDirLevels 5
CacheDirLength 3</sentence>
		</paragraph>
		<paragraph id="10">
			<sentence id="10.1">CacheMaxExpire 60
CacheIgnoreNoLastMod On
CacheIgnoreCacheControl On
CacheDefaultExpire 60</sentence>
		</paragraph>
		<paragraph id="11">
			<sentence id="11.1">&lt;/VirtualHost&gt;</sentence>
		</paragraph>
		<paragraph id="12">
			<sentence id="12.1">II.</sentence>
			<sentence id="12.2">Problem description</sentence>
		</paragraph>
		<paragraph id="13">
			<sentence id="13.1">I try to use mod_cache to cache pages generated by Tomcat and delivered via
Apache / mod_jk.</sentence>
		</paragraph>
		<paragraph id="14">
			<sentence id="14.1">On the Tomcat / mod_jk side I use:</sentence>
		</paragraph>
		<paragraph id="15">
			<sentence id="15.1">mod_jk: 1.2.5
Tomcat: 5.0.18</sentence>
		</paragraph>
		<paragraph id="16">
			<sentence id="16.1">At first glance the configuration above does exactly what I want by caching
the Tomcat generated response, but I noticed the following two weird behaviours:</sentence>
		</paragraph>
		<paragraph id="17">
			<sentence id="17.1">1 If a cached document is outdated because it is expired, it will be requested again from Tomcat, which is completely correct.</sentence>
			<sentence id="17.3">But this response contains two Set-Cookie headers, one from the cached headers (cross checked by a look to the .headers file) and one generated by the actual Tomcat request.</sentence>
			<sentence id="17.7">The following excerpt from Mozilla's livehttpheaders shows this:</sentence>
		</paragraph>
		<paragraph id="18">
			<sentence id="18.1">http://192.168.2.4/test/test.jsp</sentence>
		</paragraph>
		<paragraph id="19">
			<sentence id="19.1">GET /test/test.</sentence>
			<sentence id="19.2">jsp HTTP/1.1
Host: 192.168.2.4
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7) Gecko/20040616
Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plai
n;q=0.8,image/png,*/*;q=0.5
Accept-Language: de,en;q=0.8,de-de;q=0.5,en-gb;q=0.3
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive</sentence>
		</paragraph>
		<paragraph id="20">
			<sentence id="20.1">HTTP/1.</sentence>
			<sentence id="20.2">x 200 OK
Date: Fri, 30 Jul 2004 07:25:52 GMT
Server: Apache/2.0.50 (Unix) mod_ssl/2.0.50 OpenSSL/0.9.6g DAV/2 mod_jk/1.2.5
Set-Cookie: JSESSIONID=39F12D5B8854DB7ED167B66506D2345A; Path=/test
Set-Cookie: JSESSIONID=CA4640A1745F53FC27A07F3EA6362286; Path=/test
Content-Length: 74
Content-Type: text/html; charset=ISO-8859-1
Keep-Alive: timeout=15, max=99
Connection: Keep-Alive</sentence>
		</paragraph>
		<paragraph id="21">
			<sentence id="21.1">It is worth to note that the first Set-Cookie header is the one from the
previously cached headers and that the second Set-Cookie header is the one
generated by the actual Tomcat request.</sentence>
			<sentence id="21.2">It can be found
alone in the updated .</sentence>
			<sentence id="21.3">headers file after the request has been completed.</sentence>
		</paragraph>
		<paragraph id="22">
			<sentence id="22.1">2 If the next request after 1.</sentence>
			<sentence id="22.2">to the same URL is a request that would</sentence>
			<sentence id="22.3">allow mod_cache to retrieve the cached document because</sentence>
		</paragraph>
		<paragraph id="23">
			<sentence id="23.1">- It contains no Cache-Control header</sentence>
			<sentence id="23.2">- and the request is placed shortly after 1.</sentence>
			<sentence id="23.3">such that the document is</sentence>
			<sentence id="23.4">not expired already</sentence>
		</paragraph>
		<paragraph id="24">
			<sentence id="24.1">mod_cache decides that the cached version of the document is not fresh
   and has to be retrived again from Tomcat.</sentence>
			<sentence id="24.2">Only the next request to this
   URL works correctly and delivers the cached version of this document.</sentence>
		</paragraph>
		<paragraph id="25">
			<sentence id="25.1">III.</sentence>
			<sentence id="25.2">Problem analysis</sentence>
		</paragraph>
		<paragraph id="26">
			<sentence id="26.1">So I set the Loglevel to debug and added the following temporary patch to
cache_util.c to get a better picture of what is going on:</sentence>
		</paragraph>
		<paragraph id="27">
			<sentence id="27.1">--- httpd-2.0.50/modules/experimental/cache_util.c.orig 2004-02-09 21:53:16.0000</sentence>
			<sentence id="27.2">00000 +0100</sentence>
			<sentence id="27.3">+++ httpd-2.0.50/modules/experimental/cache_util.c      2004-07-30 12:27:39.0000</sentence>
			<sentence id="27.4">00000 +0200</sentence>
			<sentence id="27.5">@@ -242,6 +242,18 @@</sentence>
			<sentence id="27.6">"proxy-revalidate", NULL)))) {</sentence>
			<sentence id="27.7">maxstale = 0;</sentence>
			<sentence id="27.8">}</sentence>
			<sentence id="27.9">+    {</sentence>
			<sentence id="27.10">+</sentence>
			<sentence id="27.11">+     apr_int64_t zw,zw1;</sentence>
			<sentence id="27.12">+</sentence>
			<sentence id="27.13">+     zw = apr_time_sec(info-&gt;expire - info-&gt;date);</sentence>
			<sentence id="27.14">+     zw1 = apr_time_sec(info-&gt;response_time - info-&gt;request_time);</sentence>
			<sentence id="27.15">+</sentence>
			<sentence id="27.16">+ap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r-&gt;server,</sentence>
			<sentence id="27.17">+                     "cache_util: age %lli, maxstale %lli, minfresh %lli, expir</sentence>
			<sentence id="27.18">e %lli, date %lli, maxage %lli, zw %lli, smaxage %lli, response %lli, request %l</sentence>
			<sentence id="27.19">li, zw1 %lli",</sentence>
			<sentence id="27.20">+                     age,maxstale,minfresh,info-&gt;expire,info-&gt;date,maxage,zw,sm</sentence>
			<sentence id="27.21">axage,info-&gt;response_time,info-&gt;request_time,zw1);</sentence>
			<sentence id="27.22">+    }</sentence>
			<sentence id="27.23">+</sentence>
		</paragraph>
		<paragraph id="28">
			<sentence id="28.1">/* handle expiration */</sentence>
			<sentence id="28.2">if (((smaxage !</sentence>
			<sentence id="28.3">= -1) &amp;&amp; (age &lt; (smaxage - minfresh))) ||</sentence>
		</paragraph>
		<paragraph id="29">
			<sentence id="29.1">This produced the following logging output:</sentence>
		</paragraph>
		<paragraph id="30">
			<sentence id="30.1">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.2">pd-2.0.50/modules/experimental/mod_cache.c(121): incoming request is asking for</sentence>
			<sentence id="30.3">a uncached version of /test/test.</sentence>
			<sentence id="30.4">jsp, but we know better and are ignoring it</sentence>
			<sentence id="30.5">[Fri Jul 30 12:38:34 2004] [info] disk_cache: Serving Cached URL 192.168.2.4/tes</sentence>
			<sentence id="30.6">t/test.</sentence>
			<sentence id="30.7">jsp?</sentence>
			<sentence id="30.8">[Fri Jul 30 12:38:34 2004] [info] disk_cache: Served headers for URL 192.168.2.4</sentence>
			<sentence id="30.9">/test/test.</sentence>
			<sentence id="30.10">jsp?</sentence>
			<sentence id="30.11">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.12">pd-2.0.50/modules/experimental/cache_util.c(252): cache_util: age 111, maxstale</sentence>
			<sentence id="30.13">0 minfresh 0, expire 1091183863743217, date 1091183803743217, maxage -1, zw 60,</sentence>
			<sentence id="30.14">smaxage -1, response 1091183803743217, request 1091183803740783, zw1 0</sentence>
			<sentence id="30.15">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.16">pd-2.0.50/modules/experimental/mod_cache.c(218): cache: stale cache - test condi</sentence>
			<sentence id="30.17">tional</sentence>
			<sentence id="30.18">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.19">pd-2.0.50/modules/experimental/mod_cache.c(265): cache: nonconditional - no cach</sentence>
			<sentence id="30.20">ed etag/lastmods - add cache_in and DECLINE</sentence>
			<sentence id="30.21">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.22">pd-2.0.50/modules/experimental/mod_cache.c(406): cache: running CACHE_IN filter</sentence>
			<sentence id="30.23">[Fri Jul 30 12:38:34 2004] [info] disk_cache: Caching URL 192.168.2.4/test/test.</sentence>
			<sentence id="30.24">jsp?</sentence>
			<sentence id="30.25">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.26">pd-2.0.50/modules/experimental/mod_cache.c(663): cache: Caching url: /test/test.</sentence>
			<sentence id="30.27">jsp</sentence>
			<sentence id="30.28">[Fri Jul 30 12:38:34 2004] [info] disk_cache: Caching headers for URL 192.168.2.</sentence>
			<sentence id="30.29">4/test/test.</sentence>
			<sentence id="30.30">jsp?</sentence>
			<sentence id="30.31">[Fri Jul 30 12:38:34 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.32">pd-2.0.50/modules/experimental/mod_cache.c(406): cache: running CACHE_IN filter</sentence>
			<sentence id="30.33">[Fri Jul 30 12:38:34 2004] [info] disk_cache: Cached body for URL 192.168.2.4/te</sentence>
			<sentence id="30.34">st/test.</sentence>
			<sentence id="30.35">jsp?</sentence>
			<sentence id="30.36">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.37">pd-2.0.50/modules/experimental/mod_cache.c(121): incoming request is asking for</sentence>
			<sentence id="30.38">a uncached version of /test/test.</sentence>
			<sentence id="30.39">jsp, but we know better and are ignoring it</sentence>
			<sentence id="30.40">[Fri Jul 30 12:44:07 2004] [info] disk_cache: Serving Cached URL 192.168.2.4/tes</sentence>
			<sentence id="30.41">t/test.</sentence>
			<sentence id="30.42">jsp?</sentence>
			<sentence id="30.43">[Fri Jul 30 12:44:07 2004] [info] disk_cache: Served headers for URL 192.168.2.4</sentence>
			<sentence id="30.44">/test/test.</sentence>
			<sentence id="30.45">jsp?</sentence>
			<sentence id="30.46">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.47">pd-2.0.50/modules/experimental/cache_util.c(252): cache_util: age 444, maxstale</sentence>
			<sentence id="30.48">0 minfresh 0, expire 1091183863000000, date 1091183803000000, maxage -1, zw 60,</sentence>
			<sentence id="30.49">smaxage -1, response 1091183914921396, request 1091183914918844, zw1 0</sentence>
			<sentence id="30.50">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.51">pd-2.0.50/modules/experimental/mod_cache.c(218): cache: stale cache - test condi</sentence>
			<sentence id="30.52">tional</sentence>
			<sentence id="30.53">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.54">pd-2.0.50/modules/experimental/mod_cache.c(265): cache: nonconditional - no cach</sentence>
			<sentence id="30.55">ed etag/lastmods - add cache_in and DECLINE</sentence>
			<sentence id="30.56">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.57">pd-2.0.50/modules/experimental/mod_cache.c(406): cache: running CACHE_IN filter</sentence>
			<sentence id="30.58">[Fri Jul 30 12:44:07 2004] [info] disk_cache: Caching URL 192.168.2.4/test/test.</sentence>
			<sentence id="30.59">jsp?</sentence>
			<sentence id="30.60">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.61">pd-2.0.50/modules/experimental/mod_cache.c(663): cache: Caching url: /test/test.</sentence>
			<sentence id="30.62">jsp</sentence>
			<sentence id="30.63">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.64">pd-2.0.50/modules/experimental/mod_cache.c(705): cache: Added date header</sentence>
			<sentence id="30.65">[Fri Jul 30 12:44:07 2004] [info] disk_cache: Caching headers for URL 192.168.2.</sentence>
			<sentence id="30.66">4/test/test.</sentence>
			<sentence id="30.67">jsp?</sentence>
			<sentence id="30.68">[Fri Jul 30 12:44:07 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.69">pd-2.0.50/modules/experimental/mod_cache.c(406): cache: running CACHE_IN filter</sentence>
			<sentence id="30.70">[Fri Jul 30 12:44:07 2004] [info] disk_cache: Cached body for URL 192.168.2.4/te</sentence>
			<sentence id="30.71">st/test.</sentence>
			<sentence id="30.72">jsp?</sentence>
			<sentence id="30.73">[Fri Jul 30 12:44:10 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.74">pd-2.0.50/modules/experimental/mod_cache.c(121): incoming request is asking for</sentence>
			<sentence id="30.75">a uncached version of /test/test.</sentence>
			<sentence id="30.76">jsp, but we know better and are ignoring it</sentence>
			<sentence id="30.77">[Fri Jul 30 12:44:10 2004] [info] disk_cache: Serving Cached URL 192.168.2.4/tes</sentence>
			<sentence id="30.78">t/test.</sentence>
			<sentence id="30.79">jsp?</sentence>
			<sentence id="30.80">[Fri Jul 30 12:44:10 2004] [info] disk_cache: Served headers for URL 192.168.2.4</sentence>
			<sentence id="30.81">/test/test.</sentence>
			<sentence id="30.82">jsp?</sentence>
			<sentence id="30.83">[Fri Jul 30 12:44:10 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.84">pd-2.0.50/modules/experimental/cache_util.c(252): cache_util: age 3, maxstale 0,</sentence>
			<sentence id="30.85">minfresh 0, expire 1091184307843266, date 1091184247843266, maxage -1, zw 60, s</sentence>
			<sentence id="30.86">maxage -1, response 1091184247843266, request 1091184247840880, zw1 0</sentence>
			<sentence id="30.87">[Fri Jul 30 12:44:10 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.88">pd-2.0.50/modules/experimental/mod_cache.c(186): cache: fresh cache - add cache_</sentence>
			<sentence id="30.89">out filter and handle request</sentence>
			<sentence id="30.90">[Fri Jul 30 12:44:10 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.91">pd-2.0.50/modules/experimental/mod_cache.c(323): cache: running CACHE_OUT filter</sentence>
			<sentence id="30.92">[Fri Jul 30 12:44:10 2004] [debug] /usr/src/packages/BUILD/apache_aol-2.0.50/htt</sentence>
			<sentence id="30.93">pd-2.0.50/modules/experimental/mod_cache.c(332): cache: serving /test/test.</sentence>
			<sentence id="30.94">jsp</sentence>
		</paragraph>
		<paragraph id="31">
			<sentence id="31.1">It is notable that the values for expire / date of the 12:44:07 request are
the values of the 12:38:34 request with their microseconds part striped off.</sentence>
			<sentence id="31.2">This is wrong as the 12:38:34 request should have updated expire / date in
the .</sentence>
			<sentence id="31.3">headers file with the values actual during the 12:38:34 request and
not set the values to the striped values of the cache entry expired at
12:38:34.</sentence>
			<sentence id="31.4">One may also notice that the 12:44:07 request reports
cache: Added date header whereas the 12:38:34 request does nothing of this
kind.</sentence>
			<sentence id="31.5">It is also notable that the .</sentence>
			<sentence id="31.6">headers file does not contain a Date: header after
the 12:38:34 request, but it does after the 12:44:07 request.</sentence>
		</paragraph>
		<paragraph id="32">
			<sentence id="32.1">IV.</sentence>
			<sentence id="32.2">Conclusion</sentence>
		</paragraph>
		<paragraph id="33">
			<sentence id="33.1">To cut a long story short: I believe that 1.</sentence>
			<sentence id="33.2">and 2.</sentence>
			<sentence id="33.3">are caused by the same
problem:</sentence>
		</paragraph>
		<paragraph id="34">
			<sentence id="34.1">The function cache_select_url called in line 152 of mod_cache.c already fills</sentence>
			<sentence id="34.2">r-&gt;err_headers_out with the cached headers. If ap_cache_check_freshness called</sentence>
			<sentence id="34.3">in line 167 detects that the cache object has expired this data is kept in</sentence>
			<sentence id="34.4">r-&gt;err_headers_out during the further processing. This leads to the reusing</sentence>
			<sentence id="34.5">of the old date in line 681 of mod_cache.c and explains the removal of the</sentence>
			<sentence id="34.6">microseconds part which is done in line 689.</sentence>
			<sentence id="34.7">During the further processing of the CACHE_IN filter at least mod_disk_cache</sentence>
			<sentence id="34.8">only stores r-&gt;headers_out in the .headers file which explains why the Date</sentence>
			<sentence id="34.9">header is missing in the .headers file after the 12:38:34 request.</sentence>
			<sentence id="34.10">Furthermore r-&gt;err_headers_out and r-&gt;headers_out get merged later on where</sentence>
			<sentence id="34.11">r-&gt;err_headers_out distributes the old (previously cached) Set-Cookie header</sentence>
			<sentence id="34.12">and r-&gt;headers_out distributes the new Tomcat generated Set-Cookie header</sentence>
			<sentence id="34.13">to the reponse.</sentence>
		</paragraph>
		<paragraph id="35">
			<sentence id="35.1">V. Solution proposal</sentence>
		</paragraph>
		<paragraph id="36">
			<sentence id="36.1">From my limited view into Apache I cannot see a reason why the data in
r-&gt;err_headers_out / r-&gt;headers_out should be used any longer if
ap_cache_check_freshness detected that the cache object has expired.</sentence>
			<sentence id="36.2">So I
propose the following patch to mod_cache.</sentence>
			<sentence id="36.3">c which clears the tables
r-&gt;err_headers_out / r-&gt;headers_out:</sentence>
		</paragraph>
		<paragraph id="37">
			<sentence id="37.1">--- httpd-2.0.50/modules/experimental/mod_cache.c.orig  2004-02-09 21:53:16.0000</sentence>
			<sentence id="37.2">00000 +0100</sentence>
			<sentence id="37.3">+++ httpd-2.0.50/modules/experimental/mod_cache.c       2004-07-30 13:16:26.0000</sentence>
			<sentence id="37.4">00000 +0200</sentence>
			<sentence id="37.5">@@ -207,9 +207,13 @@</sentence>
			<sentence id="37.6">return OK;</sentence>
			<sentence id="37.7">}</sentence>
			<sentence id="37.8">else {</sentence>
			<sentence id="37.9">+            apr_table_clear(r-&gt;headers_out);</sentence>
			<sentence id="37.10">if (!</sentence>
			<sentence id="37.11">r-&gt;err_headers_out) {</sentence>
			<sentence id="37.12">r-&gt;err_headers_out = apr_table_make(r-&gt;pool, 3);</sentence>
			<sentence id="37.13">}</sentence>
			<sentence id="37.14">+            else {</sentence>
			<sentence id="37.15">+                 apr_table_clear(r-&gt;err_headers_out);</sentence>
			<sentence id="37.16">+            }</sentence>
			<sentence id="37.17">/* stale data available */</sentence>
			<sentence id="37.18">if (lookup) {</sentence>
			<sentence id="37.19">return DECLINED;</sentence>
		</paragraph>
		<paragraph id="38">
			<sentence id="38.1">Applying this patch worked for me.</sentence>
			<sentence id="38.2">Of course I do not know if it breaks
something else as I did only limited testing.</sentence>
			<sentence id="38.3">If it turns out that it is
incorrect to clear the tables r-&gt;err_headers_out / r-&gt;headers_out then at
least all "irrelevant data" (however this gets defined) that got added by
cache_select_url must be removed after ap_cache_check_freshness detected
that the cache object has expired.</sentence>
			<sentence id="38.4">From my experience this should be at least
the Set-Cookie and the Date headers.</sentence>
			<sentence id="38.5">Depending on how "irrelevant data" gets
defined this makes a solution and thus a patch more complex.</sentence>
		</paragraph>
		<paragraph id="39">
			<sentence id="39.1">Regards</sentence>
		</paragraph>
		<paragraph id="40">
			<sentence id="40.1">Rüdiger Plüm</sentence>
		</paragraph>
	</description>
</bug>
