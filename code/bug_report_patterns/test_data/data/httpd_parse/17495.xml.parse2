If/IN i/FW submit/VBP an/DT array/NN using/VBG a/DT html/NN form/NN with/IN POST/NN method/NN ,/, e.g./FW 

(ROOT (SBAR (IN If) (S (NP (FW i)) (VP (VBP submit) (S (NP (DT an) (NN array)) (VP (VBG using) (NP (DT a) (NN html) (NN form)) (PP (IN with) (NP (NP (NN POST) (NN method)) (, ,) (NP (FW e.g.))))))))))

root(ROOT-0, submit-3)
mark(submit-3, If-1)
nsubj(submit-3, i-2)
det(array-5, an-4)
nsubj(using-6, array-5)
dep(submit-3, using-6)
det(form-9, a-7)
nn(form-9, html-8)
dobj(using-6, form-9)
nn(method-12, POST-11)
prep_with(using-6, method-12)
appos(method-12, e.g.-14)

</JJR from/IN action/NN =/JJ . . ./: method/NN =/JJ "/`` POST/NN "/'' >/JJR </JJR input/NN name/NN =/JJ "/`` test/NN [/-LRB- ]/-RRB- "/'' value/NN =/JJ "/`` abc/NN "/'' >/JJR </JJR input/NN name/NN =/JJ "/`` test/NN [/-LRB- ]/-RRB- "/'' value/NN =/JJ "/`` def/FW "/'' >/JJR 

(ROOT (FRAG (ADJP (JJR <) (PP (IN from) (NP (NP (NP (NP (NN action) (JJ =)) (: ...) (NP (NP (NP (NN method)) (NP (JJ =) (ADJP (NP (NP (`` ``) (NN POST) ('' '')) (ADJP (JJR >))) (JJR <)) (NN input) (NN name) (JJ =) (`` ``) (NX (NX (NN test)) (-LRB- -LSB-) (NX (-RRB- -RSB-))) ('' '') (NN value))) (NP (JJ =) (ADJP (NP (NP (`` ``) (NN abc) ('' '')) (ADJP (JJR >))) (JJR <)) (NN input) (NN name) (JJ =) (`` ``) (NX (NX (NN test)) (-LRB- -LSB-) (NX (-RRB- -RSB-))) ('' '') (NN value)))) (JJ =)) (`` ``) (NP (FW def)) ('' '')))) (ADJP (JJR >))))

root(ROOT-0, <-1)
prep_from(<-1, action-3)
amod(action-3, =-4)
dep(action-3, method-6)
amod(value-21, =-7)
npadvmod(<-12, POST-9)
amod(POST-9, >-11)
amod(value-21, <-12)
nn(value-21, input-13)
nn(value-21, name-14)
amod(value-21, =-15)
dep(-RSB--19, test-17)
punct(-RSB--19, -LSB--18)
dep(value-21, -RSB--19)
dep(method-6, value-21)
amod(value-36, =-22)
npadvmod(<-27, abc-24)
amod(abc-24, >-26)
amod(value-36, <-27)
nn(value-36, input-28)
nn(value-36, name-29)
amod(value-36, =-30)
dep(-RSB--34, test-32)
punct(-RSB--34, -LSB--33)
dep(value-36, -RSB--34)
dep(method-6, value-36)
amod(action-3, =-37)
dep(action-3, def-39)
dep(<-1, >-41)

this/DT results/VBZ in/IN 

(ROOT (S (NP (DT this)) (VP (VBZ results) (PP (IN in)))))

root(ROOT-0, results-2)
nsubj(results-2, this-1)
prep(results-2, in-3)

$/$ _/CD POST/NN [/-LRB- "/`` test/NN "/'' ]/-RRB- =/JJ array/NN (/-LRB- [/-LRB- 0/CD ]/-RRB- =/JJ abc/NN [/-LRB- 1/CD ]/-RRB- =/JJ def/NN [/-LRB- 2/CD ]/-RRB- =/JJ abc/NN [/-LRB- 3/CD ]/-RRB- =/JJ def/NN 

(ROOT (NP (NP ($ $) (CD _)) (X (NP (NP (NN POST) (-LRB- -LSB-) (`` ``) (NN test) ('' '')) (PP (-RRB- -RSB-) (NP (NP (JJ =) (NN array)) (PRN (-LRB- -LRB-) (NP (-LRB- -LSB-) (CD 0)) (-RRB- -RSB-) (NP (JJ =) (NN abc)) (-LRB- -LSB-))))) (NP (CD 1)) (NP (NP (-RRB- -RSB-) (JJ =) (NN def)) (PP (-LRB- -LSB-) (NP (CD 2))))) (-RRB- -RSB-) (NP (NP (JJ =) (NN abc)) (NP (-LRB- -LSB-) (ADJP (CD 3) (-RRB- -RSB-)) (JJ =) (NN def)))))

root(ROOT-0, $-1)
num($-1, _-2)
nn(test-6, POST-3)
punct(test-6, -LSB--4)
dep(def-21, test-6)
punct(array-10, -RSB--8)
amod(array-10, =-9)
prep(test-6, array-10)
punct(0-13, -LSB--12)
appos(array-10, 0-13)
punct(0-13, -RSB--14)
amod(abc-16, =-15)
dep(0-13, abc-16)
punct(0-13, -LSB--17)
dep(def-21, 1-18)
punct(def-21, -RSB--19)
amod(def-21, =-20)
dep($-1, def-21)
punct(2-23, -LSB--22)
prep(def-21, 2-23)
punct($-1, -RSB--24)
amod(abc-26, =-25)
dep($-1, abc-26)
punct(def-31, -LSB--27)
amod(def-31, 3-28)
punct(3-28, -RSB--29)
amod(def-31, =-30)
dep(abc-26, def-31)

