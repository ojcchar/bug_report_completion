With/IN the/DT following/VBG program/NN :/: #/# !/. 

(ROOT (S (PP (IN With) (NP (DT the) (VBG following) (NN program))) (: :) (VP (# #)) (. !)))

root(ROOT-0, #-6)
det(program-4, the-2)
amod(program-4, following-3)
prep_with(#-6, program-4)

//: usr/bin/perl/NN $/$ |/CD =/JJ 1/CD ;/: 

(ROOT (PRN (: /) (S (NP (NN usr/bin/perl)) (NP (NP ($ $) (CD |)) (ADJP (JJ =) (NP-TMP (CD 1))))) (: ;)))

root(ROOT-0, $-3)
punct($-3, /-1)
dep($-3, usr/bin/perl-2)
num($-3, |-4)
amod($-3, =-5)
tmod(=-5, 1-6)

while/IN (/-LRB- </JJR >/JJR )/-RRB- {/-LRB- s/NNS //: &/CC //: \/CD %/NN 26/g/NN ;/: print/NN $/$ _/CD ./. "/'' 

(ROOT (SBAR (S (NP (NP (NP (IN while)) (PRN (-LRB- -LRB-) (FRAG (ADJP (JJR <)) (ADJP (JJR >))) (-RRB- -RRB-))) (SBAR (S (-LRB- -LCB-) (NP (NNS s)) (VP (: /) (S (NP (CC &))))))) (VP (PRN (: /) (NP (NP (CD \) (NN %)) (NP (NN 26/g))) (: ;)) (PP (NN print) (NP ($ $) (CD _))))) (. .) ('' '')))

root(ROOT-0, %-12)
nsubj(%-12, while-1)
dep(while-1, <-3)
dep(<-3, >-4)
nsubj(&-9, s-7)
punct(&-9, /-8)
rcmod(while-1, &-9)
punct(%-12, /-10)
num(%-12, \-11)
dep(%-12, 26/g-13)
prep(%-12, print-15)
dep(print-15, $-16)
num($-16, _-17)

\/NN n/NN "/'' ;/: }/-RRB- 

(ROOT (FRAG (NP (NN \)) (NP (NP (NN n) ('' '')) (: ;) (NP (-RRB- -RCB-)))))

root(ROOT-0, \-1)
dep(\-1, n-2)

the/DT only/JJ response/NN from/IN mod_rewrite/NN is/VBZ :/: 10.0.0.8/CD -/: -/: [/-LRB- 30/Oct/2008/NNP :18:15:47/CD --/: 0400/CD ]/-RRB- [/-LRB- draco/sid/JJ #ba/NN 042e48/NN ]/-RRB- [/-LRB- rid/JJ #ba/NN 33fbf8/initial/JJ ]/-RRB- (/-LRB- 5/CD )/-RRB- map/NN lookup/NN FAILED/VBD :/: map/NN =/JJ ampesc/NN key/NN =/JJ This/DT _/NN &/CC _/NN That/WDT 

(ROOT (S (S (NP (NP (DT the) (JJ only) (NN response)) (PP (IN from) (NP (NN mod_rewrite)))) (VP (VBZ is))) (: :) (S (FRAG (NP (CD 10.0.0.8)) (: -) (FRAG (: -) (ADVP (-LRB- -LSB-)) (NP (NP (NNP 30/Oct/2008) (CD :18:15:47)) (: --) (NP (CD 0400)))) (-RRB- -RSB-)) (-LRB- -LSB-) (NP (NP (JJ draco/sid) (NN #ba) (NN 042e48)) (-RRB- -RSB-) (NP (-LRB- -LSB-) (ADJP (JJ rid) (NN #ba)) (JJ 33fbf8/initial) (-RRB- -RSB-) (PRN (-LRB- -LRB-) (NP (CD 5)) (-RRB- -RRB-)) (NN map) (NN lookup))) (VP (VP (VBD FAILED)) (: :) (NP (NP (NP (NN map) (JJ =) (NN ampesc)) (NN key) (NP (JJ =) (DT This) (NN _))) (CC &) (NP (NP (NN _)) (SBAR (WHNP (WDT That)))))))))

root(ROOT-0, is-6)
det(response-3, the-1)
amod(response-3, only-2)
nsubj(is-6, response-3)
prep_from(response-3, mod_rewrite-5)
dep(FAILED-32, 10.0.0.8-8)
dep(30/Oct/2008-12, -LSB--11)
dep(10.0.0.8-8, 30/Oct/2008-12)
num(30/Oct/2008-12, :18:15:47-13)
dep(30/Oct/2008-12, 0400-15)
punct(10.0.0.8-8, -RSB--16)
punct(FAILED-32, -LSB--17)
amod(042e48-20, draco/sid-18)
nn(042e48-20, #ba-19)
nsubj(FAILED-32, 042e48-20)
punct(042e48-20, -RSB--21)
punct(lookup-31, -LSB--22)
dep(#ba-24, rid-23)
amod(lookup-31, #ba-24)
amod(lookup-31, 33fbf8/initial-25)
punct(lookup-31, -RSB--26)
appos(lookup-31, 5-28)
nn(lookup-31, map-30)
dep(042e48-20, lookup-31)
parataxis(is-6, FAILED-32)
nn(ampesc-36, map-34)
amod(ampesc-36, =-35)
nn(key-37, ampesc-36)
dobj(FAILED-32, key-37)
amod(_-40, =-38)
det(_-40, This-39)
dep(key-37, _-40)
dobj(FAILED-32, _-42)
conj_and(key-37, _-42)
rcmod(_-42, That-43)

I/PRP have/VBP tried/VBN making/VBG sure/JJ Apache/NNP has/VBZ a/DT valid/JJ shell/NN (/-LRB- contrary/NN to/TO my/PRP$ standard/NN of/IN having/VBG daemons/NNS have/VBP "/`` nologin/NN "/'' for/IN a/DT shell/NN )/-RRB- and/CC even/RB changed/VBD the/DT mode/NN of/IN the/DT script/NN to/TO 777/CD ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN tried) (S (VP (VBG making) (ADJP (JJ sure) (SBAR (S (NP (NNP Apache)) (VP (VP (VBZ has) (NP (NP (DT a) (JJ valid) (NN shell)) (PRN (-LRB- -LRB-) (NP (NP (NN contrary)) (PP (TO to) (NP (NP (PRP$ my) (NN standard)) (PP (IN of) (S (VP (VBG having) (S (NP (NNS daemons)) (VP (VBP have) (NP (`` ``) (NP (NN nologin)) ('' '') (PP (IN for) (NP (DT a) (NN shell)))))))))))) (-RRB- -RRB-)))) (CC and) (VP (ADVP (RB even)) (VBD changed) (NP (NP (DT the) (NN mode)) (PP (IN of) (NP (DT the) (NN script)))) (PP (TO to) (NP (CD 777)))))))))))) (. .)))

root(ROOT-0, tried-3)
nsubj(tried-3, I-1)
aux(tried-3, have-2)
xcomp(tried-3, making-4)
acomp(making-4, sure-5)
nsubj(has-7, Apache-6)
nsubj(changed-29, Apache-6)
ccomp(sure-5, has-7)
det(shell-10, a-8)
amod(shell-10, valid-9)
dobj(has-7, shell-10)
poss(standard-15, my-14)
prep_contrary_to(shell-10, standard-15)
prepc_of(standard-15, having-17)
nsubj(have-19, daemons-18)
ccomp(having-17, have-19)
dobj(have-19, nologin-21)
det(shell-25, a-24)
prep_for(nologin-21, shell-25)
advmod(changed-29, even-28)
ccomp(sure-5, changed-29)
conj_and(has-7, changed-29)
det(mode-31, the-30)
dobj(changed-29, mode-31)
det(script-34, the-33)
prep_of(mode-31, script-34)
prep_to(changed-29, 777-36)

In/IN all/DT testing/VBG the/DT script/NN returns/VBZ a/DT valid/JJ response/NN for/IN every/DT input/NN -/: even/RB ones/NNS it/PRP does/VBZ n't/RB modify/VB ./. 

(ROOT (S (PP (IN In) (S (NP (DT all)) (VP (VBG testing) (SBAR (S (NP (DT the) (NN script)) (VP (VBZ returns) (NP (NP (DT a) (JJ valid) (NN response)) (PP (IN for) (NP (NP (DT every) (NN input)) (: -) (ADVP (RB even)) (NP (NNS ones))))))))))) (NP (PRP it)) (VP (VBZ does) (RB n't) (VP (VB modify))) (. .)))

root(ROOT-0, modify-19)
nsubj(testing-3, all-2)
prepc_in(modify-19, testing-3)
det(script-5, the-4)
nsubj(returns-6, script-5)
ccomp(testing-3, returns-6)
det(response-9, a-7)
amod(response-9, valid-8)
dobj(returns-6, response-9)
det(input-12, every-11)
prep_for(response-9, input-12)
advmod(input-12, even-14)
dep(input-12, ones-15)
nsubj(modify-19, it-16)
aux(modify-19, does-17)
neg(modify-19, n't-18)

The/DT addition/NN of/IN the/DT newline/NN was/VBD from/IN advice/NN from/IN another/DT bug/NN report/NN (/-LRB- for/IN 1.3/CD ,/, IIRC/NN )/-RRB- ./. 

(ROOT (S (NP (NP (DT The) (NN addition)) (PP (IN of) (NP (DT the) (NN newline)))) (VP (VBD was) (PP (IN from) (NP (NP (NN advice)) (PP (IN from) (NP (NP (DT another) (NN bug) (NN report)) (PRN (-LRB- -LRB-) (PP (IN for) (NP (NP (CD 1.3)) (, ,) (NP (NN IIRC)))) (-RRB- -RRB-))))))) (. .)))

root(ROOT-0, was-6)
det(addition-2, The-1)
nsubj(was-6, addition-2)
det(newline-5, the-4)
prep_of(addition-2, newline-5)
prep_from(was-6, advice-8)
det(report-12, another-10)
nn(report-12, bug-11)
prep_from(advice-8, report-12)
prep_for(report-12, 1.3-15)
appos(1.3-15, IIRC-17)

