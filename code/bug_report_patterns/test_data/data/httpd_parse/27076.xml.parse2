The/DT existing/VBG util_ldap/NN ./. 

(ROOT (NP (NP (DT The) (VBG existing)) (NP (NN util_ldap)) (. .)))

root(ROOT-0, The-1)
amod(The-1, existing-2)
dep(The-1, util_ldap-3)

c/NN considers/VBZ it/PRP an/DT error/NN in/IN util_ldap_cache_checkuserid/NN if/IN it/PRP searches/VBZ for/IN a/DT user/NN and/CC gets/VBZ back/RB more/RBR than/IN one/CD entry/NN ./. 

(ROOT (S (NP (NN c)) (VP (VBZ considers) (S (NP (PRP it)) (NP (NP (DT an) (NN error)) (PP (IN in) (NP (NN util_ldap_cache_checkuserid))))) (SBAR (IN if) (S (NP (PRP it)) (VP (VP (VBZ searches) (PP (IN for) (NP (DT a) (NN user)))) (CC and) (VP (VBZ gets) (ADVP (RB back) (NP (QP (RBR more) (IN than) (CD one)) (NN entry)))))))) (. .)))

root(ROOT-0, considers-2)
nsubj(considers-2, c-1)
nsubj(error-5, it-3)
det(error-5, an-4)
xcomp(considers-2, error-5)
prep_in(error-5, util_ldap_cache_checkuserid-7)
mark(searches-10, if-8)
nsubj(searches-10, it-9)
nsubj(gets-15, it-9)
advcl(considers-2, searches-10)
det(user-13, a-12)
prep_for(searches-10, user-13)
advcl(considers-2, gets-15)
conj_and(searches-10, gets-15)
advmod(gets-15, back-16)
advmod(than-18, more-17)
quantmod(one-19, than-18)
num(entry-20, one-19)
pobj(back-16, entry-20)

It/PRP could/MD instead/RB loop/NN on/IN the/DT variable/JJ '/`` entry/NN '/'' ,/, using/VBG both/CC ldap_first_entry/NN and/CC ldap_next_entry/NN ,/, to/TO try/VB binding/VBG to/TO each/DT entry/NN in/IN turn/NN ./. 

(ROOT (S (NP (PRP It)) (VP (MD could) (VP (PP (RB instead) (NP (NN loop))) (PP (IN on) (NP (NP (DT the) (JJ variable) (`` `) (NN entry) ('' ')) (, ,) (VP (VBG using) (PP (CC both) (NP (NN ldap_first_entry) (CC and) (NN ldap_next_entry))) (, ,) (S (VP (TO to) (VP (VB try) (NP (VBG binding)) (PP (TO to) (NP (NP (DT each) (NN entry)) (PP (IN in) (NP (NN turn))))))))))))) (. .)))

root(ROOT-0, instead-3)
nsubj(instead-3, It-1)
aux(instead-3, could-2)
pobj(instead-3, loop-4)
det(entry-9, the-6)
amod(entry-9, variable-7)
prep_on(instead-3, entry-9)
vmod(entry-9, using-12)
prep(using-12, both-13)
pobj(both-13, ldap_first_entry-14)
pobj(both-13, ldap_next_entry-16)
conj_and(ldap_first_entry-14, ldap_next_entry-16)
aux(try-19, to-18)
xcomp(using-12, try-19)
dobj(try-19, binding-20)
det(entry-23, each-22)
prep_to(try-19, entry-23)
prep_in(entry-23, turn-25)

I/PRP 've/VBP made/VBN the/DT change/NN ,/, and/CC it/PRP seems/VBZ to/TO work/VB fine/JJ -/: is/VBZ there/EX any/DT particular/JJ problem/NN with/IN doing/VBG this/DT ?/. 

(ROOT (S (S (S (NP (PRP I)) (VP (VBP 've) (VP (VBN made) (NP (DT the) (NN change))))) (, ,) (CC and) (S (NP (PRP it)) (VP (VBZ seems) (S (VP (TO to) (VP (VB work) (ADJP (JJ fine)))))))) (: -) (SQ (VP (VBZ is)) (NP (EX there)) (NP (NP (DT any) (JJ particular) (NN problem)) (PP (IN with) (S (VP (VBG doing) (NP (DT this))))))) (. ?)))

root(ROOT-0, made-3)
nsubj(made-3, I-1)
aux(made-3, 've-2)
det(change-5, the-4)
dobj(made-3, change-5)
nsubj(seems-9, it-8)
conj_and(made-3, seems-9)
aux(work-11, to-10)
xcomp(seems-9, work-11)
acomp(work-11, fine-12)
parataxis(made-3, is-14)
expl(is-14, there-15)
det(problem-18, any-16)
amod(problem-18, particular-17)
nsubj(is-14, problem-18)
prepc_with(problem-18, doing-20)
dobj(doing-20, this-21)

(/-LRB- I/PRP 'm/VBP ignoring/VBG the/DT question/NN of/IN whether/IN there/EX */SYM should/MD */SYM be/VB non-unique/JJ entries/NNS in/IN a/DT directory/NN server/NN -/: I/PRP have/VBP to/TO deal/VB with/IN a/DT directory/NN server/NN that/WDT has/VBZ them/PRP ,/, whether/IN I/PRP like/VBP it/PRP or/CC not/RB :/: -/: )/-RRB- 

(ROOT (PRN (-LRB- -LRB-) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG ignoring) (NP (NP (DT the) (NN question)) (PP (IN of) (FRAG (PP (IN whether) (NP (NP (EX there)) (X (SYM *)) (SBAR (SBAR (S (VP (MD should)))) (SBAR (X (SYM *)) (S (S (VP (VB be) (NP (NP (NP (JJ non-unique) (NNS entries)) (PP (IN in) (NP (DT a) (NN directory) (NN server)))) (: -) (NP (PRP I))))) (VP (VBP have) (S (VP (TO to) (VP (VB deal) (PP (IN with) (NP (NP (DT a) (NN directory) (NN server)) (SBAR (WHNP (WDT that)) (S (VP (VBZ has) (NP (PRP them)) (, ,) (SBAR (IN whether) (S (NP (PRP I)) (VP (VBP like) (NP (PRP it)))) (CC or) (RB not))) (: :))))))))))))) (: -)))))))) (-RRB- -RRB-)))

root(ROOT-0, ignoring-4)
nsubj(ignoring-4, I-2)
aux(ignoring-4, 'm-3)
det(question-6, the-5)
dobj(ignoring-4, question-6)
prep(question-6, of-7)
dep(of-7, whether-8)
pobj(whether-8, there-9)
dep(there-9, *-10)
dep(there-9, should-11)
dep(have-22, *-12)
cop(entries-15, be-13)
amod(entries-15, non-unique-14)
csubj(have-22, entries-15)
det(server-19, a-17)
nn(server-19, directory-18)
prep_in(entries-15, server-19)
dep(entries-15, I-21)
dep(should-11, have-22)
aux(deal-24, to-23)
xcomp(have-22, deal-24)
det(server-28, a-26)
nn(server-28, directory-27)
prep_with(deal-24, server-28)
nsubj(has-30, that-29)
rcmod(server-28, has-30)
dobj(has-30, them-31)
mark(like-35, whether-33)
nsubj(like-35, I-34)
ccomp(has-30, like-35)
dobj(like-35, it-36)
ccomp(has-30, not-38)
conj_or(like-35, not-38)

