I/PRP 've/VBP been/VBN playing/VBG with/IN ab/NN on/IN one/CD of/IN sun/NN 's/POS t2000/NN 's/POS and/CC the/DT slowness/NN of/IN the/DT individual/JJ threads/NNS +/CC some/DT inefficiencies/NNS in/IN ab/NN combine/VBP for/IN some/DT amount/NN of/IN pain/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP 've) (VP (VBN been) (VP (VBG playing) (PP (IN with) (NP (NN ab))) (PP (IN on) (NP (NP (CD one)) (PP (IN of) (NP (NP (NN sun) (POS 's)) (SBAR (S (NP (NP (NN t2000) (POS 's)) (CC and) (NP (DT the) (NN slowness))) (PP (IN of) (NP (NP (DT the) (JJ individual) (NNS threads)) (CC +) (NP (NP (DT some) (NNS inefficiencies)) (PP (IN in) (NP (NN ab)))))) (VP (VBP combine) (PP (IN for) (NP (NP (DT some) (NN amount)) (PP (IN of) (NP (NN pain))))))))))))))) (. .)))

root(ROOT-0, playing-4)
nsubj(playing-4, I-1)
aux(playing-4, 've-2)
aux(playing-4, been-3)
prep_with(playing-4, ab-6)
prep_on(playing-4, one-8)
prep_of(one-8, sun-10)
possessive(sun-10, 's-11)
nsubj(combine-26, t2000-12)
possessive(t2000-12, 's-13)
det(slowness-16, the-15)
conj_and(t2000-12, slowness-16)
nsubj(combine-26, slowness-16)
det(threads-20, the-18)
amod(threads-20, individual-19)
prep_of(combine-26, threads-20)
det(inefficiencies-23, some-22)
conj_+(threads-20, inefficiencies-23)
prep_of(combine-26, inefficiencies-23)
prep_in(inefficiencies-23, ab-25)
rcmod(sun-10, combine-26)
det(amount-29, some-28)
prep_for(combine-26, amount-29)
prep_of(amount-29, pain-31)

One/CD of/IN the/DT obvious/JJ sources/NNS are/VBP unecessary/JJ struct/NN copying/NN ./. 

(ROOT (S (NP (NP (CD One)) (PP (IN of) (NP (DT the) (JJ obvious) (NNS sources)))) (VP (VBP are) (NP (JJ unecessary) (NN struct) (NN copying))) (. .)))

root(ROOT-0, copying-9)
nsubj(copying-9, One-1)
det(sources-5, the-3)
amod(sources-5, obvious-4)
prep_of(One-1, sources-5)
cop(copying-9, are-6)
amod(copying-9, unecessary-7)
nn(copying-9, struct-8)

I/PRP 'll/MD attach/VB a/DT patch/NN to/TO fix/VB that/DT next/JJ ./. 

(ROOT (S (NP (PRP I)) (VP (MD 'll) (VP (VB attach) (NP (DT a) (NN patch) (S (VP (TO to) (VP (VB fix) (NP (DT that) (JJ next)))))))) (. .)))

root(ROOT-0, attach-3)
nsubj(attach-3, I-1)
aux(attach-3, 'll-2)
det(patch-5, a-4)
dobj(attach-3, patch-5)
aux(fix-7, to-6)
vmod(patch-5, fix-7)
det(next-9, that-8)
dobj(fix-7, next-9)

