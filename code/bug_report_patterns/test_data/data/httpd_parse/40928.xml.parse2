I/PRP 've/VBP frequently/RB compiled/VBN //: installed/VBN Apache/NNP on/IN plenty/NN of/IN different/JJ Hardware/NN //: OS/NN combinations/NNS and/CC never/RB come/VBN across/IN this/DT before/IN ,/, so/IN I/PRP thought/VBD I/PRP 'd/MD sumbit/VB it/PRP to/TO help/VB out/RP ,/, although/IN I/PRP highly/RB doubt/VBP it/PRP 's/VBZ a/DT major/JJ issue/NN ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP 've) (VP (VP (ADVP (RB frequently)) (VBN compiled) (PRN (: /) (S (VP (VBN installed) (NP (NP (NNP Apache)) (PP (IN on) (NP (NP (NN plenty)) (PP (IN of) (NP (JJ different) (NN Hardware)))))))) (: /)) (PP (NN OS) (NP (NNS combinations)))) (CC and) (VP (ADVP (RB never)) (VBN come) (PP (IN across) (NP (NP (DT this)) (ADVP (IN before)))))))) (, ,) (IN so) (S (NP (PRP I)) (VP (VBD thought) (SBAR (S (NP (PRP I)) (VP (MD 'd) (VP (VB sumbit) (S (NP (PRP it)) (VP (TO to) (VP (VB help) (PRT (RP out)) (, ,) (SBAR (IN although) (S (NP (PRP I)) (ADVP (RB highly)) (VP (VBP doubt) (SBAR (S (NP (PRP it)) (VP (VBZ 's) (NP (DT a) (JJ major) (NN issue))))))))))))))))) (. .)))

root(ROOT-0, compiled-4)
nsubj(compiled-4, I-1)
nsubj(come-18, I-1)
aux(compiled-4, 've-2)
advmod(compiled-4, frequently-3)
punct(installed-6, /-5)
parataxis(compiled-4, installed-6)
dobj(installed-6, Apache-7)
prep_on(Apache-7, plenty-9)
amod(Hardware-12, different-11)
prep_of(plenty-9, Hardware-12)
punct(installed-6, /-13)
prep(compiled-4, OS-14)
dep(OS-14, combinations-15)
neg(come-18, never-17)
conj_and(compiled-4, come-18)
prep_across(come-18, this-20)
advmod(this-20, before-21)
dep(compiled-4, so-23)
nsubj(thought-25, I-24)
parataxis(compiled-4, thought-25)
nsubj(sumbit-28, I-26)
aux(sumbit-28, 'd-27)
ccomp(thought-25, sumbit-28)
dobj(sumbit-28, it-29)
aux(help-31, to-30)
xcomp(sumbit-28, help-31)
prt(help-31, out-32)
mark(doubt-37, although-34)
nsubj(doubt-37, I-35)
advmod(doubt-37, highly-36)
advcl(help-31, doubt-37)
nsubj(issue-42, it-38)
cop(issue-42, 's-39)
det(issue-42, a-40)
amod(issue-42, major-41)
ccomp(doubt-37, issue-42)

When/WRB running/VBG configure/NN on/IN an/DT Apache/NNP 2.2.3/CD release/NN ,/, I/PRP decided/VBD (/-LRB- for/IN the/DT hell/NN of/IN 

(ROOT (SBAR (WHADVP (WRB When)) (S (VP (VBG running) (NP (NP (NP (NN configure)) (PP (IN on) (NP (DT an) (NNP Apache) (CD 2.2.3) (NN release))) (, ,) (SBAR (S (NP (PRP I)) (VP (VBD decided))))) (PRN (-LRB- -LRB-) (UCP (ADVP (IN for) (NP (DT the) (NN hell))) (PP (IN of)))))))))

root(ROOT-0, running-2)
advmod(running-2, When-1)
dobj(running-2, configure-3)
det(release-8, an-5)
nn(release-8, Apache-6)
num(release-8, 2.2.3-7)
prep_on(configure-3, release-8)
nsubj(decided-11, I-10)
rcmod(configure-3, decided-11)
dep(configure-3, for-13)
det(hell-15, the-14)
pobj(for-13, hell-15)
prep(for-13, of-16)

it/PRP )/-RRB- to/TO link/VB it/PRP against/IN my/PRP$ pre-installed/JJ PCRE/NN library/NN (/-LRB- in/IN //: usr/local/JJ ,/, version/NN 

(ROOT (S (NP (PRP it)) (VP (-RRB- -RRB-) (S (VP (TO to) (VP (VB link) (NP (PRP it)) (PP (IN against) (NP (NP (PRP$ my) (JJ pre-installed) (NN PCRE) (NN library)) (-LRB- -LRB-) (NP (IN in)) (PRN (: /) (NP (NP (JJ usr/local)) (, ,) (NP (NN version))))))))))))

root(ROOT-0, link-4)
nsubj(link-4, it-1)
aux(link-4, to-3)
dobj(link-4, it-5)
poss(library-10, my-7)
amod(library-10, pre-installed-8)
nn(library-10, PCRE-9)
prep_against(link-4, library-10)
dep(library-10, in-12)
punct(usr/local-14, /-13)
dep(library-10, usr/local-14)
appos(usr/local-14, version-16)

6/CD 7/CD )/-RRB- and/CC configure/VB fails/VBZ stating/VBG :/: 

(ROOT (S (NP (NP (CD 6) (CD 7) (-RRB- -RRB-)) (CC and) (NP (VB configure))) (VP (VBZ fails) (S (VP (VBG stating)))) (: :)))

root(ROOT-0, fails-6)
num(7-2, 6-1)
nsubj(fails-6, 7-2)
conj_and(7-2, configure-5)
nsubj(fails-6, configure-5)
xcomp(fails-6, stating-7)

configure/NN :/: error/NN :/: Size/NN of/IN "/`` void/JJ */NN "/'' is/VBZ less/JJR than/IN size/NN of/IN "/`` long/JJ "/'' 

(ROOT (FRAG (NP (NN configure)) (: :) (S (NP (NP (NP (NN error)) (: :) (NP (NN Size))) (PP (IN of) (`` ``) (NP (JJ void) (NN *)) ('' ''))) (VP (VBZ is) (ADJP (ADJP (JJR less)) (PP (IN than) (NP (NN size)))) (PP (IN of) (`` ``) (ADJP (JJ long)) ('' ''))))))

root(ROOT-0, configure-1)
nsubj(less-12, error-3)
dep(error-3, Size-5)
amod(*-9, void-8)
prep_of(error-3, *-9)
cop(less-12, is-11)
dep(configure-1, less-12)
prep_than(less-12, size-14)
prep_of(less-12, long-17)

Well/RB ,/, sadly/RB ,/, that/DT 's/VBZ just/RB not/RB true/JJ ./. 

(ROOT (S (INTJ (RB Well)) (, ,) (ADVP (RB sadly)) (, ,) (NP (DT that)) (VP (VBZ 's) (ADVP (RB just)) (RB not) (ADJP (JJ true))) (. .)))

root(ROOT-0, true-9)
discourse(true-9, Well-1)
advmod(true-9, sadly-3)
nsubj(true-9, that-5)
cop(true-9, 's-6)
advmod(true-9, just-7)
neg(true-9, not-8)

On/IN my/PRP$ architecture/NN ,/, a/DT void/NN pointer/NN is/VBZ 4/CD bytes/NNS ,/, and/CC so/RB is/VBZ a/DT long/RB ./. 

(ROOT (S (PP (IN On) (NP (PRP$ my) (NN architecture))) (, ,) (NP (DT a) (NN void) (NN pointer)) (VP (VP (VBZ is) (NP (CD 4) (NNS bytes))) (, ,) (CC and) (ADVP (RB so)) (VP (VBZ is) (NP (DT a) (RB long)))) (. .)))

root(ROOT-0, bytes-10)
poss(architecture-3, my-2)
prep_on(bytes-10, architecture-3)
det(pointer-7, a-5)
nn(pointer-7, void-6)
nsubj(bytes-10, pointer-7)
cop(bytes-10, is-8)
num(bytes-10, 4-9)
cop(long-16, is-14)
det(long-16, a-15)
conj_and(bytes-10, long-16)

I/PRP 've/VBP confirmed/VBN this/DT just/RB to/TO make/VB certain/JJ :/: 

(ROOT (S (NP (PRP I)) (VP (VBP 've) (VP (VBN confirmed) (NP (DT this) (RB just)) (S (VP (TO to) (VP (VB make) (ADJP (JJ certain))))))) (: :)))

root(ROOT-0, confirmed-3)
nsubj(confirmed-3, I-1)
aux(confirmed-3, 've-2)
det(just-5, this-4)
dobj(confirmed-3, just-5)
aux(make-7, to-6)
vmod(confirmed-3, make-7)
acomp(make-7, certain-8)

enoch/NN :/: ~/CD $/$ cat/NN test.c/NN #include/NN </JJR stdio.h/CD >/JJR 

(ROOT (NP (NP (NN enoch)) (: :) (NP (NP (NP (CD ~) (ADJP ($ $) (NN cat)) (NN test.c)) (ADJP (NN #include) (JJR <))) (ADJP (CD stdio.h) (JJR >)))))

root(ROOT-0, enoch-1)
num(test.c-6, ~-3)
amod(test.c-6, $-4)
dep($-4, cat-5)
dep(enoch-1, test.c-6)
amod(test.c-6, #include-7)
dep(#include-7, <-8)
number(>-10, stdio.h-9)
amod(test.c-6, >-10)

int/NN main/JJ (/-LRB- )/-RRB- {/-LRB- printf/NN (/-LRB- "/`` Sizeof/JJ void/NN */NN :/: %/NN d/NN \/CD nSizeof/NN long/RB :/: %/NN d/NN \/CD n/NN "/'' ,/, sizeof/NN (/-LRB- void/NN */NN )/-RRB- ,/, sizeof/NN (/-LRB- long/JJ )/-RRB- )/-RRB- ;/: return/NN 0/CD ;/: }/-RRB- enoch/NN :/: ~/CD $/$ gcc/SYM -/: o/NN test.run/NN test.c/NN enoch/NN :/: ~/CD $/$ ./. 

(ROOT (NP (NP (NP (NP (NN int) (JJ main)) (-LRB- -LRB-) (NP (NP (NP (-RRB- -RRB-) (-LRB- -LCB-) (NN printf)) (PRN (-LRB- -LRB-) (NP (NP (`` ``) (JJ Sizeof) (NN void) (NN *)) (: :) (NP (NP (NP (NN %) (NN d)) (ADVP (NP (CD \) (NN nSizeof)) (RB long))) (: :) (NP (NP (NP (NN %)) (PP (NN d) (NP (CD \) (NN n))) ('' '')) (, ,) (NP (NP (NN sizeof)) (PRN (-LRB- -LRB-) (NP (NN void) (NN *)) (-RRB- -RRB-))) (, ,) (NP (NP (NN sizeof)) (PRN (-LRB- -LRB-) (ADJP (JJ long)) (-RRB- -RRB-)))))) (-RRB- -RRB-))) (PRN (: ;) (NP (NN return) (CD 0)) (: ;))) (-RRB- -RCB-)) (NP (NN enoch))) (: :) (NP (NP (CD ~)) (NP ($ $) (SYM gcc))) (: -) (NP (NP (NN o) (NN test.run) (NN test.c) (NN enoch)) (: :) (NP (QP (CD ~) ($ $)))) (. .)))

root(ROOT-0, int-1)
amod(int-1, main-2)
dep(int-1, printf-6)
amod(*-11, Sizeof-9)
nn(*-11, void-10)
dep(printf-6, *-11)
nn(d-14, %-13)
dep(*-11, d-14)
num(nSizeof-16, \-15)
npadvmod(long-17, nSizeof-16)
advmod(d-14, long-17)
dep(d-14, %-19)
prep(%-19, d-20)
num(n-22, \-21)
dep(d-20, n-22)
appos(%-19, sizeof-25)
nn(*-28, void-27)
appos(sizeof-25, *-28)
appos(%-19, sizeof-31)
dep(sizeof-31, long-33)
dep(printf-6, return-37)
num(return-37, 0-38)
dep(int-1, enoch-41)
dep(int-1, ~-43)
dep(~-43, $-44)
dep($-44, gcc-45)
nn(enoch-50, o-47)
nn(enoch-50, test.run-48)
nn(enoch-50, test.c-49)
dep(int-1, enoch-50)
number($-53, ~-52)
dep(enoch-50, $-53)

//: test.run/NN Sizeof/NN void/NN */NN :/: 4/CD Sizeof/NNP long/RB :/: 4/CD 

(ROOT (PRN (: /) (NP (NP (NN test.run) (NN Sizeof) (NN void) (NN *)) (: :) (NP (NP (CD 4) (NNP Sizeof)) (RRC (ADVP (RB long) (: :)) (NP (CD 4)))))))

root(ROOT-0, *-5)
punct(*-5, /-1)
nn(*-5, test.run-2)
nn(*-5, Sizeof-3)
nn(*-5, void-4)
num(Sizeof-8, 4-7)
dep(*-5, Sizeof-8)
advmod(4-11, long-9)
rcmod(Sizeof-8, 4-11)

Okay/UH ,/, so/RB that/IN 's/VBZ that/DT ./. 

(ROOT (S (INTJ (UH Okay)) (, ,) (ADVP (RB so) (IN that)) (VP (VBZ 's) (NP (DT that))) (. .)))

root(ROOT-0, that-6)
discourse(that-6, Okay-1)
advmod(that-4, so-3)
advmod(that-6, that-4)
cop(that-6, 's-5)

Take/VB out/RP the/DT configure/NN option/NN "/'' --/: with-pcre/NN =/JJ //: usr/local/JJ "/'' and/CC it/PRP configures/VBZ ,/, compiles/VBZ and/CC installs/VBZ just/RB fine/JJ ./. 

(ROOT (S (S (VP (VB Take) (PRT (RP out)) (NP (NP (DT the) (NN configure)) (SBAR (S (NP (NP (NN option)) ('' '') (PRN (: --) (S (NP (NN with-pcre)) (ADJP (JJ =))) (: /)) (NP (JJ usr/local)) ('' ''))))))) (CC and) (S (NP (PRP it)) (VP (VBZ configures) (, ,) (VBZ compiles) (CC and) (VBZ installs) (PP (RB just) (ADJP (JJ fine))))) (. .)))

root(ROOT-0, Take-1)
prt(Take-1, out-2)
det(configure-4, the-3)
dobj(Take-1, configure-4)
rcmod(configure-4, option-5)
dep(=-9, with-pcre-8)
dep(option-5, =-9)
punct(=-9, /-10)
dep(option-5, usr/local-11)
nsubj(configures-15, it-14)
nsubj(compiles-17, it-14)
nsubj(installs-19, it-14)
conj_and(Take-1, configures-15)
conj_and(Take-1, compiles-17)
conj_and(configures-15, compiles-17)
conj_and(Take-1, installs-19)
conj_and(configures-15, installs-19)
prep(configures-15, just-20)
pobj(just-20, fine-21)

Just/RB thought/VBN I/PRP 'd/MD let/VB you/PRP know/VB !/. 

(ROOT (S (S (VP (ADVP (RB Just)) (VBN thought))) (NP (PRP I)) (VP (MD 'd) (VP (VB let) (S (NP (PRP you)) (VP (VB know))))) (. !)))

root(ROOT-0, let-5)
advmod(thought-2, Just-1)
dep(let-5, thought-2)
nsubj(let-5, I-3)
aux(let-5, 'd-4)
nsubj(know-7, you-6)
ccomp(let-5, know-7)

