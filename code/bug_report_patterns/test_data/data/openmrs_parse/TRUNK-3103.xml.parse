<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>TRUNK-3103</id>
	<title>Adding a new concept name fails</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">If you try to add a new concept name you'll end up with:
{code}</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">2012-02-29 13:09:30.265::WARN: /openmrs/dictionary/concept.form</sentence>
			<sentence id="2.2">org.hibernate.exception.ConstraintViolationException: could not insert: [org.openmrs.ConceptWord]</sentence>
			<sentence id="2.3">	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:96)</sentence>
			<sentence id="2.4">	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)</sentence>
			<sentence id="2.5">	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:64)</sentence>
			<sentence id="2.6">	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2345)</sentence>
			<sentence id="2.7">	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2852)</sentence>
			<sentence id="2.8">	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:71)</sentence>
			<sentence id="2.9">	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:273)</sentence>
			<sentence id="2.10">	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:320)</sentence>
			<sentence id="2.11">	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:203)</sentence>
			<sentence id="2.12">	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:129)</sentence>
			<sentence id="2.13">	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:210)</sentence>
			<sentence id="2.14">	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:56)</sentence>
			<sentence id="2.15">	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:195)</sentence>
			<sentence id="2.16">	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:50)</sentence>
			<sentence id="2.17">	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:93)</sentence>
			<sentence id="2.18">	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:713)</sentence>
			<sentence id="2.19">	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:701)</sentence>
			<sentence id="2.20">	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:697)</sentence>
			<sentence id="2.21">	at org.openmrs.api.db.hibernate.HibernateConceptDAO.updateConceptWord(HibernateConceptDAO.java:670)</sentence>
			<sentence id="2.22">	at org.openmrs.api.impl.ConceptServiceImpl.updateConceptIndex(ConceptServiceImpl.java:1797)</sentence>
			<sentence id="2.23">	at org.openmrs.api.impl.ConceptServiceImpl.saveConcept(ConceptServiceImpl.java:297)</sentence>
			<sentence id="2.24">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.25">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.26">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.27">	at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.28">	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.29">	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.30">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.31">	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.32">	at org.openmrs.aop.FlushSessionTransactionInterceptor.invoke(FlushSessionTransactionInterceptor.java:34)</sentence>
			<sentence id="2.33">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.34">	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.35">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.36">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.37">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.38">	at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.39">	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.40">	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.41">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.42">	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.43">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.44">	at org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:122)</sentence>
			<sentence id="2.45">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.46">	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)</sentence>
			<sentence id="2.47">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.48">	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)</sentence>
			<sentence id="2.49">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.50">	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.51">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.52">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.53">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.54">	at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.55">	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.56">	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.57">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.58">	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.59">	at org.openmrs.aop.FlushSessionTransactionInterceptor.invoke(FlushSessionTransactionInterceptor.java:34)</sentence>
			<sentence id="2.60">	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.61">	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.62">	at org.openmrs.web.controller.ConceptFormController.onSubmit(ConceptFormController.java:244)</sentence>
			<sentence id="2.63">	at org.springframework.web.servlet.mvc.SimpleFormController.processFormSubmission(SimpleFormController.java:272)</sentence>
			<sentence id="2.64">	at org.openmrs.web.controller.ConceptFormController.processFormSubmission(ConceptFormController.java:142)</sentence>
			<sentence id="2.65">	at org.springframework.web.servlet.mvc.AbstractFormController.handleRequestInternal(AbstractFormController.java:268)</sentence>
			<sentence id="2.66">	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)</sentence>
			<sentence id="2.67">	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)</sentence>
			<sentence id="2.68">	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:790)</sentence>
			<sentence id="2.69">	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:719)</sentence>
			<sentence id="2.70">	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:644)</sentence>
			<sentence id="2.71">	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:560)</sentence>
			<sentence id="2.72">	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</sentence>
			<sentence id="2.73">	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)</sentence>
			<sentence id="2.74">	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)</sentence>
			<sentence id="2.75">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)</sentence>
			<sentence id="2.76">	at org.openmrs.module.web.filter.ForcePasswordChangeFilter.doFilter(ForcePasswordChangeFilter.java:65)</sentence>
			<sentence id="2.77">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.78">	at org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:76)</sentence>
			<sentence id="2.79">	at org.openmrs.module.web.filter.ModuleFilter.doFilter(ModuleFilter.java:58)</sentence>
			<sentence id="2.80">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.81">	at org.openmrs.web.filter.OpenmrsFilter.doFilterInternal(OpenmrsFilter.java:111)</sentence>
			<sentence id="2.82">	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)</sentence>
			<sentence id="2.83">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.84">	at org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:198)</sentence>
			<sentence id="2.85">	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)</sentence>
			<sentence id="2.86">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.87">	at org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:109)</sentence>
			<sentence id="2.88">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.89">	at org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:109)</sentence>
			<sentence id="2.90">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.91">	at org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:109)</sentence>
			<sentence id="2.92">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.93">	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)</sentence>
			<sentence id="2.94">	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)</sentence>
			<sentence id="2.95">	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)</sentence>
			<sentence id="2.96">	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)</sentence>
			<sentence id="2.97">	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)</sentence>
			<sentence id="2.98">	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)</sentence>
			<sentence id="2.99">	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)</sentence>
			<sentence id="2.100">	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)</sentence>
			<sentence id="2.101">	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:206)</sentence>
			<sentence id="2.102">	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)</sentence>
			<sentence id="2.103">	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)</sentence>
			<sentence id="2.104">	at org.mortbay.jetty.Server.handle(Server.java:324)</sentence>
			<sentence id="2.105">	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)</sentence>
			<sentence id="2.106">	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:843)</sentence>
			<sentence id="2.107">	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:648)</sentence>
			<sentence id="2.108">	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)</sentence>
			<sentence id="2.109">	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)</sentence>
			<sentence id="2.110">	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)</sentence>
			<sentence id="2.111">	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:488)</sentence>
			<sentence id="2.112">Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'concept_name_id' cannot be null</sentence>
			<sentence id="2.113">	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</sentence>
			<sentence id="2.114">	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)</sentence>
			<sentence id="2.115">	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)</sentence>
			<sentence id="2.116">	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)</sentence>
			<sentence id="2.117">	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)</sentence>
			<sentence id="2.118">	at com.mysql.jdbc.Util.getInstance(Util.java:381)</sentence>
			<sentence id="2.119">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)</sentence>
			<sentence id="2.120">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)</sentence>
			<sentence id="2.121">	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3536)</sentence>
			<sentence id="2.122">	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3468)</sentence>
			<sentence id="2.123">	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1957)</sentence>
			<sentence id="2.124">	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2107)</sentence>
			<sentence id="2.125">	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2648)</sentence>
			<sentence id="2.126">	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:2086)</sentence>
			<sentence id="2.127">	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2371)</sentence>
			<sentence id="2.128">	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2289)</sentence>
			<sentence id="2.129">	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2274)</sentence>
			<sentence id="2.130">	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)</sentence>
			<sentence id="2.131">	at org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate.executeAndExtract(IdentityGenerator.java:94)</sentence>
			<sentence id="2.132">	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:57)</sentence>
			<sentence id="2.133">	... 106 more</sentence>
			<sentence id="2.134">{code}</sentence>
			<sentence id="2.135">I believe it is due to TRUNK-3069. What happens is that dao.saveConcept(concept) is called, but not flushed and ConceptName does not have an id assigned. Then updateConceptIndex(concept) is called and it creates a new ConceptWord for the new ConceptName. For some reason when the new ConceptWord is saved, it's flushed to the db.</sentence>
		</paragraph>
		<paragraph id="3">
			<sentence id="3.1">The exception can't be reproduced in unit tests.</sentence>
			<sentence id="3.2">org.openmrs.api.ConceptServiceTest.saveConcept_shouldReuseConceptNameTagsThatAlreadyExistInTheDatabase() does the same thing, but doesn't fail.</sentence>
			<sentence id="3.3">It fails every time in the webapp.</sentence>
		</paragraph>
		<paragraph id="4">
			<sentence id="4.1">I don't know why the flush happens only for ConceptWord, but not for ConceptName and why it's only when run in the webapp.</sentence>
		</paragraph>
		<paragraph id="5">
			<sentence id="5.1">The straightforward solution is to flush session before updateConceptIndex(concept), but it'd be good to understand what is the cause of that flush.</sentence>
			<sentence id="5.2">I thought it might be connected to the fact the id needs to be generated for ConceptWord and that's why the db is hit, but why ConceptName is not treated in the same way?</sentence>
			<sentence id="5.3">Maybe, it's because we don't save ConceptName explicitly rather through Concept.</sentence>
		</paragraph>
		<paragraph id="6">
			<sentence id="6.1">The quick workaround is to:
# make dao.saveConcept(concept) transactional or 
# add Context.flushSession() after dao.saveConcept(concept) or 
# add Context.flushSession() in the updateConceptIndex(concept) before trying to save ConceptWord for a new ConceptName.</sentence>
		</paragraph>
		<paragraph id="7">
			<sentence id="7.1">I would go with the first approach.</sentence>
			<sentence id="7.2">I think that it would be a good reason why we should actually have a transactional DAO so that when you call dao.saveConcept(concept) it's flushed and when you query dao.getConcepts(...) in the next line, the change will be reflected in results.</sentence>
		</paragraph>
	</description>
</bug>
