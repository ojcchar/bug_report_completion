<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>TRUNK-3581</id>
	<title>Cannot save concept source on postgres database</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">When trying to save the implementation id or another concept source, this error appears:</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">{code}</sentence>
			<sentence id="2.2">ERROR - JDBCExceptionReporter.logExceptions(234) |2012-06-27 09:01:31,580| ERROR: relation "concept_source_concept_source_id_seq" does not exist</sentence>
			<sentence id="2.3">ERROR - LoggingAdvice.invoke(126) |2012-06-27 09:01:31,587| An error occurred while executing this method. Error message: could not get next sequenc</sentence>
			<sentence id="2.4">value</sentence>
			<sentence id="2.5">org.hibernate.exception.SQLGrammarException: could not get next sequence value</sentence>
			<sentence id="2.6"> at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:92)</sentence>
			<sentence id="2.7"> at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)</sentence>
			<sentence id="2.8"> at org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:132)</sentence>
			<sentence id="2.9"> at org.hibernate.id.SequenceGenerator.generate(SequenceGenerator.java:105)</sentence>
			<sentence id="2.10"> at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:121)</sentence>
			<sentence id="2.11"> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:210)</sentence>
			<sentence id="2.12"> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:195)</sentence>
			<sentence id="2.13"> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:117)</sentence>
			<sentence id="2.14"> at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:93)</sentence>
			<sentence id="2.15"> at org.hibernate.impl.SessionImpl.fireSaveOrUpdate(SessionImpl.java:685)</sentence>
			<sentence id="2.16"> at org.hibernate.impl.SessionImpl.saveOrUpdate(SessionImpl.java:677)</sentence>
			<sentence id="2.17"> at org.hibernate.impl.SessionImpl.saveOrUpdate(SessionImpl.java:673)</sentence>
			<sentence id="2.18"> at org.openmrs.api.db.hibernate.HibernateConceptDAO.saveConceptSource(HibernateConceptDAO.java:1013)</sentence>
			<sentence id="2.19"> at org.openmrs.api.impl.ConceptServiceImpl.saveConceptSource(ConceptServiceImpl.java:1369)</sentence>
			<sentence id="2.20"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.21"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.22"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.23"> at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.24"> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.25"> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.26"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.27"> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.28"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.29"> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.30"> at $Proxy33.saveConceptSource(Unknown Source)</sentence>
			<sentence id="2.31"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.32"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.33"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.34"> at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.35"> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.36"> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.37"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.38"> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.39"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.40"> at org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:122)</sentence>
			<sentence id="2.41"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.42"> at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)</sentence>
			<sentence id="2.43"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.44"> at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)</sentence>
			<sentence id="2.45"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.46"> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.47"> at $Proxy34.saveConceptSource(Unknown Source)</sentence>
			<sentence id="2.48"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.49"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.50"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.51"> at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.52"> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.53"> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.54"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.55"> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.56"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.57"> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.58"> at $Proxy34.saveConceptSource(Unknown Source)</sentence>
			<sentence id="2.59"> at org.openmrs.api.impl.AdministrationServiceImpl.setImplementationId(AdministrationServiceImpl.java:897)</sentence>
			<sentence id="2.60"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.61"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.62"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.63"> at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.64"> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.65"> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.66"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.67"> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.68"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.69"> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.70"> at $Proxy27.setImplementationId(Unknown Source)</sentence>
			<sentence id="2.71"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.72"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.73"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.74"> at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.75"> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.76"> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.77"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.78"> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.79"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.80"> at org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:122)</sentence>
			<sentence id="2.81"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.82"> at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)</sentence>
			<sentence id="2.83"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.84"> at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:50)</sentence>
			<sentence id="2.85"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.86"> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.87"> at $Proxy47.setImplementationId(Unknown Source)</sentence>
			<sentence id="2.88"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
			<sentence id="2.89"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
			<sentence id="2.90"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
			<sentence id="2.91"> at java.lang.reflect.Method.invoke(Method.java:597)</sentence>
			<sentence id="2.92"> at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)</sentence>
			<sentence id="2.93"> at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
			<sentence id="2.94"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
			<sentence id="2.95"> at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)</sentence>
			<sentence id="2.96"> at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
			<sentence id="2.97"> at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)</sentence>
			<sentence id="2.98"> at $Proxy47.setImplementationId(Unknown Source)</sentence>
			<sentence id="2.99"> at org.openmrs.web.filter.initialization.InitializationFilter$InitializationCompletion$1.run(InitializationFilter.java:1607)</sentence>
			<sentence id="2.100"> at java.lang.Thread.run(Thread.java:619)</sentence>
			<sentence id="2.101">Caused by: org.postgresql.util.PSQLException: ERROR: relation "concept_source_concept_source_id_seq" does not exist</sentence>
			<sentence id="2.102"> at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2102)</sentence>
			<sentence id="2.103"> at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1835)</sentence>
			<sentence id="2.104"> at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)</sentence>
			<sentence id="2.105"> at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)</sentence>
			<sentence id="2.106"> at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)</sentence>
			<sentence id="2.107"> at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:273)</sentence>
			<sentence id="2.108"> at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)</sentence>
			<sentence id="2.109"> at org.hibernate.id.SequenceGenerator.generateHolder(SequenceGenerator.java:112)</sentence>
			<sentence id="2.110"> ... 92 more</sentence>
			<sentence id="2.111">{code}</sentence>
		</paragraph>
	</description>
</bug>
