<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>15997</id>
	<title>Docker volumes does not track unused volumes created through plugins</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">This is a placeholder issue for discussing improvements to the way docker volumes keeps track of (named) volumes created through plugins.</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">This issue came up in a discussion on IRC (logs can be found [here on botbot.me](https://botbot.me/freenode/docker-dev/2015-09-01/?msg=48716043&amp;page=4))</sentence>
		</paragraph>
		<paragraph id="3">
			<sentence id="3.1">I'm writing down some thoughts; there may be technical inaccuracies (please comment and I'll correct them :smile:)</sentence>
		</paragraph>
		<paragraph id="4">
			<sentence id="4.1">### Description</sentence>
		</paragraph>
		<paragraph id="5">
			<sentence id="5.1">Docker volume can keep track of volumes in a number of ways;</sentence>
		</paragraph>
		<paragraph id="6">
			<sentence id="6.1">- Volumes created with the 'local' driver are stored inside `/var/lib/docker`, and can be resolved through the filesystem</sentence>
			<sentence id="6.2">- Volumes created through the volumes API (both 'local' and 'plugin') are kept in-memory</sentence>
			<sentence id="6.3">- Volumes that are currently used by containers can be resolved through the information stored in the container's JSON</sentence>
		</paragraph>
		<paragraph id="7">
			<sentence id="7.1">Apart from the above, Docker does not persist any information about volumes.</sentence>
			<sentence id="7.2">This means that, after a daemon restart, information about *unused* volumes, created through plugins is no longer available.</sentence>
			<sentence id="7.3">The volumes are still "there", but Docker does not have any notion of their existence.</sentence>
		</paragraph>
		<paragraph id="8">
			<sentence id="8.1">### Problem</sentence>
			<sentence id="8.2">Not keeping track of this information can lead to a number of problems.</sentence>
			<sentence id="8.3">Some examples;</sentence>
		</paragraph>
		<paragraph id="10">
			<sentence id="10.1">```bash
docker volume create --name foobar
docker volume create --driver somedriver --name foobar2
docker volume create --driver somedriver --name foobar3</sentence>
		</paragraph>
		<paragraph id="11">
			<sentence id="11.1">docker run -d -v foobar3:/foo nginx</sentence>
		</paragraph>
		<paragraph id="12">
			<sentence id="12.1">docker volume</sentence>
		</paragraph>
		<paragraph id="13">
			<sentence id="13.1">DRIVER VOLUME NAME
local foobar
somedriver foobar2
somedriver foobar3</sentence>
		</paragraph>
		<paragraph id="14">
			<sentence id="14.1">restart docker</sentence>
		</paragraph>
		<paragraph id="15">
			<sentence id="15.1">docker volume</sentence>
		</paragraph>
		<paragraph id="16">
			<sentence id="16.1">DRIVER VOLUME NAME
local foobar
somedriver foobar3</sentence>
		</paragraph>
		<paragraph id="17">
			<sentence id="17.1">```</sentence>
		</paragraph>
		<paragraph id="18">
			<sentence id="18.1">After restarting the daemon, volume `foobar2` is no longer visible.</sentence>
			<sentence id="18.2">(note: foobar3 actually becomes visible as a "local" volume, which is caused by https://github.com/docker/docker/issues/15994)</sentence>
		</paragraph>
		<paragraph id="19">
			<sentence id="19.1">Trying to use `foobar2` for a container (but omitting the `--volume-driver`),
will now create a *new* volume, using the default ('local') driver;</sentence>
		</paragraph>
		<paragraph id="20">
			<sentence id="20.1">```bash
docker run -d -v foobar2:/foo nginx</sentence>
		</paragraph>
		<paragraph id="21">
			<sentence id="21.1">DRIVER VOLUME NAME
local foobar
local foobar2
somedriver foobar3
```</sentence>
		</paragraph>
		<paragraph id="22">
			<sentence id="22.1">### Possible solutions</sentence>
		</paragraph>
		<paragraph id="23">
			<sentence id="23.1">#### 1 Persist information about *all* volumes in `/var/lib/docker/volume/&lt;volume-name&gt;`.</sentence>
		</paragraph>
		<paragraph id="24">
			<sentence id="24.1">For volumes created through plug-ins, this could simply mean to keep a JSON file, containing the minimum required information, probably only "driver" (possibly "Source") is needed at this moment;</sentence>
		</paragraph>
		<paragraph id="25">
			<sentence id="25.1">```JSON
{
 "Driver": "somedriver",
 "Source": "/some/path/foobar3/_data",
}
```</sentence>
		</paragraph>
		<paragraph id="26">
			<sentence id="26.1">*advantages:*</sentence>
		</paragraph>
		<paragraph id="27">
			<sentence id="27.1">- Simple solution</sentence>
			<sentence id="27.2">- Consistent with the 'local' driver</sentence>
			<sentence id="27.3">- Guarantees "globally" unique volume names (`/var/lib/docker/volume/&lt;volume-name&gt;`)</sentence>
		</paragraph>
		<paragraph id="28">
			<sentence id="28.1">*disadvantages:*</sentence>
		</paragraph>
		<paragraph id="29">
			<sentence id="29.1">- Who is "responsible" for keeping track of volumes; the *driver* or *docker*?</sentence>
			<sentence id="29.2">- Plugin's may have other ways to create / destroy volumes; information can get out of sync.</sentence>
		</paragraph>
		<paragraph id="30">
			<sentence id="30.1">#### 2 Extend the volume-plugins interface</sentence>
		</paragraph>
		<paragraph id="31">
			<sentence id="31.1">Extend the volume-plugins interface to have plugins *return* a list of volumes they have present.</sentence>
		</paragraph>
		<paragraph id="32">
			<sentence id="32.1">*advantages:*</sentence>
		</paragraph>
		<paragraph id="33">
			<sentence id="33.1">- The plugin is responsibility for providing and maintaining the volume information</sentence>
			<sentence id="33.2">- Information doesn't get out of sync (if a plugin creates / destroys a volume outside of Docker)</sentence>
		</paragraph>
		<paragraph id="34">
			<sentence id="34.1">*disadvantages:*</sentence>
		</paragraph>
		<paragraph id="35">
			<sentence id="35.1">- More complicated / moving parts</sentence>
			<sentence id="35.2">- No guarantee that volume-names are "globally" unique</sentence>
		</paragraph>
		<paragraph id="36">
			<sentence id="36.1">#### 3 Combination of the above</sentence>
		</paragraph>
		<paragraph id="37">
			<sentence id="37.1">Store information about volumes in `/var/lib/docker`, and synchronize this information
by requesting the actual list of volumes from the plugins.</sentence>
		</paragraph>
		<paragraph id="38">
		</paragraph>
	</description>
</bug>
