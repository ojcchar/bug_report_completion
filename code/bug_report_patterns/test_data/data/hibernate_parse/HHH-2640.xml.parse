<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>HHH-2640</id>
	<title>Clob management and deadlock</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">Mapping documents:</sentence>
			<sentence id="1.2">&lt;?xml version="1.0"?&gt;</sentence>
			<sentence id="1.3">&lt;!</sentence>
			<sentence id="1.4">DOCTYPE hibernate-mapping PUBLIC</sentence>
			<sentence id="1.5">'-//Hibernate/Hibernate Mapping DTD 3.0//EN'</sentence>
			<sentence id="1.6">'http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd'&gt;</sentence>
			<sentence id="1.7">&lt;hibernate-mapping package="com.toluna.samuel.hibernate.emailtemplate"&gt;</sentence>
			<sentence id="1.8">&lt;class name="EmailTemplate" table="EmailTemplate"&gt;</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">&lt;id name="id" type="long"&gt;
&lt;column name="template_id" not-null="true"/&gt;
&lt;generator class="native"/&gt;
</id></sentence>
		</paragraph>
		<paragraph id="3">
			<sentence id="3.1">&lt;property name="name"&gt;
&lt;column name="email_name" not-null="false"/&gt;
&lt;/property&gt;</sentence>
		</paragraph>
		<paragraph id="4">
			<sentence id="4.1">&lt;property name="htmlTextClob" type="clob"&gt;
&lt;column name="html_Text" not-null="false"/&gt;
&lt;/property&gt;</sentence>
		</paragraph>
		<paragraph id="5">
			<sentence id="5.1">&lt;property name="plainTextClob" type="clob"&gt;
&lt;column name="plain_Text" not-null="false"/&gt;
&lt;/property&gt;
&lt;/class&gt;
&lt;/hibernate-mapping&gt;</sentence>
		</paragraph>
		<paragraph id="6">
			<sentence id="6.1">Extract also of my Java bean:
ublic class EmailTemplate {</sentence>
		</paragraph>
		<paragraph id="7">
			<sentence id="7.1">private long id;
private String name;
private String plainText = " ";
private String htmlText = " ";
private Clob plainTextClob;
private Clob htmlTextClob;
...</sentence>
		</paragraph>
		<paragraph id="8">
			<sentence id="8.1">Code of the test case:
Session ss = HibernateUtil.getSessionFactory().</sentence>
			<sentence id="8.2">getCurrentSession();
//S_LOGGER.</sentence>
			<sentence id="8.3">debug("Number of current Hibernate sessions: "+ HibernateUtil.getSessionFactory().</sentence>
			<sentence id="8.4">getStatistics().</sentence>
			<sentence id="8.5">getSessionOpenCount());</sentence>
		</paragraph>
		<paragraph id="9">
			<sentence id="9.1">ss.getTransaction().</sentence>
			<sentence id="9.2">begin();</sentence>
		</paragraph>
		<paragraph id="10">
			<sentence id="10.1">EmailTemplate et = (EmailTemplate) ss.load(EmailTemplate.class, new Long("299941536982302"));
S_LOGGER.</sentence>
			<sentence id="10.2">debug(et.getName());</sentence>
		</paragraph>
		<paragraph id="11">
			<sentence id="11.1">Thread.sleep(5000);
S_LOGGER.</sentence>
			<sentence id="11.2">debug("BEFORE FLUSH");
ss.flush();
S_LOGGER.</sentence>
			<sentence id="11.3">debug("AFTER FLUSH");</sentence>
		</paragraph>
		<paragraph id="12">
			<sentence id="12.1">ss.getTransaction().</sentence>
			<sentence id="12.2">commit();</sentence>
		</paragraph>
		<paragraph id="13">
			<sentence id="13.1">The generated SQL :</sentence>
		</paragraph>
		<paragraph id="14">
			<sentence id="14.1">The load statement is always generated:</sentence>
			<sentence id="14.2">/* load com.toluna.samuel.hibernate.emailtemplate.EmailTemplate short/ select</sentence>
			<sentence id="14.3">emailtempl0_.</sentence>
			<sentence id="14.4">template_id as template1_0_0_,</sentence>
			<sentence id="14.5">emailtempl0_.</sentence>
			<sentence id="14.6">email_name as email2_0_0_,</sentence>
			<sentence id="14.7">emailtempl0_.</sentence>
			<sentence id="14.8">html_Text as html3_0_0_,</sentence>
			<sentence id="14.9">emailtempl0_.</sentence>
			<sentence id="14.10">plain_Text as plain4_0_0_</sentence>
			<sentence id="14.11">from</sentence>
			<sentence id="14.12">EmailTemplate emailtempl0_</sentence>
			<sentence id="14.13">where</sentence>
			<sentence id="14.14">emailtempl0_.</sentence>
			<sentence id="14.15">template_id=?</sentence>
			<sentence id="14.16">....</sentence>
		</paragraph>
		<paragraph id="15">
			<sentence id="15.1">Depending on the implementation of the getter, the following update statement is generated:</sentence>
		</paragraph>
		<paragraph id="16">
			<sentence id="16.1">/* update</sentence>
			<sentence id="16.2">com.toluna.samuel.hibernate.emailtemplate.EmailTemplate short/ update</sentence>
			<sentence id="16.3">EmailTemplate</sentence>
			<sentence id="16.4">set</sentence>
			<sentence id="16.5">email_name=?</sentence>
			<sentence id="16.6">,</sentence>
			<sentence id="16.7">html_Text=?</sentence>
			<sentence id="16.8">,</sentence>
			<sentence id="16.9">plain_Text=?</sentence>
			<sentence id="16.10">where</sentence>
			<sentence id="16.11">template_id=?</sentence>
		</paragraph>
		<paragraph id="17">
			<sentence id="17.1">Here is the getter:</sentence>
		</paragraph>
		<paragraph id="18">
			<sentence id="18.1">Clob getHtmlTextClob() {</sentence>
			<sentence id="18.2">//1</sentence>
			<sentence id="18.3">//return Hibernate.createClob(htmlText !</sentence>
			<sentence id="18.4">= null ?</sentence>
			<sentence id="18.5">htmlText : " ");</sentence>
			<sentence id="18.6">//2</sentence>
			<sentence id="18.7">return htmlTextClob;</sentence>
			<sentence id="18.8">}</sentence>
			<sentence id="18.9">With 1- the update statement is generated</sentence>
			<sentence id="18.10">With 2- the update statement is not generated</sentence>
			<sentence id="18.11">Why?</sentence>
		</paragraph>
		<paragraph id="19">
			<sentence id="19.1">Extract of the setter:</sentence>
		</paragraph>
		<paragraph id="20">
			<sentence id="20.1">void setHtmlTextClob(Clob htmlTextClob) {
this.htmlTextClob = htmlTextClob;
try {
if (htmlTextClob !</sentence>
			<sentence id="20.2">= null) {
htmlText = HibernateUtil.getStringFromClob(htmlTextClob);
//htmlText = "samuel";
} else
htmlText = "";</sentence>
		</paragraph>
		<paragraph id="21">
			<sentence id="21.1">} catch (SQLException e) {
throw new RuntimeException(e);
} catch (IOException e) {
throw new RuntimeException(e);
}
}</sentence>
		</paragraph>
		<paragraph id="22">
			<sentence id="22.1">I have also another more critical issue which seems tied to the previous:
If I write the following piece of test code instead of the one shown above:</sentence>
		</paragraph>
		<paragraph id="23">
			<sentence id="23.1">Session ss = HibernateUtil.getSessionFactory().</sentence>
			<sentence id="23.2">openSession();
//S_LOGGER.</sentence>
			<sentence id="23.3">debug("Number of current Hibernate sessions: "+ HibernateUtil.getSessionFactory().</sentence>
			<sentence id="23.4">getStatistics().</sentence>
			<sentence id="23.5">getSessionOpenCount());</sentence>
		</paragraph>
		<paragraph id="24">
			<sentence id="24.1">EmailTemplate et = (EmailTemplate) ss.load(EmailTemplate.class, new Long("299941536982302"));
S_LOGGER.</sentence>
			<sentence id="24.2">debug(et.getName());</sentence>
		</paragraph>
		<paragraph id="25">
			<sentence id="25.1">Thread.sleep(5000);
S_LOGGER.</sentence>
			<sentence id="25.2">debug("BEFORE FLUSH");
ss.flush();
S_LOGGER.</sentence>
			<sentence id="25.3">debug("AFTER FLUSH");</sentence>
		</paragraph>
		<paragraph id="26">
			<sentence id="26.1">As you can see in this piece of code i do not manage transactions explicitly and in that case my 2 java threads generated update statements which never ended: there was a deadlock on the DB.</sentence>
		</paragraph>
		<paragraph id="27">
			<sentence id="27.1">During the last test, If I still did not manage transactions explicitly but I modified the getter like that:
Clob getHtmlTextClob() {
return htmlTextClob;
}
Then neither update statements nor deadlock were generated.</sentence>
			<sentence id="27.2">I wrote this piece of test code to reproduce deadlock I was facing on my Jonas server.</sentence>
		</paragraph>
		<paragraph id="28">
			<sentence id="28.1">Could you please help me to understand this behaviour?</sentence>
		</paragraph>
		<paragraph id="29">
			<sentence id="29.1">Here is anextract of my hibernate.cfg.xml:</sentence>
		</paragraph>
		<paragraph id="30">
			<sentence id="30.1">&lt;property name="connection.url"&gt;jdbc:oracle:thin:@192.168.2.7:1521:tlorcl1&lt;/property&gt;
&lt;property name="connection.username"&gt;samuel&lt;/property&gt;
&lt;property name="connection.password"&gt;toluna&lt;/property&gt;
&lt;property name="connection.driver_class"&gt;oracle.jdbc.driver.OracleDriver&lt;/property&gt;
&lt;property name="dialect"&gt;org.hibernate.dialect.Oracle9Dialect&lt;/property&gt;
&lt;property name="hibernate.show_sql"&gt;true&lt;/property&gt;
&lt;property name="hibernate.format_sql"&gt;true&lt;/property&gt;
&lt;property name="hibernate.use_sql_comments"&gt;true&lt;/property&gt;
&lt;property name="myeclipse.connection.profile"&gt;QA&lt;/property&gt;
&lt;property name="current_session_context_class"&gt;thread&lt;/property&gt;</sentence>
		</paragraph>
		<paragraph id="31">
			<sentence id="31.1">Thanks in advance
Regards
Samuel</sentence>
		</paragraph>
	</description>
</bug>
