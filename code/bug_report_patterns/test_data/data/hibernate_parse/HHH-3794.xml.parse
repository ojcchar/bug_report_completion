<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>HHH-3794</id>
	<title>Issue when method return type is Interface</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">I came across this problem while using Hibernate-envers-3.4-SNAPSHOT with Hibernate-3.3.</sentence>
			<sentence id="1.2">GA or Hibernate-3.4-SNAPSHOT.</sentence>
			<sentence id="1.3">Below is my hbm.xml file:</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">Code:</sentence>
		</paragraph>
		<paragraph id="3">
			<sentence id="3.1">&lt;?xml version="1.0"?&gt;</sentence>
			<sentence id="3.2">&lt;!</sentence>
			<sentence id="3.3">DOCTYPE hibernate-mapping PUBLIC</sentence>
			<sentence id="3.4">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</sentence>
			<sentence id="3.5">"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"&gt;</sentence>
			<sentence id="3.6">&lt;hibernate-mapping default-lazy="false" package="com.xyz.fwk.persistence.hibernate.impl.bug.demo.test"&gt;</sentence>
			<sentence id="3.7">&lt;class name="Trade" table="trade" batch-size="64" lazy="false"&gt;</sentence>
			<sentence id="3.8">&lt;id name="id" type="int" access="field"&gt;</sentence>
			<sentence id="3.9">&lt;generator class="native"&gt;&lt;/generator&gt;</sentence>
			<sentence id="3.10">&lt;/id&gt;</sentence>
			<sentence id="3.11">&lt;component name="tradeId" class="TypeIdentifier"&gt;</sentence>
			<sentence id="3.12">&lt;property name="id" column="TRADE_ID"/&gt;</sentence>
			<sentence id="3.13">&lt;property name="type" column="TRADE_ID_TYPE"/&gt;</sentence>
			<sentence id="3.14">&lt;/component&gt;</sentence>
			<sentence id="3.15">&lt;/class&gt;</sentence>
			<sentence id="3.16">&lt;/hibernate-mapping&gt;</sentence>
		</paragraph>
		<paragraph id="4">
			<sentence id="4.1">My class definition for Trade is:</sentence>
		</paragraph>
		<paragraph id="5">
			<sentence id="5.1">Code:</sentence>
		</paragraph>
		<paragraph id="6">
			<sentence id="6.1">@Audited (this doesn't matter)
public class Trade implements Serializable {
	protected int id;
	protected ITypeIdentifier tradeId ; 
	public Trade() { }
	public ITypeIdentifier getTradeId() { return tradeId; }
	public void setTradeId(ITypeIdentifier i) { tradeId =i ; }
}</sentence>
		</paragraph>
		<paragraph id="7">
			<sentence id="7.1">Since the getTradeId returns and ITypeIdentifier which is an interface, (hence has no super class) the method addPropertiesFromClass(XClass clazz) in org.hibernate.envers.configuration.metadata.reader.AuditedPropertiesReader</sentence>
		</paragraph>
		<paragraph id="8">
			<sentence id="8.1">when trying to analyze ITypeIdentifier fails because the interface has no super class !</sentence>
		</paragraph>
		<paragraph id="9">
			<sentence id="9.1">Code:</sentence>
		</paragraph>
		<paragraph id="10">
			<sentence id="10.1">private void addPropertiesFromClass(XClass clazz) {
		XClass superclazz = clazz.getSuperclass();</sentence>
		</paragraph>
		<paragraph id="11">
			<sentence id="11.1">(super class will be null for an interface return type )</sentence>
		</paragraph>
		<paragraph id="12">
			<sentence id="12.1">if (!</sentence>
			<sentence id="12.2">"java.lang.Object".</sentence>
			<sentence id="12.3">equals(superclazz.getName())) {
			addPropertiesFromClass(superclazz);
		}</sentence>
		</paragraph>
		<paragraph id="13">
			<sentence id="13.1">addFromProperties(clazz.getDeclaredProperties("field"), "field", fieldAccessedPersistentProperties);
		addFromProperties(clazz.getDeclaredProperties("property"), "property", propertyAccessedPersistentProperties);
	}</sentence>
		</paragraph>
	</description>
</bug>
