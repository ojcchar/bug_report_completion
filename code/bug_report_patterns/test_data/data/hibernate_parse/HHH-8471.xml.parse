<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
	<id>HHH-8471</id>
	<title>Named Query with JOIN FETCH missing objects</title>
	<description>
		<paragraph id="1">
			<sentence id="1.1">The following named query "findAllRealWithVehicle" fails to fetch all RealRun objects and returns only some.</sentence>
		</paragraph>
		<paragraph id="2">
			<sentence id="2.1">RealRun.java:
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;</sentence>
		</paragraph>
		<paragraph id="3">
			<sentence id="3.1">import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;</sentence>
		</paragraph>
		<paragraph id="4">
			<sentence id="4.1">@Entity()
@DiscriminatorValue(value="0")
@NamedQueries(value = {
        @NamedQuery(name = "findAllRealWithVehicle", query = "SELECT OBJECT(r) "
                + "FROM RealRun r JOIN FETCH r.physicalVehicle "
                + "WHERE r.deletionTimestamp IS NULL ORDER BY r.publicId") })
@Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL)
public class RealRun extends Run {
}</sentence>
		</paragraph>
		<paragraph id="5">
			<sentence id="5.1">Run.java:
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;</sentence>
		</paragraph>
		<paragraph id="6">
			<sentence id="6.1">import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;</sentence>
		</paragraph>
		<paragraph id="7">
			<sentence id="7.1">@Entity()
@Table(name="k3_vehicle")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "virtual_vehicle",
        discriminatorType = DiscriminatorType.INTEGER, columnDefinition="bit")
@Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL)
public abstract class Run {
    private String publicId;
    private Date deletionTimestamp;
    private PhysicalVehicle physicalVehicle;</sentence>
		</paragraph>
		<paragraph id="8">
			<sentence id="8.1">/**</sentence>
			<sentence id="8.2">* Time of deletion.</sentence>
			<sentence id="8.3">*/</sentence>
			<sentence id="8.4">@Temporal(TemporalType.TIMESTAMP)</sentence>
			<sentence id="8.5">@Column(name = "deletion_timestamp")</sentence>
			<sentence id="8.6">public Date getDeletionTimestamp() {</sentence>
			<sentence id="8.7">return deletionTimestamp;</sentence>
			<sentence id="8.8">}</sentence>
		</paragraph>
		<paragraph id="9">
			<sentence id="9.1">public void setDeletionTimestamp(Date deletionTimestamp) {
        this.deletionTimestamp = deletionTimestamp;
    }</sentence>
		</paragraph>
		<paragraph id="10">
			<sentence id="10.1">@Override
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="physical_vehicle_fk")
    @Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL)
    public PhysicalVehicle getPhysicalVehicle() {
        return physicalVehicle;
    }</sentence>
		</paragraph>
		<paragraph id="11">
			<sentence id="11.1">public void setPhysicalVehicle(PhysicalVehicle physicalVehicle) {
        this.physicalVehicle = physicalVehicle;
    }</sentence>
		</paragraph>
		<paragraph id="12">
			<sentence id="12.1">@Override
    @Column(name = "publicId")
    public String getPublicId() {
        return publicId;
    }</sentence>
		</paragraph>
		<paragraph id="13">
			<sentence id="13.1">public void setPublicId(String publicId) {
        this.publicId = publicId;
    }</sentence>
		</paragraph>
		<paragraph id="14">
			<sentence id="14.1">}</sentence>
		</paragraph>
		<paragraph id="15">
			<sentence id="15.1">PhysicalVehicle.java:</sentence>
		</paragraph>
		<paragraph id="16">
			<sentence id="16.1">import javax.persistence.Entity;
import javax.persistence.Table;</sentence>
		</paragraph>
		<paragraph id="17">
			<sentence id="17.1">import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;</sentence>
		</paragraph>
		<paragraph id="18">
			<sentence id="18.1">@Entity
@Table(name="k3_physical_vehicle")
@Cache(usage=CacheConcurrencyStrategy.TRANSACTIONAL)
public class PhysicalVehicle {
}</sentence>
		</paragraph>
	</description>
</bug>
