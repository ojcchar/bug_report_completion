TM/NN (/-LRB- 25.01.2001/CD 11:51:54/CD )/-RRB- ITPJUI/NNP 71.50/CD 

(ROOT (NP (NP (NN TM)) (PRN (-LRB- -LRB-) (NP (QP (CD 25.01.2001) (CD 11:51:54))) (-RRB- -RRB-)) (NP (NNP ITPJUI) (CD 71.50))))

root(ROOT-0, TM-1)
number(11:51:54-4, 25.01.2001-3)
dep(TM-1, 11:51:54-4)
dep(TM-1, ITPJUI-6)
num(ITPJUI-6, 71.50-7)

1/CD Create/VB a/DT project/NN 

(ROOT (FRAG (NP (CD 1)) (VP (VB Create) (NP (DT a) (NN project)))))

root(ROOT-0, 1-1)
dep(1-1, Create-2)
det(project-4, a-3)
dobj(Create-2, project-4)

2/CD Open/VB the/DT "/`` create/VB java/NN project/NN "/'' wizard/NN ./. 

(ROOT (S (NP (CD 2)) (VP (VB Open) (S (NP (DT the) (`` ``) (S (VP (VB create) (NP (NN java) (NN project)))) ('' '') (NN wizard)))) (. .)))

root(ROOT-0, Open-2)
nsubj(Open-2, 2-1)
det(wizard-9, the-3)
dep(wizard-9, create-5)
nn(project-7, java-6)
dobj(create-5, project-7)
dep(Open-2, wizard-9)

3/CD observe/VBP :/: there/EX is/VBZ a/DT list/NN letting/VBG you/PRP select/VB "/`` referenced/VBN projects/NNS "/'' ./. 

(ROOT (S (S (NP (CD 3)) (VP (VBP observe))) (: :) (S (NP (EX there)) (VP (VBZ is) (NP (DT a) (NN list) (S (VP (VBG letting) (NP (PRP you)) (VP (VB select) (`` ``) (VP (VBN referenced) (NP (NNS projects) ('' ''))))))))) (. .)))

root(ROOT-0, observe-2)
nsubj(observe-2, 3-1)
expl(is-5, there-4)
parataxis(observe-2, is-5)
det(list-7, a-6)
nsubj(is-5, list-7)
dep(list-7, letting-8)
dobj(letting-8, you-9)
dep(letting-8, select-10)
dep(select-10, referenced-12)
dobj(referenced-12, projects-13)

4/CD goto/NN the/DT "/`` Projects/NNPS "/'' tab/NN of/IN the/DT Java/NNP Settings/NNPS page/NN ./. 

(ROOT (NP (NP (CD 4) (NN goto)) (NP (NP (DT the) (`` ``) (NP (NNPS Projects)) ('' '') (NN tab)) (PP (IN of) (NP (DT the) (NNP Java) (NNPS Settings) (NN page)))) (. .)))

root(ROOT-0, goto-2)
num(goto-2, 4-1)
det(tab-7, the-3)
nn(tab-7, Projects-5)
dep(goto-2, tab-7)
det(page-12, the-9)
nn(page-12, Java-10)
nn(page-12, Settings-11)
prep_of(tab-7, page-12)

5/CD observe/VBP :/: once/RB again/RB you/PRP can/MD set/VB "/`` referenced/VBN projects/NNS "/'' ./. 

(ROOT (S (S (NP (CD 5)) (VP (VBP observe))) (: :) (S (ADVP (RB once) (RB again)) (NP (PRP you)) (VP (MD can) (VP (VB set) (`` ``) (S (VP (VBN referenced) (NP (NNS projects)))))) ('' '')) (. .)))

root(ROOT-0, observe-2)
nsubj(observe-2, 5-1)
advmod(again-5, once-4)
advmod(set-8, again-5)
nsubj(set-8, you-6)
aux(set-8, can-7)
parataxis(observe-2, set-8)
dep(set-8, referenced-10)
dobj(referenced-10, projects-11)

Even/RB if/IN there/EX may/MD be/VB technical/JJ reasons/NNS for/IN this/DT ,/, it/PRP is/VBZ quite/RB confusing/JJ ./. 

(ROOT (S (SBAR (RB Even) (IN if) (S (NP (EX there)) (VP (MD may) (VP (VB be) (NP (NP (JJ technical) (NNS reasons)) (PP (IN for) (NP (DT this)))))))) (, ,) (NP (PRP it)) (VP (VBZ is) (ADJP (RB quite) (JJ confusing))) (. .)))

root(ROOT-0, is-12)
advmod(reasons-7, Even-1)
mark(reasons-7, if-2)
expl(reasons-7, there-3)
aux(reasons-7, may-4)
cop(reasons-7, be-5)
amod(reasons-7, technical-6)
advcl(is-12, reasons-7)
prep_for(reasons-7, this-9)
nsubj(is-12, it-11)
advmod(confusing-14, quite-13)
acomp(is-12, confusing-14)

We/PRP should/MD use/VB the/DT core/NN project/NN reference/NN mechanism/NN if/IN possible/JJ ./. 

(ROOT (S (NP (PRP We)) (VP (MD should) (VP (VB use) (NP (DT the) (NN core) (NN project) (NN reference) (NN mechanism)) (SBAR (IN if) (FRAG (ADJP (JJ possible)))))) (. .)))

root(ROOT-0, use-3)
nsubj(use-3, We-1)
aux(use-3, should-2)
det(mechanism-8, the-4)
nn(mechanism-8, core-5)
nn(mechanism-8, project-6)
nn(mechanism-8, reference-7)
dobj(use-3, mechanism-8)
mark(possible-10, if-9)
advcl(use-3, possible-10)

EG/NN (/-LRB- 1/29/01/CD 2:36:17/CD PM/NN )/-RRB- will/MD be/VB revisited/VBN during/IN the/DT class/NN path/NN rework/VBP 

(ROOT (S (NP (NP (NN EG)) (SBAR (S (-LRB- -LRB-) (NP (QP (CD 1/29/01) (CD 2:36:17)) (NN PM)) (-RRB- -RRB-) (VP (MD will) (VP (VB be) (VP (VBN revisited) (PP (IN during) (NP (DT the) (NN class) (NN path))))))))) (VP (VBP rework))))

root(ROOT-0, rework-14)
nsubj(rework-14, EG-1)
number(2:36:17-4, 1/29/01-3)
num(PM-5, 2:36:17-4)
nsubjpass(revisited-9, PM-5)
aux(revisited-9, will-7)
auxpass(revisited-9, be-8)
rcmod(EG-1, revisited-9)
det(path-13, the-11)
nn(path-13, class-12)
prep_during(revisited-9, path-13)

