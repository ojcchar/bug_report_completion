This/DT problem/NN is/VBZ only/RB reproducible/JJ on/IN a/DT particular/JJ computer/NN ;/: I/PRP assume/VBP it/PRP is/VBZ a/DT 

(ROOT (S (S (NP (DT This) (NN problem)) (VP (VBZ is) (ADJP (RB only) (JJ reproducible) (PP (IN on) (NP (DT a) (JJ particular) (NN computer)))))) (: ;) (S (NP (PRP I)) (VP (VBP assume) (SBAR (S (NP (PRP it)) (VP (VBZ is) (NP (DT a)))))))))

root(ROOT-0, reproducible-5)
det(problem-2, This-1)
nsubj(reproducible-5, problem-2)
cop(reproducible-5, is-3)
advmod(reproducible-5, only-4)
det(computer-9, a-7)
amod(computer-9, particular-8)
prep_on(reproducible-5, computer-9)
nsubj(assume-12, I-11)
parataxis(reproducible-5, assume-12)
nsubj(a-15, it-13)
cop(a-15, is-14)
ccomp(assume-12, a-15)

configuration/NN issue/NN on/IN this/DT computer/NN but/CC I/PRP can/MD not/RB see/VB what/WP is/VBZ going/VBG wrong/JJ or/CC how/WRB 

(ROOT (FRAG (NP (NN configuration) (NN issue)) (PP (PP (IN on) (NP (DT this) (NN computer))) (SBAR (CC but) (S (NP (PRP I)) (VP (MD can) (RB not) (VP (VB see) (SBAR (SBAR (WHNP (WP what)) (S (VP (VBZ is) (VP (VBG going) (ADJP (JJ wrong)))))) (CC or) (SBAR (WHADVP (WRB how)))))))))))

root(ROOT-0, issue-2)
nn(issue-2, configuration-1)
det(computer-5, this-4)
prep_on(issue-2, computer-5)
cc(see-10, but-6)
nsubj(see-10, I-7)
aux(see-10, can-8)
neg(see-10, not-9)
dep(issue-2, see-10)
nsubj(going-13, what-11)
aux(going-13, is-12)
dep(see-10, going-13)
acomp(going-13, wrong-14)
dep(see-10, how-16)
conj_or(going-13, how-16)

to/TO fix/VB it/PRP ./. 

(ROOT (S (VP (TO to) (VP (VB fix) (NP (PRP it)))) (. .)))

root(ROOT-0, fix-2)
aux(fix-2, to-1)
dobj(fix-2, it-3)

After/IN downloading/VBG 3.1/CD and/CC installing/VBG CDT/NNP (/-LRB- have/VBP not/RB tried/VBN this/DT without/IN 

(ROOT (PP (IN After) (S (VP (VP (VBG downloading) (NP (CD 3.1))) (CC and) (VP (VBG installing) (NP (NP (NNP CDT)) (PRN (-LRB- -LRB-) (VP (VBP have) (RB not) (VP (VBN tried) (NP (DT this)))) (IN without))))))))

root(ROOT-0, After-1)
pcomp(After-1, downloading-2)
dobj(downloading-2, 3.1-3)
pcomp(After-1, installing-5)
conj_and(downloading-2, installing-5)
dobj(installing-5, CDT-6)
aux(tried-10, have-8)
neg(tried-10, not-9)
dep(CDT-6, tried-10)
dobj(tried-10, this-11)
dep(tried-10, without-12)

CDT/NNP )/-RRB- ,/, I/PRP attempt/VBP to/TO check/VB out/RP a/DT project/NN ./. 

(ROOT (S (LST (NNP CDT) (-RRB- -RRB-)) (, ,) (NP (PRP I)) (VP (VBP attempt) (S (VP (TO to) (VP (VB check) (PRT (RP out)) (NP (DT a) (NN project)))))) (. .)))

root(ROOT-0, attempt-5)
dep(attempt-5, CDT-1)
nsubj(attempt-5, I-4)
aux(check-7, to-6)
xcomp(attempt-5, check-7)
prt(check-7, out-8)
det(project-10, a-9)
dobj(check-7, project-10)

It/PRP is/VBZ a/DT large-ish/JJ project/NN ,/, and/CC so/IN the/DT 

(ROOT (S (NP (PRP It)) (VP (VBZ is) (NP (DT a) (JJ large-ish) (NN project)) (PRN (, ,) (CC and) (ADVP (IN so) (DT the))))))

root(ROOT-0, project-5)
nsubj(project-5, It-1)
cop(project-5, is-2)
det(project-5, a-3)
amod(project-5, large-ish-4)
cc(so-8, and-7)
dep(project-5, so-8)
dep(so-8, the-9)

checkout/NN takes/VBZ approximately/RB ten/CD minutes/NNS on/IN a/DT working/VBG machine/NN ./. 

(ROOT (S (NP (NN checkout)) (VP (VBZ takes) (PP (NP (QP (RB approximately) (CD ten)) (NNS minutes)) (IN on) (NP (DT a) (VBG working) (NN machine)))) (. .)))

root(ROOT-0, takes-2)
nsubj(takes-2, checkout-1)
quantmod(ten-4, approximately-3)
num(minutes-5, ten-4)
npadvmod(takes-2, minutes-5)
det(machine-9, a-7)
amod(machine-9, working-8)
prep_on(takes-2, machine-9)

On/IN this/DT machine/NN ,/, 

(ROOT (FRAG (PP (IN On) (NP (DT this) (NN machine))) (, ,)))

root(ROOT-0, On-1)
det(machine-3, this-2)
pobj(On-1, machine-3)

however/RB ,/, it/PRP fails/VBZ during/IN checkout/NN ./. 

(ROOT (S (ADVP (RB however)) (, ,) (NP (PRP it)) (VP (VBZ fails) (PP (IN during) (NP (NN checkout)))) (. .)))

root(ROOT-0, fails-4)
advmod(fails-4, however-1)
nsubj(fails-4, it-3)
prep_during(fails-4, checkout-6)

The/DT point/NN at/IN which/WDT it/PRP fails/VBZ is/VBZ not/RB consistent/JJ ./. 

(ROOT (S (NP (NP (DT The) (NN point)) (SBAR (WHPP (IN at) (WHNP (WDT which))) (S (NP (PRP it)) (VP (VBZ fails))))) (VP (VBZ is) (RB not) (ADJP (JJ consistent))) (. .)))

root(ROOT-0, consistent-9)
det(point-2, The-1)
nsubj(consistent-9, point-2)
prep_at(fails-6, which-4)
nsubj(fails-6, it-5)
rcmod(point-2, fails-6)
cop(consistent-9, is-7)
neg(consistent-9, not-8)

There/EX have/VBP been/VBN other/JJ things/NNS that/WDT do/VBP not/RB seem/VB to/TO work/VB on/IN this/DT machine/NN ,/, and/CC I/PRP am/VBP 

(ROOT (S (S (NP (EX There)) (VP (VBP have) (VP (VBN been) (NP (NP (JJ other) (NNS things)) (SBAR (WHNP (WDT that)) (S (VP (VBP do) (RB not) (VP (VB seem) (S (VP (TO to) (VP (VB work) (PP (IN on) (NP (DT this) (NN machine)))))))))))))) (, ,) (CC and) (S (NP (PRP I)) (VP (VBP am)))))

root(ROOT-0, things-5)
expl(things-5, There-1)
aux(things-5, have-2)
cop(things-5, been-3)
amod(things-5, other-4)
nsubj(seem-9, that-6)
aux(seem-9, do-7)
neg(seem-9, not-8)
rcmod(things-5, seem-9)
aux(work-11, to-10)
xcomp(seem-9, work-11)
det(machine-14, this-13)
prep_on(work-11, machine-14)
nsubj(am-18, I-17)
conj_and(things-5, am-18)

including/VBG them/PRP here/RB in/IN case/NN they/PRP ring/VBP any/DT bells/NNS for/IN you/PRP ./. 

(ROOT (S (PP (VBG including) (NP (NP (PRP them)) (PP (ADVP (RB here)) (IN in) (NP (NN case))))) (NP (PRP they)) (VP (VBP ring) (NP (NP (DT any) (NNS bells)) (PP (IN for) (NP (PRP you))))) (. .)))

root(ROOT-0, ring-7)
prep_including(ring-7, them-2)
advmod(them-2, here-3)
prep_in(them-2, case-5)
nsubj(ring-7, they-6)
det(bells-9, any-8)
dobj(ring-7, bells-9)
prep_for(bells-9, you-11)

1/CD It/PRP could/MD not/RB download/VB the/DT Eclipse/NNP SDK/NNP zip/NN file/NN itself/PRP -/: it/PRP failed/VBD several/JJ 

(ROOT (FRAG (NP (NP (CD 1)) (SBAR (S (S (NP (PRP It)) (VP (MD could) (RB not) (VP (VB download) (S (NP (DT the) (NNP Eclipse) (NNP SDK) (NN zip)) (VP (NN file) (NP (PRP itself))))))) (: -) (S (NP (PRP it)) (VP (VBD failed) (NP (JJ several)))))))))

root(ROOT-0, 1-1)
nsubj(download-5, It-2)
aux(download-5, could-3)
neg(download-5, not-4)
rcmod(1-1, download-5)
det(zip-9, the-6)
nn(zip-9, Eclipse-7)
nn(zip-9, SDK-8)
nsubj(file-10, zip-9)
ccomp(download-5, file-10)
dobj(file-10, itself-11)
nsubj(failed-14, it-13)
parataxis(download-5, failed-14)
dobj(failed-14, several-15)

times/NNS after/IN getting/VBG around/IN 70-80/CD %/NN ./. 

(ROOT (NP (NP (NNS times)) (PP (IN after) (S (VP (VBG getting) (PP (IN around) (NP (CD 70-80) (NN %)))))) (. .)))

root(ROOT-0, times-1)
prepc_after(times-1, getting-3)
num(%-6, 70-80-5)
prep_around(getting-3, %-6)

Eventually/RB the/DT zip/NN was/VBD downloaded/VBN from/IN 

(ROOT (FRAG (ADVP (RB Eventually)) (NP (DT the) (NN zip) (SBAR (S (VP (VBD was) (VP (VBN downloaded) (PP (IN from)))))))))

root(ROOT-0, zip-3)
dep(zip-3, Eventually-1)
det(zip-3, the-2)
auxpass(downloaded-5, was-4)
ccomp(zip-3, downloaded-5)
prep(downloaded-5, from-6)

another/DT machine/NN and/CC copied/VBD to/TO it/PRP ,/, after/IN which/WDT things/NNS worked/VBD fine/NN ./. 

(ROOT (S (NP (DT another) (NN machine)) (ADVP (CC and)) (VP (VBD copied) (PP (TO to) (NP (NP (PRP it)) (, ,) (SBAR (WHPP (IN after) (WHNP (WDT which))) (S (NP (NNS things)) (VP (VBD worked) (NP (NN fine)))))))) (. .)))

root(ROOT-0, copied-4)
det(machine-2, another-1)
nsubj(copied-4, machine-2)
advmod(copied-4, and-3)
prep_to(copied-4, it-6)
prep_after(worked-11, which-9)
nsubj(worked-11, things-10)
rcmod(it-6, worked-11)
dobj(worked-11, fine-12)

2/CD On/IN installing/VBG Eclipse/NNP ,/, some/DT icons/NNS appeared/VBD as/IN black/JJ ,/, and/CC some/DT text/NN failed/VBD to/TO 

(ROOT (S (S (PP (NP (CD 2)) (IN On) (S (VP (VBG installing) (NP (NNP Eclipse))))) (, ,) (NP (DT some) (NNS icons)) (VP (VBD appeared) (PP (IN as) (NP (JJ black))))) (, ,) (CC and) (S (NP (DT some) (NN text)) (VP (VBD failed) (PP (TO to))))))

root(ROOT-0, appeared-8)
npadvmod(appeared-8, 2-1)
prepc_on(appeared-8, installing-3)
dobj(installing-3, Eclipse-4)
det(icons-7, some-6)
nsubj(appeared-8, icons-7)
prep_as(appeared-8, black-10)
det(text-14, some-13)
nsubj(failed-15, text-14)
conj_and(appeared-8, failed-15)
prep(failed-15, to-16)

render/VB ./. 

(ROOT (S (VP (VB render)) (. .)))

root(ROOT-0, render-1)

After/IN consulting/VBG Bugzilla/NNP ,/, we/PRP determined/VBD that/IN this/DT was/VBD a/DT problem/NN with/IN 

(ROOT (S (PP (IN After) (NP (VBG consulting) (NNP Bugzilla))) (, ,) (NP (PRP we)) (VP (VBD determined) (SBAR (IN that) (S (NP (DT this)) (VP (VBD was) (NP (DT a) (NN problem)) (PP (IN with))))))))

root(ROOT-0, determined-6)
amod(Bugzilla-3, consulting-2)
prep_after(determined-6, Bugzilla-3)
nsubj(determined-6, we-5)
mark(problem-11, that-7)
nsubj(problem-11, this-8)
cop(problem-11, was-9)
det(problem-11, a-10)
ccomp(determined-6, problem-11)
prep(problem-11, with-12)

MacAfee/NNP ./. 

(ROOT (FRAG (NP (NNP MacAfee)) (. .)))

root(ROOT-0, MacAfee-1)

Downloading/VBG the/DT recommended/VBN patch/NN did/VBD not/RB fix/VB the/DT problem/NN ;/: however/RB ,/, 

(ROOT (S (VP (VBG Downloading) (NP (NP (DT the) (VBN recommended) (NN patch)) (SBAR (S (VP (VBD did) (RB not) (VP (VB fix) (NP (DT the) (NN problem)) (: ;) (ADVP (RB however)))) (, ,)))))))

root(ROOT-0, Downloading-1)
det(patch-4, the-2)
amod(patch-4, recommended-3)
dobj(Downloading-1, patch-4)
aux(fix-7, did-5)
neg(fix-7, not-6)
rcmod(patch-4, fix-7)
det(problem-9, the-8)
dobj(fix-7, problem-9)
advmod(fix-7, however-11)

disabling/VBG buffer-overflow/JJ protection/NN did/VBD fix/VB it/PRP ./. 

(ROOT (S (NP (VBG disabling) (JJ buffer-overflow) (NN protection)) (VP (VBD did) (VP (VB fix) (NP (PRP it)))) (. .)))

root(ROOT-0, fix-5)
amod(protection-3, disabling-1)
amod(protection-3, buffer-overflow-2)
nsubj(fix-5, protection-3)
aux(fix-5, did-4)
dobj(fix-5, it-6)

Note/VB that/IN a/DT command-line/JJ checkout/NN of/IN this/DT project/NN works/VBZ fine/NN ./. 

(ROOT (S (VP (VB Note) (SBAR (IN that) (S (NP (NP (DT a) (JJ command-line) (NN checkout)) (PP (IN of) (NP (DT this) (NN project)))) (VP (VBZ works) (NP (NN fine)))))) (. .)))

root(ROOT-0, Note-1)
mark(works-9, that-2)
det(checkout-5, a-3)
amod(checkout-5, command-line-4)
nsubj(works-9, checkout-5)
det(project-8, this-7)
prep_of(checkout-5, project-8)
ccomp(Note-1, works-9)
dobj(works-9, fine-10)

I/PRP will/MD add/VB crash/NN logs/NNS momentarily/RB ./. 

(ROOT (S (NP (PRP I)) (VP (MD will) (VP (VB add) (NP (NN crash) (NNS logs)) (ADVP (RB momentarily)))) (. .)))

root(ROOT-0, add-3)
nsubj(add-3, I-1)
aux(add-3, will-2)
nn(logs-5, crash-4)
dobj(add-3, logs-5)
advmod(add-3, momentarily-6)

There/EX are/VBP five/CD of/IN them/PRP ,/, and/CC I/PRP do/VBP n't/RB know/VB how/WRB much/JJ is/VBZ the/DT unique/important/JJ ,/, so/IN I/PRP will/MD include/VB them/PRP all/DT ./. 

(ROOT (S (S (S (NP (EX There)) (VP (VBP are) (NP (NP (CD five)) (PP (IN of) (NP (PRP them)))))) (, ,) (CC and) (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB know) (SBAR (WHNP (WRB how) (JJ much)) (S (VP (VBZ is) (NP (DT the) (JJ unique/important))))))))) (, ,) (IN so) (S (NP (PRP I)) (VP (MD will) (VP (VB include) (S (NP (PRP them)) (NP (DT all)))))) (. .)))

root(ROOT-0, are-2)
expl(are-2, There-1)
nsubj(are-2, five-3)
prep_of(five-3, them-5)
nsubj(know-11, I-8)
aux(know-11, do-9)
neg(know-11, n't-10)
conj_and(are-2, know-11)
advmod(much-13, how-12)
advmod(unique/important-16, much-13)
cop(unique/important-16, is-14)
det(unique/important-16, the-15)
ccomp(know-11, unique/important-16)
dep(are-2, so-18)
nsubj(include-21, I-19)
aux(include-21, will-20)
parataxis(are-2, include-21)
nsubj(all-23, them-22)
xcomp(include-21, all-23)

