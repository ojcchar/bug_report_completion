Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

1/CD Create/VB a/DT Simple/NN Project/NN ./. 

(ROOT (S (NP (CD 1)) (VP (VB Create) (NP (DT a) (NN Simple) (NN Project))) (. .)))

root(ROOT-0, Create-2)
nsubj(Create-2, 1-1)
det(Project-5, a-3)
nn(Project-5, Simple-4)
dobj(Create-2, Project-5)

2/CD Add/VB two/CD folders/NNS to/TO the/DT project/NN ,/, and/CC add/VB a/DT file/NN to/TO each/DT folder/NN ./. 

(ROOT (S (NP (CD 2)) (VP (VP (VB Add) (NP (CD two) (NNS folders)) (PP (TO to) (NP (DT the) (NN project)))) (, ,) (CC and) (VP (VB add) (NP (DT a) (NN file)) (PP (TO to) (NP (DT each) (NN folder))))) (. .)))

root(ROOT-0, Add-2)
nsubj(Add-2, 2-1)
nsubj(add-10, 2-1)
num(folders-4, two-3)
dobj(Add-2, folders-4)
det(project-7, the-6)
prep_to(Add-2, project-7)
conj_and(Add-2, add-10)
det(file-12, a-11)
dobj(add-10, file-12)
det(folder-15, each-14)
prep_to(add-10, folder-15)

3/CD Make/VBP the/DT first/JJ folder/NN read-only/JJ ./. 

(ROOT (S (NP (CD 3)) (VP (VBP Make) (S (NP (DT the) (JJ first) (NN folder)) (ADJP (JJ read-only)))) (. .)))

root(ROOT-0, Make-2)
nsubj(Make-2, 3-1)
det(folder-5, the-3)
amod(folder-5, first-4)
nsubj(read-only-6, folder-5)
xcomp(Make-2, read-only-6)

4/CD In/IN the/DT Navigator/NNP ,/, right/JJ click/VBP on/IN the/DT Project/NN and/CC select/JJ Delete/VB ./. 

(ROOT (S (PP (NP (CD 4)) (IN In) (NP (DT the) (NNP Navigator))) (, ,) (NP (JJ right)) (VP (VBP click) (PP (IN on) (NP (NP (DT the) (NN Project)) (CC and) (NP (JJ select)))) (S (VP (VB Delete)))) (. .)))

root(ROOT-0, click-7)
npadvmod(click-7, 4-1)
det(Navigator-4, the-3)
prep_in(click-7, Navigator-4)
nsubj(click-7, right-6)
det(Project-10, the-9)
prep_on(click-7, Project-10)
prep_on(click-7, select-12)
conj_and(Project-10, select-12)
ccomp(click-7, Delete-13)

5/CD When/WRB prompted/VBN to/TO delete/VB the/DT containing/VBG data/NNS in/IN the/DT Project/NN choose/VB "/`` No/UH "/'' ./. 

(ROOT (S (NP (NP (CD 5)) (SBAR (WHADVP (WRB When)) (S (VP (VBN prompted) (S (VP (TO to) (VP (VB delete) (NP (NP (DT the) (VBG containing) (NNS data)) (PP (IN in) (NP (DT the) (NN Project))))))))))) (VP (VB choose) (FRAG (INTJ (`` ``) (UH No) ('' '')))) (. .)))

root(ROOT-0, choose-12)
nsubj(choose-12, 5-1)
advmod(prompted-3, When-2)
rcmod(5-1, prompted-3)
aux(delete-5, to-4)
xcomp(prompted-3, delete-5)
det(data-8, the-6)
amod(data-8, containing-7)
dobj(delete-5, data-8)
det(Project-11, the-10)
prep_in(data-8, Project-11)
dep(choose-12, No-14)

Result/NN :/: The/DT user/NN is/VBZ then/RB prompted/VBN to/TO delete/VB the/DT read/only/JJ folders/NNS ./. 

(ROOT (FRAG (NP (NN Result)) (: :) (S (NP (DT The) (NN user)) (VP (VBZ is) (ADVP (RB then)) (VP (VBN prompted) (S (VP (TO to) (VP (VB delete) (NP (DT the) (JJ read/only) (NNS folders)))))))) (. .)))

root(ROOT-0, Result-1)
det(user-4, The-3)
nsubjpass(prompted-7, user-4)
auxpass(prompted-7, is-5)
advmod(prompted-7, then-6)
dep(Result-1, prompted-7)
aux(delete-9, to-8)
xcomp(prompted-7, delete-9)
det(folders-12, the-10)
amod(folders-12, read/only-11)
dobj(delete-9, folders-12)

This/DT dialog/NN should/MD n't/RB be/VB appearing/VBG ./. 

(ROOT (S (NP (DT This) (NN dialog)) (VP (MD should) (RB n't) (VP (VB be) (VP (VBG appearing)))) (. .)))

root(ROOT-0, appearing-6)
det(dialog-2, This-1)
nsubj(appearing-6, dialog-2)
aux(appearing-6, should-3)
neg(appearing-6, n't-4)
aux(appearing-6, be-5)

Choose/VB "/`` No/UH "/'' to/TO the/DT prompt/JJ to/TO not/RB delete/VB the/DT read-only/JJ folder/NN ./. 

(ROOT (SQ (VP (VB Choose) (INTJ (`` ``) (UH No) ('' '')) (PP (TO to) (NP (DT the) (ADJP (JJ prompt) (S (VP (TO to) (VP (RB not) (VB delete) (NP (DT the) (JJ read-only)))))) (NN folder)))) (. .)))

root(ROOT-0, Choose-1)
discourse(Choose-1, No-3)
det(folder-13, the-6)
amod(folder-13, prompt-7)
aux(delete-10, to-8)
neg(delete-10, not-9)
xcomp(prompt-7, delete-10)
det(read-only-12, the-11)
dobj(delete-10, read-only-12)
prep_to(Choose-1, folder-13)

Result/NN :/: The/DT read/write/JJ folder/NN and/CC its/PRP$ contents/NNS are/VBP all/DT deleted/VBN ./. 

(ROOT (FRAG (NP (NN Result)) (: :) (S (NP (NP (DT The) (JJ read/write) (NN folder)) (CC and) (NP (PRP$ its) (NNS contents))) (VP (VBP are) (ADVP (DT all)) (VP (VBN deleted)))) (. .)))

root(ROOT-0, Result-1)
det(folder-5, The-3)
amod(folder-5, read/write-4)
nsubjpass(deleted-11, folder-5)
poss(contents-8, its-7)
conj_and(folder-5, contents-8)
nsubjpass(deleted-11, contents-8)
auxpass(deleted-11, are-9)
advmod(deleted-11, all-10)
dep(Result-1, deleted-11)

Expected/VBN :/: It/PRP is/VBZ expected/VBN that/IN none/NN of/IN the/DT data/NNS is/VBZ deleted/VBN nor/CC is/VBZ the/DT user/NN prompted/VBD after/IN the/DT first/JJ time/NN to/TO delete/VB any/DT of/IN the/DT data/NNS ./. 

(ROOT (S (S (VP (VBN Expected))) (: :) (S (NP (PRP It)) (VP (VBZ is) (VP (VBN expected) (SBAR (IN that) (S (NP (NP (NN none)) (PP (IN of) (NP (DT the) (NNS data)))) (VP (VP (VBZ is) (VP (VBN deleted))) (CC nor) (VP (VBZ is) (NP (NP (DT the) (NN user)) (SBAR (S (VP (VBD prompted) (PP (IN after) (NP (DT the) (JJ first) (NN time))) (S (VP (TO to) (VP (VB delete) (NP (NP (DT any)) (PP (IN of) (NP (DT the) (NNS data)))))))))))))))))) (. .)))

root(ROOT-0, Expected-1)
nsubjpass(expected-5, It-3)
auxpass(expected-5, is-4)
parataxis(Expected-1, expected-5)
mark(deleted-12, that-6)
nsubjpass(deleted-12, none-7)
det(data-10, the-9)
prep_of(none-7, data-10)
auxpass(deleted-12, is-11)
ccomp(expected-5, deleted-12)
cop(user-16, is-14)
det(user-16, the-15)
ccomp(expected-5, user-16)
conj_nor(deleted-12, user-16)
rcmod(user-16, prompted-17)
det(time-21, the-19)
amod(time-21, first-20)
prep_after(prompted-17, time-21)
aux(delete-23, to-22)
xcomp(prompted-17, delete-23)
dobj(delete-23, any-24)
det(data-27, the-26)
prep_of(any-24, data-27)

This/DT is/VBZ a/DT major/JJ file/NN loss/NN issue/NN 

(ROOT (S (NP (DT This)) (VP (VBZ is) (NP (DT a) (JJ major) (NN file) (NN loss) (NN issue)))))

root(ROOT-0, issue-7)
nsubj(issue-7, This-1)
cop(issue-7, is-2)
det(issue-7, a-3)
amod(issue-7, major-4)
nn(issue-7, file-5)
nn(issue-7, loss-6)

