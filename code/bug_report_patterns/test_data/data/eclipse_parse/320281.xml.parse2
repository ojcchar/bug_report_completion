On/IN one/CD side/NN I/PRP 've/VBP registered/VBN a/DT SelectionChangeListener/NNP on/IN a/DT Graph/NNP Object/NNP and/CC on/IN another/DT side/NN I/PRP 've/VBP set/VBN the/DT selection/NN of/IN the/DT graph/NN by/IN a/DT key/JJ event/NN ./. 

(ROOT (S (S (PP (IN On) (NP (CD one) (NN side))) (NP (PRP I)) (VP (VBP 've) (VP (VBN registered) (NP (NP (DT a) (NNP SelectionChangeListener)) (PP (IN on) (NP (DT a) (NNP Graph) (NNP Object))))))) (CC and) (S (PP (IN on) (NP (DT another) (NN side))) (NP (PRP I)) (VP (VBP 've) (VP (VBN set) (NP (NP (DT the) (NN selection)) (PP (IN of) (NP (DT the) (NN graph)))) (PP (IN by) (NP (DT a) (JJ key) (NN event)))))) (. .)))

root(ROOT-0, registered-6)
num(side-3, one-2)
prep_on(registered-6, side-3)
nsubj(registered-6, I-4)
aux(registered-6, 've-5)
det(SelectionChangeListener-8, a-7)
dobj(registered-6, SelectionChangeListener-8)
det(Object-12, a-10)
nn(Object-12, Graph-11)
prep_on(SelectionChangeListener-8, Object-12)
det(side-16, another-15)
prep_on(set-19, side-16)
nsubj(set-19, I-17)
aux(set-19, 've-18)
conj_and(registered-6, set-19)
det(selection-21, the-20)
dobj(set-19, selection-21)
det(graph-24, the-23)
prep_of(selection-21, graph-24)
det(event-28, a-26)
amod(event-28, key-27)
prep_by(set-19, event-28)

But/CC after/IN the/DT setSelection/NN i/FW get/VB no/DT SelectionChangeEvent/NNP ,/, selecting/VBG by/IN mouse/NN works/VBZ perfect/JJ ./. 

(ROOT (S (CC But) (PP (IN after) (NP (NP (DT the) (NN setSelection)) (SBAR (S (NP (FW i)) (VP (VB get) (NP (DT no) (NNP SelectionChangeEvent))))))) (, ,) (S (VP (VBG selecting) (PP (IN by) (NP (NN mouse))))) (VP (VBZ works) (ADJP (JJ perfect))) (. .)))

root(ROOT-0, works-13)
cc(works-13, But-1)
det(setSelection-4, the-3)
prep_after(works-13, setSelection-4)
nsubj(get-6, i-5)
rcmod(setSelection-4, get-6)
neg(SelectionChangeEvent-8, no-7)
dobj(get-6, SelectionChangeEvent-8)
csubj(works-13, selecting-10)
prep_by(selecting-10, mouse-12)
acomp(works-13, perfect-14)

In/IN our/PRP$ graph/NN you/PRP can/MD navigate/VB withe/NN the/DT arrow/NN keys/NNS to/TO select/VB the/DT next/JJ GraphNode/NN ./. 

(ROOT (S (PP (IN In) (NP (PRP$ our) (NN graph))) (NP (PRP you)) (VP (MD can) (VP (VB navigate) (NP (NP (NN withe)) (SBAR (S (NP (DT the) (NN arrow) (NNS keys)) (VP (TO to) (VP (VB select) (NP (DT the) (JJ next) (NN GraphNode))))))))) (. .)))

root(ROOT-0, navigate-6)
poss(graph-3, our-2)
prep_in(navigate-6, graph-3)
nsubj(navigate-6, you-4)
aux(navigate-6, can-5)
dobj(navigate-6, withe-7)
det(keys-10, the-8)
nn(keys-10, arrow-9)
nsubj(select-12, keys-10)
aux(select-12, to-11)
vmod(withe-7, select-12)
det(GraphNode-15, the-13)
amod(GraphNode-15, next-14)
dobj(select-12, GraphNode-15)

I/PRP 've/VBP fixed/VBN this/DT by/IN adding/VBG the/DT fireWidgetSelectedEvent/NN (/-LRB- )/-RRB- in/IN the/DT loop/NN of/IN the/DT setSelection/NN (/-LRB- )/-RRB- method/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP 've) (VP (VBN fixed) (NP (DT this)) (PP (IN by) (S (VP (VBG adding) (NP (DT the) (NN fireWidgetSelectedEvent) (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-)) (PP (IN in) (NP (NP (DT the) (NN loop)) (PP (IN of) (NP (DT the) (NN setSelection) (-LRB- -LRB-)))))) (-RRB- -RRB-)) (NN method))))))) (. .)))

root(ROOT-0, fixed-3)
nsubj(fixed-3, I-1)
aux(fixed-3, 've-2)
dobj(fixed-3, this-4)
prepc_by(fixed-3, adding-6)
det(method-19, the-7)
nn(method-19, fireWidgetSelectedEvent-8)
det(loop-13, the-12)
prep_in(-RRB--10, loop-13)
det(setSelection-16, the-15)
prep_of(loop-13, setSelection-16)
dobj(adding-6, method-19)

I/PRP think/VBP the/DT same/JJ for/IN selectAll/NN (/-LRB- )/-RRB- method/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP think) (NP (NP (DT the) (JJ same)) (PP (IN for) (NP (NP (NN selectAll) (-LRB- -LRB-)) (-RRB- -RRB-) (NN method))))) (. .)))

root(ROOT-0, think-2)
nsubj(think-2, I-1)
det(same-4, the-3)
dobj(think-2, same-4)
nn(method-9, selectAll-6)
prep_for(same-4, method-9)

Here/RB 

(ROOT (ADVP (RB Here)))

root(ROOT-0, Here-1)

//: **/SYM 

(ROOT (VP (: /) (X (SYM **))))

root(ROOT-0, **-2)
punct(**-2, /-1)

*/SYM Changes/NNS the/DT selection/NN to/TO the/DT list/NN of/IN items/NNS 

(ROOT (X (X (SYM *)) (NP (NP (NNS Changes)) (NP (NP (DT the) (NN selection)) (PP (TO to) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (NNS items)))))))))

root(ROOT-0, Changes-2)
dep(Changes-2, *-1)
det(selection-4, the-3)
dep(Changes-2, selection-4)
det(list-7, the-6)
prep_to(selection-4, list-7)
prep_of(list-7, items-9)

*/SYM 

(ROOT (X (SYM *)))

root(ROOT-0, *-1)

*/SYM @param/FW l/NN 

(ROOT (X (X (SYM *)) (NP (NP (FW @param)) (NP (NN l)))))

root(ROOT-0, @param-2)
dep(@param-2, *-1)
dep(@param-2, l-3)

*/SYM //: 

(ROOT (FRAG (X (SYM *)) (NP (: /))))

root(ROOT-0, /-2)
dep(/-2, *-1)

public/JJ void/NN setSelection/NN (/-LRB- GraphItem/NN [/-LRB- ]/-RRB- nodes/NNS )/-RRB- {/-LRB- 

(ROOT (NP (NP (JJ public) (NN void) (NN setSelection)) (PRN (-LRB- -LRB-) (NP (NN GraphItem)) (-LRB- -LSB-) (NP (-RRB- -RSB-) (NNS nodes)) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, setSelection-3)
amod(setSelection-3, public-1)
nn(setSelection-3, void-2)
appos(setSelection-3, GraphItem-5)
punct(GraphItem-5, -LSB--6)
punct(nodes-8, -RSB--7)
dep(GraphItem-5, nodes-8)

clearSelection/NN (/-LRB- )/-RRB- ;/: 

(ROOT (NP (NP (NN clearSelection) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, clearSelection-1)

if/IN (/-LRB- nodes/NNS !/. 

(ROOT (FRAG (IN if) (-LRB- -LRB-) (NP (NNS nodes)) (. !)))

root(ROOT-0, if-1)
dep(if-1, nodes-3)

=/JJ null/NN )/-RRB- {/-LRB- 

(ROOT (VP (PRN (NP (NP (JJ =)) (NP (NN null))) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, =-1)
dep(=-1, null-2)

for/IN (/-LRB- int/NN i/FW =/JJ 0/CD ;/: i/LS </JJR nodes.length/NN ;/: i/LS +/CC +/CC )/-RRB- {/-LRB- 

(ROOT (PP (IN for) (NP (PRN (-LRB- -LRB-) (S (NP (NP (NP (NN int)) (NP (NP (FW i)) (ADJP (JJ =) (NP-TMP (CD 0))))) (: ;) (NP (NP (LS i) (JJR <) (NN nodes.length)) (: ;) (NP (LS i) (CC +)))) (NP (CC +))) (-RRB- -RRB-)) (-LRB- -LCB-))))

root(ROOT-0, for-1)
dep(+-14, int-3)
dep(int-3, i-4)
amod(i-4, =-5)
tmod(=-5, 0-6)
dep(nodes.length-10, i-8)
amod(nodes.length-10, <-9)
dep(int-3, nodes.length-10)
dep(nodes.length-10, i-12)
cc(i-12, +-13)
pobj(for-1, +-14)

if/IN (/-LRB- nodes/NNS [/-LRB- i/FW ]/-RRB- !/. 

(ROOT (FRAG (SBAR (IN if) (S (-LRB- -LRB-) (NP (NNS nodes)) (VP (-LRB- -LSB-) (NP (FW i) (-RRB- -RSB-))))) (. !)))

root(ROOT-0, i-5)
mark(i-5, if-1)
nsubj(i-5, nodes-3)
punct(i-5, -LSB--4)
punct(i-5, -RSB--6)

=/JJ null/NN &/CC &/CC nodes/NNS [/-LRB- i/FW ]/-RRB- instanceof/NN GraphItem/NN )/-RRB- {/-LRB- 

(ROOT (S (NP (NP (NP (JJ =) (NN null)) (CC &) (NP (CC &) (NP (NNS nodes)) (-LRB- -LSB-) (NP (FW i)))) (PRN (-RRB- -RSB-) (NP (NN instanceof) (NN GraphItem)) (-RRB- -RRB-))) (VP (-LRB- -LCB-))))

amod(null-2, =-1)
nsubj(-LCB--12, null-2)
cc(nodes-5, &-4)
conj_and(null-2, nodes-5)
nsubj(-LCB--12, nodes-5)
punct(nodes-5, -LSB--6)
dep(nodes-5, i-7)
punct(GraphItem-10, -RSB--8)
nn(GraphItem-10, instanceof-9)
dep(null-2, GraphItem-10)

selectedItems.add/NN (/-LRB- nodes/NNS [/-LRB- i/FW ]/-RRB- )/-RRB- ;/: 

(ROOT (NP (NP (NN selectedItems.add)) (PRN (-LRB- -LRB-) (NP (NP (NNS nodes)) (-LRB- -LSB-) (NP (FW i) (-RRB- -RSB-))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, selectedItems.add-1)
dep(selectedItems.add-1, nodes-3)
punct(nodes-3, -LSB--4)
dep(nodes-3, i-5)
punct(i-5, -RSB--6)

(/-LRB- nodes/NNS [/-LRB- i/FW ]/-RRB- )/-RRB- ./. 

(ROOT (S (-LRB- -LRB-) (NP (NNS nodes)) (VP (-LRB- -LSB-) (NP (FW i) (-RRB- -RSB-))) (-RRB- -RRB-) (. .)))

root(ROOT-0, i-4)
nsubj(i-4, nodes-2)
punct(i-4, -LSB--3)
punct(i-4, -RSB--5)

highlight/NN (/-LRB- )/-RRB- ;/: 

(ROOT (NP (NP (NN highlight) (-LRB- -LRB-) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, highlight-1)

fireWidgetSelectedEvent/NN (/-LRB- nodes/NNS [/-LRB- i/FW ]/-RRB- )/-RRB- ;/: 

(ROOT (NP (NP (NN fireWidgetSelectedEvent)) (PRN (-LRB- -LRB-) (NP (NP (NNS nodes)) (-LRB- -LSB-) (NP (FW i) (-RRB- -RSB-))) (-RRB- -RRB-)) (: ;)))

root(ROOT-0, fireWidgetSelectedEvent-1)
dep(fireWidgetSelectedEvent-1, nodes-3)
punct(nodes-3, -LSB--4)
dep(nodes-3, i-5)
punct(i-5, -RSB--6)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


I/PRP hope/VBP it/PRP 's/VBZ right/JJ ./. 

(ROOT (S (NP (PRP I)) (VP (VBP hope) (SBAR (S (NP (PRP it)) (VP (VBZ 's) (ADJP (JJ right)))))) (. .)))

root(ROOT-0, hope-2)
nsubj(hope-2, I-1)
nsubj(right-5, it-3)
cop(right-5, 's-4)
ccomp(hope-2, right-5)

By/IN the/DT way/NN ,/, why/WRB so/RB many/JJ methods/NNS are/VBP private/JJ ?/. 

(ROOT (FRAG (PP (IN By) (NP (NP (DT the) (NN way)) (, ,) (SBAR (WHADVP (WRB why)) (S (NP (RB so) (JJ many) (NNS methods)) (VP (VBP are) (ADJP (JJ private))))))) (. ?)))

root(ROOT-0, By-1)
det(way-3, the-2)
pobj(By-1, way-3)
advmod(private-10, why-5)
advmod(methods-8, so-6)
amod(methods-8, many-7)
nsubj(private-10, methods-8)
cop(private-10, are-9)
rcmod(way-3, private-10)

So/IN I/PRP ca/MD n't/RB fix/VB or/CC extends/VBZ classes/NNS ./. 

(ROOT (S (IN So) (NP (PRP I)) (VP (VP (MD ca) (RB n't) (VP (VB fix))) (CC or) (VP (VBZ extends) (NP (NNS classes)))) (. .)))

root(ROOT-0, fix-5)
dep(fix-5, So-1)
nsubj(fix-5, I-2)
nsubj(extends-7, I-2)
aux(fix-5, ca-3)
neg(fix-5, n't-4)
conj_or(fix-5, extends-7)
dobj(extends-7, classes-8)

