The/DT full/JJ indexer/NN no/RB longer/RB provides/VBZ an/DT advantage/NN over/IN the/DT fast/JJ indexer/NN ./. 

(ROOT (S (NP (DT The) (JJ full) (NN indexer)) (ADVP (RB no) (RB longer)) (VP (VBZ provides) (NP (NP (DT an) (NN advantage)) (PP (IN over) (NP (DT the) (JJ fast) (NN indexer))))) (. .)))

root(ROOT-0, provides-6)
det(indexer-3, The-1)
amod(indexer-3, full-2)
nsubj(provides-6, indexer-3)
neg(longer-5, no-4)
advmod(provides-6, longer-5)
det(advantage-8, an-7)
dobj(provides-6, advantage-8)
det(indexer-12, the-10)
amod(indexer-12, fast-11)
prep_over(advantage-8, indexer-12)

It/PRP is/VBZ much/RB slower/JJR ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ is) (ADJP (RB much) (JJR slower))) (. .)))

root(ROOT-0, slower-4)
nsubj(slower-4, It-1)
cop(slower-4, is-2)
advmod(slower-4, much-3)

I/PRP suggest/VBP to/TO remove/VB it/PRP ./. 

(ROOT (S (NP (PRP I)) (VP (VBP suggest) (S (VP (TO to) (VP (VB remove) (NP (PRP it)))))) (. .)))

root(ROOT-0, suggest-2)
nsubj(suggest-2, I-1)
aux(remove-4, to-3)
xcomp(suggest-2, remove-4)
dobj(remove-4, it-5)

In/IN the/DT UI/NNP the/DT user/NN should/MD have/VB the/DT choice/NN to/TO enable/VB or/CC disable/VB indexing/NN rather/RB than/IN selecting/VBG from/IN the/DT list/NN :/: fast/JJ //: full/JJ //: null/JJ 

(ROOT (S (PP (IN In) (NP (DT the) (NNP UI))) (NP (DT the) (NN user)) (VP (MD should) (VP (VB have) (S (NP (DT the) (NN choice) (S (VP (TO to) (VP (VP (VB enable) (CC or) (VB disable) (NP (NN indexing))) (CONJP (RB rather) (IN than)) (VP (VBG selecting) (PP (IN from) (NP (NP (NP (DT the) (NN list)) (: :) (ADJP (JJ fast))) (PRN (: /) (ADJP (JJ full)) (: /))))))))) (ADJP (JJ null)))))))

root(ROOT-0, have-7)
det(UI-3, the-2)
prep_in(have-7, UI-3)
det(user-5, the-4)
nsubj(have-7, user-5)
aux(have-7, should-6)
det(choice-9, the-8)
nsubj(null-26, choice-9)
aux(enable-11, to-10)
vmod(choice-9, enable-11)
vmod(choice-9, disable-13)
conj_or(enable-11, disable-13)
dobj(enable-11, indexing-14)
vmod(choice-9, selecting-17)
conj_negcc(enable-11, selecting-17)
det(list-20, the-19)
prep_from(selecting-17, list-20)
amod(list-20, fast-22)
punct(full-24, /-23)
dep(list-20, full-24)
punct(full-24, /-25)
xcomp(have-7, null-26)

Are/VBP there/EX other/JJ opinions/NNS ?/. 

(ROOT (SQ (VBP Are) (NP (EX there)) (PP (JJ other) (NP (NNS opinions))) (. ?)))

root(ROOT-0, Are-1)
expl(Are-1, there-2)
prep(Are-1, other-3)
dep(other-3, opinions-4)

