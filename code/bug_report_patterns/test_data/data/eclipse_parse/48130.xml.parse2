I/PRP ran/VBD into/IN this/DT originally/RB in/IN a/DT more/RBR elaborate/JJ plugin/NN development/NN scenario/NN on/IN 

(ROOT (S (NP (PRP I)) (VP (VBD ran) (PP (IN into) (NP (DT this) (ADJP (RB originally) (PP (IN in) (NP (DT a) (RBR more) (JJ elaborate) (NN plugin)))) (NN development) (NN scenario))) (PP (IN on)))))

root(ROOT-0, ran-2)
nsubj(ran-2, I-1)
det(scenario-12, this-4)
amod(scenario-12, originally-5)
det(plugin-10, a-7)
advmod(plugin-10, more-8)
amod(plugin-10, elaborate-9)
prep_in(originally-5, plugin-10)
nn(scenario-12, development-11)
prep_into(ran-2, scenario-12)
prep(ran-2, on-13)

2/CD 1.1/CD ./. 

(ROOT (FRAG (NP (CD 2) (CD 1.1)) (. .)))

root(ROOT-0, 1.1-2)
num(1.1-2, 2-1)

However/RB I/PRP can/MD reproduce/VB it/PRP with/IN 3.0/CD M5/NN as/RB well/RB ./. 

(ROOT (S (ADVP (RB However)) (NP (PRP I)) (VP (MD can) (VP (VB reproduce) (NP (PRP it)) (PP (IN with) (NP (CD 3.0) (NN M5))) (ADVP (RB as) (RB well)))) (. .)))

root(ROOT-0, reproduce-4)
advmod(reproduce-4, However-1)
nsubj(reproduce-4, I-2)
aux(reproduce-4, can-3)
dobj(reproduce-4, it-5)
num(M5-8, 3.0-7)
prep_with(reproduce-4, M5-8)
advmod(well-10, as-9)
advmod(reproduce-4, well-10)

Here/RB are/VBP the/DT steps/NNS :/: 

(ROOT (SINV (ADVP (RB Here)) (VP (VBP are)) (NP (DT the) (NNS steps)) (: :)))

root(ROOT-0, are-2)
advmod(are-2, Here-1)
det(steps-4, the-3)
nsubj(are-2, steps-4)

1/CD Create/VB a/DT simple/JJ java/NN project/NN with/IN one/CD class/NN and/CC a/DT main/JJ method/NN ./. 

(ROOT (S (NP (CD 1)) (VP (VB Create) (NP (DT a) (JJ simple) (NN java) (NN project)) (PP (IN with) (NP (NP (CD one) (NN class)) (CC and) (NP (DT a) (JJ main) (NN method))))) (. .)))

root(ROOT-0, Create-2)
nsubj(Create-2, 1-1)
det(project-6, a-3)
amod(project-6, simple-4)
nn(project-6, java-5)
dobj(Create-2, project-6)
num(class-9, one-8)
prep_with(Create-2, class-9)
det(method-13, a-11)
amod(method-13, main-12)
prep_with(Create-2, method-13)
conj_and(class-9, method-13)

2/CD Set/VB a/DT breakpoint/NN in/IN the/DT main/JJ method/NN ./. 

(ROOT (S (NP (CD 2)) (VP (VB Set) (NP (DT a) (NN breakpoint)) (PP (IN in) (NP (DT the) (JJ main) (NN method)))) (. .)))

root(ROOT-0, Set-2)
nsubj(Set-2, 2-1)
det(breakpoint-4, a-3)
dobj(Set-2, breakpoint-4)
det(method-8, the-6)
amod(method-8, main-7)
prep_in(Set-2, method-8)

3/CD Create/VB a/DT launch/NN configuration/NN of/IN type/NN application/NN 

(ROOT (FRAG (NP (CD 3)) (VP (VB Create) (NP (NP (DT a) (NN launch) (NN configuration)) (PP (IN of) (NP (NN type) (NN application)))))))

root(ROOT-0, 3-1)
dep(3-1, Create-2)
det(configuration-5, a-3)
nn(configuration-5, launch-4)
dobj(Create-2, configuration-5)
nn(application-8, type-7)
prep_of(configuration-5, application-8)

4/CD debug/NN and/CC observe/VB how/WRB the/DT breakpoint/NN is/VBZ hit/VBN correctly/RB 

(ROOT (UCP (NP (CD 4) (NN debug)) (CC and) (S (VP (VB observe) (SBAR (WHADVP (WRB how)) (S (NP (DT the) (NN breakpoint)) (VP (VBZ is) (VP (VBN hit) (ADVP (RB correctly))))))))))

root(ROOT-0, debug-2)
num(debug-2, 4-1)
conj_and(debug-2, observe-4)
advmod(hit-9, how-5)
det(breakpoint-7, the-6)
nsubjpass(hit-9, breakpoint-7)
auxpass(hit-9, is-8)
ccomp(observe-4, hit-9)
advmod(hit-9, correctly-10)

5/CD refactor/NN the/DT project/NN 's/POS name/NN ./. 

(ROOT (NP (NP (CD 5)) (NP (NP (NN refactor)) (NP (NP (DT the) (NN project) (POS 's)) (NN name))) (. .)))

root(ROOT-0, 5-1)
dep(5-1, refactor-2)
det(project-4, the-3)
poss(name-6, project-4)
dep(refactor-2, name-6)

6/CD Go/VB into/IN the/DT debug/NN debug/NN perspective/NN ./. 

(ROOT (S (NP (CD 6)) (VP (VB Go) (PP (IN into) (NP (DT the) (NN debug) (NN debug) (NN perspective)))) (. .)))

root(ROOT-0, Go-2)
nsubj(Go-2, 6-1)
det(perspective-7, the-4)
nn(perspective-7, debug-5)
nn(perspective-7, debug-6)
prep_into(Go-2, perspective-7)

There/EX will/MD be/VB exceptions/NNS in/IN the/DT ./. 

(ROOT (S (NP (EX There)) (VP (MD will) (VP (VB be) (NP (NP (NNS exceptions)) (PP (IN in) (NP (DT the)))))) (. .)))

root(ROOT-0, exceptions-4)
expl(exceptions-4, There-1)
aux(exceptions-4, will-2)
cop(exceptions-4, be-3)
prep_in(exceptions-4, the-6)

log/NN file/NN or/CC ErrorLog/NN window/NN ./. 

(ROOT (NP (NP (NN log)) (NP (NN file) (CC or) (NN ErrorLog) (NN window)) (. .)))

root(ROOT-0, log-1)
nn(window-5, file-2)
conj_or(file-2, ErrorLog-4)
nn(window-5, ErrorLog-4)
dep(log-1, window-5)

