I/PRP was/VBD starting/VBG a/DT big/JJ workspace/NN and/CC I/PRP was/VBD wondering/VBG why/WRB it/PRP was/VBD taking/VBG time/NN ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBD was) (VP (VBG starting) (NP (DT a) (JJ big) (NN workspace))))) (CC and) (S (NP (PRP I)) (VP (VBD was) (VP (VBG wondering) (SBAR (WHADVP (WRB why)) (S (NP (PRP it)) (VP (VBD was) (VP (VBG taking) (NP (NN time))))))))) (. .)))

root(ROOT-0, starting-3)
nsubj(starting-3, I-1)
aux(starting-3, was-2)
det(workspace-6, a-4)
amod(workspace-6, big-5)
dobj(starting-3, workspace-6)
nsubj(wondering-10, I-8)
aux(wondering-10, was-9)
conj_and(starting-3, wondering-10)
advmod(taking-14, why-11)
nsubj(taking-14, it-12)
aux(taking-14, was-13)
ccomp(wondering-10, taking-14)
dobj(taking-14, time-15)

Trying/VBG to/TO find/VB someone/NN to/TO blame/VB ;-)/JJ I/PRP debugged/VBD and/CC randomly/RB stop/VB and/CC here/RB is/VBZ the/DT capture/NN of/IN the/DT stack/VBP at/IN this/DT point/NN ./. 

(ROOT (S (S (VP (VBG Trying) (S (VP (TO to) (VP (VB find) (NP (NN someone)) (S (VP (TO to) (VP (VP (VB blame) (ADJP (JJ ;--RRB-) (SBAR (S (NP (PRP I)) (VP (VBD debugged)))))) (CC and) (ADVP (RB randomly)) (VP (VP (VB stop)) (CC and) (ADVP (RB here)) (VP (VBZ is) (NP (NP (DT the) (NN capture)) (PP (IN of) (NP (DT the)))))))))))))) (VP (VBP stack) (PP (IN at) (NP (DT this) (NN point)))) (. .)))

root(ROOT-0, stack-20)
csubj(stack-20, Trying-1)
aux(find-3, to-2)
xcomp(Trying-1, find-3)
dobj(find-3, someone-4)
aux(blame-6, to-5)
vmod(find-3, blame-6)
acomp(blame-6, ;--RRB--7)
nsubj(debugged-9, I-8)
ccomp(;--RRB--7, debugged-9)
advmod(stop-12, randomly-11)
vmod(find-3, stop-12)
conj_and(blame-6, stop-12)
advmod(capture-17, here-14)
cop(capture-17, is-15)
det(capture-17, the-16)
conj_and(blame-6, capture-17)
conj_and(stop-12, capture-17)
prep_of(capture-17, the-19)
det(point-23, this-22)
prep_at(stack-20, point-23)

Of/IN course/NN you/PRP will/MD tell/VB me/PRP :/: most/JJS of/IN the/DT time/NN is/VBZ spent/VBN in/IN JDT/NNP Core/NNP ,/, resources/NNS ,/, PDE/NNP ,/, etc./FW but/CC down/RB below/IN if/IN you/PRP look/VBP what/WP triggered/VBD all/PDT these/DT actions/NNS is/VBZ the/DT opening/NN of/IN the/DT "/`` package/NN explorer/NN "/'' ./. 

(ROOT (S (S (PP (IN Of) (NP (NN course))) (NP (PRP you)) (VP (MD will) (VP (VB tell) (NP (PRP me))))) (: :) (S (NP (NP (JJS most)) (PP (IN of) (NP (DT the) (NN time)))) (VP (VP (VBZ is) (VP (VBN spent) (PP (IN in) (NP (NP (NNP JDT) (NNP Core)) (, ,) (NP (NNS resources)) (, ,) (NP (NNP PDE)) (, ,) (FW etc.))))) (CC but) (ADVP (RB down) (IN below)) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP look) (SBAR (WHNP (WP what)) (S (VP (VBD triggered) (SBAR (S (NP (PDT all) (DT these) (NNS actions)) (VP (VBZ is) (NP (NP (DT the) (NN opening)) (PP (IN of) (NP (DT the) (`` ``) (NN package) (NN explorer) ('' ''))))))))))))))) (. .)))

root(ROOT-0, tell-5)
prep_of(tell-5, course-2)
nsubj(tell-5, you-3)
aux(tell-5, will-4)
dobj(tell-5, me-6)
nsubjpass(spent-13, most-8)
det(time-11, the-10)
prep_of(most-8, time-11)
auxpass(spent-13, is-12)
parataxis(tell-5, spent-13)
nn(Core-16, JDT-15)
prep_in(spent-13, Core-16)
appos(Core-16, resources-18)
appos(Core-16, PDE-20)
dep(Core-16, etc.-22)
cc(spent-13, but-23)
advmod(below-25, down-24)
advmod(spent-13, below-25)
mark(look-28, if-26)
nsubj(look-28, you-27)
advcl(spent-13, look-28)
nsubj(triggered-30, what-29)
ccomp(look-28, triggered-30)
predet(actions-33, all-31)
det(actions-33, these-32)
nsubj(opening-36, actions-33)
cop(opening-36, is-34)
det(opening-36, the-35)
ccomp(triggered-30, opening-36)
det(explorer-41, the-38)
nn(explorer-41, package-40)
prep_of(opening-36, explorer-41)

Could/MD not/RB background/NN jobs/NNS be/VB used/VBN to/TO do/VB the/DT filling/NN ,/, so/RB that/IN even/RB if/IN my/PRP$ workspace/NN is/VBZ big/JJ and/CC I/PRP left/VBD it/PRP open/VB on/IN a/DT package/NN explorer/NN it/PRP starts/VBZ up/RP faster/RBR ?/. 

(ROOT (SQ (MD Could) (RB not) (NP (NN background) (NNS jobs)) (VP (VB be) (VP (VBN used) (S (VP (TO to) (VP (VB do) (NP (DT the) (NN filling))))) (, ,) (SBAR (RB so) (IN that) (S (SBAR (RB even) (IN if) (S (S (NP (PRP$ my) (NN workspace)) (VP (VBZ is) (ADJP (JJ big)))) (CC and) (S (NP (PRP I)) (VP (VBD left) (S (NP (PRP it)) (VP (VB open) (PP (IN on) (NP (DT a) (NN package) (NN explorer))))))))) (NP (PRP it)) (VP (VBZ starts) (PRT (RP up)) (ADVP (RBR faster))))))) (. ?)))

root(ROOT-0, used-6)
aux(used-6, Could-1)
neg(used-6, not-2)
nn(jobs-4, background-3)
nsubjpass(used-6, jobs-4)
auxpass(used-6, be-5)
aux(do-8, to-7)
xcomp(used-6, do-8)
det(filling-10, the-9)
dobj(do-8, filling-10)
advmod(starts-30, so-12)
mark(starts-30, that-13)
advmod(big-19, even-14)
mark(big-19, if-15)
poss(workspace-17, my-16)
nsubj(big-19, workspace-17)
cop(big-19, is-18)
advcl(starts-30, big-19)
nsubj(left-22, I-21)
conj_and(big-19, left-22)
advcl(starts-30, left-22)
nsubj(open-24, it-23)
ccomp(left-22, open-24)
det(explorer-28, a-26)
nn(explorer-28, package-27)
prep_on(open-24, explorer-28)
nsubj(starts-30, it-29)
advcl(used-6, starts-30)
prt(starts-30, up-31)
advmod(starts-30, faster-32)

