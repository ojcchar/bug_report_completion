Dear/NNP Team/NNP ,/, 

(ROOT (FRAG (PP (NNP Dear) (NP (NNP Team))) (, ,)))

root(ROOT-0, Dear-1)
dep(Dear-1, Team-2)

When/WRB I/PRP use/VBP Shift/NN +/CC Tab/NN to/TO decrease/VB indentation/NN level/NN of/IN selected/VBN C/NN source/NN lines/NNS ,/, these/DT selected/VBN C/NN source/NN lines/NNS are/VBP scrolled/VBN up/RP or/CC down/RP (/-LRB- depends/VBZ on/IN its/PRP$ position/NN on/IN screen/NN )/-RRB- ,/, why/WRB ?/. 

(ROOT (S (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP use) (S (NP (NP (NN Shift)) (CC +) (NP (NN Tab))) (VP (TO to) (VP (VB decrease) (NP (NP (NN indentation) (NN level)) (PP (IN of) (NP (NP (VBN selected) (NN C) (NN source) (NNS lines)) (, ,) (NP (DT these) (VBN selected) (NN C))))))))))) (NP (NN source) (NNS lines)) (VP (VBP are) (VP (VBN scrolled) (ADVP (RP up) (CC or) (RP down)) (PRN (-LRB- -LRB-) (S (VP (VBZ depends) (PP (IN on) (NP (NP (PRP$ its) (NN position)) (PP (IN on) (NP (NN screen))))))) (-RRB- -RRB-))))) (, ,) (FRAG (WHADVP (WRB why))) (. ?)))

root(ROOT-0, scrolled-23)
advmod(use-3, When-1)
nsubj(use-3, I-2)
advcl(scrolled-23, use-3)
dobj(use-3, Shift-4)
dobj(use-3, Tab-6)
conj_+(Shift-4, Tab-6)
aux(decrease-8, to-7)
xcomp(use-3, decrease-8)
nn(level-10, indentation-9)
dobj(decrease-8, level-10)
amod(lines-15, selected-12)
nn(lines-15, C-13)
nn(lines-15, source-14)
prep_of(level-10, lines-15)
det(C-19, these-17)
amod(C-19, selected-18)
appos(lines-15, C-19)
nn(lines-21, source-20)
nsubjpass(scrolled-23, lines-21)
auxpass(scrolled-23, are-22)
advmod(scrolled-23, up-24)
advmod(scrolled-23, down-26)
conj_or(up-24, down-26)
parataxis(scrolled-23, depends-28)
poss(position-31, its-30)
prep_on(depends-28, position-31)
prep_on(position-31, screen-33)
dep(scrolled-23, why-36)

This/DT very/RB anoying/JJ when/WRB you/PRP clean/VBP up/RP a/DT lot/NN of/IN source/NN code/NN blocks/VBZ :/: your/PRP$ eyes/NNS are/VBP moved/VBN everywhere/RB on/IN the/DT screen/NN ./. 

(ROOT (S (S (NP (DT This) (ADJP (ADJP (RB very) (JJ anoying)) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP clean) (PRT (RP up)) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (NN source)))))))) (NN code)) (VP (VBZ blocks))) (: :) (S (NP (PRP$ your) (NNS eyes)) (VP (VBP are) (VP (VBN moved) (ADVP (RB everywhere)) (PP (IN on) (NP (DT the) (NN screen)))))) (. .)))

root(ROOT-0, blocks-13)
det(code-12, This-1)
advmod(anoying-3, very-2)
amod(code-12, anoying-3)
advmod(clean-6, when-4)
nsubj(clean-6, you-5)
ccomp(anoying-3, clean-6)
prt(clean-6, up-7)
det(lot-9, a-8)
dobj(clean-6, lot-9)
prep_of(lot-9, source-11)
nsubj(blocks-13, code-12)
poss(eyes-16, your-15)
nsubjpass(moved-18, eyes-16)
auxpass(moved-18, are-17)
parataxis(blocks-13, moved-18)
advmod(moved-18, everywhere-19)
det(screen-22, the-21)
prep_on(moved-18, screen-22)

Could/MD you/PRP make/VB possible/JJ to/TO avoid/VB this/DT automatic/JJ scroll/NN ,/, please/VB ?/. 

(ROOT (SQ (MD Could) (NP (PRP you)) (VP (VB make) (ADJP (JJ possible) (S (VP (TO to) (VP (VB avoid) (NP (DT this) (JJ automatic) (NN scroll)) (PRN (, ,) (INTJ (VB please)))))))) (. ?)))

root(ROOT-0, make-3)
aux(make-3, Could-1)
nsubj(make-3, you-2)
acomp(make-3, possible-4)
aux(avoid-6, to-5)
xcomp(possible-4, avoid-6)
det(scroll-9, this-7)
amod(scroll-9, automatic-8)
dobj(avoid-6, scroll-9)
discourse(avoid-6, please-11)

Thanks/NNS ,/, Christophe/NNP 

(ROOT (NP (NP (NNS Thanks)) (, ,) (NP (NNP Christophe))))

root(ROOT-0, Thanks-1)
appos(Thanks-1, Christophe-3)

PS/NNP :/: It/PRP 's/VBZ the/DT same/JJ when/WRB you/PRP use/VBP Tab/NN to/TO increase/VB indentation/NN ./. 

(ROOT (FRAG (NP (NNP PS)) (: :) (S (NP (PRP It)) (VP (VBZ 's) (NP (NP (DT the) (JJ same)) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP use) (NP (NN Tab)) (S (VP (TO to) (VP (VB increase) (NP (NN indentation))))))))))) (. .)))

root(ROOT-0, PS-1)
nsubj(same-6, It-3)
cop(same-6, 's-4)
det(same-6, the-5)
dep(PS-1, same-6)
advmod(use-9, when-7)
nsubj(use-9, you-8)
rcmod(same-6, use-9)
dobj(use-9, Tab-10)
aux(increase-12, to-11)
vmod(use-9, increase-12)
dobj(increase-12, indentation-13)

