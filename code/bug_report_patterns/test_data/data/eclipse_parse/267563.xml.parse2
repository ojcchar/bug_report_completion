Description/NN :/: Password/NN in/IN Property/NN binding/NN is/VBZ modified/VBN after/IN reopen/VBP the/DT data/NNS source/NN 

(ROOT (FRAG (NP (NN Description)) (: :) (S (NP (NP (NN Password)) (PP (IN in) (NP (NN Property) (NN binding)))) (VP (VBZ is) (VP (VBN modified) (SBAR (IN after) (S (VP (VBP reopen) (NP (DT the) (NNS data) (NN source))))))))))

root(ROOT-0, Description-1)
nsubjpass(modified-8, Password-3)
nn(binding-6, Property-5)
prep_in(Password-3, binding-6)
auxpass(modified-8, is-7)
dep(Description-1, modified-8)
mark(reopen-10, after-9)
advcl(modified-8, reopen-10)
det(source-13, the-11)
nn(source-13, data-12)
dobj(reopen-10, source-13)

Build/VB number/NN :/: 

(ROOT (S (VP (VB Build) (NP (NN number))) (: :)))

root(ROOT-0, Build-1)
dobj(Build-1, number-2)

2/CD 5.0.v20090309-0630/JJ 

(ROOT (ADJP (NP (CD 2)) (JJ 5.0.v20090309-0630)))

root(ROOT-0, 5.0.v20090309-0630-2)
npadvmod(5.0.v20090309-0630-2, 2-1)

Steps/NNS to/TO reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB reproduce))) (: :)))

root(ROOT-0, reproduce-3)
nsubj(reproduce-3, Steps-1)
aux(reproduce-3, to-2)

1/CD New/NNP a/DT JDBC/NNP Data/NNP source/NN 

(ROOT (NP (NP (CD 1)) (NP (NNP New)) (NP (DT a) (NNP JDBC) (NNP Data) (NN source))))

root(ROOT-0, 1-1)
appos(1-1, New-2)
det(source-6, a-3)
nn(source-6, JDBC-4)
nn(source-6, Data-5)
dep(1-1, source-6)

2/LS Specify/VB the/DT password/NN in/IN Property/NN Binding/NN page/NN ,/, for/IN example/NN abcdefg/NN and/CC finish/VB the/DT data/NNS source/NN 

(ROOT (VP (LST (LS 2)) (VB Specify) (NP (DT the) (NN password)) (S (UCP (PP (IN in) (NP (NP (NN Property) (NN Binding) (NN page)) (, ,) (PP (IN for) (NP (NN example) (NN abcdefg))))) (CC and) (S (VP (VB finish) (NP (DT the) (NNS data) (NN source))))))))

root(ROOT-0, Specify-2)
dep(Specify-2, 2-1)
det(password-4, the-3)
dobj(Specify-2, password-4)
dep(Specify-2, in-5)
nn(page-8, Property-6)
nn(page-8, Binding-7)
pobj(in-5, page-8)
nn(abcdefg-12, example-11)
prep_for(page-8, abcdefg-12)
dep(Specify-2, finish-14)
conj_and(in-5, finish-14)
det(source-17, the-15)
nn(source-17, data-16)
dobj(finish-14, source-17)

3/CD Check/VB the/DT XML/NN source/NN to/TO make/VB sure/JJ the/DT password/NN has/VBZ been/VBN encrypted/VBN ,/, in/IN my/PRP$ build/VB the/DT code/NN is/VBZ YWJjZGVmZw/JJ ==/NN ./. 

(ROOT (S (NP (CD 3)) (VP (VB Check) (NP (DT the) (NN XML) (NN source)) (S (VP (TO to) (VP (VB make) (ADJP (JJ sure) (SBAR (S (NP (DT the) (NN password)) (VP (VBZ has) (VP (VBN been) (VP (VBN encrypted)))))))))) (, ,) (SBAR (IN in) (S (NP (PRP$ my)) (VP (VB build) (SBAR (S (NP (DT the) (NN code)) (VP (VBZ is) (NP (JJ YWJjZGVmZw) (NN ==))))))))) (. .)))

root(ROOT-0, Check-2)
nsubj(Check-2, 3-1)
det(source-5, the-3)
nn(source-5, XML-4)
dobj(Check-2, source-5)
aux(make-7, to-6)
vmod(Check-2, make-7)
acomp(make-7, sure-8)
det(password-10, the-9)
nsubjpass(encrypted-13, password-10)
aux(encrypted-13, has-11)
auxpass(encrypted-13, been-12)
ccomp(sure-8, encrypted-13)
mark(build-17, in-15)
nsubj(build-17, my-16)
advcl(Check-2, build-17)
det(code-19, the-18)
nsubj(==-22, code-19)
cop(==-22, is-20)
amod(==-22, YWJjZGVmZw-21)
ccomp(build-17, ==-22)

4/CD Reopen/VB the/DT data/NNS source/NN and/CC goto/NN Property/NN Binding/NN and/CC Finish/VB data/NNS source/NN 

(ROOT (FRAG (NP (CD 4)) (VP (VP (VB Reopen) (NP (DT the) (NNS data) (NN source) (CC and) (NN goto) (NN Property) (NN Binding))) (CC and) (VP (VB Finish) (NP (NNS data) (NN source))))))

root(ROOT-0, 4-1)
dep(4-1, Reopen-2)
det(source-5, the-3)
nn(source-5, data-4)
dobj(Reopen-2, source-5)
nn(Binding-9, goto-7)
nn(Binding-9, Property-8)
dobj(Reopen-2, Binding-9)
conj_and(source-5, Binding-9)
dep(4-1, Finish-11)
conj_and(Reopen-2, Finish-11)
nn(source-13, data-12)
dobj(Finish-11, source-13)

5/CD At/IN this/DT time/NN ,/, the/DT report/NN has/VBZ a/DT dirty/JJ mark/NN and/CC save/VB the/DT report/NN and/CC recheck/VB the/DT encrypted/JJ code/NN in/IN XML/NN Source/NN ,/, it/PRP has/VBZ been/VBN modified/VBN to/TO abcdAAAA/NNP ./. 

(ROOT (S (PP (NP (CD 5)) (IN At) (NP (DT this) (NN time))) (PRN (, ,) (S (NP (DT the) (NN report)) (VP (VP (VBZ has) (NP (DT a) (JJ dirty) (NN mark))) (CC and) (VP (VP (VB save) (NP (DT the) (NN report))) (CC and) (VP (VB recheck) (NP (DT the) (JJ encrypted) (NN code)) (PP (IN in) (NP (NN XML) (NN Source))))))) (, ,)) (NP (PRP it)) (VP (VBZ has) (VP (VBN been) (VP (VBN modified) (PP (TO to) (NP (NNP abcdAAAA)))))) (. .)))

root(ROOT-0, modified-28)
npadvmod(modified-28, 5-1)
det(time-4, this-3)
prep_at(modified-28, time-4)
det(report-7, the-6)
nsubj(has-8, report-7)
nsubj(save-13, report-7)
parataxis(modified-28, has-8)
det(mark-11, a-9)
amod(mark-11, dirty-10)
dobj(has-8, mark-11)
conj_and(has-8, save-13)
parataxis(modified-28, save-13)
det(report-15, the-14)
dobj(save-13, report-15)
conj_and(has-8, recheck-17)
conj_and(save-13, recheck-17)
det(code-20, the-18)
amod(code-20, encrypted-19)
dobj(recheck-17, code-20)
nn(Source-23, XML-22)
prep_in(recheck-17, Source-23)
nsubjpass(modified-28, it-25)
aux(modified-28, has-26)
auxpass(modified-28, been-27)
prep_to(modified-28, abcdAAAA-30)

6/CD Do/VBP Step4/NN again/RB and/CC click/VB OK/UH to/TO finsh/VB the/DT data/NNS source/NN 

(ROOT (S (NP (CD 6)) (VP (VP (VBP Do) (NP (NN Step4)) (ADVP (RB again))) (CC and) (VP (VB click) (ADVP (UH OK)) (S (VP (TO to) (VP (VB finsh) (NP (DT the) (NNS data) (NN source)))))))))

root(ROOT-0, Do-2)
nsubj(Do-2, 6-1)
nsubj(click-6, 6-1)
dobj(Do-2, Step4-3)
advmod(Do-2, again-4)
conj_and(Do-2, click-6)
advmod(click-6, OK-7)
aux(finsh-9, to-8)
xcomp(click-6, finsh-9)
det(source-12, the-10)
nn(source-12, data-11)
dobj(finsh-9, source-12)

7/CD After/IN step6/NN ,/, the/DT report/NN is/VBZ modified/VBN and/CC save/VB the/DT report/NN (/-LRB- after/IN saving/VBG ,/, Exception/NN thrown/VBN out/RP and/CC block/VB the/DT UI/NN operation/NN )/-RRB- 

(ROOT (S (PP (NP (CD 7)) (IN After) (NP (NN step6))) (, ,) (NP (DT the) (NN report)) (VP (VBZ is) (VP (VP (VBN modified)) (CC and) (VP (VB save) (NP (NP (DT the) (NN report)) (PRN (-LRB- -LRB-) (PP (IN after) (NP (NP (VBG saving)) (, ,) (NP (NP (NN Exception)) (VP (VP (VBN thrown) (PRT (RP out))) (CC and) (VP (VB block) (NP (DT the) (NN UI) (NN operation))))))) (-RRB- -RRB-))))))))

root(ROOT-0, modified-8)
npadvmod(modified-8, 7-1)
prep_after(modified-8, step6-3)
det(report-6, the-5)
nsubjpass(modified-8, report-6)
nsubj(save-10, report-6)
auxpass(modified-8, is-7)
conj_and(modified-8, save-10)
det(report-12, the-11)
dobj(save-10, report-12)
prep_after(report-12, saving-15)
appos(saving-15, Exception-17)
dep(Exception-17, thrown-18)
prt(thrown-18, out-19)
dep(Exception-17, block-21)
conj_and(thrown-18, block-21)
det(operation-24, the-22)
nn(operation-24, UI-23)
dobj(block-21, operation-24)

Expected/VBN result/NN :/: The/DT reopen/VBP will/MD not/RB change/VB the/DT password/NN in/IN Property/NN Binding/NN 

(ROOT (VP (VBN Expected) (NP (NP (NN result)) (: :) (S (NP (DT The)) (VP (VBP reopen) (SBAR (S (VP (MD will) (RB not) (VP (VB change) (NP (NP (DT the) (NN password)) (PP (IN in) (NP (NN Property) (NN Binding)))))))))))))

root(ROOT-0, Expected-1)
dobj(Expected-1, result-2)
nsubj(reopen-5, The-4)
dep(result-2, reopen-5)
aux(change-8, will-6)
neg(change-8, not-7)
ccomp(reopen-5, change-8)
det(password-10, the-9)
dobj(change-8, password-10)
nn(Binding-13, Property-12)
prep_in(password-10, Binding-13)

Actual/JJ result/NN :/: After/IN step4/NN ,/, the/DT encrypted/JJ code/NN has/VBZ been/VBN changed/VBN ,/, so/IN that/IN the/DT report/NN has/VBZ a/DT dirty/JJ mark/NN and/CC after/IN step6/NN ,/, a/DT Exception/NN thrown/VBN out/RP and/CC it/PRP will/MD block/VB all/PDT the/DT UI/NN operation/NN ./. 

(ROOT (NP (NP (JJ Actual) (NN result)) (: :) (S (S (PP (IN After) (NP (NN step4))) (, ,) (NP (DT the) (JJ encrypted) (NN code)) (VP (VBZ has) (VP (VBN been) (VP (VBN changed) (, ,) (SBAR (IN so) (IN that) (S (NP (DT the) (NN report)) (VP (VBZ has) (NP (DT a) (JJ dirty) (NN mark))))))))) (CC and) (S (PP (IN after) (NP (NN step6))) (, ,) (S (NP (DT a) (NN Exception)) (VP (VBN thrown) (PRT (RP out)))) (CC and) (S (NP (PRP it)) (VP (MD will) (VP (VB block) (NP (PDT all) (DT the) (NN UI) (NN operation))))))) (. .)))

root(ROOT-0, result-2)
amod(result-2, Actual-1)
prep_after(changed-12, step4-5)
det(code-9, the-7)
amod(code-9, encrypted-8)
nsubjpass(changed-12, code-9)
aux(changed-12, has-10)
auxpass(changed-12, been-11)
dep(result-2, changed-12)
mark(has-18, so-14)
mark(has-18, that-15)
det(report-17, the-16)
nsubj(has-18, report-17)
advcl(changed-12, has-18)
det(mark-21, a-19)
amod(mark-21, dirty-20)
dobj(has-18, mark-21)
prep_after(thrown-28, step6-24)
det(Exception-27, a-26)
nsubj(thrown-28, Exception-27)
dep(result-2, thrown-28)
conj_and(changed-12, thrown-28)
prt(thrown-28, out-29)
nsubj(block-33, it-31)
aux(block-33, will-32)
conj_and(changed-12, block-33)
conj_and(thrown-28, block-33)
predet(operation-37, all-34)
det(operation-37, the-35)
nn(operation-37, UI-36)
dobj(block-33, operation-37)

