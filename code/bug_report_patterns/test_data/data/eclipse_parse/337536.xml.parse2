This/DT Exception/NN is/VBZ with/IN my/PRP$ use/NN case/NN of/IN RSA/NN (/-LRB- three/CD provider/consumer/NN on/IN one/CD machine/NN )/-RRB- ./. 

(ROOT (S (NP (DT This) (NN Exception)) (VP (VBZ is) (PP (IN with) (NP (NP (PRP$ my) (NN use) (NN case)) (PP (IN of) (NP (NP (NN RSA)) (PRN (-LRB- -LRB-) (NP (NP (CD three) (NN provider/consumer)) (PP (IN on) (NP (CD one) (NN machine)))) (-RRB- -RRB-))))))) (. .)))

root(ROOT-0, is-3)
det(Exception-2, This-1)
nsubj(is-3, Exception-2)
poss(case-7, my-5)
nn(case-7, use-6)
prep_with(is-3, case-7)
prep_of(case-7, RSA-9)
num(provider/consumer-12, three-11)
dep(RSA-9, provider/consumer-12)
num(machine-15, one-14)
prep_on(provider/consumer-12, machine-15)

Will/MD have/VB a/DT look/NN at/IN it/PRP later/RB ./. 

(ROOT (S (VP (MD Will) (VP (VB have) (NP (NP (DT a) (NN look)) (PP (IN at) (NP (PRP it)))) (ADVP (RB later)))) (. .)))

root(ROOT-0, have-2)
aux(have-2, Will-1)
det(look-4, a-3)
dobj(have-2, look-4)
prep_at(look-4, it-6)
advmod(have-2, later-7)

