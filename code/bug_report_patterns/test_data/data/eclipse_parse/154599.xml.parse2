Opened/VBN for/IN IBM/NNP :/: 

(ROOT (VP (VBN Opened) (PP (IN for) (NP (NP (NNP IBM)) (: :)))))

root(ROOT-0, Opened-1)
prep_for(Opened-1, IBM-3)

I/PRP 'm/VBP not/RB sure/JJ wha/NN the/DT design/NN is/VBZ supposed/VBN to/TO be/VB here/RB ,/, but/CC the/DT current/JJ implemenation/NN looks/VBZ wrong/JJ ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP 'm) (RB not) (ADJP (JJ sure) (SBAR (S (NP (NP (NN wha)) (NP (DT the) (NN design))) (VP (VBZ is) (VP (VBN supposed) (S (VP (TO to) (VP (VB be) (ADVP (RB here)))))))))))) (, ,) (CC but) (S (NP (DT the) (JJ current) (NN implemenation)) (VP (VBZ looks) (ADJP (JJ wrong)))) (. .)))

root(ROOT-0, sure-4)
nsubj(sure-4, I-1)
cop(sure-4, 'm-2)
neg(sure-4, not-3)
nsubjpass(supposed-9, wha-5)
det(design-7, the-6)
dep(wha-5, design-7)
auxpass(supposed-9, is-8)
ccomp(sure-4, supposed-9)
aux(be-11, to-10)
xcomp(supposed-9, be-11)
advmod(be-11, here-12)
det(implemenation-17, the-15)
amod(implemenation-17, current-16)
nsubj(looks-18, implemenation-17)
conj_but(sure-4, looks-18)
acomp(looks-18, wrong-19)

Create/VB a/DT new/JJ EJB/NN project/NN and/CC then/RB expand/VB it/PRP in/IN the/DT Project/NN Explorer/NNP ./. 

(ROOT (S (VP (VP (VB Create) (NP (DT a) (JJ new) (NN EJB) (NN project))) (CC and) (VP (ADVP (RB then)) (VB expand) (NP (PRP it)) (PP (IN in) (NP (DT the) (NN Project) (NNP Explorer))))) (. .)))

root(ROOT-0, Create-1)
det(project-5, a-2)
amod(project-5, new-3)
nn(project-5, EJB-4)
dobj(Create-1, project-5)
advmod(expand-8, then-7)
conj_and(Create-1, expand-8)
dobj(expand-8, it-9)
det(Explorer-13, the-11)
nn(Explorer-13, Project-12)
prep_in(expand-8, Explorer-13)

Under/IN the/DT deployment/NN descriptor/NN you/PRP will/MD notice/VB the/DT following/VBG nodes/NNS in/IN the/DT following/VBG order/NN :/: 

(ROOT (PP (IN Under) (NP (NP (DT the) (NN deployment)) (NP (NP (NN descriptor)) (SBAR (S (NP (PRP you)) (VP (MD will) (VP (VB notice) (NP (DT the) (VBG following) (NNS nodes)) (PP (IN in) (NP (DT the) (VBG following) (NN order)))))))) (: :))))

root(ROOT-0, Under-1)
det(deployment-3, the-2)
pobj(Under-1, deployment-3)
dep(deployment-3, descriptor-4)
nsubj(notice-7, you-5)
aux(notice-7, will-6)
rcmod(descriptor-4, notice-7)
det(nodes-10, the-8)
amod(nodes-10, following-9)
dobj(notice-7, nodes-10)
det(order-14, the-12)
amod(order-14, following-13)
prep_in(notice-7, order-14)

Entity/NN Beans/NNS Message/NN Driven/NNP Beans/NNP Session/NN Beans/NNS 

(ROOT (NP (NP (NN Entity) (NNS Beans)) (NP (NN Message) (NNP Driven) (NNP Beans)) (NP (NN Session) (NNS Beans))))

root(ROOT-0, Beans-2)
nn(Beans-2, Entity-1)
nn(Beans-5, Message-3)
nn(Beans-5, Driven-4)
dep(Beans-2, Beans-5)
nn(Beans-7, Session-6)
dep(Beans-2, Beans-7)

However/RB ,/, if/IN an/DT adopter/NN contributes/VBZ a/DT group/NN starting/VBG with/IN "/`` Ma/NNP "/'' for/IN example/NN ,/, it/PRP will/MD be/VB placed/VBN right/RB after/IN Entity/NNP Beans/NNPS ./. 

(ROOT (S (ADVP (RB However)) (, ,) (SBAR (IN if) (S (NP (DT an) (NN adopter)) (VP (VBZ contributes) (NP (DT a) (NN group)) (PP (VBG starting) (PP (IN with) (NP (`` ``) (NP (NNP Ma)) ('' '') (PP (IN for) (NP (NN example))))))))) (, ,) (NP (PRP it)) (VP (MD will) (VP (VB be) (VP (VBN placed) (ADVP (RB right)) (PP (IN after) (NP (NNP Entity) (NNPS Beans)))))) (. .)))

root(ROOT-0, placed-20)
advmod(placed-20, However-1)
mark(contributes-6, if-3)
det(adopter-5, an-4)
nsubj(contributes-6, adopter-5)
advcl(placed-20, contributes-6)
det(group-8, a-7)
dobj(contributes-6, group-8)
prep(contributes-6, starting-9)
pcomp(starting-9, with-10)
pobj(with-10, Ma-12)
prep_for(Ma-12, example-15)
nsubjpass(placed-20, it-17)
aux(placed-20, will-18)
auxpass(placed-20, be-19)
advmod(placed-20, right-21)
nn(Beans-24, Entity-23)
prep_after(placed-20, Beans-24)

I/PRP realize/VBP it/PRP is/VBZ the/DT alpahbetical/JJ sorting/NN ,/, but/CC it/PRP just/RB seems/VBZ like/IN the/DT 3/CD bean/NN types/NNS ought/MD to/TO be/VB grouped/VBN together/RB and/CC then/RB adopter/NN groups/NNS should/MD be/VB after/IN them/PRP ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP realize) (SBAR (S (NP (PRP it)) (VP (VBZ is) (NP (DT the) (JJ alpahbetical) (NN sorting))))))) (, ,) (CC but) (S (NP (PRP it)) (ADVP (RB just)) (VP (VBZ seems) (SBAR (IN like) (S (S (NP (DT the) (CD 3) (NN bean) (NNS types)) (VP (MD ought) (S (VP (TO to) (VP (VB be) (VP (VBN grouped) (ADVP (RB together)))))))) (CC and) (S (ADVP (RB then)) (NP (NN adopter) (NNS groups)) (VP (MD should) (VP (VB be) (PP (IN after) (NP (PRP them)))))))))) (. .)))

root(ROOT-0, realize-2)
nsubj(realize-2, I-1)
nsubj(sorting-7, it-3)
cop(sorting-7, is-4)
det(sorting-7, the-5)
amod(sorting-7, alpahbetical-6)
ccomp(realize-2, sorting-7)
nsubj(seems-12, it-10)
advmod(seems-12, just-11)
conj_but(realize-2, seems-12)
mark(ought-18, like-13)
det(types-17, the-14)
num(types-17, 3-15)
nn(types-17, bean-16)
nsubj(ought-18, types-17)
advcl(seems-12, ought-18)
aux(grouped-21, to-19)
auxpass(grouped-21, be-20)
xcomp(ought-18, grouped-21)
advmod(grouped-21, together-22)
advmod(be-28, then-24)
nn(groups-26, adopter-25)
nsubj(be-28, groups-26)
aux(be-28, should-27)
advcl(seems-12, be-28)
conj_and(ought-18, be-28)
prep_after(be-28, them-30)

