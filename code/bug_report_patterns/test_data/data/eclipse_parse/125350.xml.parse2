I/PRP 'm/VBP using/VBG SWT/NNP 3.2/CD M4/NN ,/, trying/VBG out/RP the/DT opengl/NN support/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG using) (NP (NP (NNP SWT) (CD 3.2) (NN M4)) (, ,) (VP (VBG trying) (PRT (RP out)) (NP (DT the) (NN opengl) (NN support)))))) (. .)))

root(ROOT-0, using-3)
nsubj(using-3, I-1)
aux(using-3, 'm-2)
nn(M4-6, SWT-4)
num(M4-6, 3.2-5)
dobj(using-3, M4-6)
vmod(M4-6, trying-8)
prt(trying-8, out-9)
det(support-12, the-10)
nn(support-12, opengl-11)
dobj(trying-8, support-12)

Particularly/RB ,/, I/PRP 'm/VBP using/VBG the/DT org.eclipse.swt.opengl.GLCanvas/NN widget/NN with/IN the/DT org.eclipse.opengl/NN 0.5.0/CD release/NN on/IN top/NN of/IN gtk/glx/NN ./. 

(ROOT (S (ADVP (RB Particularly)) (, ,) (NP (PRP I)) (VP (VBP 'm) (VP (VBG using) (NP (DT the) (NN org.eclipse.swt.opengl.GLCanvas) (NN widget)) (PP (IN with) (NP (NP (DT the) (NN org.eclipse.opengl) (CD 0.5.0) (NN release)) (PP (IN on) (NP (NP (NN top)) (PP (IN of) (NP (NN gtk/glx))))))))) (. .)))

root(ROOT-0, using-5)
advmod(using-5, Particularly-1)
nsubj(using-5, I-3)
aux(using-5, 'm-4)
det(widget-8, the-6)
nn(widget-8, org.eclipse.swt.opengl.GLCanvas-7)
dobj(using-5, widget-8)
det(release-13, the-10)
nn(release-13, org.eclipse.opengl-11)
num(release-13, 0.5.0-12)
prep_with(using-5, release-13)
prep_on_top_of(release-13, gtk/glx-17)

In/IN my/PRP$ app/NN ,/, I/PRP noticed/VBD a/DT quirk/NN with/IN resize/NN particularly/RB when/WRB windows/NNS are/VBP maximized/VBN and/CC de-maximized/VBN ./. 

(ROOT (S (PP (IN In) (NP (PRP$ my) (NN app))) (, ,) (NP (PRP I)) (VP (VBD noticed) (NP (DT a) (NN quirk)) (PP (IN with) (NP (NN resize))) (SBAR (ADVP (RB particularly)) (WHADVP (WRB when)) (S (NP (NNS windows)) (VP (VBP are) (VP (VBN maximized) (CC and) (VBN de-maximized)))))) (. .)))

root(ROOT-0, noticed-6)
poss(app-3, my-2)
prep_in(noticed-6, app-3)
nsubj(noticed-6, I-5)
det(quirk-8, a-7)
dobj(noticed-6, quirk-8)
prep_with(noticed-6, resize-10)
advmod(maximized-15, particularly-11)
advmod(maximized-15, when-12)
nsubjpass(maximized-15, windows-13)
nsubjpass(de-maximized-17, windows-13)
auxpass(maximized-15, are-14)
advcl(noticed-6, maximized-15)
advcl(noticed-6, de-maximized-17)
conj_and(maximized-15, de-maximized-17)

Under/IN these/DT situations/NNS ,/, the/DT resize/JJ event/NN comes/VBZ in/IN to/TO SWT/NNP as/IN expected/VBN ,/, but/CC the/DT actual/JJ rendering/NN appears/VBZ to/TO occur/VB in/IN a/DT window/NN which/WDT is/VBZ actually/RB the/DT previous/JJ size/NN ./. 

(ROOT (S (S (PP (IN Under) (NP (DT these) (NNS situations))) (, ,) (NP (DT the) (JJ resize) (NN event)) (VP (VBZ comes) (PP (IN in) (PP (TO to) (NP (NNP SWT)))) (SBAR (IN as) (S (VP (VBN expected)))))) (, ,) (CC but) (S (NP (DT the) (JJ actual) (NN rendering)) (VP (VBZ appears) (S (VP (TO to) (VP (VB occur) (PP (IN in) (NP (NP (DT a) (NN window)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB actually)) (NP (DT the) (JJ previous) (NN size)))))))))))) (. .)))

root(ROOT-0, comes-8)
det(situations-3, these-2)
prep_under(comes-8, situations-3)
det(event-7, the-5)
amod(event-7, resize-6)
nsubj(comes-8, event-7)
prep(comes-8, in-9)
pcomp(in-9, to-10)
pobj(to-10, SWT-11)
mark(expected-13, as-12)
advcl(comes-8, expected-13)
det(rendering-18, the-16)
amod(rendering-18, actual-17)
nsubj(appears-19, rendering-18)
conj_but(comes-8, appears-19)
aux(occur-21, to-20)
xcomp(appears-19, occur-21)
det(window-24, a-23)
prep_in(occur-21, window-24)
nsubj(size-30, which-25)
cop(size-30, is-26)
advmod(size-30, actually-27)
det(size-30, the-28)
amod(size-30, previous-29)
rcmod(window-24, size-30)

When/WRB I/PRP maximize/VBP ,/, I/PRP get/VBP a/DT rendering/VBG which/WDT is/VBZ the/DT same/JJ size/NN as/IN the/DT previous/JJ window/NN size/NN ,/, in/IN the/DT upper/JJ left/JJ corner/NN of/IN the/DT maximized/VBN window/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP maximize)))) (, ,) (NP (PRP I)) (VP (VBP get) (NP (NP (DT a) (VBG rendering)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT the) (JJ same) (NN size)) (PP (IN as) (NP (DT the) (JJ previous) (NN window) (NN size))) (, ,) (PP (IN in) (NP (NP (DT the) (JJ upper) (JJ left) (NN corner)) (PP (IN of) (NP (NP (DT the)) (VP (VBN maximized) (NP (NN window))))))))))))) (. .)))

root(ROOT-0, get-6)
advmod(maximize-3, When-1)
nsubj(maximize-3, I-2)
advcl(get-6, maximize-3)
nsubj(get-6, I-5)
dobj(get-6, a-7)
amod(a-7, rendering-8)
nsubj(size-13, which-9)
cop(size-13, is-10)
det(size-13, the-11)
amod(size-13, same-12)
rcmod(a-7, size-13)
det(size-18, the-15)
amod(size-18, previous-16)
nn(size-18, window-17)
prep_as(size-13, size-18)
det(corner-24, the-21)
amod(corner-24, upper-22)
amod(corner-24, left-23)
prep_in(size-13, corner-24)
prep_of(corner-24, the-26)
vmod(the-26, maximized-27)
dobj(maximized-27, window-28)

Similarly/RB ,/, when/WRB I/PRP de-maximize/VBP ,/, I/PRP see/VBP the/DT upper/JJ left/JJ corner/NN of/IN a/DT too-large/JJ rendering/NN ./. 

(ROOT (S (ADVP (RB Similarly)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP de-maximize)))) (, ,) (NP (PRP I)) (VP (VBP see) (NP (NP (DT the) (JJ upper) (JJ left) (NN corner)) (PP (IN of) (NP (DT a) (JJ too-large) (NN rendering))))) (. .)))

root(ROOT-0, see-8)
advmod(see-8, Similarly-1)
advmod(de-maximize-5, when-3)
nsubj(de-maximize-5, I-4)
advcl(see-8, de-maximize-5)
nsubj(see-8, I-7)
det(corner-12, the-9)
amod(corner-12, upper-10)
amod(corner-12, left-11)
dobj(see-8, corner-12)
det(rendering-16, a-14)
amod(rendering-16, too-large-15)
prep_of(corner-12, rendering-16)

I/PRP looked/VBD at/IN the/DT GLCanvas/NNP code/NN ,/, and/CC found/VBD this/DT codelistening/NN on/IN the/DT Resize/NNP event/NN in/IN GLCanvas.java/NNP :/: case/NN SWT.Resize/NN :/: Rectangle/NNP clientArea/NN =/JJ getClientArea/NN (/-LRB- )/-RRB- ;/: OS.gdk/NNP _/CD window_move/NN (/-LRB- glWindow/NN ,/, clientArea.x/NN ,/, clientArea.y/NN )/-RRB- ;/: OS.gdk/NNP _/CD window_resize/NN (/-LRB- glWindow/NN ,/, clientArea.width/NN ,/, clientArea.height/NN )/-RRB- ;/: break/NN ;/: 

(ROOT (S (NP (PRP I)) (VP (VP (VBD looked) (PP (IN at) (NP (DT the) (NNP GLCanvas) (NN code)))) (, ,) (CC and) (VP (VBD found) (NP (DT this) (NN codelistening)) (PP (IN on) (NP (NP (NP (NP (DT the) (NNP Resize) (NN event)) (PP (IN in) (NP (NNP GLCanvas.java)))) (: :) (NP (NP (NN case)) (NP (NP (NN SWT.Resize)) (: :) (NP (NP (NNP Rectangle)) (PP (NN clientArea) (NP (JJ =) (NN getClientArea) (-LRB- -LRB-)))) (-RRB- -RRB-))) (: ;) (NP (NP (NNP OS.gdk)) (NP (CD _) (NN window_move) (PRN (-LRB- -LRB-) (NP (NN glWindow) (, ,) (NN clientArea.x) (, ,) (NN clientArea.y)) (-RRB- -RRB-)))) (: ;) (NP (NP (NNP OS.gdk)) (NP (CD _) (NN window_resize) (PRN (-LRB- -LRB-) (NP (NN glWindow) (, ,) (NN clientArea.width) (, ,) (NN clientArea.height)) (-RRB- -RRB-))))) (: ;) (NP (NN break)))))) (: ;)))

root(ROOT-0, looked-2)
nsubj(looked-2, I-1)
nsubj(found-9, I-1)
det(code-6, the-4)
nn(code-6, GLCanvas-5)
prep_at(looked-2, code-6)
conj_and(looked-2, found-9)
det(codelistening-11, this-10)
dobj(found-9, codelistening-11)
det(event-15, the-13)
nn(event-15, Resize-14)
prep_on(found-9, event-15)
prep_in(event-15, GLCanvas.java-17)
dep(event-15, case-19)
dep(case-19, SWT.Resize-20)
dep(SWT.Resize-20, Rectangle-22)
prep(Rectangle-22, clientArea-23)
amod(getClientArea-25, =-24)
dep(clientArea-23, getClientArea-25)
dep(event-15, OS.gdk-29)
num(window_move-31, _-30)
dep(OS.gdk-29, window_move-31)
nn(clientArea.y-37, glWindow-33)
dep(clientArea.y-37, clientArea.x-35)
appos(window_move-31, clientArea.y-37)
dep(event-15, OS.gdk-40)
num(window_resize-42, _-41)
dep(OS.gdk-40, window_resize-42)
nn(clientArea.height-48, glWindow-44)
dep(clientArea.height-48, clientArea.width-46)
appos(window_resize-42, clientArea.height-48)
dep(event-15, break-51)

I/PRP 'm/VBP not/RB an/DT X/gtk/glx/NN expert/NN ,/, but/CC I/PRP think/VBP what/WP 's/VBZ happening/VBG is/VBZ the/DT gdk/NN commands/NNS are/VBP n't/RB actually/RB making/VBG it/PRP to/TO the/DT xserver/NN before/IN my/PRP$ client/NN code/NN Paint/NN code/NN is/VBZ called/VBN ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP 'm) (RB not) (NP (DT an) (NN X/gtk/glx) (NN expert)))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP think) (SBAR (WHNP (WP what)) (S (VP (VBZ 's) (VP (VBG happening) (SBAR (S (VP (VBZ is) (NP (NP (DT the) (NN gdk)) (SBAR (S (NP (NNS commands)) (VP (VBP are) (RB n't) (ADVP (RB actually)) (VP (VBG making) (NP (PRP it)) (PP (TO to) (NP (DT the) (NN xserver))) (SBAR (IN before) (S (NP (PRP$ my) (NN client) (NN code) (NN Paint) (NN code)) (VP (VBZ is) (VP (VBN called))))))))))))))))))) (. .)))

root(ROOT-0, expert-6)
nsubj(expert-6, I-1)
cop(expert-6, 'm-2)
neg(expert-6, not-3)
det(expert-6, an-4)
nn(expert-6, X/gtk/glx-5)
nsubj(think-10, I-9)
conj_but(expert-6, think-10)
nsubj(happening-13, what-11)
aux(happening-13, 's-12)
ccomp(think-10, happening-13)
cop(gdk-16, is-14)
det(gdk-16, the-15)
ccomp(happening-13, gdk-16)
nsubj(making-21, commands-17)
aux(making-21, are-18)
neg(making-21, n't-19)
advmod(making-21, actually-20)
rcmod(gdk-16, making-21)
dobj(making-21, it-22)
det(xserver-25, the-24)
prep_to(making-21, xserver-25)
mark(called-33, before-26)
poss(code-31, my-27)
nn(code-31, client-28)
nn(code-31, code-29)
nn(code-31, Paint-30)
nsubjpass(called-33, code-31)
auxpass(called-33, is-32)
advcl(making-21, called-33)

Since/IN the/DT rendering/NN goes/VBZ through/IN a/DT DRI/NNP path/NN ,/, not/RB the/DT xserver/NN command/NN queue/NN ,/, it/PRP 's/VBZ a/DT race/NN condition/NN ,/, and/CC the/DT maximize/VB latency/NN is/VBZ long/RB enough/RB that/IN I/PRP lose/VBP ./. 

(ROOT (S (S (SBAR (IN Since) (S (NP (DT the) (NN rendering)) (VP (VBZ goes) (PP (IN through) (NP (NP (DT a) (NNP DRI) (NN path)) (, ,) (RB not) (NP (DT the) (NN xserver) (NN command) (NN queue))))))) (, ,) (NP (PRP it)) (VP (VBZ 's) (NP (DT a) (NN race) (NN condition)))) (, ,) (CC and) (S (NP (DT the)) (VP (VB maximize) (SBAR (S (NP (NN latency)) (VP (VBZ is) (ADVP (ADVP (RB long) (RB enough)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP lose)))))))))) (. .)))

root(ROOT-0, condition-20)
mark(goes-4, Since-1)
det(rendering-3, the-2)
nsubj(goes-4, rendering-3)
advcl(condition-20, goes-4)
det(path-8, a-6)
nn(path-8, DRI-7)
prep_through(goes-4, path-8)
neg(queue-14, not-10)
det(queue-14, the-11)
nn(queue-14, xserver-12)
nn(queue-14, command-13)
appos(path-8, queue-14)
nsubj(condition-20, it-16)
cop(condition-20, 's-17)
det(condition-20, a-18)
nn(condition-20, race-19)
nsubj(maximize-24, the-23)
conj_and(condition-20, maximize-24)
nsubj(is-26, latency-25)
ccomp(maximize-24, is-26)
advmod(enough-28, long-27)
advmod(is-26, enough-28)
mark(lose-31, that-29)
nsubj(lose-31, I-30)
advcl(enough-28, lose-31)

To/TO make/VB a/DT long/JJ story/NN shorter/JJR ,/, adding/VBG a/DT OS.gdk/NN _/CD flush/NN (/-LRB- )/-RRB- after/IN the/DT OS.gdk/NNP _/CD window_resize/NN (/-LRB- )/-RRB- fixes/NNS my/PRP$ app/NN ./. 

(ROOT (S (VP (TO To) (VP (VB make) (S (NP (DT a) (JJ long) (NN story)) (ADJP (JJR shorter))) (, ,) (S (VP (VBG adding) (NP (NP (NP (DT a) (NN OS.gdk)) (NP (CD _) (NN flush))) (PRN (-LRB- -LRB-) (VP (-RRB- -RRB-) (PP (IN after) (NP (DT the) (NNP OS.gdk) (CD _) (NN window_resize) (-LRB- -LRB-)))) (-RRB- -RRB-)) (NP (NP (NNS fixes)) (NP (PRP$ my) (NN app)))))))) (. .)))

root(ROOT-0, make-2)
aux(make-2, To-1)
det(story-5, a-3)
amod(story-5, long-4)
nsubj(shorter-6, story-5)
xcomp(make-2, shorter-6)
xcomp(make-2, adding-8)
det(OS.gdk-10, a-9)
dobj(adding-8, OS.gdk-10)
num(flush-12, _-11)
dep(OS.gdk-10, flush-12)
dep(OS.gdk-10, after-15)
det(window_resize-19, the-16)
nn(window_resize-19, OS.gdk-17)
num(window_resize-19, _-18)
pobj(after-15, window_resize-19)
dep(OS.gdk-10, fixes-22)
poss(app-24, my-23)
dep(fixes-22, app-24)

Not/RB being/VBG a/DT GDK/NN guru/NN ,/, I/PRP do/VBP n't/RB know/VB if/IN unconditionally/RB calling/VBG the/DT flush/JJ works/NNS on/IN all/DT platforms/NNS ,/, but/CC I/PRP think/VBP something/NN like/IN that/DT is/VBZ needed/VBN on/IN X/NN at/IN least/JJS ./. 

(ROOT (S (S (S (RB Not) (VP (VBG being) (NP (DT a) (NN GDK) (NN guru)))) (, ,) (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB know) (SBAR (IN if) (S (ADVP (RB unconditionally)) (VP (VBG calling) (NP (DT the) (JJ flush) (NNS works)) (PP (IN on) (NP (DT all) (NNS platforms))))))))) (, ,) (CC but) (S (NP (PRP I)) (VP (VBP think) (NP (NN something)) (SBAR (IN like) (S (NP (DT that)) (VP (VBZ is) (VP (VBN needed) (PP (IN on) (NP (NP (NN X)) (ADVP (IN at) (JJS least)))))))))) (. .)))

root(ROOT-0, know-10)
neg(guru-5, Not-1)
cop(guru-5, being-2)
det(guru-5, a-3)
nn(guru-5, GDK-4)
vmod(know-10, guru-5)
nsubj(know-10, I-7)
aux(know-10, do-8)
neg(know-10, n't-9)
mark(calling-13, if-11)
advmod(calling-13, unconditionally-12)
advcl(know-10, calling-13)
det(works-16, the-14)
amod(works-16, flush-15)
dobj(calling-13, works-16)
det(platforms-19, all-18)
prep_on(calling-13, platforms-19)
nsubj(think-23, I-22)
conj_but(know-10, think-23)
dobj(think-23, something-24)
mark(needed-28, like-25)
nsubjpass(needed-28, that-26)
auxpass(needed-28, is-27)
advcl(think-23, needed-28)
prep_on(needed-28, X-30)
advmod(X-30, at-31)
pobj(at-31, least-32)

Digging/VBG 

(ROOT (S (VP (VBG Digging))))

root(ROOT-0, Digging-1)

