Build/VB 2.1/CD RC1/NN 

(ROOT (S (VP (VB Build) (NP (CD 2.1) (NN RC1)))))

root(ROOT-0, Build-1)
num(RC1-3, 2.1-2)
dobj(Build-1, RC1-3)

1/CD inside/IN a/DT method/NN type/NN "/`` new/JJ Runnable/JJ (/-LRB- "/'' 

(ROOT (NP (NP (CD 1)) (PP (IN inside) (NP (NP (DT a) (NN method) (NN type)) (`` ``) (NP (JJ new) (JJ Runnable) (-LRB- -LRB-)) ('' '')))))

root(ROOT-0, 1-1)
det(type-5, a-3)
nn(type-5, method-4)
prep_inside(1-1, type-5)
amod(Runnable-8, new-7)
dep(type-5, Runnable-8)

2/CD press/NN Ctrl/NN +/CC SPACE/NN 

(ROOT (NP (NP (CD 2) (NN press)) (NP (NP (NN Ctrl)) (CC +) (NP (NN SPACE)))))

root(ROOT-0, press-2)
num(press-2, 2-1)
dep(press-2, Ctrl-3)
dep(press-2, SPACE-5)
conj_+(Ctrl-3, SPACE-5)

==/NN >/JJR no/DT method/NN comment/NN for/IN run/NN (/-LRB- )/-RRB- 

(ROOT (PRN (NP (NP (ADJP (NN ==) (JJR >)) (DT no) (NN method) (NN comment)) (PP (IN for) (NP (NN run) (-LRB- -LRB-)))) (-RRB- -RRB-)))

root(ROOT-0, comment-5)
amod(comment-5, ==-1)
dep(==-1, >-2)
neg(comment-5, no-3)
nn(comment-5, method-4)
prep_for(comment-5, run-7)

Note/VB :/: method/NN comment/NN is/VBZ added/VBN in/IN this/DT scenario/NN :/: 

(ROOT (S (VP (VP (VB Note)) (: :) (NP (NP (NN method) (NN comment)) (SBAR (S (VP (VBZ is) (VP (VBN added) (PP (IN in) (NP (DT this) (NN scenario))))))))) (: :)))

root(ROOT-0, Note-1)
nn(comment-4, method-3)
dobj(Note-1, comment-4)
auxpass(added-6, is-5)
rcmod(comment-4, added-6)
det(scenario-9, this-8)
prep_in(added-6, scenario-9)

1/CD inside/IN a/DT method/NN type/NN "/`` new/JJ Runnable/JJ (/-LRB- )/-RRB- {/-LRB- "/'' 

(ROOT (NP (NP (CD 1)) (PP (IN inside) (NP (NP (DT a) (NN method) (NN type)) (`` ``) (NP (JJ new) (JJ Runnable) (-LRB- -LRB-)) (-RRB- -RRB-))) (-LRB- -LCB-) ('' '')))

root(ROOT-0, 1-1)
det(type-5, a-3)
nn(type-5, method-4)
prep_inside(1-1, type-5)
amod(Runnable-8, new-7)
dep(type-5, Runnable-8)

2/CD press/NN "/`` RETURN/NNP "/'' 

(ROOT (NP (NP (CD 2)) (NP (NN press) (`` ``) (NNP RETURN) ('' ''))))

root(ROOT-0, 2-1)
nn(RETURN-4, press-2)
dep(2-1, RETURN-4)

3/CD type/NN "/`` run/NN "/'' 

(ROOT (NP (NP (CD 3)) (NP (NN type) (`` ``) (NN run) ('' ''))))

root(ROOT-0, 3-1)
nn(run-4, type-2)
dep(3-1, run-4)

4/CD press/NN Ctrl/NN +/CC SPACE/NN 

(ROOT (NP (NP (CD 4) (NN press)) (NP (NP (NN Ctrl)) (CC +) (NP (NN SPACE)))))

root(ROOT-0, press-2)
num(press-2, 4-1)
dep(press-2, Ctrl-3)
dep(press-2, SPACE-5)
conj_+(Ctrl-3, SPACE-5)

5/CD select/JJ run/NN (/-LRB- )/-RRB- and/CC press/NN "/`` RETURN/NNP "/'' 

(ROOT (NP (NP (CD 5)) (NP (NP (JJ select) (NN run)) (-LRB- -LRB-) (NP (NP (-RRB- -RRB-)) (CC and) (NP (NN press) (`` ``) (NNP RETURN) ('' ''))))))

root(ROOT-0, 5-1)
amod(run-3, select-2)
dep(5-1, run-3)
nn(RETURN-9, press-7)
conj_and(-RRB--5, RETURN-9)

