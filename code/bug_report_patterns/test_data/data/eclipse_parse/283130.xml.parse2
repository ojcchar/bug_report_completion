Consider/VB the/DT following/VBG template/NN :/: 

(ROOT (S (VP (VB Consider) (NP (DT the) (VBG following) (NN template))) (: :)))

root(ROOT-0, Consider-1)
det(template-4, the-2)
amod(template-4, following-3)
dobj(Consider-1, template-4)

'/`` The/DT class/NN of/IN the/DT element/NN is/VBZ </JJR </JJR element.eClass/NN (/-LRB- )/-RRB- >/JJR >/JJR ./. '/'' 

(ROOT (S (`` `) (NP (NP (DT The) (NN class)) (PP (IN of) (NP (DT the) (NN element)))) (VP (VBZ is) (ADJP (ADJP (JJR <)) (JJR <)) (S (VP (NN element.eClass) (VP (-LRB- -LRB-) (-RRB- -RRB-) (ADJP (ADJP (JJR >)) (JJR >)))))) (. .) ('' ')))

root(ROOT-0, <-8)
det(class-3, The-2)
nsubj(<-8, class-3)
det(element-6, the-5)
prep_of(class-3, element-6)
cop(<-8, is-7)
dep(<-8, <-9)
dep(>-13, element.eClass-10)
ccomp(<-8, >-13)
dep(>-13, >-14)

./. 

(ROOT (NP (. .)))


This/DT statement/NN should/MD create/VB a/DT warning/NN ,/, because/IN EClassImpl/NN has/VBZ no/DT meaningful/JJ toString/NN (/-LRB- )/-RRB- implementation/NN ./. 

(ROOT (S (NP (DT This) (NN statement)) (VP (MD should) (VP (VB create) (NP (DT a) (NN warning)) (, ,) (PP (IN because) (PRN (S (NP (NN EClassImpl)) (VP (VBZ has) (NP (DT no) (JJ meaningful) (NN toString) (-LRB- -LRB-)))) (-RRB- -RRB-)) (NP (NN implementation))))) (. .)))

root(ROOT-0, create-4)
det(statement-2, This-1)
nsubj(create-4, statement-2)
aux(create-4, should-3)
det(warning-6, a-5)
dobj(create-4, warning-6)
nsubj(has-10, EClassImpl-9)
dep(create-4, has-10)
neg(toString-13, no-11)
amod(toString-13, meaningful-12)
dobj(has-10, toString-13)
prep_because(create-4, implementation-16)

Instead/RB the/DT template/NN should/MD read/VB (/-LRB- from/IN a/DT users/NNS point/NN of/IN view/NN )/-RRB- 

(ROOT (FRAG (ADVP (RB Instead)) (NP (DT the) (NN template) (SBAR (S (VP (MD should) (VP (VB read) (PRN (-LRB- -LRB-) (PP (IN from) (NP (NP (DT a) (NNS users) (NN point)) (PP (IN of) (NP (NN view))))) (-RRB- -RRB-)))))))))

root(ROOT-0, template-3)
dep(template-3, Instead-1)
det(template-3, the-2)
aux(read-5, should-4)
ccomp(template-3, read-5)
dep(read-5, from-7)
det(point-10, a-8)
nn(point-10, users-9)
pobj(from-7, point-10)
prep_of(point-10, view-12)

'/`` The/DT class/NN of/IN the/DT element/NN is/VBZ </JJR </JJR element.eClass/NN (/-LRB- )/-RRB- ./. 

(ROOT (S (`` `) (NP (NP (DT The) (NN class)) (PP (IN of) (NP (DT the) (NN element)))) (VP (VBZ is) (ADJP (JJR <) (SBAR (S (NP (JJR <) (NN element.eClass)) (VP (-LRB- -LRB-)))))) (-RRB- -RRB-) (. .)))

root(ROOT-0, <-8)
det(class-3, The-2)
nsubj(<-8, class-3)
det(element-6, the-5)
prep_of(class-3, element-6)
cop(<-8, is-7)
amod(element.eClass-10, <-9)
nsubj(-LRB--11, element.eClass-10)

getName/NN (/-LRB- )/-RRB- >/JJR >/JJR ./. '/'' 

(ROOT (S (VP (NN getName) (VP (-LRB- -LRB-) (-RRB- -RRB-) (ADJP (ADJP (JJR >)) (JJR >)))) (. .) ('' ')))

root(ROOT-0, >-4)
dep(>-4, getName-1)
dep(>-4, >-5)

./. 

(ROOT (NP (. .)))


This/DT validation/NN rule/NN has/VBZ to/TO be/VB configurable/JJ ./. 

(ROOT (S (NP (DT This) (NN validation) (NN rule)) (VP (VBZ has) (S (VP (TO to) (VP (VB be) (ADJP (JJ configurable)))))) (. .)))

root(ROOT-0, has-4)
det(rule-3, This-1)
nn(rule-3, validation-2)
nsubj(has-4, rule-3)
aux(configurable-7, to-5)
cop(configurable-7, be-6)
xcomp(has-4, configurable-7)

Clients/NNS must/MD be/VB able/JJ to/TO define/VB a/DT list/NN baseclasses/NNS ,/, that/WDT indeed/RB override/VBP toString/NN (/-LRB- )/-RRB- but/CC do/VBP not/RB provide/VB a/DT meaningful/JJ output/NN for/IN common/JJ usecases/NNS in/IN templates/NNS (/-LRB- EObjectImpl/NN ,/, AbstractList/NNP ,/, . . ./: )/-RRB- ./. 

(ROOT (S (NP (NNS Clients)) (VP (MD must) (VP (VB be) (ADJP (JJ able) (S (VP (TO to) (VP (VB define) (NP (NP (DT a) (NN list) (NNS baseclasses)) (, ,) (SBAR (WHNP (WDT that)) (S (ADVP (RB indeed)) (VP (VBP override) (NP (NP (NN toString)) (PRN (-LRB- -LRB-) (VP (VP (-RRB- -RRB-)) (CC but) (VP (VBP do) (RB not) (VP (VB provide) (NP (DT a) (JJ meaningful) (NN output)) (PP (IN for) (NP (NP (JJ common) (NNS usecases)) (PP (IN in) (NP (NP (NNS templates)) (-LRB- -LRB-) (NP (NN EObjectImpl) (, ,) (NNP AbstractList) (, ,)) (: ...)))))))) (-RRB- -RRB-))))))))))))) (. .)))

root(ROOT-0, able-4)
nsubj(able-4, Clients-1)
aux(able-4, must-2)
cop(able-4, be-3)
aux(define-6, to-5)
xcomp(able-4, define-6)
det(baseclasses-9, a-7)
nn(baseclasses-9, list-8)
dobj(define-6, baseclasses-9)
nsubj(override-13, that-11)
advmod(override-13, indeed-12)
rcmod(baseclasses-9, override-13)
dobj(override-13, toString-14)
aux(provide-20, do-18)
neg(provide-20, not-19)
conj_but(-RRB--16, provide-20)
det(output-23, a-21)
amod(output-23, meaningful-22)
dobj(provide-20, output-23)
amod(usecases-26, common-25)
prep_for(provide-20, usecases-26)
prep_in(usecases-26, templates-28)
nn(AbstractList-32, EObjectImpl-30)
dep(templates-28, AbstractList-32)

This/DT validation/NN is/VBZ enspecially/RB useful/JJ in/IN case/NN of/IN metamodel/NN refactorings/NNS ,/, e.g./FW replace/VB the/DT type/NN String/NNP of/IN property/NN '/`` table/NN '/'' with/IN a/DT type/NN '/`` Table/NNP '/'' ./. 

(ROOT (S (NP (DT This) (NN validation)) (VP (VBZ is) (ADJP (RB enspecially) (JJ useful) (PP (IN in) (NP (NP (NN case)) (PP (IN of) (NP (NP (NN metamodel) (NNS refactorings)) (, ,) (NP (FW e.g.))))))) (S (VP (VB replace) (S (NP (DT the) (NN type)) (NP (NP (NNP String)) (PP (IN of) (NP (NP (NN property) (`` `) (NN table) ('' ')) (PP (IN with) (NP (DT a) (NN type) (`` `) (NNP Table) ('' ')))))))))) (. .)))

root(ROOT-0, useful-5)
det(validation-2, This-1)
nsubj(useful-5, validation-2)
cop(useful-5, is-3)
advmod(useful-5, enspecially-4)
nn(refactorings-10, metamodel-9)
prep_in_case_of(useful-5, refactorings-10)
appos(refactorings-10, e.g.-12)
ccomp(useful-5, replace-13)
det(type-15, the-14)
nsubj(String-16, type-15)
xcomp(replace-13, String-16)
nn(table-20, property-18)
prep_of(String-16, table-20)
det(Table-26, a-23)
nn(Table-26, type-24)
prep_with(table-20, Table-26)

