I/PRP wish/VBP to/TO create/VB an/DT RCP/NN product/NN that/WDT does/VBZ not/RB include/VB JDT/NNP ,/, but/CC includes/VBZ other/JJ plug-ins/NNS such/JJ as/IN EMF/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP wish) (S (VP (TO to) (VP (VB create) (NP (NP (DT an) (NN RCP) (NN product)) (SBAR (WHNP (WDT that)) (S (VP (VP (VBZ does) (RB not) (VP (VB include) (NP (NNP JDT)))) (, ,) (CC but) (VP (VBZ includes) (NP (NP (JJ other) (NNS plug-ins)) (PP (JJ such) (IN as) (NP (NN EMF))))))))))))) (. .)))

root(ROOT-0, wish-2)
nsubj(wish-2, I-1)
aux(create-4, to-3)
xcomp(wish-2, create-4)
det(product-7, an-5)
nn(product-7, RCP-6)
dobj(create-4, product-7)
nsubj(include-11, that-8)
nsubj(includes-15, that-8)
aux(include-11, does-9)
neg(include-11, not-10)
rcmod(product-7, include-11)
dobj(include-11, JDT-12)
rcmod(product-7, includes-15)
conj_but(include-11, includes-15)
amod(plug-ins-17, other-16)
dobj(includes-15, plug-ins-17)
prep_such_as(plug-ins-17, EMF-20)

Unfortunately/RB EMF/NN ,/, and/CC my/PRP$ plug-in/JJ ,/, has/VBZ a/DT dependency/NN on/IN ANT/NNP ,/, which/WDT has/VBZ a/DT dependency/NN on/IN JDT/NNP ./. 

(ROOT (S (ADVP (RB Unfortunately)) (NP (NP (NN EMF)) (, ,) (CC and) (NP (PRP$ my) (JJ plug-in)) (, ,)) (VP (VBZ has) (NP (NP (DT a) (NN dependency)) (PP (IN on) (NP (NP (NNP ANT)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (NP (DT a) (NN dependency)) (PP (IN on) (NP (NNP JDT))))))))))) (. .)))

root(ROOT-0, has-8)
advmod(has-8, Unfortunately-1)
nsubj(has-8, EMF-2)
poss(plug-in-6, my-5)
conj_and(EMF-2, plug-in-6)
nsubj(has-8, plug-in-6)
det(dependency-10, a-9)
dobj(has-8, dependency-10)
prep_on(dependency-10, ANT-12)
nsubj(has-15, which-14)
rcmod(ANT-12, has-15)
det(dependency-17, a-16)
dobj(has-15, dependency-17)
prep_on(dependency-17, JDT-19)

I/PRP do/VBP n't/RB see/VB why/WRB I/PRP need/VBP to/TO include/VB the/DT JDT/NNP feature/NN just/RB to/TO have/VB ANT/NNP ./. 

(ROOT (S (NP (PRP I)) (VP (VBP do) (RB n't) (VP (VB see) (SBAR (WHADVP (WRB why)) (S (NP (PRP I)) (VP (VBP need) (S (VP (TO to) (VP (VB include) (NP (DT the) (NNP JDT) (NN feature)) (ADVP (RB just)) (S (VP (TO to) (VP (VB have) (NP (NNP ANT))))))))))))) (. .)))

root(ROOT-0, see-4)
nsubj(see-4, I-1)
aux(see-4, do-2)
neg(see-4, n't-3)
advmod(need-7, why-5)
nsubj(need-7, I-6)
advcl(see-4, need-7)
aux(include-9, to-8)
xcomp(need-7, include-9)
det(feature-12, the-10)
nn(feature-12, JDT-11)
dobj(include-9, feature-12)
advmod(include-9, just-13)
aux(have-15, to-14)
vmod(include-9, have-15)
dobj(have-15, ANT-16)

