+/CC +/CC +/CC This/DT bug/NN was/VBD initially/RB created/VBN as/IN a/DT clone/NN of/IN Bug/NN #/# 305858/CD +/CC +/CC +/CC >/JJR Apart/RB from/IN the/DT NPE/NN there/RB seems/VBZ to/TO be/VB no/DT good/JJ reason/NN why/WRB null/NN should/MD not/RB be/VB >/JJR allowed/VBN ./. 

(ROOT (S (NP (CC +)) (NP (CC +)) (VP (CC +) (VP (ADVP (DT This) (NN bug)) (VBD was) (VP (ADVP (RB initially)) (VBN created) (PP (IN as) (NP (NP (DT a) (NN clone)) (PP (IN of) (NP (NP (NN Bug)) (SBAR (S (NP (NP (QP (# #) (CD 305858)) (CC +)) (SBAR (S (NP (CC +)) (VP (CC +) (VP (ADVP (ADJP (JJR >)) (ADVP (ADVP (RB Apart)) (PP (IN from) (NP (DT the) (NN NPE))))) (NP-TMP (RB there)) (VP (VBZ seems) (S (VP (TO to) (VP (VB be) (NP (NP (DT no) (JJ good) (NN reason)) (SBAR (WHADVP (WRB why)) (S (NP (NN null)) (VP (MD should) (RB not) (VP (VB be) (ADJP (JJR >)))))))))))))))) (VP (VBN allowed))))))))))) (. .)))

root(ROOT-0, created-8)
nsubjpass(created-8, +-1)
nsubjpass(created-8, +-2)
cc(created-8, +-3)
det(bug-5, This-4)
advmod(created-8, bug-5)
auxpass(created-8, was-6)
advmod(created-8, initially-7)
det(clone-11, a-10)
prep_as(created-8, clone-11)
prep_of(clone-11, Bug-13)
number(305858-15, #-14)
nsubj(allowed-37, 305858-15)
cc(305858-15, +-16)
nsubj(seems-25, +-17)
cc(seems-25, +-18)
dep(seems-25, >-19)
det(NPE-23, the-22)
prep_apart_from(seems-25, NPE-23)
tmod(seems-25, there-24)
rcmod(305858-15, seems-25)
aux(reason-30, to-26)
cop(reason-30, be-27)
neg(reason-30, no-28)
amod(reason-30, good-29)
xcomp(seems-25, reason-30)
advmod(>-36, why-31)
nsubj(>-36, null-32)
aux(>-36, should-33)
neg(>-36, not-34)
cop(>-36, be-35)
rcmod(reason-30, >-36)
rcmod(Bug-13, allowed-37)

There/EX 's/VBZ a/DT problem/NN with/IN relaxing/VBG scheduling/NN rules/NNS ,/, and/CC allowing/VBG some/DT builders/NNS to/TO return/VB null/JJ ./. 

(ROOT (S (NP (EX There)) (VP (VBZ 's) (NP (NP (DT a) (NN problem)) (PP (IN with) (S (VP (VP (VBG relaxing) (NP (NN scheduling) (NNS rules))) (, ,) (CC and) (VP (VBG allowing) (NP (DT some) (NNS builders)) (S (VP (TO to) (VP (VB return) (ADJP (JJ null))))))))))) (. .)))

root(ROOT-0, 's-2)
expl('s-2, There-1)
det(problem-4, a-3)
nsubj('s-2, problem-4)
prepc_with(problem-4, relaxing-6)
nn(rules-8, scheduling-7)
dobj(relaxing-6, rules-8)
prepc_with(problem-4, allowing-11)
conj_and(relaxing-6, allowing-11)
det(builders-13, some-12)
dobj(allowing-11, builders-13)
aux(return-15, to-14)
xcomp(allowing-11, return-15)
acomp(return-15, null-16)

If/IN the/DT project/NN contains/VBZ a/DT combination/NN of/IN builders/NNS :/: 

(ROOT (SBAR (IN If) (S (NP (DT the) (NN project)) (VP (VBZ contains) (NP (NP (DT a) (NN combination)) (PP (IN of) (NP (NNS builders)) (: :)))))))

root(ROOT-0, contains-4)
mark(contains-4, If-1)
det(project-3, the-2)
nsubj(contains-4, project-3)
det(combination-6, a-5)
dobj(contains-4, combination-6)
prep_of(combination-6, builders-8)

(/-LRB- 1/LS )/-RRB- at/IN least/JJS one/CD returns/NNS null/JJ (/-LRB- and/CC expects/VBZ to/TO modify/VB resources/NNS )/-RRB- 

(ROOT (S (NP (NP (-LRB- -LRB-) (LS 1) (-RRB- -RRB-)) (ADJP (ADJP (NP (QP (IN at) (JJS least) (CD one)) (NNS returns)) (JJ null)) (PRN (-LRB- -LRB-) (CC and) (VP (VBZ expects) (S (VP (TO to) (VP (VB modify) (NP (NNS resources)))))) (-RRB- -RRB-))))))

root(ROOT-0, 1-2)
quantmod(one-6, at-4)
mwe(at-4, least-5)
num(returns-7, one-6)
npadvmod(null-8, returns-7)
amod(1-2, null-8)
cc(expects-11, and-10)
dep(null-8, expects-11)
aux(modify-13, to-12)
xcomp(expects-11, modify-13)
dobj(modify-13, resources-14)

(/-LRB- 2/LS )/-RRB- at/IN least/JJS one/CD specified/VBN a/DT scheduling/NN rule/NN 

(ROOT (S (NP (NP (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-)) (NP (IN at)) (PP (NP (NP (JJS least)) (X (NP (CD one)))) (NP (NP (VBN specified)) (NP (DT a) (NN scheduling))))) (NP (NN rule)))))

root(ROOT-0, at-4)
dep(at-4, 2-2)
prep(at-4, least-5)
dep(least-5, one-6)
dep(least-5, specified-7)
det(scheduling-9, a-8)
dep(specified-7, scheduling-9)
dep(at-4, rule-10)

The/DT build/VB will/MD fail/VB ,/, as/IN the/DT build/VBP MultiRule/JJ representing/VBG (/-LRB- 2/CD )/-RRB- does/VBZ n't/RB contain/VB the/DT resources/NNS which/WDT will/MD be/VB modified/VBN by/IN the/DT builder/NN (/-LRB- 1/CD )/-RRB- ./. 

(ROOT (S (NP (DT The) (S (S (VP (VB build) (SBAR (S (VP (MD will) (VP (VB fail))))))) (, ,) (NP (IN as) (DT the)) (VP (VBP build) (ADJP (JJ MultiRule) (S (VP (VBG representing) (PRN (-LRB- -LRB-) (NP-TMP (CD 2)) (-RRB- -RRB-)))))))) (VP (VBZ does) (RB n't) (VP (VB contain) (NP (NP (DT the) (NNS resources)) (SBAR (WHNP (WDT which)) (S (VP (MD will) (VP (VB be) (VP (VBN modified) (PP (IN by) (NP (NP (DT the) (NN builder)) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)))))))))))) (. .)))

root(ROOT-0, contain-16)
nsubj(contain-16, The-1)
ccomp(build-8, build-2)
aux(fail-4, will-3)
ccomp(build-2, fail-4)
amod(the-7, as-6)
nsubj(build-8, the-7)
dep(The-1, build-8)
acomp(build-8, MultiRule-9)
dep(MultiRule-9, representing-10)
dep(representing-10, 2-12)
aux(contain-16, does-14)
neg(contain-16, n't-15)
det(resources-18, the-17)
dobj(contain-16, resources-18)
nsubjpass(modified-22, which-19)
aux(modified-22, will-20)
auxpass(modified-22, be-21)
rcmod(resources-18, modified-22)
det(builder-25, the-24)
agent(modified-22, builder-25)
appos(builder-25, 1-27)

The/DT problem/NN with/IN the/DT API/NNP is/VBZ that/IN builders/NNS (/-LRB- 1/CD )/-RRB- &/CC (/-LRB- 2/LS )/-RRB- do/VBP n't/RB know/VB anything/NN about/IN each/DT other/JJ ./. 

(ROOT (S (NP (NP (DT The) (NN problem)) (SBAR (IN with) (S (NP (DT the) (NNP API)) (VP (VBZ is) (ADVP (IN that)) (NP (NP (NP (NNS builders)) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) (CC &) (NP (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))))))) (VP (VBP do) (RB n't) (VP (VB know) (NP (NN anything)) (PP (IN about) (NP (DT each) (JJ other))))) (. .)))

root(ROOT-0, know-18)
det(problem-2, The-1)
nsubj(know-18, problem-2)
mark(builders-8, with-3)
det(API-5, the-4)
nsubj(builders-8, API-5)
cop(builders-8, is-6)
advmod(builders-8, that-7)
dep(problem-2, builders-8)
appos(builders-8, 1-10)
dep(problem-2, 2-14)
conj_and(builders-8, 2-14)
aux(know-18, do-16)
neg(know-18, n't-17)
dobj(know-18, anything-19)
det(other-22, each-21)
prep_about(know-18, other-22)

Builder/NN (/-LRB- 1/CD )/-RRB- is/VBZ using/VBG the/DT API/NNP to/TO be/VB as/IN flexible/JJ as/IN possible/JJ --/: do/VBP n't/RB lock/VB anything/NN --/: and/CC Builder/NN (/-LRB- 2/CD )/-RRB- wants/VBZ some/DT subset/NN of/IN the/DT tree/NN to/TO be/VB locked/VBN ./. 

(ROOT (S (S (NP (NP (NN Builder)) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-))) (VP (VBZ is) (VP (VBG using) (S (NP (DT the) (NNP API)) (VP (TO to) (VP (VB be) (ADJP (IN as) (JJ flexible) (PP (IN as) (ADJP (JJ possible)))))))))) (PRN (: --) (S (VP (VBP do) (RB n't) (VP (VB lock) (NP (NN anything))))) (: --)) (CC and) (S (NP (NP (NN Builder)) (PRN (-LRB- -LRB-) (NP (CD 2)) (-RRB- -RRB-))) (VP (VBZ wants) (NP (NP (DT some) (NN subset)) (PP (IN of) (NP (DT the) (NN tree) (S (VP (TO to) (VP (VB be) (VP (VBN locked)))))))))) (. .)))

root(ROOT-0, using-6)
nsubj(using-6, Builder-1)
appos(Builder-1, 1-3)
aux(using-6, is-5)
det(API-8, the-7)
dobj(using-6, API-8)
aux(flexible-12, to-9)
cop(flexible-12, be-10)
dep(flexible-12, as-11)
xcomp(using-6, flexible-12)
prep_as(flexible-12, possible-14)
aux(lock-18, do-16)
neg(lock-18, n't-17)
dep(using-6, lock-18)
dobj(lock-18, anything-19)
nsubj(wants-26, Builder-22)
appos(Builder-22, 2-24)
conj_and(using-6, wants-26)
det(subset-28, some-27)
dobj(wants-26, subset-28)
det(tree-31, the-30)
prep_of(subset-28, tree-31)
aux(locked-34, to-32)
auxpass(locked-34, be-33)
vmod(tree-31, locked-34)

The/DT MultiRule/NNP generated/VBN is/VBZ n't/RB compatible/JJ with/IN builder/NN (/-LRB- 1/CD )/-RRB- ./. 

(ROOT (S (NP (NP (DT The) (NNP MultiRule)) (VP (VBN generated))) (VP (VBZ is) (RB n't) (ADJP (JJ compatible) (PP (IN with) (NP (NP (NN builder)) (PRN (-LRB- -LRB-) (NP (CD 1)) (-RRB- -RRB-)))))) (. .)))

root(ROOT-0, compatible-6)
det(MultiRule-2, The-1)
nsubj(compatible-6, MultiRule-2)
vmod(MultiRule-2, generated-3)
cop(compatible-6, is-4)
neg(compatible-6, n't-5)
prep_with(compatible-6, builder-8)
appos(builder-8, 1-10)

Problems/NNS occurred/VBD building/VBG the/DT selected/VBN resources/NNS ./. 

(ROOT (S (NP (NNS Problems)) (VP (VBD occurred) (S (VP (VBG building) (NP (DT the) (VBN selected) (NNS resources))))) (. .)))

root(ROOT-0, occurred-2)
nsubj(occurred-2, Problems-1)
xcomp(occurred-2, building-3)
det(resources-6, the-4)
amod(resources-6, selected-5)
dobj(building-3, resources-6)

Errors/NNS running/VBG builder/NN '/`` CDT/NNP Builder/NNP '/POS on/IN project/NN '/`` SrpDownlink/NNP '/'' ./. 

(ROOT (NP (NP (NNS Errors)) (VP (VBG running) (S (NP (NN builder)) (`` `) (NP (NP (NNP CDT) (NNP Builder) (POS ')) (PP (IN on) (NP (NP (NN project)) (`` `) (NNP SrpDownlink) ('' ')))))) (. .)))

root(ROOT-0, Errors-1)
vmod(Errors-1, running-2)
dep(Builder-6, builder-3)
nn(Builder-6, CDT-5)
dep(running-2, Builder-6)
nn(SrpDownlink-11, project-9)
prep_on(Builder-6, SrpDownlink-11)

Attempted/VBN to/TO beginRule/NNP :/: P/p1/NN ,/, does/VBZ not/RB match/VB outer/JJ scope/NN rule/NN :/: MultiRule/JJ [/-LRB- F/p1/Debug/NN ]/-RRB- Attempted/VBD to/TO beginRule/NNP :/: P/p1/NN ,/, does/VBZ not/RB match/VB outer/JJ scope/NN rule/NN :/: MultiRule/JJ [/-LRB- F/p1/Debug/NN ]/-RRB- Attempted/VBD to/TO beginRule/NNP :/: P/p1/NN ,/, does/VBZ not/RB match/VB outer/JJ scope/NN rule/NN :/: MultiRule/JJ [/-LRB- F/p1/Debug/NN ]/-RRB- Attempted/VBD to/TO beginRule/NNP :/: P/p1/NN ,/, does/VBZ not/RB match/VB outer/JJ scope/NN rule/NN :/: MultiRule/JJ [/-LRB- F/p1/Debug/NN ]/-RRB- Errors/NNS running/VBG builder/NN '/`` Scanner/NNP Configuration/NNP Builder/NNP '/POS on/IN project/NN '/`` SrpDownlink/NNP '/'' ./. 

(ROOT (S (S (S (VP (VBN Attempted) (PP (TO to) (NP (NP (NNP beginRule)) (: :) (NP (NN P/p1)) (, ,))))) (VP (VBZ does) (RB not) (VP (VB match) (NP (JJ outer) (NN scope) (NN rule))))) (: :) (S (NP (JJ MultiRule) (-LRB- -LSB-) (NN F/p1/Debug) (-RRB- -RSB-)) (VP (VP (VBD Attempted) (PP (TO to) (NP (NNP beginRule)))) (: :) (VP (NN P/p1)) (, ,) (VP (VBZ does) (RB not) (VP (VB match) (NP (JJ outer) (NN scope) (NN rule)))) (: :) (VP (ADJP (JJ MultiRule)) (PP (-LRB- -LSB-) (NP (NN F/p1/Debug)))) (-RRB- -RSB-) (VP (VBD Attempted) (PP (TO to) (NP (NNP beginRule)))) (: :) (VP (NN P/p1)) (, ,) (VP (VBZ does) (RB not) (VP (VB match) (NP (JJ outer) (NN scope) (NN rule)))) (: :) (VP (ADJP (JJ MultiRule)) (PP (-LRB- -LSB-) (NP (NN F/p1/Debug)))) (-RRB- -RSB-) (VP (VBD Attempted) (PP (TO to) (NP (NNP beginRule)))) (: :) (VP (NN P/p1)) (, ,) (VP (VBZ does) (RB not) (VP (VB match) (NP (JJ outer) (NN scope) (NN rule)))) (: :) (NP (NP (JJ MultiRule) (-LRB- -LSB-) (NN F/p1/Debug) (-RRB- -RSB-) (NNS Errors)) (VP (VBG running) (S (NP (NN builder)) (`` `) (NP (NP (NNP Scanner) (NNP Configuration) (NNP Builder) (POS ')) (PP (IN on) (NP (NP (NN project)) (`` `) (NNP SrpDownlink) ('' '))))))))) (. .)))

root(ROOT-0, match-9)
csubj(match-9, Attempted-1)
prep_to(Attempted-1, beginRule-3)
dep(beginRule-3, P/p1-5)
aux(match-9, does-7)
neg(match-9, not-8)
amod(rule-12, outer-10)
nn(rule-12, scope-11)
dobj(match-9, rule-12)
amod(F/p1/Debug-16, MultiRule-14)
punct(F/p1/Debug-16, -LSB--15)
nsubj(Attempted-18, F/p1/Debug-16)
punct(F/p1/Debug-16, -RSB--17)
parataxis(match-9, Attempted-18)
prep_to(Attempted-18, beginRule-20)
dep(Attempted-18, P/p1-22)
aux(match-26, does-24)
neg(match-26, not-25)
dep(Attempted-18, match-26)
amod(rule-29, outer-27)
nn(rule-29, scope-28)
dobj(match-26, rule-29)
dep(Attempted-18, MultiRule-31)
punct(F/p1/Debug-33, -LSB--32)
prep(MultiRule-31, F/p1/Debug-33)
punct(Attempted-18, -RSB--34)
dep(Attempted-18, Attempted-35)
prep_to(Attempted-35, beginRule-37)
dep(Attempted-18, P/p1-39)
aux(match-43, does-41)
neg(match-43, not-42)
dep(Attempted-18, match-43)
amod(rule-46, outer-44)
nn(rule-46, scope-45)
dobj(match-43, rule-46)
dep(Attempted-18, MultiRule-48)
punct(F/p1/Debug-50, -LSB--49)
prep(MultiRule-48, F/p1/Debug-50)
punct(Attempted-18, -RSB--51)
dep(Attempted-18, Attempted-52)
prep_to(Attempted-52, beginRule-54)
dep(Attempted-18, P/p1-56)
aux(match-60, does-58)
neg(match-60, not-59)
dep(Attempted-18, match-60)
amod(rule-63, outer-61)
nn(rule-63, scope-62)
dobj(match-60, rule-63)
amod(Errors-69, MultiRule-65)
punct(Errors-69, -LSB--66)
nn(Errors-69, F/p1/Debug-67)
punct(Errors-69, -RSB--68)
dobj(Attempted-18, Errors-69)
vmod(Errors-69, running-70)
dep(Builder-75, builder-71)
nn(Builder-75, Scanner-73)
nn(Builder-75, Configuration-74)
dep(running-70, Builder-75)
nn(SrpDownlink-80, project-78)
prep_on(Builder-75, SrpDownlink-80)

Attempted/VBN to/TO beginRule/NN :/: R/NN //: ,/, does/VBZ not/RB match/VB outer/JJ scope/NN rule/NN :/: MultiRule/JJ [/-LRB- F/p1/Debug/NN ]/-RRB- 

(ROOT (S (S (VP (VBN Attempted) (PP (TO to) (NP (NP (NN beginRule)) (PRN (: :) (NP (NN R)) (: /)))))) (, ,) (VP (VBZ does) (RB not) (VP (VB match) (NP (NP (JJ outer) (NN scope) (NN rule)) (: :) (NP (JJ MultiRule) (-LRB- -LSB-) (NN F/p1/Debug))))) (-RRB- -RSB-)))

root(ROOT-0, match-10)
dep(match-10, Attempted-1)
prep_to(Attempted-1, beginRule-3)
dep(beginRule-3, R-5)
punct(R-5, /-6)
aux(match-10, does-8)
neg(match-10, not-9)
amod(rule-13, outer-11)
nn(rule-13, scope-12)
dobj(match-10, rule-13)
amod(F/p1/Debug-17, MultiRule-15)
punct(F/p1/Debug-17, -LSB--16)
dep(rule-13, F/p1/Debug-17)
punct(match-10, -RSB--18)

