Currently/RB it/PRP is/VBZ not/RB possible/JJ to/TO use/VB one/CD of/IN the/DT installed/VBN JREs/NNS when/WRB I/PRP want/VBP to/TO use/VB (/-LRB- i.e./FW specify/VB on/IN the/DT build/VBP path/NN )/-RRB- another/DT JRE/NN than/IN the/DT one/CD specified/VBN by/IN JRE_LIB/NN for/IN a/DT specific/JJ project/NN ./. 

(ROOT (S (ADVP (RB Currently)) (NP (PRP it)) (VP (VBZ is) (RB not) (ADJP (JJ possible) (S (VP (TO to) (VP (VB use) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (VBN installed) (NNS JREs)))))))) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP want) (S (VP (TO to) (VP (VB use) (PRN (-LRB- -LRB-) (S (NP (FW i.e.)) (VP (VB specify) (SBAR (S (NP (IN on) (DT the)) (VP (VBP build) (NP (NN path))))))) (-RRB- -RRB-)) (NP (DT another) (NN JRE)) (PP (IN than) (NP (NP (DT the) (CD one)) (VP (VBN specified) (PP (IN by) (NP (NP (NN JRE_LIB)) (PP (IN for) (NP (DT a) (JJ specific) (NN project))))))))))))))) (. .)))

root(ROOT-0, possible-5)
advmod(possible-5, Currently-1)
nsubj(possible-5, it-2)
cop(possible-5, is-3)
neg(possible-5, not-4)
aux(use-7, to-6)
xcomp(possible-5, use-7)
dobj(use-7, one-8)
det(JREs-12, the-10)
amod(JREs-12, installed-11)
prep_of(one-8, JREs-12)
advmod(want-15, when-13)
nsubj(want-15, I-14)
advcl(possible-5, want-15)
aux(use-17, to-16)
xcomp(want-15, use-17)
nsubj(specify-20, i.e.-19)
parataxis(use-17, specify-20)
amod(the-22, on-21)
nsubj(build-23, the-22)
ccomp(specify-20, build-23)
dobj(build-23, path-24)
det(JRE-27, another-26)
dobj(use-17, JRE-27)
det(one-30, the-29)
prep_than(use-17, one-30)
vmod(one-30, specified-31)
agent(specified-31, JRE_LIB-33)
det(project-37, a-35)
amod(project-37, specific-36)
prep_for(JRE_LIB-33, project-37)

Also/RB ,/, it/PRP is/VBZ not/RB possible/JJ to/TO create/VB new/JJ classpath/NN variables/NNS that/WDT point/VBP to/use/NN one/CD of/IN the/DT installed/VBN JREs/NNS :/: I/PRP have/VBP to/TO enter/VB the/DT full/JJ path/NN for/IN ther/JJ library/NN and/CC the/DT JAR/NN ./. 

(ROOT (S (S (ADVP (RB Also)) (, ,) (NP (PRP it)) (VP (VBZ is) (RB not) (ADJP (JJ possible) (S (VP (TO to) (VP (VB create) (NP (NP (JJ new) (NN classpath) (NNS variables)) (SBAR (WHNP (WDT that)) (S (VP (VBP point) (NP (NP (NN to/use) (CD one)) (PP (IN of) (NP (DT the) (VBN installed) (NNS JREs)))))))))))))) (: :) (S (NP (PRP I)) (VP (VBP have) (S (VP (TO to) (VP (VB enter) (NP (DT the) (JJ full) (NN path)) (PP (IN for) (NP (NP (JJ ther) (NN library)) (CC and) (NP (DT the) (NN JAR))))))))) (. .)))

root(ROOT-0, possible-6)
advmod(possible-6, Also-1)
nsubj(possible-6, it-3)
cop(possible-6, is-4)
neg(possible-6, not-5)
aux(create-8, to-7)
xcomp(possible-6, create-8)
amod(variables-11, new-9)
nn(variables-11, classpath-10)
dobj(create-8, variables-11)
nsubj(point-13, that-12)
rcmod(variables-11, point-13)
dobj(point-13, to/use-14)
num(to/use-14, one-15)
det(JREs-19, the-17)
amod(JREs-19, installed-18)
prep_of(to/use-14, JREs-19)
nsubj(have-22, I-21)
parataxis(possible-6, have-22)
aux(enter-24, to-23)
xcomp(have-22, enter-24)
det(path-27, the-25)
amod(path-27, full-26)
dobj(enter-24, path-27)
amod(library-30, ther-29)
prep_for(enter-24, library-30)
det(JAR-33, the-32)
prep_for(enter-24, JAR-33)
conj_and(library-30, JAR-33)

It/PRP would/MD be/VB nice/JJ if/IN I/PRP would/MD have/VB to/TO enter/VB all/DT my/PRP$ installed/VBN JREs/NNS only/RB once/RB ./. 

(ROOT (S (NP (PRP It)) (VP (MD would) (VP (VB be) (ADJP (JJ nice)) (SBAR (IN if) (S (NP (PRP I)) (VP (MD would) (VP (VB have) (S (VP (TO to) (VP (VB enter) (NP (NP (DT all)) (PP (NP (PRP$ my) (VBN installed) (NNS JREs)) (PP (RB only) (ADVP (RB once)))))))))))))) (. .)))

root(ROOT-0, nice-4)
nsubj(nice-4, It-1)
aux(nice-4, would-2)
cop(nice-4, be-3)
mark(have-8, if-5)
nsubj(have-8, I-6)
aux(have-8, would-7)
advcl(nice-4, have-8)
aux(enter-10, to-9)
xcomp(have-8, enter-10)
dobj(enter-10, all-11)
poss(JREs-14, my-12)
amod(JREs-14, installed-13)
dep(only-15, JREs-14)
prep(all-11, only-15)
dep(only-15, once-16)

That/DT 's/VBZ what/WP I/PRP would/MD expect/VB from/IN the/DT Installed/VBN JREs/NN preference/NN page/NN ./. 

(ROOT (S (NP (DT That)) (VP (VBZ 's) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (MD would) (VP (VB expect) (PP (IN from) (NP (NP (DT the)) (VP (VBN Installed) (NP (NN JREs) (NN preference) (NN page)))))))))) (. .)))

root(ROOT-0, 's-2)
nsubj('s-2, That-1)
dobj(expect-6, what-3)
nsubj(expect-6, I-4)
aux(expect-6, would-5)
ccomp('s-2, expect-6)
prep_from(expect-6, the-8)
vmod(the-8, Installed-9)
nn(page-12, JREs-10)
nn(page-12, preference-11)
dobj(Installed-9, page-12)

NOTES/NNS :/: 

(ROOT (NP (NNS NOTES) (: :)))

root(ROOT-0, NOTES-1)

