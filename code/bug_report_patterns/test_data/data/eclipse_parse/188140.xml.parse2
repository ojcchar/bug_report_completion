Build/VB ID/NNP :/: I20061214-1445/NN 

(ROOT (S (VP (VB Build) (NP (NP (NNP ID)) (: :) (NP (NN I20061214-1445))))))

root(ROOT-0, Build-1)
dobj(Build-1, ID-2)
dep(ID-2, I20061214-1445-4)

Steps/NNS To/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO To) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, To-2)

1/CD Create/VB Activity/NN diagram/NN ./. 

(ROOT (S (NP (CD 1)) (VP (VB Create) (NP (NN Activity) (NN diagram))) (. .)))

root(ROOT-0, Create-2)
nsubj(Create-2, 1-1)
nn(diagram-4, Activity-3)
dobj(Create-2, diagram-4)

Create/VB local/JJ post/NN condition/NN ./. 

(ROOT (S (VP (VB Create) (NP (JJ local) (NN post) (NN condition))) (. .)))

root(ROOT-0, Create-1)
amod(condition-4, local-2)
nn(condition-4, post-3)
dobj(Create-1, condition-4)

2/CD Create/VB Activity/NN and/CC any/DT Action/NNP in/IN it/PRP ./. 

(ROOT (S (NP (CD 2)) (VP (VB Create) (NP (NP (NN Activity)) (CC and) (NP (NP (DT any) (NNP Action)) (PP (IN in) (NP (PRP it)))))) (. .)))

root(ROOT-0, Create-2)
nsubj(Create-2, 2-1)
dobj(Create-2, Activity-3)
det(Action-6, any-5)
dobj(Create-2, Action-6)
conj_and(Activity-3, Action-6)
prep_in(Action-6, it-8)

3/CD Create/VB Constraint/NN link/NN from/IN Action/NNP to/TO Precondition/NNP 

(ROOT (FRAG (NP (CD 3)) (VP (VB Create) (NP (NN Constraint) (NN link)) (PP (IN from) (NP (NNP Action))) (PP (TO to) (NP (NNP Precondition))))))

root(ROOT-0, 3-1)
dep(3-1, Create-2)
nn(link-4, Constraint-3)
dobj(Create-2, link-4)
prep_from(Create-2, Action-6)
prep_to(Create-2, Precondition-8)

4/CD Close/JJ diagram/NN and/CC simply/RB open/VB it/PRP again/RB ./. 

(ROOT (S (NP (NP (CD 4)) (UCP (NP (JJ Close) (NN diagram)) (CC and) (ADVP (RB simply)))) (VP (VB open) (NP (PRP it)) (ADVP (RB again))) (. .)))

root(ROOT-0, open-6)
nsubj(open-6, 4-1)
amod(diagram-3, Close-2)
dep(4-1, diagram-3)
cc(diagram-3, and-4)
advmod(diagram-3, simply-5)
dobj(open-6, it-7)
advmod(open-6, again-8)

There/EX are/VBP two/CD local/JJ _/NN pre/JJ _/NN conditions/NNS ,/, one/CD with/IN link/NN ./. 

(ROOT (S (NP (EX There)) (VP (VBP are) (NP (NP (CD two) (JJ local) (NN _) (JJ pre) (NN _) (NNS conditions)) (, ,) (NP (NP (CD one)) (PP (IN with) (NP (NN link)))))) (. .)))

root(ROOT-0, are-2)
expl(are-2, There-1)
num(conditions-8, two-3)
amod(conditions-8, local-4)
nn(conditions-8, _-5)
amod(conditions-8, pre-6)
nn(conditions-8, _-7)
nsubj(are-2, conditions-8)
appos(conditions-8, one-10)
prep_with(one-10, link-12)

Diagram/NN is/VBZ marked/VBN as/RB changed/VBN ./. 

(ROOT (S (NP (NN Diagram)) (VP (VBZ is) (VP (VBN marked) (NP (ADJP (RB as) (VBN changed))))) (. .)))

root(ROOT-0, marked-3)
nsubjpass(marked-3, Diagram-1)
auxpass(marked-3, is-2)
advmod(changed-5, as-4)
dobj(marked-3, changed-5)

After/IN diagram/NN save/IN it/PRP is/VBZ not/RB possible/JJ to/TO open/VB model/NN (/-LRB- ./. 

(ROOT (S (PP (IN After) (NP (NP (NN diagram)) (PP (IN save)))) (NP (PRP it)) (VP (VBZ is) (RB not) (ADJP (JJ possible) (S (VP (TO to) (VP (VB open) (NP (NN model) (-LRB- -LRB-))))))) (. .)))

root(ROOT-0, possible-7)
prep_after(possible-7, diagram-2)
prep(diagram-2, save-3)
nsubj(possible-7, it-4)
cop(possible-7, is-5)
neg(possible-7, not-6)
aux(open-9, to-8)
xcomp(possible-7, open-9)
dobj(open-9, model-10)

uml/NN )/-RRB- file/NN ./. 

(ROOT (S (NP (NN uml) (-RRB- -RRB-)) (VP (NN file)) (. .)))

root(ROOT-0, file-3)
nsubj(file-3, uml-1)

Details/NNS in/IN editor/NN shows/VBZ exception/NN 

(ROOT (S (NP (NP (NNS Details)) (PP (IN in) (NP (NN editor)))) (VP (VBZ shows) (NP (NN exception)))))

root(ROOT-0, shows-4)
nsubj(shows-4, Details-1)
prep_in(Details-1, editor-3)
dobj(shows-4, exception-5)

More/JJR information/NN :/: 

(ROOT (NP (NP (JJR More) (NN information)) (: :)))

root(ROOT-0, information-2)
amod(information-2, More-1)

