in/IN a/DT junit/NN test/NN run/NN ,/, I/PRP get/VBP the/DT following/VBG stack/VB trace/NN 

(ROOT (S (PP (IN in) (NP (DT a) (NN junit) (NN test) (NN run))) (, ,) (NP (PRP I)) (VP (VBP get) (S (NP (DT the) (VBG following)) (VP (VB stack) (NP (NN trace)))))))

root(ROOT-0, get-8)
det(run-5, a-2)
nn(run-5, junit-3)
nn(run-5, test-4)
prep_in(get-8, run-5)
nsubj(get-8, I-7)
nsubj(stack-11, the-9)
amod(the-9, following-10)
ccomp(get-8, stack-11)
dobj(stack-11, trace-12)

While/IN for/IN all/PDT the/DT other/JJ source/NN files/NNS ,/, a/DT double/JJ click/VBP brings/VBZ me/PRP into/IN the/DT right/JJ place/NN in/IN the/DT source/NN file/NN ,/, understandably/RB this/DT does/VBZ n't/RB happen/VB for/IN the/DT "/`` Unknown/JJ Source/NN "/'' case/NN ./. 

(ROOT (S (SBAR (IN While) (S (PP (IN for) (NP (NP (PDT all) (DT the) (JJ other) (NN source) (NNS files)) (, ,) (NP (DT a) (JJ double)))) (VP (VBP click)))) (VP (VBZ brings) (NP (PRP me)) (PP (IN into) (NP (NP (DT the) (JJ right) (NN place)) (PP (IN in) (NP (DT the) (NN source) (NN file))))) (, ,) (ADVP (RB understandably) (SBAR (S (NP (DT this)) (VP (VBZ does) (RB n't) (VP (VB happen) (PP (IN for) (NP (DT the) (ADJP (`` ``) (JJ Unknown) (NN Source) ('' '')) (NN case))))))))) (. .)))

root(ROOT-0, brings-12)
mark(click-11, While-1)
predet(files-7, all-3)
det(files-7, the-4)
amod(files-7, other-5)
nn(files-7, source-6)
prep_for(click-11, files-7)
det(double-10, a-9)
appos(files-7, double-10)
csubj(brings-12, click-11)
dobj(brings-12, me-13)
det(place-17, the-15)
amod(place-17, right-16)
prep_into(brings-12, place-17)
det(file-21, the-19)
nn(file-21, source-20)
prep_in(place-17, file-21)
advmod(brings-12, understandably-23)
nsubj(happen-27, this-24)
aux(happen-27, does-25)
neg(happen-27, n't-26)
dep(understandably-23, happen-27)
det(case-34, the-29)
dep(Source-32, Unknown-31)
amod(case-34, Source-32)
prep_for(happen-27, case-34)

However/RB ,/, it/PRP would/MD be/VB great/JJ if/IN upon/IN a/DT double/JJ click/VBP there/RB ,/, the/DT Project/NNP properties-Java/NNP Build/NNP Path-Libraries/NNP would/MD open/VB the/DT concerned/JJ library/NN where/WRB I/PRP could/MD attach/VB the/DT source/NN ./. 

(ROOT (S (ADVP (RB However)) (, ,) (NP (PRP it)) (VP (MD would) (VP (VB be) (ADJP (JJ great)) (SBAR (IN if) (S (SBAR (IN upon) (S (NP (DT a) (JJ double)) (VP (VBP click) (ADVP (RB there))))) (, ,) (NP (DT the) (NNP Project) (NNP properties-Java) (NNP Build) (NNP Path-Libraries)) (VP (MD would) (VP (VB open) (NP (DT the) (JJ concerned) (NN library)) (SBAR (WHADVP (WRB where)) (S (NP (PRP I)) (VP (MD could) (VP (VB attach) (NP (DT the) (NN source)))))))))))) (. .)))

root(ROOT-0, great-6)
advmod(great-6, However-1)
nsubj(great-6, it-3)
aux(great-6, would-4)
cop(great-6, be-5)
mark(open-20, if-7)
mark(click-11, upon-8)
det(double-10, a-9)
nsubj(click-11, double-10)
advcl(open-20, click-11)
advmod(click-11, there-12)
det(Path-Libraries-18, the-14)
nn(Path-Libraries-18, Project-15)
nn(Path-Libraries-18, properties-Java-16)
nn(Path-Libraries-18, Build-17)
nsubj(open-20, Path-Libraries-18)
aux(open-20, would-19)
advcl(great-6, open-20)
det(library-23, the-21)
amod(library-23, concerned-22)
dobj(open-20, library-23)
advmod(attach-27, where-24)
nsubj(attach-27, I-25)
aux(attach-27, could-26)
advcl(open-20, attach-27)
det(source-29, the-28)
dobj(attach-27, source-29)

This/DT would/MD be/VB especially/RB useful/JJ if/IN the/DT ./. 

(ROOT (S (NP (DT This)) (VP (MD would) (VP (VB be) (ADJP (RB especially) (JJ useful)) (ADVP (IN if) (DT the)))) (. .)))

root(ROOT-0, useful-5)
nsubj(useful-5, This-1)
aux(useful-5, would-2)
cop(useful-5, be-3)
advmod(useful-5, especially-4)
advmod(useful-5, if-6)
dep(if-6, the-7)

class/NN file/NN is/VBZ present/JJ in/IN multiple/JJ ./. 

(ROOT (S (NP (NN class) (NN file)) (VP (VBZ is) (ADJP (JJ present) (PP (IN in) (ADJP (JJ multiple))))) (. .)))

root(ROOT-0, present-4)
nn(file-2, class-1)
nsubj(present-4, file-2)
cop(present-4, is-3)
prep_in(present-4, multiple-6)

jar/NN files/NNS because/IN it/PRP then/RB would/MD bring/VB to/TO the/DT one/CD implementation/NN that/WDT gets/VBZ really/RB used/VBN ./. 

(ROOT (S (NP (NP (NN jar) (NNS files)) (SBAR (IN because) (S (NP (PRP it)) (ADVP (RB then)) (VP (MD would) (VP (VB bring) (PP (TO to) (NP (NP (DT the) (CD one) (NN implementation)) (SBAR (WHNP (WDT that)) (S (VP (VBZ gets))))))))))) (ADVP (RB really)) (VP (VBN used)) (. .)))

root(ROOT-0, used-15)
nn(files-2, jar-1)
nsubj(used-15, files-2)
mark(bring-7, because-3)
nsubj(bring-7, it-4)
advmod(bring-7, then-5)
aux(bring-7, would-6)
rcmod(files-2, bring-7)
det(implementation-11, the-9)
num(implementation-11, one-10)
prep_to(bring-7, implementation-11)
nsubj(gets-13, that-12)
rcmod(implementation-11, gets-13)
advmod(used-15, really-14)

