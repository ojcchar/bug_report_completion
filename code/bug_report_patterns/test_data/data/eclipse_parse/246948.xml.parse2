Build/VB ID/NNP :/: WTP/NN 3.0.1/CD +/CC patches/NNS 

(ROOT (S (VP (VB Build) (NP (NP (NNP ID)) (: :) (NP (NP (NN WTP) (CD 3.0.1)) (CC +) (NP (NNS patches)))))))

root(ROOT-0, Build-1)
dobj(Build-1, ID-2)
dep(ID-2, WTP-4)
num(WTP-4, 3.0.1-5)
dep(ID-2, patches-7)
conj_+(WTP-4, patches-7)

Steps/NNS To/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO To) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, To-2)

We/PRP (/-LRB- IBM/NNP )/-RRB- are/VBP requesting/VBG an/DT official/JJ patch/NN for/IN this/DT based/VBN on/IN WTP/NN 3.0.1/CD ./. 

(ROOT (S (NP (PRP We) (PRN (-LRB- -LRB-) (NP (NNP IBM)) (-RRB- -RRB-))) (VP (VBP are) (VP (VBG requesting) (NP (DT an) (JJ official) (NN patch)) (PP (IN for) (NP (NP (DT this)) (VP (VBN based) (PP (IN on) (NP (NN WTP) (CD 3.0.1)))))))) (. .)))

root(ROOT-0, requesting-6)
nsubj(requesting-6, We-1)
appos(We-1, IBM-3)
aux(requesting-6, are-5)
det(patch-9, an-7)
amod(patch-9, official-8)
dobj(requesting-6, patch-9)
prep_for(requesting-6, this-11)
vmod(this-11, based-12)
prep_on(based-12, WTP-14)
num(WTP-14, 3.0.1-15)

I/PRP have/VBP attached/VBN a/DT patch/NN file/NN to/TO this/DT bug/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP have) (VP (VBN attached) (NP (DT a) (NN patch) (NN file)) (PP (TO to) (NP (DT this) (NN bug))))) (. .)))

root(ROOT-0, attached-3)
nsubj(attached-3, I-1)
aux(attached-3, have-2)
det(file-6, a-4)
nn(file-6, patch-5)
dobj(attached-3, file-6)
det(bug-9, this-8)
prep_to(attached-3, bug-9)

The/DT reason/NN this/DT is/VBZ important/JJ to/TO us/PRP is/VBZ that/IN user/NN can/MD easily/RB get/VB themselves/PRP into/IN a/DT state/NN where/WRB the/DT Dali/NNP tools/NNS ca/MD n't/RB connect/VB to/TO the/DT database/NN associated/VBN with/IN their/PRP$ JPA/NN project/NN ./. 

(ROOT (S (NP (NP (DT The) (NN reason)) (SBAR (S (NP (DT this)) (VP (VBZ is) (ADJP (JJ important) (PP (TO to) (NP (PRP us)))))))) (VP (VBZ is) (SBAR (IN that) (S (NP (NN user)) (VP (MD can) (ADVP (RB easily)) (VP (VB get) (NP (PRP themselves)) (PP (IN into) (NP (DT a) (NN state))) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NNP Dali) (NNS tools)) (VP (MD ca) (RB n't) (VP (VB connect) (PP (TO to) (NP (NP (DT the) (NN database)) (VP (VBN associated) (PP (IN with) (NP (PRP$ their) (NN JPA) (NN project))))))))))))))) (. .)))

root(ROOT-0, is-8)
det(reason-2, The-1)
nsubj(is-8, reason-2)
nsubj(important-5, this-3)
cop(important-5, is-4)
rcmod(reason-2, important-5)
prep_to(important-5, us-7)
mark(get-13, that-9)
nsubj(get-13, user-10)
aux(get-13, can-11)
advmod(get-13, easily-12)
ccomp(is-8, get-13)
dobj(get-13, themselves-14)
det(state-17, a-16)
prep_into(get-13, state-17)
advmod(connect-24, where-18)
det(tools-21, the-19)
nn(tools-21, Dali-20)
nsubj(connect-24, tools-21)
aux(connect-24, ca-22)
neg(connect-24, n't-23)
advcl(get-13, connect-24)
det(database-27, the-26)
prep_to(connect-24, database-27)
vmod(database-27, associated-28)
poss(project-32, their-30)
nn(project-32, JPA-31)
prep_with(associated-28, project-32)

The/DT only/JJ way/NN to/TO recover/VB is/VBZ to/TO restart/VB the/DT workbench/NN and/CC ensure/VB the/DT DTP/NN connection/NN profiles/NNS get/VBP loaded/VBN from/IN outside/IN the/DT Dali/NNP tools/NNS ./. 

(ROOT (S (NP (DT The) (JJ only) (NN way) (S (VP (TO to) (VP (VB recover))))) (VP (VBZ is) (S (VP (TO to) (VP (VP (VB restart) (NP (DT the) (NN workbench))) (CC and) (VP (VB ensure) (NP (NP (DT the) (NN DTP)) (SBAR (S (NP (NN connection) (NNS profiles)) (VP (VBP get) (ADJP (VBN loaded) (PP (IN from) (PP (IN outside) (NP (DT the) (NNP Dali) (NNS tools)))))))))))))) (. .)))

root(ROOT-0, is-6)
det(way-3, The-1)
amod(way-3, only-2)
nsubj(is-6, way-3)
aux(recover-5, to-4)
vmod(way-3, recover-5)
aux(restart-8, to-7)
xcomp(is-6, restart-8)
det(workbench-10, the-9)
dobj(restart-8, workbench-10)
xcomp(is-6, ensure-12)
conj_and(restart-8, ensure-12)
det(DTP-14, the-13)
dobj(ensure-12, DTP-14)
nn(profiles-16, connection-15)
nsubjpass(loaded-18, profiles-16)
auxpass(loaded-18, get-17)
rcmod(DTP-14, loaded-18)
prep(loaded-18, from-19)
pcomp(from-19, outside-20)
det(tools-23, the-21)
nn(tools-23, Dali-22)
pobj(outside-20, tools-23)

1/CD The/DT user/NN starts/VBZ Eclipse/NNP on/IN a/DT workspace/NN which/WDT already/RB has/VBZ a/DT connection/NN profile/NN defined/VBN ./. 

(ROOT (S (NP (NP (CD 1)) (NP (DT The) (NN user))) (VP (VBZ starts) (NP (NP (NNP Eclipse)) (PP (IN on) (NP (NP (DT a) (NN workspace)) (SBAR (WHNP (WDT which)) (S (ADVP (RB already)) (VP (VBZ has) (NP (NP (DT a) (NN connection) (NN profile)) (VP (VBN defined)))))))))) (. .)))

root(ROOT-0, starts-4)
nsubj(starts-4, 1-1)
det(user-3, The-2)
dep(1-1, user-3)
dobj(starts-4, Eclipse-5)
det(workspace-8, a-7)
prep_on(Eclipse-5, workspace-8)
nsubj(has-11, which-9)
advmod(has-11, already-10)
rcmod(workspace-8, has-11)
det(profile-14, a-12)
nn(profile-14, connection-13)
dobj(has-11, profile-14)
vmod(profile-14, defined-15)

They/PRP have/VBP not/RB set/VB a/DT password/NN for/IN the/DT database/NN ./. 

(ROOT (S (NP (PRP They)) (VP (VBP have) (RB not) (VP (VB set) (NP (NP (DT a) (NN password)) (PP (IN for) (NP (DT the) (NN database)))))) (. .)))

root(ROOT-0, set-4)
nsubj(set-4, They-1)
aux(set-4, have-2)
neg(set-4, not-3)
det(password-6, a-5)
dobj(set-4, password-6)
det(database-9, the-8)
prep_for(password-6, database-9)

The/DT Data/NNP Source/NNP Explorer/NNP has/VBZ not/RB been/VBN activated/VBN ,/, so/IN the/DT connection/NN profiles/NNS have/VBP not/RB been/VBN loaded/VBN ./. 

(ROOT (S (S (NP (DT The) (NNP Data) (NNP Source) (NNP Explorer)) (VP (VBZ has) (RB not) (VP (VBN been) (VP (VBN activated))))) (, ,) (IN so) (S (NP (DT the) (NN connection) (NNS profiles)) (VP (VBP have) (RB not) (VP (VBN been) (VP (VBN loaded))))) (. .)))

root(ROOT-0, activated-8)
det(Explorer-4, The-1)
nn(Explorer-4, Data-2)
nn(Explorer-4, Source-3)
nsubjpass(activated-8, Explorer-4)
aux(activated-8, has-5)
neg(activated-8, not-6)
auxpass(activated-8, been-7)
dep(activated-8, so-10)
det(profiles-13, the-11)
nn(profiles-13, connection-12)
nsubjpass(loaded-17, profiles-13)
aux(loaded-17, have-14)
neg(loaded-17, not-15)
auxpass(loaded-17, been-16)
parataxis(activated-8, loaded-17)

2/CD The/DT user/NN brings/VBZ up/RP the/DT wizard/NN to/TO create/VB a/DT new/JJ JPA/NN project/NN ,/, chooses/VBZ the/DT connection/NN from/IN the/DT dropdown/NN ,/, and/CC clicks/NNS connect/VBP ./. 

(ROOT (S (S (NP (CD 2)) (PRN (S (NP (DT The) (NN user)) (VP (VBZ brings) (PRT (RP up)) (NP (DT the) (NN wizard) (S (VP (TO to) (VP (VB create) (NP (DT a) (JJ new) (NN JPA) (NN project)))))))) (, ,)) (VP (VBZ chooses) (NP (DT the) (NN connection)) (PP (IN from) (NP (DT the) (NN dropdown))))) (, ,) (CC and) (S (NP (NNS clicks)) (VP (VBP connect))) (. .)))

root(ROOT-0, chooses-15)
nsubj(chooses-15, 2-1)
det(user-3, The-2)
nsubj(brings-4, user-3)
parataxis(chooses-15, brings-4)
prt(brings-4, up-5)
det(wizard-7, the-6)
dobj(brings-4, wizard-7)
aux(create-9, to-8)
vmod(wizard-7, create-9)
det(project-13, a-10)
amod(project-13, new-11)
nn(project-13, JPA-12)
dobj(create-9, project-13)
det(connection-17, the-16)
dobj(chooses-15, connection-17)
det(dropdown-20, the-19)
prep_from(chooses-15, dropdown-20)
nsubj(connect-24, clicks-23)
conj_and(chooses-15, connect-24)

This/DT fails/VBZ ,/, because/IN the/DT password/NN has/VBZ n't/RB been/VBN set/VBN ./. 

(ROOT (S (NP (DT This)) (VP (VBZ fails) (, ,) (SBAR (IN because) (S (NP (DT the) (NN password)) (VP (VBZ has) (RB n't) (VP (VBN been) (VP (VBN set))))))) (. .)))

root(ROOT-0, fails-2)
nsubj(fails-2, This-1)
mark(set-10, because-4)
det(password-6, the-5)
nsubjpass(set-10, password-6)
aux(set-10, has-7)
neg(set-10, n't-8)
auxpass(set-10, been-9)
advcl(fails-2, set-10)

3/CD They/PRP cancel/VBP the/DT wizard/NN ,/, go/VB to/TO the/DT DSE/NN view/NN and/CC set/VBD the/DT password/NN ,/, and/CC connect/VB to/TO the/DT database/NN ./. 

(ROOT (S (NP-TMP (NP (CD 3)) (SBAR (S (NP (PRP They)) (VP (VBP cancel) (NP (DT the) (NN wizard)))))) (, ,) (VP (VP (VP (VB go) (PP (TO to) (NP (DT the) (NN DSE) (NN view)))) (CC and) (VP (VBD set) (NP (DT the) (NN password)))) (, ,) (CC and) (VP (VB connect) (PP (TO to) (NP (DT the) (NN database))))) (. .)))

root(ROOT-0, go-7)
dep(go-7, 3-1)
nsubj(cancel-3, They-2)
rcmod(3-1, cancel-3)
det(wizard-5, the-4)
dobj(cancel-3, wizard-5)
det(view-11, the-9)
nn(view-11, DSE-10)
prep_to(go-7, view-11)
conj_and(go-7, set-13)
det(password-15, the-14)
dobj(set-13, password-15)
conj_and(go-7, connect-18)
det(database-21, the-20)
prep_to(connect-18, database-21)

4/CD They/PRP go/VBP back/RB into/IN the/DT wizard/NN to/TO create/VB a/DT new/JJ JPA/NN project/NN ,/, but/CC the/DT connection/NN still/RB fails/VBZ ,/, with/IN an/DT error/NN indicating/VBG the/DT password/NN was/VBD n't/RB specified/VBN ./. 

(ROOT (S (NP (NP (CD 4)) (SBAR (S (S (NP (PRP They)) (VP (VBP go) (ADVP (RB back)) (PP (IN into) (NP (DT the) (NN wizard) (S (VP (TO to) (VP (VB create) (NP (DT a) (JJ new) (NN JPA) (NN project))))))))) (, ,) (CC but) (S (NP (DT the) (NN connection)) (ADVP (RB still)) (VP (VBZ fails) (, ,) (PP (IN with) (NP (NP (DT an) (NN error)) (VP (VBG indicating) (NP (DT the) (NN password)))))))))) (VP (VBD was) (RB n't) (VP (VBN specified))) (. .)))

root(ROOT-0, specified-29)
nsubjpass(specified-29, 4-1)
nsubj(go-3, They-2)
rcmod(4-1, go-3)
advmod(go-3, back-4)
det(wizard-7, the-6)
prep_into(go-3, wizard-7)
aux(create-9, to-8)
vmod(wizard-7, create-9)
det(project-13, a-10)
amod(project-13, new-11)
nn(project-13, JPA-12)
dobj(create-9, project-13)
det(connection-17, the-16)
nsubj(fails-19, connection-17)
advmod(fails-19, still-18)
rcmod(4-1, fails-19)
conj_but(go-3, fails-19)
det(error-23, an-22)
prep_with(fails-19, error-23)
vmod(error-23, indicating-24)
det(password-26, the-25)
dobj(indicating-24, password-26)
auxpass(specified-29, was-27)
neg(specified-29, n't-28)

There/EX also/RB are/VBP many/JJ other/JJ scenarios/NNS that/WDT can/MD lead/VB to/TO this/DT ./. 

(ROOT (S (NP (EX There)) (ADVP (RB also)) (VP (VBP are) (NP (NP (JJ many) (JJ other) (NNS scenarios)) (SBAR (WHNP (WDT that)) (S (VP (MD can) (VP (VB lead) (PP (TO to) (NP (DT this))))))))) (. .)))

root(ROOT-0, are-3)
expl(are-3, There-1)
advmod(are-3, also-2)
amod(scenarios-6, many-4)
amod(scenarios-6, other-5)
nsubj(are-3, scenarios-6)
nsubj(lead-9, that-7)
aux(lead-9, can-8)
rcmod(scenarios-6, lead-9)
prep_to(lead-9, this-11)

The/DT problem/NN is/VBZ in/IN DTPConnectionProfileRepository.start/NN (/-LRB- )/-RRB- ,/, which/WDT first/RB adds/VBZ a/DT profile/NN listener/NN ,/, and/CC then/RB calls/VBZ dtpProfileManager.getProfiles/NNS (/-LRB- )/-RRB- and/CC iterates/VBZ through/IN the/DT profiles/NNS returned/VBN by/IN DTP/NN ,/, adding/VBG them/PRP to/TO the/DT list/NN of/IN profiles/NNS it/PRP knows/VBZ about/RB ./. 

(ROOT (S (S (NP (DT The) (NN problem)) (VP (VBZ is) (UCP (PP (IN in) (NP (NP (NN DTPConnectionProfileRepository.start)) (PRN (-LRB- -LRB-) (NP (NP (-RRB- -RRB-)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VP (ADVP (RB first)) (VBZ adds) (NP (DT a) (NN profile) (NN listener))) (, ,) (CC and) (VP (ADVP (RB then)) (VBZ calls) (NP (NNS dtpProfileManager.getProfiles)))))) (-LRB- -LRB-)) (-RRB- -RRB-)))) (CC and) (S (VP (VBZ iterates) (PP (IN through) (NP (NP (DT the) (NNS profiles)) (VP (VBN returned) (PP (IN by) (NP (NN DTP))))))))) (, ,) (S (VP (VBG adding) (NP (PRP them)) (PP (TO to) (NP (NP (DT the) (NN list)) (PP (IN of) (NP (NNS profiles))))))))) (NP (PRP it)) (VP (VBZ knows) (ADVP (RB about))) (. .)))

root(ROOT-0, knows-39)
det(problem-2, The-1)
nsubj(is-3, problem-2)
dep(knows-39, is-3)
dep(is-3, in-4)
pobj(in-4, DTPConnectionProfileRepository.start-5)
nsubj(adds-11, which-9)
nsubj(calls-18, which-9)
advmod(adds-11, first-10)
rcmod(-RRB--7, adds-11)
det(listener-14, a-12)
nn(listener-14, profile-13)
dobj(adds-11, listener-14)
advmod(calls-18, then-17)
rcmod(-RRB--7, calls-18)
conj_and(adds-11, calls-18)
dobj(calls-18, dtpProfileManager.getProfiles-19)
dep(is-3, iterates-23)
conj_and(in-4, iterates-23)
det(profiles-26, the-25)
prep_through(iterates-23, profiles-26)
vmod(profiles-26, returned-27)
agent(returned-27, DTP-29)
xcomp(is-3, adding-31)
dobj(adding-31, them-32)
det(list-35, the-34)
prep_to(adding-31, list-35)
prep_of(list-35, profiles-37)
nsubj(knows-39, it-38)
advmod(knows-39, about-40)

Problem/NNP is/VBZ ,/, if/IN the/DT call/NN to/TO dtpProfileManager.getProfiles/NNS (/-LRB- )/-RRB- results/VBZ in/IN DTP/NN loading/VBG the/DT profiles/NNS for/IN the/DT first/JJ time/NN ,/, it/PRP sends/VBZ out/RP notifications/NNS ,/, so/IN the/DT listener/NN also/RB adds/VBZ the/DT profiles/NNS ,/, resulting/VBG in/IN duplicates/NNS ./. 

(ROOT (S (S (NP (NNP Problem)) (VP (VBZ is) (, ,) (SBAR (S (SBAR (IN if) (S (NP (NP (DT the) (NN call)) (PP (TO to) (NP (NNS dtpProfileManager.getProfiles))) (NP (-LRB- -LRB-)) (-RRB- -RRB-)) (VP (VBZ results) (PP (IN in) (NP (NP (NN DTP)) (VP (VBG loading) (NP (NP (DT the) (NNS profiles)) (PP (IN for) (NP (DT the) (JJ first) (NN time)))))))))) (, ,) (NP (PRP it)) (VP (VBZ sends) (PRT (RP out)) (NP (NNS notifications))))))) (, ,) (IN so) (S (NP (DT the) (NN listener)) (ADVP (RB also)) (VP (VBZ adds) (NP (DT the) (NNS profiles)) (, ,) (S (VP (VBG resulting) (PP (IN in) (NP (NNS duplicates))))))) (. .)))

root(ROOT-0, is-2)
nsubj(is-2, Problem-1)
mark(results-11, if-4)
det(call-6, the-5)
nsubj(results-11, call-6)
prep_to(call-6, dtpProfileManager.getProfiles-8)
advcl(sends-23, results-11)
prep_in(results-11, DTP-13)
vmod(DTP-13, loading-14)
det(profiles-16, the-15)
dobj(loading-14, profiles-16)
det(time-20, the-18)
amod(time-20, first-19)
prep_for(profiles-16, time-20)
nsubj(sends-23, it-22)
ccomp(is-2, sends-23)
prt(sends-23, out-24)
dobj(sends-23, notifications-25)
dep(is-2, so-27)
det(listener-29, the-28)
nsubj(adds-31, listener-29)
advmod(adds-31, also-30)
parataxis(is-2, adds-31)
det(profiles-33, the-32)
dobj(adds-31, profiles-33)
vmod(adds-31, resulting-35)
prep_in(resulting-35, duplicates-37)

It/PRP 's/VBZ these/DT duplicates/NNS entries/NNS that/WDT cause/VBP the/DT problem/NN ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ 's) (NP (NP (DT these) (NNS duplicates) (NNS entries)) (SBAR (WHNP (WDT that)) (S (VP (VBP cause) (NP (DT the) (NN problem))))))) (. .)))

root(ROOT-0, entries-5)
nsubj(entries-5, It-1)
cop(entries-5, 's-2)
det(entries-5, these-3)
nn(entries-5, duplicates-4)
nsubj(cause-7, that-6)
rcmod(entries-5, cause-7)
det(problem-9, the-8)
dobj(cause-7, problem-9)

I/PRP 'm/VBP aware/JJ of/IN bug/NN 246270/CD against/IN DTP/NNP ,/, but/CC the/DT patch/NN attached/VBN to/TO that/DT bug/NN does/VBZ n't/RB completely/RB solve/VB the/DT problem/NN for/IN us/PRP ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP 'm) (ADJP (JJ aware) (PP (IN of) (NP (NP (NN bug) (CD 246270)) (PP (IN against) (NP (NNP DTP)))))))) (, ,) (CC but) (S (NP (NP (DT the) (NN patch)) (VP (VBN attached) (PP (TO to) (NP (DT that) (NN bug))))) (VP (VBZ does) (RB n't) (ADVP (RB completely)) (VP (VB solve) (NP (NP (DT the) (NN problem)) (PP (IN for) (NP (PRP us))))))) (. .)))

root(ROOT-0, aware-3)
nsubj(aware-3, I-1)
cop(aware-3, 'm-2)
prep_of(aware-3, bug-5)
num(bug-5, 246270-6)
prep_against(bug-5, DTP-8)
det(patch-12, the-11)
nsubj(solve-20, patch-12)
vmod(patch-12, attached-13)
det(bug-16, that-15)
prep_to(attached-13, bug-16)
aux(solve-20, does-17)
neg(solve-20, n't-18)
advmod(solve-20, completely-19)
conj_but(aware-3, solve-20)
det(problem-22, the-21)
dobj(solve-20, problem-22)
prep_for(problem-22, us-24)

[/-LRB- 00315295/CD ]/-RRB- 

(ROOT (NP (-LRB- -LSB-) (CD 00315295) (-RRB- -RSB-)))

root(ROOT-0, 00315295-2)
punct(00315295-2, -LSB--1)
punct(00315295-2, -RSB--3)

