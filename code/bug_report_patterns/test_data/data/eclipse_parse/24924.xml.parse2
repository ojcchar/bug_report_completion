20021016/CD public/JJ abstract/JJ class/NN DD/NN implements/VBZ Comparator/NNP {/-LRB- }/-RRB- class/NN DDd/NN extends/VBZ DD/NN implements/VBZ Comparable/JJ {/-LRB- }/-RRB- 

(ROOT (FRAG (NP (NP (CD 20021016) (JJ public) (JJ abstract) (NN class) (NN DD)) (SBAR (S (VP (VBZ implements) (NP (NP (NNP Comparator)) (PRN (-LRB- -LCB-) (S (NP (-RRB- -RCB-) (NN class) (NN DDd)) (VP (VBZ extends) (SBAR (S (NP (NN DD)) (VP (VBZ implements) (NP (JJ Comparable) (-LRB- -LCB-))))))) (-RRB- -RCB-)))))))))

root(ROOT-0, DD-5)
num(DD-5, 20021016-1)
amod(DD-5, public-2)
amod(DD-5, abstract-3)
nn(DD-5, class-4)
rcmod(DD-5, implements-6)
dobj(implements-6, Comparator-7)
nn(DDd-11, class-10)
nsubj(extends-12, DDd-11)
dep(Comparator-7, extends-12)
nsubj(implements-14, DD-13)
ccomp(extends-12, implements-14)
dobj(implements-14, Comparable-15)

quick/JJ fix/NN DDd/NNP to/TO add/VB unimplemented/JJ methods/NNS you/PRP get/VBP this/DT :/: (/-LRB- javadoc/NN for/IN compare/VB is/VBZ incorrect/JJ -/: it/PRP should/MD refer/VB to/TO Comparable/JJ #compare/NN )/-RRB- 

(ROOT (S (NP (JJ quick) (NN fix) (NNP DDd)) (VP (TO to) (VP (VB add) (SBAR (SBAR (WHNP (ADJP (JJ unimplemented)) (NNS methods)) (S (NP (PRP you)) (VP (VBP get) (NP (DT this))))) (: :) (PRN (-LRB- -LRB-) (NP (NP (NN javadoc)) (SBAR (IN for) (S (S (S (VP (VB compare))) (VP (VBZ is) (ADJP (JJ incorrect)))) (: -) (S (NP (PRP it)) (VP (MD should) (VP (VB refer) (PP (TO to) (NP (JJ Comparable) (NN #compare))))))))) (-RRB- -RRB-)))))))

root(ROOT-0, add-5)
amod(DDd-3, quick-1)
nn(DDd-3, fix-2)
nsubj(add-5, DDd-3)
aux(add-5, to-4)
amod(methods-7, unimplemented-6)
dobj(get-9, methods-7)
nsubj(get-9, you-8)
dep(add-5, get-9)
dobj(get-9, this-10)
dep(get-9, javadoc-13)
mark(incorrect-17, for-14)
csubj(incorrect-17, compare-15)
cop(incorrect-17, is-16)
dep(javadoc-13, incorrect-17)
nsubj(refer-21, it-19)
aux(refer-21, should-20)
parataxis(incorrect-17, refer-21)
amod(#compare-24, Comparable-23)
prep_to(refer-21, #compare-24)

//: **/SYM 

(ROOT (VP (: /) (X (SYM **))))

root(ROOT-0, **-2)
punct(**-2, /-1)

*/SYM @see/NN jghj.DD/NN #compare/NN (/-LRB- java.lang.Object/NN ,/, java.lang.Object/NN )/-RRB- 

(ROOT (X (X (SYM *)) (NP (NP (NN @see)) (NP (NP (NN jghj.DD) (NN #compare)) (PRN (-LRB- -LRB-) (NP (NP (NN java.lang.Object)) (, ,) (NP (NN java.lang.Object))) (-RRB- -RRB-))))))

root(ROOT-0, @see-2)
dep(@see-2, *-1)
nn(#compare-4, jghj.DD-3)
dep(@see-2, #compare-4)
dep(#compare-4, java.lang.Object-6)
appos(java.lang.Object-6, java.lang.Object-8)

*/SYM //: 

(ROOT (FRAG (X (SYM *)) (NP (: /))))

root(ROOT-0, /-2)
dep(/-2, *-1)

public/JJ int/NN compare/VB (/-LRB- Object/JJ arg0/NN ,/, Object/NNP arg1/NN )/-RRB- {/-LRB- 

(ROOT (FRAG (NP (JJ public) (NN int)) (VP (VB compare) (NP (PRN (-LRB- -LRB-) (NP (JJ Object) (NN arg0)) (, ,) (NP (NNP Object) (NN arg1)) (-RRB- -RRB-)) (-LRB- -LCB-)))))

root(ROOT-0, int-2)
amod(int-2, public-1)
dep(int-2, compare-3)
amod(arg0-6, Object-5)
dobj(compare-3, arg0-6)
nn(arg1-9, Object-8)
dep(arg0-6, arg1-9)

return/NN 0/CD ;/: 

(ROOT (NP (NP (NN return) (CD 0)) (: ;)))

root(ROOT-0, return-1)
num(return-1, 0-2)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


//: **/SYM 

(ROOT (VP (: /) (X (SYM **))))

root(ROOT-0, **-2)
punct(**-2, /-1)

*/SYM @see/NN java.lang.Comparable/NN #compareTo/NN (/-LRB- java.lang.Object/NN )/-RRB- 

(ROOT (X (X (SYM *)) (NP (NP (NN @see) (NN java.lang.Comparable) (NN #compareTo)) (NP (-LRB- -LRB-) (NN java.lang.Object) (-RRB- -RRB-)))))

root(ROOT-0, #compareTo-4)
dep(#compareTo-4, *-1)
nn(#compareTo-4, @see-2)
nn(#compareTo-4, java.lang.Comparable-3)
appos(#compareTo-4, java.lang.Object-6)

*/SYM //: 

(ROOT (FRAG (X (SYM *)) (NP (: /))))

root(ROOT-0, /-2)
dep(/-2, *-1)

public/JJ int/NN compareTo/NN (/-LRB- Object/NN arg0/NN )/-RRB- {/-LRB- 

(ROOT (NP (NP (JJ public) (NN int) (NN compareTo)) (PRN (-LRB- -LRB-) (NP (NN Object) (NN arg0)) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, compareTo-3)
amod(compareTo-3, public-1)
nn(compareTo-3, int-2)
nn(arg0-6, Object-5)
appos(compareTo-3, arg0-6)

return/NN 0/CD ;/: 

(ROOT (NP (NP (NN return) (CD 0)) (: ;)))

root(ROOT-0, return-1)
num(return-1, 0-2)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


