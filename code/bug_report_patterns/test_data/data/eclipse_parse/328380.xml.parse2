Build/VB Identifier/NNP :/: CDT/NNP :/: 20100917-0705/CD &/CC Platform/NNP Build/NNP id/NN :/: M20100909-0800/NN 

(ROOT (S (VP (VB Build) (FRAG (NP (NP (NNP Identifier)) (: :) (NP (NP (NNP CDT)) (: :) (NP (NP (CD 20100917-0705)) (CC &) (NP (NNP Platform) (NNP Build) (NN id)))) (: :) (NP (NN M20100909-0800)))))))

root(ROOT-0, Build-1)
dep(Build-1, Identifier-2)
dep(Identifier-2, CDT-4)
dep(CDT-4, 20100917-0705-6)
nn(id-10, Platform-8)
nn(id-10, Build-9)
dep(CDT-4, id-10)
conj_and(20100917-0705-6, id-10)
dep(Identifier-2, M20100909-0800-12)

This/DT error/NN comes/VBZ &/CC goes/VBZ ,/, and/CC was/VBD gone/VBN all/DT morning/NN ./. 

(ROOT (S (NP (DT This) (NN error)) (VP (VBZ comes) (SBAR (S (NP (CC &)) (VP (VP (VBZ goes)) (, ,) (CC and) (VP (VBD was) (VP (VBN gone) (NP-TMP (DT all) (NN morning)))))))) (. .)))

root(ROOT-0, comes-3)
det(error-2, This-1)
nsubj(comes-3, error-2)
nsubj(goes-5, &-4)
nsubjpass(gone-9, &-4)
ccomp(comes-3, goes-5)
auxpass(gone-9, was-8)
ccomp(comes-3, gone-9)
conj_and(goes-5, gone-9)
det(morning-11, all-10)
tmod(gone-9, morning-11)

Then/RB I/PRP started/VBD writing/VBG a/DT new/JJ method/NN ,/, and/CC it/PRP 's/VBZ popping/VBG up/RP after/IN each/DT modification/NN +/CC save/VB of/IN the/DT file/NN ./. 

(ROOT (S (S (ADVP (RB Then)) (NP (PRP I)) (VP (VBD started) (S (VP (VBG writing) (NP (DT a) (JJ new) (NN method)))))) (, ,) (CC and) (S (NP (PRP it)) (VP (VP (VBZ 's) (VP (VBG popping) (PRT (RP up)) (PP (IN after) (NP (DT each) (NN modification))))) (CC +) (VP (VB save) (PP (IN of) (NP (DT the) (NN file)))))) (. .)))

root(ROOT-0, started-3)
advmod(started-3, Then-1)
nsubj(started-3, I-2)
xcomp(started-3, writing-4)
det(method-7, a-5)
amod(method-7, new-6)
dobj(writing-4, method-7)
nsubj(popping-12, it-10)
nsubj(save-18, it-10)
aux(popping-12, 's-11)
conj_and(started-3, popping-12)
prt(popping-12, up-13)
det(modification-16, each-15)
prep_after(popping-12, modification-16)
conj_and(started-3, save-18)
conj_+(popping-12, save-18)
det(file-21, the-20)
prep_of(save-18, file-21)

A/DT dialog/NN pops/VBZ up/RP saying/VBG "/'' '/`` Notifying/VBG selection/NN listeners/NNS '/POS has/VBZ encountered/VBN a/DT problem/NN ./. 

(ROOT (NP (NP (NP (NP (DT A) (NN dialog)) (SBAR (S (VP (VBZ pops) (PRT (RP up)) (S (VP (VBG saying) ('' ''))))))) (VP (`` `) (VBG Notifying) (NP (NN selection)))) (NP (NP (NNS listeners)) (SBAR (S (NP (POS ')) (VP (VBZ has) (VP (VBN encountered) (NP (DT a) (NN problem))))))) (. .)))

root(ROOT-0, dialog-2)
det(dialog-2, A-1)
rcmod(dialog-2, pops-3)
prt(pops-3, up-4)
xcomp(pops-3, saying-5)
vmod(dialog-2, Notifying-8)
dobj(Notifying-8, selection-9)
dep(dialog-2, listeners-10)
aux(encountered-13, has-12)
rcmod(listeners-10, encountered-13)
det(problem-15, a-14)
dobj(encountered-13, problem-15)

An/DT internal/JJ error/NN occurred/VBD during/IN :/: "/`` Notifying/VBG selection/NN listeners/NNS "/'' ./. 

(ROOT (S (NP (DT An) (JJ internal) (NN error)) (VP (VBD occurred) (PP (IN during)) (: :) (S (`` ``) (NP (VBG Notifying) (NN selection) (NNS listeners)))) ('' '') (. .)))

root(ROOT-0, occurred-4)
det(error-3, An-1)
amod(error-3, internal-2)
nsubj(occurred-4, error-3)
prep(occurred-4, during-5)
amod(listeners-10, Notifying-8)
nn(listeners-10, selection-9)
parataxis(occurred-4, listeners-10)

The/DT details/NNS show/VBP only/RB java.lang.StackOverflowError/NNP ./. 

(ROOT (S (NP (DT The) (NNS details)) (VP (VBP show) (NP (RB only) (NNP java.lang.StackOverflowError))) (. .)))

root(ROOT-0, show-3)
det(details-2, The-1)
nsubj(show-3, details-2)
advmod(java.lang.StackOverflowError-5, only-4)
dobj(show-3, java.lang.StackOverflowError-5)

Log/VB suggested/VBD that/IN maybe/RB the/DT DOM/NNP got/VBD built/VBN incorrectly/RB ,/, and/CC then/RB the/DT indexer/NN for/IN templates/NNS freaks/NNS out/RB ./. 

(ROOT (S (S (VP (VB Log))) (VP (VBD suggested) (SBAR (IN that) (S (S (ADVP (RB maybe)) (NP (DT the) (NNP DOM)) (VP (VBD got) (VP (VBN built) (ADVP (RB incorrectly))))) (, ,) (CC and) (S (NP (NP (RB then) (DT the) (NN indexer)) (PP (IN for) (NP (NNS templates) (NNS freaks)))) (ADJP (RB out)))))) (. .)))

root(ROOT-0, suggested-2)
csubj(suggested-2, Log-1)
mark(built-8, that-3)
advmod(built-8, maybe-4)
det(DOM-6, the-5)
nsubjpass(built-8, DOM-6)
auxpass(built-8, got-7)
ccomp(suggested-2, built-8)
advmod(built-8, incorrectly-9)
advmod(indexer-14, then-12)
det(indexer-14, the-13)
dep(out-18, indexer-14)
nn(freaks-17, templates-16)
prep_for(indexer-14, freaks-17)
ccomp(suggested-2, out-18)
conj_and(built-8, out-18)

NOTE/VB :/: I/PRP 've/VBP rebuilt/VBN the/DT entire/JJ index/NN multiple/JJ times/NNS ,/, hoping/VBG it/PRP would/MD fix/VB this/DT problem/NN ,/, but/CC it/PRP does/VBZ not/RB ./. 

(ROOT (NP (NP (VB NOTE)) (: :) (S (S (NP (PRP I)) (VP (VBP 've) (VP (VBN rebuilt) (NP (DT the) (JJ entire) (NN index)) (NP-TMP (JJ multiple) (NNS times)) (, ,) (S (VP (VBG hoping) (SBAR (S (NP (PRP it)) (VP (MD would) (VP (VB fix) (NP (DT this) (NN problem))))))))))) (, ,) (CC but) (S (NP (PRP it)) (VP (VBZ does) (RB not)))) (. .)))

root(ROOT-0, NOTE-1)
nsubj(rebuilt-5, I-3)
aux(rebuilt-5, 've-4)
dep(NOTE-1, rebuilt-5)
det(index-8, the-6)
amod(index-8, entire-7)
dobj(rebuilt-5, index-8)
amod(times-10, multiple-9)
tmod(rebuilt-5, times-10)
vmod(rebuilt-5, hoping-12)
nsubj(fix-15, it-13)
aux(fix-15, would-14)
ccomp(hoping-12, fix-15)
det(problem-17, this-16)
dobj(fix-15, problem-17)
nsubj(does-21, it-20)
dep(NOTE-1, does-21)
conj_but(rebuilt-5, does-21)
neg(does-21, not-22)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

Steps/NNS to/TO Reproduce/VB :/: 

(ROOT (S (NP (NNS Steps)) (VP (TO to) (VP (VB Reproduce))) (: :)))

root(ROOT-0, Reproduce-3)
nsubj(Reproduce-3, Steps-1)
aux(Reproduce-3, to-2)

1/CD Write/VB some/DT non-templated/JJ method/NN ,/, save/VB file/NN ./. 

(ROOT (S (NP (CD 1)) (VP (VP (VB Write) (NP (DT some) (JJ non-templated) (NN method))) (, ,) (VP (VB save) (NP (NN file)))) (. .)))

root(ROOT-0, Write-2)
nsubj(Write-2, 1-1)
det(method-5, some-3)
amod(method-5, non-templated-4)
dobj(Write-2, method-5)
dep(Write-2, save-7)
dobj(save-7, file-8)

2/CD Error/NN pops/VBZ up/RP ./. 

(ROOT (S (NP (CD 2) (NN Error)) (VP (VBZ pops) (PRT (RP up))) (. .)))

root(ROOT-0, pops-3)
num(Error-2, 2-1)
nsubj(pops-3, Error-2)
prt(pops-3, up-4)

3/CD 

(ROOT (FRAG (NP (CD 3))))

root(ROOT-0, 3-1)

