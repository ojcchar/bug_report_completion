Profiling/NNP has/VBZ demonstrated/VBN that/IN the/DT first/JJ attempt/NN to/TO append/VB something/NN to/TO the/DT plugin/NN log/NN can/MD result/VB in/IN a/DT severe/JJ performance/NN penalty/NN if/IN the/DT log/NN is/VBZ large/JJ ./. 

(ROOT (S (NP (NNP Profiling)) (VP (VBZ has) (VP (VBN demonstrated) (SBAR (IN that) (S (NP (DT the) (JJ first) (NN attempt) (S (VP (TO to) (VP (VB append) (NP (NN something)) (PP (TO to) (NP (DT the) (NN plugin) (NN log))))))) (VP (MD can) (VP (VB result) (PP (IN in) (NP (DT a) (JJ severe) (NN performance) (NN penalty))) (SBAR (IN if) (S (NP (DT the) (NN log)) (VP (VBZ is) (ADJP (JJ large))))))))))) (. .)))

root(ROOT-0, demonstrated-3)
nsubj(demonstrated-3, Profiling-1)
aux(demonstrated-3, has-2)
mark(result-16, that-4)
det(attempt-7, the-5)
amod(attempt-7, first-6)
nsubj(result-16, attempt-7)
aux(append-9, to-8)
vmod(attempt-7, append-9)
dobj(append-9, something-10)
det(log-14, the-12)
nn(log-14, plugin-13)
prep_to(append-9, log-14)
aux(result-16, can-15)
ccomp(demonstrated-3, result-16)
det(penalty-21, a-18)
amod(penalty-21, severe-19)
nn(penalty-21, performance-20)
prep_in(result-16, penalty-21)
mark(large-26, if-22)
det(log-24, the-23)
nsubj(large-26, log-24)
cop(large-26, is-25)
advcl(result-16, large-26)

To/TO avoid/VB blocking/VBG the/DT UI/NN thread/NN ,/, logging/VBG should/MD occur/VB in/IN a/DT background/NN Job/NNP ./. 

(ROOT (S (S (VP (TO To) (VP (VB avoid) (S (VP (VBG blocking) (NP (DT the) (NN UI) (NN thread))))))) (, ,) (NP (VBG logging)) (VP (MD should) (VP (VB occur) (PP (IN in) (NP (DT a) (NN background) (NNP Job))))) (. .)))

root(ROOT-0, occur-10)
aux(avoid-2, To-1)
advcl(occur-10, avoid-2)
xcomp(avoid-2, blocking-3)
det(thread-6, the-4)
nn(thread-6, UI-5)
dobj(blocking-3, thread-6)
nsubj(occur-10, logging-8)
aux(occur-10, should-9)
det(Job-14, a-12)
nn(Job-14, background-13)
prep_in(occur-10, Job-14)

