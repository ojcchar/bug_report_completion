The/DT sync/NN kind/NN for/IN CVS/NNP resources/NNS is/VBZ not/RB determined/VBN properly/RB ./. 

(ROOT (S (NP (NP (DT The) (NN sync) (NN kind)) (PP (IN for) (NP (NNP CVS) (NNS resources)))) (VP (VBZ is) (RB not) (VP (VBN determined) (ADVP (RB properly)))) (. .)))

root(ROOT-0, determined-9)
det(kind-3, The-1)
nn(kind-3, sync-2)
nsubjpass(determined-9, kind-3)
nn(resources-6, CVS-5)
prep_for(kind-3, resources-6)
auxpass(determined-9, is-7)
neg(determined-9, not-8)
advmod(determined-9, properly-10)

Here/RB are/VBP the/DT problems/NNS :/: 

(ROOT (SINV (ADVP (RB Here)) (VP (VBP are)) (NP (DT the) (NNS problems)) (: :)))

root(ROOT-0, are-2)
advmod(are-2, Here-1)
det(problems-4, the-3)
nsubj(are-2, problems-4)

1/CD Three/CD way/NN compare/VBP determination/NN needs/VBZ to/TO be/VB improvided/VBN in/IN RemoteSyncElement/NNP ./. 

(ROOT (S (NP (QP (CD 1) (CD Three)) (NN way)) (VP (VBP compare) (SBAR (S (NP (NN determination)) (VP (VBZ needs) (S (VP (TO to) (VP (VB be) (VP (VBN improvided) (PP (IN in) (NP (NNP RemoteSyncElement))))))))))) (. .)))

root(ROOT-0, compare-4)
number(Three-2, 1-1)
num(way-3, Three-2)
nsubj(compare-4, way-3)
nsubj(needs-6, determination-5)
ccomp(compare-4, needs-6)
aux(improvided-9, to-7)
auxpass(improvided-9, be-8)
xcomp(needs-6, improvided-9)
prep_in(improvided-9, RemoteSyncElement-11)

Currently/RB ,/, three/CD way/NN compare/VBP does/VBZ not/RB work/VB properly/RB for/IN conflicting/VBG additions/NNS 

(ROOT (S (ADVP (RB Currently)) (, ,) (NP (CD three) (NN way)) (VP (VBP compare) (SBAR (S (VP (VBZ does) (RB not) (VP (VB work) (ADVP (RB properly)) (PP (IN for) (NP (VBG conflicting) (NNS additions))))))))))

root(ROOT-0, compare-5)
advmod(compare-5, Currently-1)
num(way-4, three-3)
nsubj(compare-5, way-4)
aux(work-8, does-6)
neg(work-8, not-7)
ccomp(compare-5, work-8)
advmod(work-8, properly-9)
amod(additions-12, conflicting-11)
prep_for(work-8, additions-12)

2/CD The/DT sync/NN kind/NN from/IN above/JJ is/VBZ not/RB propogating/VBG properly/RB in/IN the/DT overriding/VBG 

(ROOT (NP (NP (NP (CD 2)) (SBAR (S (NP (NP (DT The) (NN sync) (NN kind)) (PP (IN from) (ADJP (JJ above)))) (VP (VBZ is) (RB not) (VP (VBG propogating) (ADVP (RB properly))))))) (PP (IN in) (NP (DT the) (VBG overriding)))))

root(ROOT-0, 2-1)
det(kind-4, The-2)
nn(kind-4, sync-3)
nsubj(propogating-9, kind-4)
prep_from(kind-4, above-6)
aux(propogating-9, is-7)
neg(propogating-9, not-8)
rcmod(2-1, propogating-9)
advmod(propogating-9, properly-10)
prep_in(2-1, the-12)
amod(the-12, overriding-13)

The/DT implications/NNS of/IN this/DT are/VBP that/IN conflicting/VBG additions/NNS are/VBP treated/VBN as/IN conflicting/JJ changes/NNS ./. 

(ROOT (S (NP (NP (DT The) (NNS implications)) (PP (IN of) (NP (DT this)))) (VP (VBP are) (SBAR (IN that) (S (NP (VBG conflicting) (NNS additions)) (VP (VBP are) (VP (VBN treated) (PP (IN as) (NP (JJ conflicting) (NNS changes)))))))) (. .)))

root(ROOT-0, are-5)
det(implications-2, The-1)
nsubj(are-5, implications-2)
prep_of(implications-2, this-4)
mark(treated-10, that-6)
amod(additions-8, conflicting-7)
nsubjpass(treated-10, additions-8)
auxpass(treated-10, are-9)
ccomp(are-5, treated-10)
amod(changes-13, conflicting-12)
prep_as(treated-10, changes-13)

