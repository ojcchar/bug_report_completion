source/NN lookup/NN (/-LRB- from/IN clicking/VBG on/IN log4j/NN console/NN printouts/NNS )/-RRB- failes/NNS in/IN eclipse/NN 3.2/CD when/WRB using/VBG brackets/NNS in/IN log4j/NN conversion/NN pattern/NN ./. 

(ROOT (NP (NP (NP (NN source) (NN lookup)) (PRN (-LRB- -LRB-) (PP (IN from) (S (VP (VBG clicking) (PP (IN on) (NP (NN log4j) (NN console) (NNS printouts)))))) (-RRB- -RRB-))) (NP (NP (NNS failes)) (PP (IN in) (NP (NN eclipse) (CD 3.2))) (SBAR (WHADVP (WRB when)) (S (VP (VBG using) (NP (NNS brackets)) (PP (IN in) (NP (NN log4j) (NN conversion) (NN pattern))))))) (. .)))

root(ROOT-0, lookup-2)
nn(lookup-2, source-1)
prepc_from(lookup-2, clicking-5)
nn(printouts-9, log4j-7)
nn(printouts-9, console-8)
prep_on(clicking-5, printouts-9)
dep(lookup-2, failes-11)
prep_in(failes-11, eclipse-13)
num(eclipse-13, 3.2-14)
advmod(using-16, when-15)
rcmod(failes-11, using-16)
dobj(using-16, brackets-17)
nn(pattern-21, log4j-19)
nn(pattern-21, conversion-20)
prep_in(using-16, pattern-21)

This/DT extremely/RB useful/JJ feature/NN worked/VBD fine/NN until/IN upgrading/VBG to/TO eclipse/VB 3.2.1/CD Finally/RB figured/VBD out/RP that/IN eclipse/NN does/VBZ not/RB anymore/RB handle/VB the/DT use/NN of/IN [/-LRB- brackets/NNS ]/-RRB- in/IN log4j/NN conversion/NN patterns/NNS ./. 

(ROOT (S (NP (DT This) (ADJP (RB extremely) (JJ useful)) (NN feature)) (VP (VBD worked) (NP (NN fine)) (SBAR (IN until) (S (S (VP (VBG upgrading) (S (VP (TO to) (VP (VB eclipse) (NP (CD 3.2.1)) (ADVP (RB Finally))))))) (VP (VBD figured) (PRT (RP out)) (SBAR (IN that) (S (NP (NN eclipse)) (VP (VBZ does) (RB not) (ADVP (RB anymore)) (VP (VB handle) (NP (NP (DT the) (NN use)) (PP (IN of) (NP (-LRB- -LSB-) (NNS brackets) (-RRB- -RSB-)))) (PP (IN in) (NP (NN log4j) (NN conversion) (NNS patterns))))))))))) (. .)))

root(ROOT-0, worked-5)
det(feature-4, This-1)
advmod(useful-3, extremely-2)
amod(feature-4, useful-3)
nsubj(worked-5, feature-4)
dobj(worked-5, fine-6)
mark(figured-13, until-7)
csubj(figured-13, upgrading-8)
aux(eclipse-10, to-9)
xcomp(upgrading-8, eclipse-10)
dobj(eclipse-10, 3.2.1-11)
advmod(eclipse-10, Finally-12)
advcl(worked-5, figured-13)
prt(figured-13, out-14)
mark(handle-20, that-15)
nsubj(handle-20, eclipse-16)
aux(handle-20, does-17)
neg(handle-20, not-18)
advmod(handle-20, anymore-19)
ccomp(figured-13, handle-20)
det(use-22, the-21)
dobj(handle-20, use-22)
punct(brackets-25, -LSB--24)
prep_of(use-22, brackets-25)
punct(brackets-25, -RSB--26)
nn(patterns-30, log4j-28)
nn(patterns-30, conversion-29)
prep_in(handle-20, patterns-30)

works/NNS not/RB :/: log4j.appender.stdout.layout.ConversionPattern/NN =/JJ %/NN d/NN %/NN 5p/NN [/-LRB- %/NN t/NN ]/-RRB- (/-LRB- %/NN F/NN :/: %/NN L/NN )/-RRB- -/: %/NN m/NN %/NN n/NN 

(ROOT (NP (NP (NNS works)) (X (RB not)) (: :) (NP (NP (NP (NN log4j.appender.stdout.layout.ConversionPattern)) (NP (NP (QP (JJ =) (NN %)) (NN d) (NN %) (NN 5p) (ADJP (-LRB- -LSB-) (NN %) (NN t)) (-RRB- -RSB-)) (PRN (-LRB- -LRB-) (NP (NP (NN %) (NN F)) (: :) (NP (NN %) (NN L))) (-RRB- -RRB-)))) (: -) (NP (NP (NN %) (NN m)) (NP (NN %) (NN n))))))

root(ROOT-0, works-1)
dep(works-1, not-2)
dep(works-1, log4j.appender.stdout.layout.ConversionPattern-4)
quantmod(%-6, =-5)
num(5p-9, %-6)
nn(5p-9, d-7)
nn(5p-9, %-8)
dep(log4j.appender.stdout.layout.ConversionPattern-4, 5p-9)
punct(t-12, -LSB--10)
dep(t-12, %-11)
amod(5p-9, t-12)
punct(5p-9, -RSB--13)
nn(F-16, %-15)
dep(5p-9, F-16)
nn(L-19, %-18)
dep(F-16, L-19)
nn(m-23, %-22)
dep(log4j.appender.stdout.layout.ConversionPattern-4, m-23)
nn(n-25, %-24)
dep(m-23, n-25)

works/NNS :/: log4j.appender.stdout.layout.ConversionPattern/NN =/JJ %/NN d/NN %/NN 5p/NN (/-LRB- %/NN t/NN )/-RRB- (/-LRB- %/NN F/NN :/: %/NN L/NN )/-RRB- -/: %/NN m/NN %/NN n/NN 

(ROOT (FRAG (NP (NP (NNS works)) (: :) (NP (NP (NN log4j.appender.stdout.layout.ConversionPattern)) (NP (NP (NP (NP (QP (JJ =) (NN %))) (NP (NN d) (NN %) (NN 5p))) (PRN (-LRB- -LRB-) (NP (NN %) (NN t)) (-RRB- -RRB-))) (PRN (-LRB- -LRB-) (NP (NP (NN %) (NN F)) (: :) (NP (NN %) (NN L))) (-RRB- -RRB-)))) (: -) (NP (NN %) (NN m) (NN %) (NN n)))))

root(ROOT-0, works-1)
dep(works-1, log4j.appender.stdout.layout.ConversionPattern-3)
quantmod(%-5, =-4)
dep(log4j.appender.stdout.layout.ConversionPattern-3, %-5)
nn(5p-8, d-6)
nn(5p-8, %-7)
dep(%-5, 5p-8)
nn(t-11, %-10)
appos(%-5, t-11)
nn(F-15, %-14)
dep(%-5, F-15)
nn(L-18, %-17)
dep(F-15, L-18)
nn(n-24, %-21)
nn(n-24, m-22)
nn(n-24, %-23)
dep(works-1, n-24)

