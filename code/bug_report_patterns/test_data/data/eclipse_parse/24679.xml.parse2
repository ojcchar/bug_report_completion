Currently/RB I/PRP can/MD only/RB choose/VB one/CD set/NN of/IN decorators/NNS that/WDT apply/VBP across/IN all/DT my/PRP$ projects/NNS ./. 

(ROOT (S (ADVP (RB Currently)) (NP (PRP I)) (VP (MD can) (ADVP (RB only)) (VP (VB choose) (NP (NP (CD one) (NN set)) (PP (IN of) (NP (NP (NNS decorators)) (SBAR (WHNP (WDT that)) (S (VP (VBP apply) (ADVP (IN across) (DT all)) (NP (PRP$ my) (NNS projects)))))))))) (. .)))

root(ROOT-0, choose-5)
advmod(choose-5, Currently-1)
nsubj(choose-5, I-2)
aux(choose-5, can-3)
advmod(choose-5, only-4)
num(set-7, one-6)
dobj(choose-5, set-7)
prep_of(set-7, decorators-9)
nsubj(apply-11, that-10)
rcmod(decorators-9, apply-11)
advmod(apply-11, across-12)
dep(across-12, all-13)
poss(projects-15, my-14)
dobj(apply-11, projects-15)

I/PRP have/VBP two/CD projects/NNS ,/, one/CD is/VBZ from/IN a/DT readonly/JJ cvs/NNS repository/JJ which/WDT the/DT other/JJ project/NN uses/NNS ./. 

(ROOT (S (S (NP (PRP I)) (VP (VBP have) (NP (CD two) (NNS projects)))) (, ,) (NP (CD one)) (VP (VBZ is) (PP (IN from) (NP (DT a) (JJ readonly) (NNS cvs))) (ADJP (JJ repository) (SBAR (WHNP (WDT which)) (FRAG (NP (DT the) (JJ other) (NN project) (NNS uses)))))) (. .)))

root(ROOT-0, repository-12)
nsubj(have-2, I-1)
ccomp(repository-12, have-2)
num(projects-4, two-3)
dobj(have-2, projects-4)
nsubj(repository-12, one-6)
cop(repository-12, is-7)
det(cvs-11, a-9)
amod(cvs-11, readonly-10)
prep_from(repository-12, cvs-11)
dep(uses-17, which-13)
det(uses-17, the-14)
amod(uses-17, other-15)
nn(uses-17, project-16)
dep(repository-12, uses-17)

In/IN order/NN to/TO setup/NN the/DT first/JJ project/NN I/PRP need/VBP to/TO create/VB the/DT ./. 

(ROOT (S (PP (IN In) (NP (NP (NN order)) (PP (TO to) (NP (NP (NN setup)) (NP (DT the) (JJ first) (NN project)))))) (NP (PRP I)) (VP (VBP need) (S (VP (TO to) (VP (VB create) (NP (DT the)))))) (. .)))

root(ROOT-0, need-9)
prep_in(need-9, order-2)
prep_to(order-2, setup-4)
det(project-7, the-5)
amod(project-7, first-6)
dep(setup-4, project-7)
nsubj(need-9, I-8)
aux(create-11, to-10)
xcomp(need-9, create-11)
dobj(create-11, the-12)

classpath/NN and/CC ./. 

(ROOT (S (NP (NN classpath)) (VP (ADVP (CC and))) (. .)))

root(ROOT-0, and-2)
nsubj(and-2, classpath-1)

project/NN file/NN which/WDT then/RB are/VBP decorated/VBN but/CC which/WDT ca/MD n't/RB be/VB committed/VBN ./. 

(ROOT (S (NP (NN project)) (VP (NN file) (SBAR (SBAR (WHNP (WDT which)) (S (ADVP (RB then)) (VP (VBP are) (ADJP (VBN decorated))))) (CC but) (SBAR (WHNP (WDT which)) (S (VP (MD ca) (RB n't) (VP (VB be) (VP (VBN committed)))))))) (. .)))

root(ROOT-0, file-2)
nsubj(file-2, project-1)
nsubjpass(decorated-6, which-3)
advmod(decorated-6, then-4)
auxpass(decorated-6, are-5)
dep(file-2, decorated-6)
nsubjpass(committed-12, which-8)
aux(committed-12, ca-9)
neg(committed-12, n't-10)
auxpass(committed-12, be-11)
dep(file-2, committed-12)
conj_but(decorated-6, committed-12)

Ideally/RB I/PRP could/MD turn/VB off/RP decorators/NNS for/IN this/DT project/NN but/CC leave/VBP them/PRP on/IN for/IN the/DT second/JJ which/WDT depends/VBZ on/IN the/DT first/JJ and/CC that/IN I/PRP do/VBP have/VB commit/VB privileges/NNS on/IN ./. 

(ROOT (S (ADVP (RB Ideally)) (NP (PRP I)) (VP (VP (MD could) (VP (VB turn) (PRT (RP off)) (NP (NP (NNS decorators)) (PP (IN for) (NP (DT this) (NN project)))))) (CC but) (VP (VBP leave) (NP (PRP them)) (PP (IN on) (IN for) (NP (NP (DT the) (JJ second)) (SBAR (SBAR (WHNP (WDT which)) (S (VP (VBZ depends) (PP (IN on) (NP (DT the) (JJ first)))))) (CC and) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP do) (VP (VB have) (S (VP (VB commit) (NP (NNS privileges)) (PP (IN on))))))))))))) (. .)))

root(ROOT-0, turn-4)
advmod(turn-4, Ideally-1)
nsubj(turn-4, I-2)
nsubj(leave-11, I-2)
aux(turn-4, could-3)
prt(turn-4, off-5)
dobj(turn-4, decorators-6)
det(project-9, this-8)
prep_for(decorators-6, project-9)
conj_but(turn-4, leave-11)
dobj(leave-11, them-12)
dep(leave-11, on-13)
det(second-16, the-15)
prep_for(leave-11, second-16)
nsubj(depends-18, which-17)
rcmod(second-16, depends-18)
det(first-21, the-20)
prep_on(depends-18, first-21)
mark(have-26, that-23)
nsubj(have-26, I-24)
aux(have-26, do-25)
rcmod(second-16, have-26)
conj_and(depends-18, have-26)
ccomp(have-26, commit-27)
dobj(commit-27, privileges-28)
prep(commit-27, on-29)

Or/CC possibly/RB a/DT setting/NN which/WDT lets/VBZ eclipse/NN know/VB that/IN a/DT project/NN is/VBZ hooked/VBN up/RP to/TO a/DT readonly/JJ repository/NN and/CC as/IN such/JJ should/MD n't/RB bother/VB with/IN outgoing/JJ decorators/NNS ./. 

(ROOT (FRAG (CC Or) (NP (NP (RB possibly) (DT a) (NN setting)) (SBAR (WHNP (WDT which)) (S (VP (VBZ lets) (S (NP (NN eclipse)) (VP (VB know) (SBAR (SBAR (IN that) (S (NP (DT a) (NN project)) (VP (VBZ is) (VP (VBN hooked) (PRT (RP up)) (PP (TO to) (NP (DT a) (JJ readonly) (NN repository))))))) (CC and) (SBAR (IN as) (S (NP (JJ such)) (VP (MD should) (RB n't) (VP (VB bother) (PP (IN with) (NP (JJ outgoing) (NNS decorators)))))))))))))) (. .)))

root(ROOT-0, setting-4)
cc(setting-4, Or-1)
advmod(setting-4, possibly-2)
det(setting-4, a-3)
nsubj(lets-6, which-5)
rcmod(setting-4, lets-6)
nsubj(know-8, eclipse-7)
ccomp(lets-6, know-8)
mark(hooked-13, that-9)
det(project-11, a-10)
nsubjpass(hooked-13, project-11)
auxpass(hooked-13, is-12)
advcl(know-8, hooked-13)
prt(hooked-13, up-14)
det(repository-18, a-16)
amod(repository-18, readonly-17)
prep_to(hooked-13, repository-18)
mark(bother-24, as-20)
nsubj(bother-24, such-21)
aux(bother-24, should-22)
neg(bother-24, n't-23)
advcl(know-8, bother-24)
conj_and(hooked-13, bother-24)
amod(decorators-27, outgoing-26)
prep_with(bother-24, decorators-27)

