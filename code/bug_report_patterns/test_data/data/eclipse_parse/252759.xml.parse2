This/DT is/VBZ due/JJ to/TO a/DT deficiency/NN in/IN the/DT command/NN framework/NN ./. 

(ROOT (S (NP (DT This)) (VP (VBZ is) (ADJP (JJ due) (PP (TO to) (NP (NP (DT a) (NN deficiency)) (PP (IN in) (NP (DT the) (NN command) (NN framework))))))) (. .)))

root(ROOT-0, due-3)
nsubj(due-3, This-1)
cop(due-3, is-2)
det(deficiency-6, a-5)
prep_to(due-3, deficiency-6)
det(framework-10, the-8)
nn(framework-10, command-9)
prep_in(deficiency-6, framework-10)

The/DT refresh/JJ item/NN in/IN debugger/NN views/NNS is/VBZ linked/VBN to/TO the/DT global/JJ File/NN -/: >/JJR Refresh/JJ action/NN ./. 

(ROOT (S (NP (NP (DT The) (JJ refresh) (NN item)) (PP (IN in) (NP (NN debugger) (NNS views)))) (VP (VBZ is) (VP (VBN linked) (PP (TO to) (NP (NP (DT the) (JJ global) (NN File)) (: -) (NP (JJR >) (JJ Refresh) (NN action)))))) (. .)))

root(ROOT-0, linked-8)
det(item-3, The-1)
amod(item-3, refresh-2)
nsubjpass(linked-8, item-3)
nn(views-6, debugger-5)
prep_in(item-3, views-6)
auxpass(linked-8, is-7)
det(File-12, the-10)
amod(File-12, global-11)
prep_to(linked-8, File-12)
amod(action-16, >-14)
amod(action-16, Refresh-15)
dep(File-12, action-16)

When/WRB focus/NN is/VBZ in/IN the/DT editor/NN ,/, which/WDT allows/VBZ the/DT refresh/JJ action/NN to/TO be/VB executed/VBN ,/, the/DT refresh/JJ action/NN in/IN debugger/NN views/NNS is/VBZ enabled/VBN as/IN a/DT side/JJ effect/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (NN focus)) (VP (VBZ is) (PP (IN in) (NP (NP (DT the) (NN editor)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ allows) (NP (DT the) (JJ refresh) (NN action) (S (VP (TO to) (VP (VB be) (VP (VBN executed)))))))))))))) (, ,) (NP (NP (DT the) (JJ refresh) (NN action)) (PP (IN in) (NP (NN debugger) (NNS views)))) (VP (VBZ is) (VP (VBN enabled) (PP (IN as) (NP (DT a) (JJ side) (NN effect))))) (. .)))

root(ROOT-0, enabled-24)
advmod(is-3, When-1)
nsubj(is-3, focus-2)
advcl(enabled-24, is-3)
det(editor-6, the-5)
prep_in(is-3, editor-6)
nsubj(allows-9, which-8)
rcmod(editor-6, allows-9)
det(action-12, the-10)
amod(action-12, refresh-11)
dobj(allows-9, action-12)
aux(executed-15, to-13)
auxpass(executed-15, be-14)
vmod(action-12, executed-15)
det(action-19, the-17)
amod(action-19, refresh-18)
nsubjpass(enabled-24, action-19)
nn(views-22, debugger-21)
prep_in(action-19, views-22)
auxpass(enabled-24, is-23)
det(effect-28, a-26)
amod(effect-28, side-27)
prep_as(enabled-24, effect-28)

If/IN the/DT refresh/JJ action/NN in/IN the/DT view/NN is/VBZ selected/VBN while/IN it/PRP should/MD not/RB have/VB been/VBN enabled/VBN ,/, the/DT refresh/JJ action/NN will/MD not/RB have/VB any/DT effect/NN ./. 

(ROOT (S (SBAR (IN If) (S (NP (NP (DT the) (JJ refresh) (NN action)) (PP (IN in) (NP (DT the) (NN view)))) (VP (VBZ is) (VP (VBN selected) (SBAR (IN while) (S (NP (PRP it)) (VP (MD should) (RB not) (VP (VB have) (VP (VBN been) (VP (VBN enabled))))))))))) (, ,) (NP (DT the) (JJ refresh) (NN action)) (VP (MD will) (RB not) (VP (VB have) (NP (DT any) (NN effect)))) (. .)))

root(ROOT-0, have-23)
mark(selected-9, If-1)
det(action-4, the-2)
amod(action-4, refresh-3)
nsubjpass(selected-9, action-4)
det(view-7, the-6)
prep_in(action-4, view-7)
auxpass(selected-9, is-8)
advcl(have-23, selected-9)
mark(enabled-16, while-10)
nsubjpass(enabled-16, it-11)
aux(enabled-16, should-12)
neg(enabled-16, not-13)
aux(enabled-16, have-14)
auxpass(enabled-16, been-15)
advcl(selected-9, enabled-16)
det(action-20, the-18)
amod(action-20, refresh-19)
nsubj(have-23, action-20)
aux(have-23, will-21)
neg(have-23, not-22)
det(effect-25, any-24)
dobj(have-23, effect-25)

