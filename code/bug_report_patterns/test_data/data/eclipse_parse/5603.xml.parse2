The/DT message/NN displayed/VBD when/WRB errors/NNS were/VBD found/VBN while/IN exporting/VBG a/DT class/NN that/WDT does/VBZ n't/RB compile/VB to/TO a/DT JAR/NN file/NN are/VBP incorrect/JJ ./. 

(ROOT (S (NP (DT The) (NN message)) (VP (VBD displayed) (SBAR (WHADVP (WRB when)) (S (NP (NNS errors)) (VP (VBD were) (VP (VBN found) (SBAR (IN while) (S (S (VP (VBG exporting) (NP (NP (DT a) (NN class)) (SBAR (WHNP (WDT that)) (S (VP (VBZ does) (RB n't) (VP (VB compile) (PP (TO to) (NP (DT a) (NN JAR) (NN file)))))))))) (VP (VBP are) (ADJP (JJ incorrect)))))))))) (. .)))

root(ROOT-0, displayed-3)
det(message-2, The-1)
nsubj(displayed-3, message-2)
advmod(found-7, when-4)
nsubjpass(found-7, errors-5)
auxpass(found-7, were-6)
advcl(displayed-3, found-7)
mark(incorrect-21, while-8)
csubj(incorrect-21, exporting-9)
det(class-11, a-10)
dobj(exporting-9, class-11)
nsubj(compile-15, that-12)
aux(compile-15, does-13)
neg(compile-15, n't-14)
rcmod(class-11, compile-15)
det(file-19, a-17)
nn(file-19, JAR-18)
prep_to(compile-15, file-19)
cop(incorrect-21, are-20)
advcl(found-7, incorrect-21)

The/DT spanish/NNP text/NN :/: 

(ROOT (NP (NP (DT The) (NNP spanish) (NN text)) (: :)))

root(ROOT-0, text-3)
det(text-3, The-1)
nn(text-3, spanish-2)

Exportado/NNP con/RB compilaci贸n/JJ errores/NNS :/: . . ./: 

(ROOT (NP (NP (NP (NNP Exportado)) (SBAR (S (NP (NP (RB con)) (NP (ADJP (JJ compilaci贸n) (NP (NNS errores)))) (: :))))) (: ...)))

root(ROOT-0, Exportado-1)
rcmod(Exportado-1, con-2)
dep(con-2, compilaci贸n-3)
dep(compilaci贸n-3, errores-4)

corresponds/VBZ to/TO the/DT following/VBG properties/NNS file/NN :/: 

(ROOT (SINV (VP (VBZ corresponds) (PP (TO to))) (NP (NP (DT the)) (PP (VBG following) (NP (NP (NNS properties) (NN file)) (: :))))))

root(ROOT-0, corresponds-1)
prep(corresponds-1, to-2)
nsubj(corresponds-1, the-3)
nn(file-6, properties-5)
prep_following(the-3, file-6)

eclipse/VB \/CD plugins/NNS \/VBP org.eclipse.jdt.ui/NNS \/VBP jdt_jar/JJ \/NN org/NN \/CD eclipse/NN \/NN jdt/NN \/CD internal/JJ \/NN ui/NN \/NN jarpackag/NN er/NN \/NN JarPackagerMessages.properties/NNS 

(ROOT (S (VP (VB eclipse) (NP (NP (CD \) (NNS plugins)) (SBAR (S (VP (VBP \) (SBAR (S (NP (NNS org.eclipse.jdt.ui)) (VP (VBP \) (NP (NP (JJ jdt_jar) (NN \) (NN org) (CD \) (NN eclipse) (NN \) (NN jdt)) (NP (CD \) (JJ internal) (NN \) (NN ui) (NN \) (NN jarpackag) (NN er) (NN \) (NNS JarPackagerMessages.properties)))))))))))))

root(ROOT-0, eclipse-1)
num(plugins-3, \-2)
dobj(eclipse-1, plugins-3)
rcmod(plugins-3, \-4)
nsubj(\-6, org.eclipse.jdt.ui-5)
ccomp(\-4, \-6)
amod(jdt-13, jdt_jar-7)
nn(jdt-13, \-8)
nn(jdt-13, org-9)
num(jdt-13, \-10)
nn(jdt-13, eclipse-11)
nn(jdt-13, \-12)
dobj(\-6, jdt-13)
num(JarPackagerMessages.properties-22, \-14)
amod(JarPackagerMessages.properties-22, internal-15)
nn(JarPackagerMessages.properties-22, \-16)
nn(JarPackagerMessages.properties-22, ui-17)
nn(JarPackagerMessages.properties-22, \-18)
nn(JarPackagerMessages.properties-22, jarpackag-19)
nn(JarPackagerMessages.properties-22, er-20)
nn(JarPackagerMessages.properties-22, \-21)
dep(jdt-13, JarPackagerMessages.properties-22)

JarFileExportOperation.exportedWithCompile/NN =/JJ Exportado/NNP con/NN compilaci/CD cents/NNS n/NN JarFileExportOperation.notExportedDueToCompile/NN =/JJ No/DT exportado/FW debido/FW a/FW la/FW compilaci/FW cents/NNS n/NN JarFileExportOperation.errors/VBG =\/CD errores/NNS :/: {/-LRB- 0/CD }/-RRB- JarFileExportOperation.warnings/NNP =\/CD avisos/NNS :/: {/-LRB- 0/CD }/-RRB- 

(ROOT (S (NP (NN JarFileExportOperation.exportedWithCompile)) (VP (NP (NP (NP (NP (JJ =) (NNP Exportado) (NN con)) (NP (QP (CD compilaci) (NNS cents)) (NN n) (NN JarFileExportOperation.notExportedDueToCompile) (JJ =) (NAC (NP (DT No) (FW exportado) (FW debido)) (PP (FW a) (FW la) (NP (FW compilaci) (NNS cents)))) (NN n))) (VP (VBG JarFileExportOperation.errors) (NP (CD =\) (NNS errores)))) (: :) (NP (NP (-LRB- -LCB-) (QP (CD 0)) (-RRB- -RCB-)) (NP (NNP JarFileExportOperation.warnings) (CD =\) (NNS avisos))) (: :)) (PRN (-LRB- -LCB-) (NP-TMP (CD 0)) (-RRB- -RCB-)))))

root(ROOT-0, con-4)
nsubj(con-4, JarFileExportOperation.exportedWithCompile-1)
amod(con-4, =-2)
nn(con-4, Exportado-3)
number(cents-6, compilaci-5)
num(n-17, cents-6)
nn(n-17, n-7)
nn(n-17, JarFileExportOperation.notExportedDueToCompile-8)
amod(n-17, =-9)
neg(debido-12, No-10)
nn(debido-12, exportado-11)
dep(n-17, debido-12)
dep(la-14, a-13)
prep(debido-12, la-14)
nn(cents-16, compilaci-15)
pobj(la-14, cents-16)
dep(con-4, n-17)
vmod(con-4, JarFileExportOperation.errors-18)
num(errores-20, =\-19)
dobj(JarFileExportOperation.errors-18, errores-20)
dep(con-4, 0-23)
nn(avisos-27, JarFileExportOperation.warnings-25)
num(avisos-27, =\-26)
dep(0-23, avisos-27)
dep(con-4, 0-30)

The/DT english/JJ file/NN is/VBZ as/IN following/VBG :/: 

(ROOT (S (NP (DT The) (JJ english) (NN file)) (VP (VBZ is) (PP (IN as) (NP (VBG following)))) (: :)))

root(ROOT-0, is-4)
det(file-3, The-1)
amod(file-3, english-2)
nsubj(is-4, file-3)
prep_as(is-4, following-6)

JarFileExportOperation.exportedWithCompile/NN =/JJ Exported/VBN with/IN compile/VBP JarFileExportOperation.notExportedDueToCompile/NN =/JJ Not/RB exported/VBN due/JJ to/TO compile/VB JarFileExportOperation.errors/NNP =\/JJ errors/NNS :/: {/-LRB- 0/CD }/-RRB- JarFileExportOperation.warnings/NNP =\/CD warnings/NNS :/: {/-LRB- 0/CD }/-RRB- 

(ROOT (S (NP (NP (NN JarFileExportOperation.exportedWithCompile) (JJ =)) (VP (VBN Exported) (PP (IN with)))) (VP (VBP compile) (NP (NP (NN JarFileExportOperation.notExportedDueToCompile)) (NP (NP (NP (JJ =) (RB Not)) (VP (VBN exported) (ADJP (JJ due) (S (VP (TO to) (VP (VB compile) (NP (NP (NNP JarFileExportOperation.errors) (JJ =\) (NNS errors)) (: :) (NP (NP (-LRB- -LCB-) (QP (CD 0)) (-RRB- -RCB-)) (NP (NNP JarFileExportOperation.warnings) (CD =\) (NNS warnings))) (: :)))))))) (-LRB- -LCB-) (NP (CD 0)) (-RRB- -RCB-))))))

root(ROOT-0, compile-5)
nsubj(compile-5, JarFileExportOperation.exportedWithCompile-1)
amod(JarFileExportOperation.exportedWithCompile-1, =-2)
vmod(JarFileExportOperation.exportedWithCompile-1, Exported-3)
prep(Exported-3, with-4)
dobj(compile-5, JarFileExportOperation.notExportedDueToCompile-6)
amod(Not-8, =-7)
dep(JarFileExportOperation.notExportedDueToCompile-6, Not-8)
vmod(Not-8, exported-9)
acomp(exported-9, due-10)
aux(compile-12, to-11)
xcomp(due-10, compile-12)
nn(errors-15, JarFileExportOperation.errors-13)
amod(errors-15, =\-14)
dobj(compile-12, errors-15)
dep(errors-15, 0-18)
nn(warnings-22, JarFileExportOperation.warnings-20)
num(warnings-22, =\-21)
dep(0-18, warnings-22)
dep(Not-8, 0-25)

These/DT 4/CD strings/NNS combine/VBP to/TO form/VB the/DT following/VBG sentences/NNS :/: 

(ROOT (S (NP (DT These) (CD 4) (NNS strings)) (VP (VBP combine) (S (VP (TO to) (VP (VB form) (NP (DT the) (VBG following) (NNS sentences)))))) (: :)))

root(ROOT-0, combine-4)
det(strings-3, These-1)
num(strings-3, 4-2)
nsubj(combine-4, strings-3)
aux(form-6, to-5)
xcomp(combine-4, form-6)
det(sentences-9, the-7)
amod(sentences-9, following-8)
dobj(form-6, sentences-9)

Exported/VBN wth/NN compile/VBP errors/NNS :/: {/-LRB- 0/CD }/-RRB- Exported/VBN with/IN compile/VBP warnings/NNS :/: {/-LRB- 0/CD }/-RRB- Not/RB exported/VBN due/JJ to/TO compile/VB errors/NNS :/: {/-LRB- 0/CD }/-RRB- Not/RB exporte/NN due/JJ to/TO compile/VB warnings/NNS :/: {/-LRB- 0/CD }/-RRB- 

(ROOT (VP (VBN Exported) (SBAR (S (NP (NN wth)) (VP (VBP compile) (NP (NP (NP (NNS errors)) (: :) (NP (NP (NP (NP (-LRB- -LCB-) (QP (CD 0)) (-RRB- -RCB-)) (VP (VBN Exported) (SBAR (IN with) (S (VP (VBP compile) (NP (NNS warnings))) (: :))))) (-LRB- -LCB-) (NP (CD 0)) (-RRB- -RCB-)) (SBAR (RB Not) (S (VP (VBN exported) (S (ADJP (JJ due) (S (VP (TO to) (VP (VB compile) (NP (NNS errors)) (: :) (S (-LRB- -LCB-) (NP (CD 0)) (-RRB- -RCB-) (NP (NP (RB Not) (NN exporte)) (ADJP (JJ due) (S (VP (TO to) (VP (VB compile) (NP (NNS warnings))))))))))))))))) (: :)) (PRN (-LRB- -LCB-) (NP (CD 0)) (-RRB- -RCB-))))))))

root(ROOT-0, Exported-1)
nsubj(compile-3, wth-2)
ccomp(Exported-1, compile-3)
dobj(compile-3, errors-4)
dep(errors-4, 0-7)
vmod(0-7, Exported-9)
mark(compile-11, with-10)
advcl(Exported-9, compile-11)
dobj(compile-11, warnings-12)
dep(0-7, 0-15)
dep(exported-18, Not-17)
dep(0-7, exported-18)
acomp(exported-18, due-19)
aux(compile-21, to-20)
xcomp(due-19, compile-21)
dobj(compile-21, errors-22)
dep(exporte-28, 0-25)
neg(exporte-28, Not-27)
parataxis(compile-21, exporte-28)
amod(exporte-28, due-29)
aux(compile-31, to-30)
xcomp(due-29, compile-31)
dobj(compile-31, warnings-32)
appos(errors-4, 0-35)

This/DT string/NN structure/NN makes/VBZ it/PRP impossible/JJ to/TO obtain/VB a/DT good/JJ translation/NN in/IN spanish/NNP because/IN the/DT translation/NN of/IN the/DT word/NN compile/VBP must/MD be/VB placed/VBN at/IN the/DT very/JJ end/NN of/IN the/DT sentence/NN ./. 

(ROOT (S (NP (DT This) (NN string) (NN structure)) (VP (VBZ makes) (S (NP (PRP it)) (ADJP (JJ impossible) (S (VP (TO to) (VP (VB obtain) (NP (DT a) (JJ good) (NN translation)) (PP (IN in) (NP (NNP spanish))) (SBAR (IN because) (S (NP (NP (DT the) (NN translation)) (PP (IN of) (NP (DT the) (NN word)))) (VP (VBP compile) (SBAR (S (VP (MD must) (VP (VB be) (VP (VBN placed) (PP (IN at) (NP (NP (DT the) (JJ very) (NN end)) (PP (IN of) (NP (DT the) (NN sentence))))))))))))))))))) (. .)))

root(ROOT-0, makes-4)
det(structure-3, This-1)
nn(structure-3, string-2)
nsubj(makes-4, structure-3)
nsubj(impossible-6, it-5)
xcomp(makes-4, impossible-6)
aux(obtain-8, to-7)
xcomp(impossible-6, obtain-8)
det(translation-11, a-9)
amod(translation-11, good-10)
dobj(obtain-8, translation-11)
prep_in(obtain-8, spanish-13)
mark(compile-20, because-14)
det(translation-16, the-15)
nsubj(compile-20, translation-16)
det(word-19, the-18)
prep_of(translation-16, word-19)
advcl(obtain-8, compile-20)
aux(placed-23, must-21)
auxpass(placed-23, be-22)
ccomp(compile-20, placed-23)
det(end-27, the-25)
amod(end-27, very-26)
prep_at(placed-23, end-27)
det(sentence-30, the-29)
prep_of(end-27, sentence-30)

I/PRP can/MD make/VB a/DT workaround/NN to/TO this/DT problem/NN ,/, but/CC the/DT strings/NNS should/MD be/VB rewritten/VBN ,/, either/CC as/IN the/DT actual/JJ 4/CD sentences/NNS that/WDT appear/VBP or/CC as/IN only/RB two/CD sentences/NNS replacing/VBG errors/NNS and/CC warnings/NNS with/IN a/DT variable/JJ ,/, i.e./FW :/: 

(ROOT (S (NP (PRP I)) (VP (MD can) (VP (VB make) (NP (DT a) (NN workaround)) (PP (TO to) (NP (DT this) (NN problem))) (, ,) (SBAR (CC but) (S (NP (DT the) (NNS strings)) (VP (MD should) (VP (VB be) (VP (VBN rewritten) (, ,) (PP (CC either) (PP (IN as) (NP (NP (DT the) (JJ actual) (CD 4) (NNS sentences)) (SBAR (WHNP (WDT that)) (S (VP (VBP appear)))))) (CC or) (PP (IN as) (NP (NP (RB only) (CD two) (NNS sentences)) (VP (VBG replacing) (NP (NNS errors) (CC and) (NNS warnings)) (PP (IN with) (NP (NP (DT a) (JJ variable)) (, ,) (NP (FW i.e.))))))))))))))) (: :)))

root(ROOT-0, make-3)
nsubj(make-3, I-1)
aux(make-3, can-2)
det(workaround-5, a-4)
dobj(make-3, workaround-5)
det(problem-8, this-7)
prep_to(make-3, problem-8)
cc(rewritten-15, but-10)
det(strings-12, the-11)
nsubjpass(rewritten-15, strings-12)
aux(rewritten-15, should-13)
auxpass(rewritten-15, be-14)
dep(make-3, rewritten-15)
preconj(rewritten-15, either-17)
det(sentences-22, the-19)
amod(sentences-22, actual-20)
num(sentences-22, 4-21)
prep_as(rewritten-15, sentences-22)
nsubj(appear-24, that-23)
rcmod(sentences-22, appear-24)
advmod(sentences-29, only-27)
num(sentences-29, two-28)
prep_as(rewritten-15, sentences-29)
conj_or(sentences-22, sentences-29)
vmod(sentences-29, replacing-30)
dobj(replacing-30, errors-31)
dobj(replacing-30, warnings-33)
conj_and(errors-31, warnings-33)
det(variable-36, a-35)
prep_with(replacing-30, variable-36)
appos(variable-36, i.e.-38)

Exported/VBN with/IN compile/VB {/-LRB- 1/CD }/-RRB- :/: {/-LRB- 0/CD }/-RRB- Not/RB exported/VBN due/JJ to/TO compile/VB {/-LRB- 1/CD }/-RRB- :/: {/-LRB- 0/CD }/-RRB- 

(ROOT (VP (VBN Exported) (PP (IN with) (S (VP (VB compile) (NP (NP (-LRB- -LCB-) (QP (CD 1)) (-RRB- -RCB-)) (: :) (NP (NP (NP (-LRB- -LCB-) (QP (CD 0)) (-RRB- -RCB-)) (SBAR (S (RB Not) (VP (VBN exported) (S (ADJP (JJ due) (S (VP (TO to) (VP (VB compile) (-LRB- -LCB-) (NP (CD 1)) (-RRB- -RCB-)))))))))) (: :) (NP (-LRB- -LCB-) (QP (CD 0)) (-RRB- -RCB-)))))))))

root(ROOT-0, Exported-1)
prepc_with(Exported-1, compile-3)
dobj(compile-3, 1-5)
dep(1-5, 0-9)
neg(exported-12, Not-11)
rcmod(0-9, exported-12)
acomp(exported-12, due-13)
aux(compile-15, to-14)
xcomp(due-13, compile-15)
dobj(compile-15, 1-17)
appos(0-9, 0-21)

In/IN general/JJ ,/, it/PRP is/VBZ poor/JJ NL/NNP enablement/NN practice/NN to/TO "/`` construct/VB "/'' sentences/NNS ./. 

(ROOT (S (PP (IN In) (ADJP (JJ general))) (, ,) (NP (PRP it)) (VP (VBZ is) (ADJP (JJ poor) (SBAR (S (NP (NNP NL) (NN enablement) (NN practice)) (VP (TO to) (VP (`` ``) (VB construct) ('' '') (NP (NNS sentences)))))))) (. .)))

root(ROOT-0, poor-6)
prep_in(poor-6, general-2)
nsubj(poor-6, it-4)
cop(poor-6, is-5)
nn(practice-9, NL-7)
nn(practice-9, enablement-8)
nsubj(construct-12, practice-9)
aux(construct-12, to-10)
ccomp(poor-6, construct-12)
dobj(construct-12, sentences-14)

If/IN you/PRP must/MD use/VB such/JJ techniques/NNS ,/, allow/VBP for/IN substitution/NN as/IN described/VBN above/IN ./. 

(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (MD must) (VP (VB use) (NP (JJ such) (NNS techniques))))) (, ,)) (VP (VBP allow) (PP (IN for) (NP (NN substitution))) (SBAR (IN as) (S (VP (VBN described) (PP (IN above)))))) (. .)))

root(ROOT-0, allow-8)
mark(use-4, If-1)
nsubj(use-4, you-2)
aux(use-4, must-3)
csubj(allow-8, use-4)
amod(techniques-6, such-5)
dobj(use-4, techniques-6)
prep_for(allow-8, substitution-10)
mark(described-12, as-11)
advcl(allow-8, described-12)
prep(described-12, above-13)

