Created/VBN attachment/NN 130567/CD proposed/VBD patch/NN 

(ROOT (VP (VBN Created) (SBAR (S (NP (NN attachment) (CD 130567)) (VP (VBD proposed) (NP (NN patch)))))))

root(ROOT-0, Created-1)
nsubj(proposed-4, attachment-2)
num(attachment-2, 130567-3)
ccomp(Created-1, proposed-4)
dobj(proposed-4, patch-5)

Build/VB ID/NNP :/: I20090325-1135/NN 

(ROOT (S (VP (VB Build) (NP (NP (NNP ID)) (: :) (NP (NN I20090325-1135))))))

root(ROOT-0, Build-1)
dobj(Build-1, ID-2)
dep(ID-2, I20090325-1135-4)

The/DT method/NN URIUtil.fromString/NN (/-LRB- String/NNP )/-RRB- seems/VBZ to/TO be/VB intended/VBN for/IN conversion/NN from/IN string/NN to/TO URI/NNP in/IN a/DT user-friendly/JJ and/CC backward-compatible/JJ way/NN ./. 

(ROOT (S (NP (NP (DT The) (NN method) (NN URIUtil.fromString)) (PRN (-LRB- -LRB-) (NP (NNP String)) (-RRB- -RRB-))) (VP (VBZ seems) (S (VP (TO to) (VP (VB be) (VP (VBN intended) (PP (IN for) (NP (NN conversion))) (PP (IN from) (NP (NN string))) (PP (TO to) (NP (NP (NNP URI)) (PP (IN in) (NP (DT a) (JJ user-friendly) (CC and) (JJ backward-compatible) (NN way)))))))))) (. .)))

root(ROOT-0, seems-7)
det(URIUtil.fromString-3, The-1)
nn(URIUtil.fromString-3, method-2)
nsubj(seems-7, URIUtil.fromString-3)
appos(URIUtil.fromString-3, String-5)
aux(intended-10, to-8)
auxpass(intended-10, be-9)
xcomp(seems-7, intended-10)
prep_for(intended-10, conversion-12)
prep_from(intended-10, string-14)
prep_to(intended-10, URI-16)
det(way-22, a-18)
amod(way-22, user-friendly-19)
conj_and(user-friendly-19, backward-compatible-21)
amod(way-22, backward-compatible-21)
prep_in(URI-16, way-22)

Due/JJ to/TO the/DT mercyful/JJ implementation/NN of/IN the/DT URL/NN class/NN there/EX are/VBP many/JJ URL/NN strings/NNS out/IN there/RB that/DT will/MD simply/RB not/RB be/VB accepted/VBN by/IN the/DT URI/NNP single-argument/NN constructor/NN ./. 

(ROOT (S (PP (JJ Due) (TO to) (NP (NP (DT the) (JJ mercyful) (NN implementation)) (PP (IN of) (NP (DT the) (NN URL) (NN class))))) (NP (EX there)) (VP (VBP are) (NP (NP (JJ many) (NN URL) (NNS strings)) (PP (IN out) (NP (RB there))) (SBAR (WHNP (DT that)) (S (VP (MD will) (ADVP (RB simply)) (RB not) (VP (VB be) (VP (VBN accepted) (PP (IN by) (NP (DT the) (NNP URI) (NN single-argument) (NN constructor)))))))))) (. .)))

root(ROOT-0, are-11)
det(implementation-5, the-3)
amod(implementation-5, mercyful-4)
prep_due_to(are-11, implementation-5)
det(class-9, the-7)
nn(class-9, URL-8)
prep_of(implementation-5, class-9)
expl(are-11, there-10)
amod(strings-14, many-12)
nn(strings-14, URL-13)
nsubj(are-11, strings-14)
prep(strings-14, out-15)
pobj(out-15, there-16)
nsubjpass(accepted-22, that-17)
aux(accepted-22, will-18)
advmod(accepted-22, simply-19)
neg(accepted-22, not-20)
auxpass(accepted-22, be-21)
rcmod(strings-14, accepted-22)
det(constructor-27, the-24)
nn(constructor-27, URI-25)
nn(constructor-27, single-argument-26)
agent(accepted-22, constructor-27)

Therefore/RB it/PRP is/VBZ clear/JJ that/IN we/PRP need/VBP a/DT way/NN to/TO convert/VB these/DT legacy/NN URL/NN strings/NNS to/TO URI/NNP instances/NNS ./. 

(ROOT (S (ADVP (RB Therefore)) (NP (PRP it)) (VP (VBZ is) (ADJP (JJ clear)) (SBAR (IN that) (S (NP (PRP we)) (VP (VBP need) (S (NP (DT a) (NN way)) (VP (TO to) (VP (VB convert) (NP (DT these) (NN legacy) (NN URL) (NNS strings)) (PP (TO to) (NP (NNP URI) (NNS instances)))))))))) (. .)))

root(ROOT-0, clear-4)
advmod(clear-4, Therefore-1)
nsubj(clear-4, it-2)
cop(clear-4, is-3)
mark(need-7, that-5)
nsubj(need-7, we-6)
ccomp(clear-4, need-7)
det(way-9, a-8)
dobj(need-7, way-9)
aux(convert-11, to-10)
xcomp(need-7, convert-11)
det(strings-15, these-12)
nn(strings-15, legacy-13)
nn(strings-15, URL-14)
dobj(convert-11, strings-15)
nn(instances-18, URI-17)
prep_to(convert-11, instances-18)

Unfortunately/RB the/DT current/JJ implementation/NN forces/NNS us/PRP to/TO keep/VB using/VBG the/DT old/JJ unescaped/JJ URLs/NNS ,/, and/CC does/VBZ not/RB allow/VB all/DT valid/JJ (/-LRB- =/JJ "/`` encoded/VBN "/'' //: "/`` escaped/VBD "/'' )/-RRB- URIs/NNS ./. 

(ROOT (FRAG (ADVP (RB Unfortunately)) (NP (NP (DT the) (JJ current) (NN implementation) (NNS forces)) (SBAR (S (NP (PRP us)) (VP (TO to) (VP (VB keep) (S (S (VP (VBG using) (NP (DT the) (JJ old) (JJ unescaped) (NNS URLs)))) (, ,) (CC and) (S (VP (VBZ does) (RB not) (VP (VB allow) (NP (DT all) (ADJP (ADJP (JJ valid)) (PRN (-LRB- -LRB-) (NP (NP (JJ =)) (SBAR (S (`` ``) (S (VP (VBN encoded))) ('' '') (VP (: /) (`` ``) (SBAR (S (VP (VBD escaped)))) ('' ''))))) (-RRB- -RRB-))) (NNS URIs))))))))))) (. .)))

root(ROOT-0, forces-5)
dep(forces-5, Unfortunately-1)
det(forces-5, the-2)
amod(forces-5, current-3)
nn(forces-5, implementation-4)
nsubj(keep-8, us-6)
aux(keep-8, to-7)
rcmod(forces-5, keep-8)
dep(keep-8, using-9)
det(URLs-13, the-10)
amod(URLs-13, old-11)
amod(URLs-13, unescaped-12)
dobj(using-9, URLs-13)
aux(allow-18, does-16)
neg(allow-18, not-17)
dep(keep-8, allow-18)
conj_and(using-9, allow-18)
det(URIs-31, all-19)
amod(URIs-31, valid-20)
dep(valid-20, =-22)
csubj(escaped-28, encoded-24)
punct(escaped-28, /-26)
rcmod(=-22, escaped-28)
dobj(allow-18, URIs-31)

If/IN a/DT URI/NNP string/NN with/IN an/DT escape/NN sequence/NN (/-LRB- see/VB example/NN below/IN )/-RRB- is/VBZ passed/VBN in/RP as/IN argument/NN to/TO URIUtil.fromString/NN ,/, the/DT escape/NN character/NN (/-LRB- '/'' %/NN '/'' )/-RRB- is/VBZ escaped/VBN again/RB ./. 

(ROOT (S (SBAR (IN If) (S (NP (NP (NP (DT a) (NNP URI) (NN string)) (PP (IN with) (NP (DT an) (NN escape) (NN sequence)))) (PRN (-LRB- -LRB-) (S (VP (VB see) (NP (NN example)) (PP (IN below)))) (-RRB- -RRB-))) (VP (VBZ is) (VP (VBN passed) (PRT (RP in)) (PP (IN as) (NP (NN argument))) (PP (TO to) (NP (NN URIUtil.fromString))))))) (, ,) (NP (NP (DT the) (NN escape) (NN character)) (PRN (-LRB- -LRB-) (NP ('' ') (NN %)) ('' ') (-RRB- -RRB-))) (VP (VBZ is) (VP (VBN escaped) (ADVP (RB again)))) (. .)))

root(ROOT-0, escaped-31)
mark(passed-15, If-1)
det(string-4, a-2)
nn(string-4, URI-3)
nsubjpass(passed-15, string-4)
det(sequence-8, an-6)
nn(sequence-8, escape-7)
prep_with(string-4, sequence-8)
dep(string-4, see-10)
dobj(see-10, example-11)
prep(see-10, below-12)
auxpass(passed-15, is-14)
advcl(escaped-31, passed-15)
prt(passed-15, in-16)
prep_as(passed-15, argument-18)
prep_to(passed-15, URIUtil.fromString-20)
det(character-24, the-22)
nn(character-24, escape-23)
nsubjpass(escaped-31, character-24)
dep(character-24, %-27)
auxpass(escaped-31, is-30)
advmod(escaped-31, again-32)

I/PRP propose/VBP to/TO change/VB the/DT implementation/NN so/IN that/IN it/PRP correctly/RB converts/VBZ both/CC legacy/NN URLs/NNS as/RB well/RB as/IN valid/JJ URIs/NNS with/IN escape/NN sequences/NNS ./. 

(ROOT (S (NP (PRP I)) (VP (VBP propose) (S (VP (TO to) (VP (VB change) (NP (DT the) (NN implementation)) (SBAR (IN so) (IN that) (S (NP (PRP it)) (ADVP (RB correctly)) (VP (VBZ converts) (NP (ADVP (CC both)) (NP (NN legacy) (NNS URLs)) (CONJP (RB as) (RB well) (IN as)) (NP (NP (JJ valid) (NNS URIs)) (PP (IN with) (NP (NN escape) (NNS sequences)))))))))))) (. .)))

root(ROOT-0, propose-2)
nsubj(propose-2, I-1)
aux(change-4, to-3)
xcomp(propose-2, change-4)
det(implementation-6, the-5)
dobj(change-4, implementation-6)
mark(converts-11, so-7)
mark(converts-11, that-8)
nsubj(converts-11, it-9)
advmod(converts-11, correctly-10)
advcl(change-4, converts-11)
advmod(URLs-14, both-12)
nn(URLs-14, legacy-13)
dobj(converts-11, URLs-14)
amod(URIs-19, valid-18)
dobj(converts-11, URIs-19)
conj_and(URLs-14, URIs-19)
nn(sequences-22, escape-21)
prep_with(URIs-19, sequences-22)

With/IN this/DT proposal/NN ,/, the/DT transition/NN path/NN towards/IN valid/JJ (/-LRB- "/`` escaped/VBD "/'' )/-RRB- URI/NNP strings/NNS is/VBZ open/JJ ,/, without/IN breaking/VBG existing/VBG code/NN ./. 

(ROOT (S (PP (IN With) (NP (DT this) (NN proposal))) (, ,) (NP (NP (NP (DT the) (NN transition) (NN path)) (PP (IN towards) (ADJP (JJ valid)))) (PRN (-LRB- -LRB-) (`` ``) (S (VP (VBD escaped))) ('' '') (-RRB- -RRB-)) (NP (NNP URI) (NNS strings))) (VP (VBZ is) (ADJP (JJ open)) (, ,) (PP (IN without) (S (VP (VBG breaking) (NP (VBG existing) (NN code)))))) (. .)))

root(ROOT-0, open-18)
det(proposal-3, this-2)
prep_with(open-18, proposal-3)
det(path-7, the-5)
nn(path-7, transition-6)
nsubj(open-18, path-7)
prep_towards(path-7, valid-9)
dep(path-7, escaped-12)
nn(strings-16, URI-15)
dep(path-7, strings-16)
cop(open-18, is-17)
prepc_without(open-18, breaking-21)
amod(code-23, existing-22)
dobj(breaking-21, code-23)

The/DT implementation/NN of/IN the/DT proposal/NN is/VBZ very/RB simple/JJ (/-LRB- see/VB attached/VBN patch/NN )/-RRB- :/: if/IN the/DT string/NN argument/NN of/IN URIUtil.fromString/NN contains/VBZ a/DT percent/JJ character/NN ,/, assume/VB that/IN the/DT string/NN is/VBZ an/DT "/`` escaped/VBD "/'' URI/NNP string/NN and/CC pass/VB it/PRP to/TO the/DT single-argument/JJ constructor/NN URI/NNP (/-LRB- String/NNP )/-RRB- ./. 

(ROOT (S (S (NP (NP (DT The) (NN implementation)) (PP (IN of) (NP (DT the) (NN proposal)))) (VP (VBZ is) (ADJP (RB very) (JJ simple)))) (PRN (-LRB- -LRB-) (S (VP (VB see) (VP (VBN attached) (NP (NN patch))))) (-RRB- -RRB-)) (: :) (S (SBAR (IN if) (S (NP (NP (DT the) (NN string) (NN argument)) (PP (IN of) (NP (NN URIUtil.fromString)))) (VP (VBZ contains) (NP (DT a) (JJ percent) (NN character))))) (, ,) (VP (VP (VP (VB assume) (SBAR (IN that) (S (NP (DT the) (NN string)) (VP (VBZ is) (SBAR (S (NP (DT an)) (`` ``) (VP (VBD escaped)) ('' ''))))))) (NP (NNP URI) (NN string))) (CC and) (VP (VB pass) (NP (PRP it)) (PP (TO to) (NP (NP (DT the) (JJ single-argument) (NN constructor) (NNP URI)) (PRN (-LRB- -LRB-) (NP (NNP String)) (-RRB- -RRB-))))))) (. .)))

root(ROOT-0, simple-8)
det(implementation-2, The-1)
nsubj(simple-8, implementation-2)
det(proposal-5, the-4)
prep_of(implementation-2, proposal-5)
cop(simple-8, is-6)
advmod(simple-8, very-7)
dep(simple-8, see-10)
dep(see-10, attached-11)
dobj(attached-11, patch-12)
mark(contains-21, if-15)
det(argument-18, the-16)
nn(argument-18, string-17)
nsubj(contains-21, argument-18)
prep_of(argument-18, URIUtil.fromString-20)
advcl(assume-26, contains-21)
det(character-24, a-22)
amod(character-24, percent-23)
dobj(contains-21, character-24)
parataxis(simple-8, assume-26)
mark(is-30, that-27)
det(string-29, the-28)
nsubj(is-30, string-29)
ccomp(assume-26, is-30)
nsubj(escaped-33, an-31)
ccomp(is-30, escaped-33)
nn(string-36, URI-35)
dobj(assume-26, string-36)
parataxis(simple-8, pass-38)
conj_and(assume-26, pass-38)
dobj(pass-38, it-39)
det(URI-44, the-41)
amod(URI-44, single-argument-42)
nn(URI-44, constructor-43)
prep_to(pass-38, URI-44)
appos(URI-44, String-46)

Otherwise/RB do/VBP what/WP is/VBZ done/VBN by/IN the/DT current/JJ implementation/NN ,/, i.e./FW escape/NN invalid/JJ characters/NNS and/CC attempt/NN to/TO construct/VB a/DT URI/NNP from/IN that/DT ./. 

(ROOT (SINV (ADVP (RB Otherwise)) (VP (VBP do) (SBAR (WHNP (WP what)) (S (VP (VBZ is) (VP (VBN done) (PP (IN by) (NP (NP (DT the) (JJ current) (NN implementation)) (, ,) (NP (FW i.e.))))))))) (NP (NP (NN escape)) (ADJP (JJ invalid) (NP (NP (NNS characters) (CC and) (NN attempt)) (S (VP (TO to) (VP (VB construct) (NP (DT a) (NNP URI)) (PP (IN from) (NP (DT that))))))))) (. .)))

root(ROOT-0, do-2)
advmod(do-2, Otherwise-1)
nsubjpass(done-5, what-3)
auxpass(done-5, is-4)
ccomp(do-2, done-5)
det(implementation-9, the-7)
amod(implementation-9, current-8)
agent(done-5, implementation-9)
appos(implementation-9, i.e.-11)
nsubj(do-2, escape-12)
amod(escape-12, invalid-13)
dep(invalid-13, characters-14)
dep(invalid-13, attempt-16)
conj_and(characters-14, attempt-16)
aux(construct-18, to-17)
vmod(characters-14, construct-18)
det(URI-20, a-19)
dobj(construct-18, URI-20)
prep_from(construct-18, that-22)

Even/RB though/IN this/DT patch/NN changes/VBZ the/DT behavior/NN of/IN the/DT method/NN ,/, I/PRP would/MD not/RB consider/VB this/DT to/TO be/VB breaking/VBG the/DT API/NNP :/: 

(ROOT (S (SBAR (RB Even) (IN though) (S (NP (DT this) (NN patch)) (VP (VBZ changes) (NP (NP (DT the) (NN behavior)) (PP (IN of) (NP (DT the) (NN method))))))) (, ,) (NP (PRP I)) (VP (MD would) (RB not) (VP (VB consider) (S (NP (DT this)) (VP (TO to) (VP (VB be) (VP (VBG breaking) (NP (DT the) (NNP API)))))))) (: :)))

root(ROOT-0, consider-15)
advmod(changes-5, Even-1)
mark(changes-5, though-2)
det(patch-4, this-3)
nsubj(changes-5, patch-4)
advcl(consider-15, changes-5)
det(behavior-7, the-6)
dobj(changes-5, behavior-7)
det(method-10, the-9)
prep_of(behavior-7, method-10)
nsubj(consider-15, I-12)
aux(consider-15, would-13)
neg(consider-15, not-14)
dobj(consider-15, this-16)
aux(breaking-19, to-17)
aux(breaking-19, be-18)
xcomp(consider-15, breaking-19)
det(API-21, the-20)
dobj(breaking-19, API-21)

1/CD According/VBG to/TO the/DT documentation/NN of/IN the/DT current/JJ implementation/NN ,/, the/DT string/NN parameter/NN must/MD not/RB contain/VB the/DT percent/NN character/NN (/-LRB- '/'' %/NN '/'' )/-RRB- ./. 

(ROOT (S (NP (NP (CD 1)) (PP (VBG According) (PP (TO to) (NP (NP (DT the) (NN documentation)) (PP (IN of) (NP (NP (DT the) (JJ current) (NN implementation)) (, ,) (NP (DT the) (NN string) (NN parameter)))))))) (VP (MD must) (RB not) (VP (VB contain) (NP (NP (DT the) (NN percent) (NN character)) (PRN (-LRB- -LRB-) (NP ('' ') (NN %)) ('' ') (-RRB- -RRB-))))) (. .)))

root(ROOT-0, contain-16)
nsubj(contain-16, 1-1)
prepc_according_to(1-1, to-3)
det(documentation-5, the-4)
pobj(1-1, documentation-5)
det(implementation-9, the-7)
amod(implementation-9, current-8)
prep_of(documentation-5, implementation-9)
det(parameter-13, the-11)
nn(parameter-13, string-12)
appos(implementation-9, parameter-13)
aux(contain-16, must-14)
neg(contain-16, not-15)
det(character-19, the-17)
nn(character-19, percent-18)
dobj(contain-16, character-19)
dep(character-19, %-22)

The/DT new/JJ implementation/NN is/VBZ less/RBR strict/JJ on/IN that/DT parameter/NN ./. 

(ROOT (S (NP (DT The) (JJ new) (NN implementation)) (VP (VBZ is) (ADJP (RBR less) (JJ strict) (PP (IN on) (NP (DT that) (NN parameter))))) (. .)))

root(ROOT-0, strict-6)
det(implementation-3, The-1)
amod(implementation-3, new-2)
nsubj(strict-6, implementation-3)
cop(strict-6, is-4)
advmod(strict-6, less-5)
det(parameter-9, that-8)
prep_on(strict-6, parameter-9)

2/CD It/PRP is/VBZ very/RB unlikely/JJ that/IN existing/VBG code/NN relies/VBZ on/IN the/DT old/JJ behavior/NN that/WDT literal/JJ percent/NN characters/NNS in/IN the/DT string/NN argument/NN are/VBP replaced/VBN by/IN %/NN 25/CD ./. 

(ROOT (S (NP (CD 2)) (NP (PRP It)) (VP (VBZ is) (ADJP (RB very) (JJ unlikely)) (SBAR (IN that) (S (NP (VBG existing) (NN code)) (VP (VBZ relies) (PP (IN on) (NP (NP (DT the) (JJ old) (NN behavior)) (SBAR (WHNP (WDT that)) (S (NP (NP (JJ literal) (NN percent) (NNS characters)) (PP (IN in) (NP (DT the) (NN string) (NN argument)))) (VP (VBP are) (VP (VBN replaced) (PP (IN by) (NP (NN %) (CD 25))))))))))))) (. .)))

root(ROOT-0, unlikely-5)
nsubj(unlikely-5, 2-1)
nsubj(unlikely-5, It-2)
cop(unlikely-5, is-3)
advmod(unlikely-5, very-4)
mark(relies-9, that-6)
amod(code-8, existing-7)
nsubj(relies-9, code-8)
ccomp(unlikely-5, relies-9)
det(behavior-13, the-11)
amod(behavior-13, old-12)
prep_on(relies-9, behavior-13)
dobj(replaced-23, that-14)
amod(characters-17, literal-15)
nn(characters-17, percent-16)
nsubjpass(replaced-23, characters-17)
det(argument-21, the-19)
nn(argument-21, string-20)
prep_in(characters-17, argument-21)
auxpass(replaced-23, are-22)
rcmod(behavior-13, replaced-23)
agent(replaced-23, %-25)
num(%-25, 25-26)

In/IN an/DT environment/NN where/WRB unescaped/JJ and/CC escaped/VBD URLs/NNS are/VBP mixed/JJ ,/, the/DT percent/NN character/NN is/VBZ usually/RB used/VBN as/IN an/DT indicator/NN for/IN escaped/VBN URLs/NNS ,/, and/CC hence/RB literal/JJ '/'' %/NN '/'' is/VBZ disallowed/VBN or/CC just/RB does/VBZ not/RB work/VB ./. 

(ROOT (S (PP (IN In) (NP (NP (DT an) (NN environment)) (UCP (ADJP (WHADVP (WRB where)) (JJ unescaped)) (CC and) (VP (VBD escaped) (SBAR (S (NP (NNS URLs)) (VP (VBP are) (ADJP (JJ mixed))))))))) (, ,) (S (NP (DT the) (NN percent) (NN character)) (VP (VBZ is) (ADVP (RB usually)) (VP (VBN used) (PP (IN as) (NP (NP (DT an) (NN indicator)) (PP (IN for) (NP (VBN escaped) (NNS URLs)))))))) (, ,) (CC and) (S (NP (RB hence) (JJ literal) ('' ') (NN %)) ('' ') (VP (VP (VBZ is) (VP (VBN disallowed))) (CC or) (ADVP (RB just)) (VP (VBZ does) (RB not) (VP (VB work))))) (. .)))

root(ROOT-0, used-17)
det(environment-3, an-2)
prep_in(used-17, environment-3)
advmod(unescaped-5, where-4)
amod(environment-3, unescaped-5)
amod(environment-3, escaped-7)
conj_and(unescaped-5, escaped-7)
nsubj(mixed-10, URLs-8)
cop(mixed-10, are-9)
ccomp(escaped-7, mixed-10)
det(character-14, the-12)
nn(character-14, percent-13)
nsubjpass(used-17, character-14)
auxpass(used-17, is-15)
advmod(used-17, usually-16)
det(indicator-20, an-19)
prep_as(used-17, indicator-20)
amod(URLs-23, escaped-22)
prep_for(indicator-20, URLs-23)
advmod(%-29, hence-26)
amod(%-29, literal-27)
nsubjpass(disallowed-32, %-29)
nsubj(work-37, %-29)
auxpass(disallowed-32, is-31)
conj_and(used-17, disallowed-32)
advmod(work-37, just-34)
aux(work-37, does-35)
neg(work-37, not-36)
conj_and(used-17, work-37)
conj_or(disallowed-32, work-37)

This/DT was/VBD for/IN example/NN the/DT case/NN in/IN the/DT old/JJ update/VBP manager/NN (/-LRB- see/VB org.eclipse.update.internal.core.URLEncoder/NN )/-RRB- ./. 

(ROOT (S (NP (DT This)) (VP (VBD was) (PP (IN for) (NP (NP (NN example)) (SBAR (S (NP (NP (DT the) (NN case)) (PP (IN in) (NP (DT the) (JJ old)))) (VP (VBP update) (NP (NN manager))))) (PRN (-LRB- -LRB-) (S (VP (VB see) (NP (NN org.eclipse.update.internal.core.URLEncoder)))) (-RRB- -RRB-))))) (. .)))

root(ROOT-0, was-2)
nsubj(was-2, This-1)
prep_for(was-2, example-4)
det(case-6, the-5)
nsubj(update-10, case-6)
det(old-9, the-8)
prep_in(case-6, old-9)
rcmod(example-4, update-10)
dobj(update-10, manager-11)
dep(example-4, see-13)
dobj(see-13, org.eclipse.update.internal.core.URLEncoder-14)

Code/NNP snippet/NN to/TO reproduce/VB 

(ROOT (S (NP (NNP Code) (NN snippet)) (VP (TO to) (VP (VB reproduce)))))

root(ROOT-0, reproduce-4)
nn(snippet-2, Code-1)
nsubj(reproduce-4, snippet-2)
aux(reproduce-4, to-3)

import/NN java.net.URI/NN ;/: import/NN org.eclipse.core.runtime.URIUtil/NN ;/: import/NN org.junit.Test/NN ;/: 

(ROOT (NP (NP (NN import) (NN java.net.URI)) (PRN (: ;) (NP (NP (NN import) (NN org.eclipse.core.runtime.URIUtil)) (: ;) (NP (NN import) (NN org.junit.Test)))) (: ;)))

root(ROOT-0, java.net.URI-2)
nn(java.net.URI-2, import-1)
nn(org.eclipse.core.runtime.URIUtil-5, import-4)
dep(java.net.URI-2, org.eclipse.core.runtime.URIUtil-5)
nn(org.junit.Test-8, import-7)
dep(org.eclipse.core.runtime.URIUtil-5, org.junit.Test-8)

public/JJ class/NN URITest/NN {/-LRB- @Test/JJS public/JJ void/NN test/NN (/-LRB- )/-RRB- throws/VBZ Exception/NNP {/-LRB- URI/NNP original/NN =/JJ new/JJ URI/NNP (/-LRB- "/`` http/NN "/'' ,/, "/`` host/NN "/'' ,/, "/'' //: my/PRP$ path/NN //: "/'' ,/, null/JJ )/-RRB- ;/: System.out.println/NN (/-LRB- "/`` original/JJ :/: "/'' +/CC original/JJ )/-RRB- ;/: URI/NNP parsed/VBD =/JJ URIUtil.fromString/NN (/-LRB- original.toString/NN (/-LRB- )/-RRB- )/-RRB- ;/: System.out.println/NN (/-LRB- "/`` parsed/VBN :/: "/'' +/CC parsed/VBN )/-RRB- ;/: }/-RRB- }/-RRB- 

(ROOT (S (NP (JJ public)) (VP (NN class) (NP (NP (NN URITest)) (PRN (-LRB- -LCB-) (NP (NP (JJS @Test) (JJ public) (NN void)) (ADJP (ADJP (NN test)) (PRN (-LRB- -LRB-) (SBAR (WHNP (-RRB- -RRB-)) (S (VP (VBZ throws) (NP (NP (NP (NP (NNP Exception) (-LRB- -LCB-) (NNP URI)) (SBAR (S (NP (NP (NN original)) (PP (JJ =) (NP (JJ new))) (NP (NP (NP (NNP URI)) (-LRB- -LRB-) (NP (`` ``) (NN http) ('' '')) (, ,) (NP (`` ``) (NN host) ('' '')) (, ,) ('' '')) (PRN (: /) (NP (NP (PRP$ my)) (NP (NN path))) (: /))) ('' ''))))) (, ,) (NP (JJ null)) (-RRB- -RRB-)) (: ;) (NP (NP (NN System.out.println)) (PRN (-LRB- -LRB-) (SBAR (`` ``) (S (S (NP (JJ original)) (PRN (: :) (S (VP ('' '') (S (NP (CC +))) (PP (JJ original)) (-RRB- -RRB-))) (: ;)) (NP (NNP URI)) (VP (VBD parsed) (NP (NP (NP (JJ =) (NN URIUtil.fromString)) (-LRB- -LRB-) (NP (NP (NN original.toString)) (PRN (-LRB- -LRB-) (NP (-RRB- -RRB-)) (-RRB- -RRB-)))) (: ;) (NP (NP (NN System.out.println)) (-LRB- -LRB-) (SBAR (`` ``) (S (VP (VBN parsed)))) (: :)))) ('' '')) (S (NP (CC +)) (S (VP (VBN parsed)))))) (-RRB- -RRB-)))))) (: ;)) (-RRB- -RCB-)))) (-RRB- -RCB-))))))

root(ROOT-0, class-2)
nsubj(class-2, public-1)
dobj(class-2, URITest-3)
amod(void-7, @Test-5)
amod(void-7, public-6)
dep(URITest-3, void-7)
amod(void-7, test-8)
dep(test-8, throws-11)
nn(URI-14, Exception-12)
dobj(throws-11, URI-14)
rcmod(URI-14, original-15)
prep(original-15, =-16)
dep(=-16, new-17)
dep(original-15, URI-18)
dep(URI-18, http-21)
appos(URI-18, host-25)
punct(my-30, /-29)
dep(URI-18, my-30)
dep(my-30, path-31)
punct(my-30, /-32)
appos(URI-14, null-35)
dep(URI-14, System.out.println-38)
nsubj(parsed-49, original-41)
parataxis(parsed-49, +-44)
prep(+-44, original-45)
nsubj(parsed-49, URI-48)
dep(System.out.println-38, parsed-49)
amod(URIUtil.fromString-51, =-50)
dobj(parsed-49, URIUtil.fromString-51)
dep(URIUtil.fromString-51, original.toString-53)
dep(URIUtil.fromString-51, System.out.println-58)
dep(System.out.println-58, parsed-61)
dep(parsed-65, +-64)
parataxis(parsed-49, parsed-65)

The/DT output/NN is/VBZ original/JJ :/: http://host/my%20path//NN parsed/VBD :/: http://host/my%2520path//NN 

(ROOT (S (NP (DT The) (NN output)) (VP (VBZ is) (ADJP (JJ original)) (: :) (NP (NP (NN http://host/my%20path/)) (SBAR (S (VP (VBD parsed)))) (: :) (NP (NN http://host/my%2520path/))))))

root(ROOT-0, original-4)
det(output-2, The-1)
nsubj(original-4, output-2)
cop(original-4, is-3)
parataxis(original-4, http://host/my%20path/-6)
rcmod(http://host/my%20path/-6, parsed-7)
dep(http://host/my%20path/-6, http://host/my%2520path/-9)

but/CC it/PRP should/MD be/VB original/JJ :/: http://host/my%20path//NN parsed/VBD :/: http://host/my%20path//NN 

(ROOT (S (CC but) (NP (PRP it)) (VP (VP (MD should) (VP (VB be) (ADJP (JJ original)))) (: :) (NP (NP (NN http://host/my%20path/)) (SBAR (S (VP (VBD parsed)))) (: :) (NP (NN http://host/my%20path/))))))

root(ROOT-0, original-5)
cc(original-5, but-1)
nsubj(original-5, it-2)
aux(original-5, should-3)
cop(original-5, be-4)
dobj(original-5, http://host/my%20path/-7)
rcmod(http://host/my%20path/-7, parsed-8)
dep(http://host/my%20path/-7, http://host/my%20path/-10)

