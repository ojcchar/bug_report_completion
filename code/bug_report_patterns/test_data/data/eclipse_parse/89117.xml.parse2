Using/VBG I20050324/NN 

(ROOT (S (VP (VBG Using) (NP (NN I20050324)))))

root(ROOT-0, Using-1)
dobj(Using-1, I20050324-2)

1/CD When/WRB a/DT preference/NN node/NN is/VBZ added/VBN ,/, I/PRP attach/VBP a/DT IPreferenceChangeListener/NN to/TO the/DT 

(ROOT (FRAG (NP (NP (CD 1)) (SBAR (S (SBAR (WHADVP (WRB When)) (S (NP (DT a) (NN preference) (NN node)) (VP (VBZ is) (VP (VBN added))))) (, ,) (NP (PRP I)) (VP (VBP attach) (NP (DT a) (NN IPreferenceChangeListener)) (PP (TO to) (NP (DT the)))))))))

root(ROOT-0, 1-1)
advmod(added-7, When-2)
det(node-5, a-3)
nn(node-5, preference-4)
nsubjpass(added-7, node-5)
auxpass(added-7, is-6)
advcl(attach-10, added-7)
nsubj(attach-10, I-9)
rcmod(1-1, attach-10)
det(IPreferenceChangeListener-12, a-11)
dobj(attach-10, IPreferenceChangeListener-12)
prep_to(attach-10, the-14)

node/NN ./. 

(ROOT (NP (NN node) (. .)))

root(ROOT-0, node-1)

I/PRP would/MD like/VB to/TO remove/VB the/DT Listener/NN when/WRB the/DT node/NN is/VBZ being/VBG removed/VBN ./. 

(ROOT (S (NP (PRP I)) (VP (MD would) (VP (VB like) (S (VP (TO to) (VP (VB remove) (NP (DT the) (NN Listener)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN node)) (VP (VBZ is) (VP (VBG being) (VP (VBN removed))))))))))) (. .)))

root(ROOT-0, like-3)
nsubj(like-3, I-1)
aux(like-3, would-2)
aux(remove-5, to-4)
xcomp(like-3, remove-5)
det(Listener-7, the-6)
dobj(remove-5, Listener-7)
advmod(removed-13, when-8)
det(node-10, the-9)
nsubjpass(removed-13, node-10)
aux(removed-13, is-11)
auxpass(removed-13, being-12)
advcl(remove-5, removed-13)

However/RB ,/, if/IN you/PRP remove/VB a/DT listener/NN when/WRB the/DT node/NN is/VBZ removed/VBN ,/, its/PRP$ throws/VBZ an/DT 

(ROOT (S (ADVP (RB However)) (, ,) (SBAR (IN if) (S (NP (PRP you)) (VP (VB remove) (NP (DT a) (NN listener)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN node)) (VP (VBZ is) (VP (VBN removed)))))))) (, ,) (NP (PRP$ its)) (VP (VBZ throws) (NP (DT an)))))

root(ROOT-0, throws-15)
advmod(throws-15, However-1)
mark(remove-5, if-3)
nsubj(remove-5, you-4)
advcl(throws-15, remove-5)
det(listener-7, a-6)
dobj(remove-5, listener-7)
advmod(removed-12, when-8)
det(node-10, the-9)
nsubjpass(removed-12, node-10)
auxpass(removed-12, is-11)
advcl(remove-5, removed-12)
nsubj(throws-15, its-14)
dobj(throws-15, an-16)

IllegalStateException/NN ./. 

(ROOT (NP (NN IllegalStateException) (. .)))

root(ROOT-0, IllegalStateException-1)

2/CD There/EX is/VBZ no/DT way/NN of/IN knowing/VBG if/IN a/DT Preference/NN has/VBZ been/VBN removed/VBN ./. 

(ROOT (S (NP (CD 2)) (NP (EX There)) (VP (VBZ is) (NP (NP (DT no) (NN way)) (PP (IN of) (S (VP (VBG knowing) (SBAR (IN if) (S (NP (DT a) (NN Preference)) (VP (VBZ has) (VP (VBN been) (VP (VBN removed))))))))))) (. .)))

root(ROOT-0, is-3)
nsubj(is-3, 2-1)
expl(is-3, There-2)
neg(way-5, no-4)
nsubj(is-3, way-5)
prepc_of(way-5, knowing-7)
mark(removed-13, if-8)
det(Preference-10, a-9)
nsubjpass(removed-13, Preference-10)
aux(removed-13, has-11)
auxpass(removed-13, been-12)
advcl(knowing-7, removed-13)

Its/PRP$ not/RB clear/JJ 

(ROOT (FRAG (NP (NP (PRP$ Its)) (ADJP (RB not) (JJ clear)))))

root(ROOT-0, Its-1)
neg(clear-3, not-2)
amod(Its-1, clear-3)

that/IN the/DT listeners/NNS (/-LRB- NodeChange/PreferenceChange/NN )/-RRB- of/IN a/DT Preference/NN ever/RB gets/VBZ 

(ROOT (SBAR (IN that) (S (NP (NP (NP (DT the) (NNS listeners)) (PRN (-LRB- -LRB-) (NP (NN NodeChange/PreferenceChange)) (-RRB- -RRB-))) (PP (IN of) (NP (DT a) (NN Preference)))) (ADVP (RB ever)) (VP (VBZ gets)))))

root(ROOT-0, gets-11)
mark(gets-11, that-1)
det(listeners-3, the-2)
nsubj(gets-11, listeners-3)
appos(listeners-3, NodeChange/PreferenceChange-5)
det(Preference-9, a-8)
prep_of(listeners-3, Preference-9)
advmod(gets-11, ever-10)

cleaned/VBN up/RP on/IN removed/VBN ./. 

(ROOT (S (S (VP (VBN cleaned) (PRT (RP up)) (PP (IN on)))) (VP (VBN removed)) (. .)))

root(ROOT-0, removed-4)
csubj(removed-4, cleaned-1)
prt(cleaned-1, up-2)
prep(cleaned-1, on-3)

3/CD Its/PRP$ also/RB not/RB clear/VB that/IN the/DT children/NNS nodes/NNS should/MD be/VB removed/VBN after/IN the/DT parent/NN 

(ROOT (FRAG (NP (NP (CD 3)) (SBAR (S (NP (PRP$ Its)) (ADVP (RB also)) (VP (RB not) (VP (VB clear) (SBAR (IN that) (S (NP (DT the) (NNS children) (NNS nodes)) (VP (MD should) (VP (VB be) (VP (VBN removed) (PP (IN after) (NP (DT the) (NN parent)))))))))))))))

root(ROOT-0, 3-1)
nsubj(clear-5, Its-2)
advmod(clear-5, also-3)
neg(clear-5, not-4)
rcmod(3-1, clear-5)
mark(removed-12, that-6)
det(nodes-9, the-7)
nn(nodes-9, children-8)
nsubjpass(removed-12, nodes-9)
aux(removed-12, should-10)
auxpass(removed-12, be-11)
ccomp(clear-5, removed-12)
det(parent-15, the-14)
prep_after(removed-12, parent-15)

node/NN has/VBZ its/PRP$ keys/NNS removed/VBN and/CC itself/PRP removed/VBD ./. 

(ROOT (S (S (NP (NN node)) (VP (VBZ has) (NP (NP (PRP$ its) (NNS keys)) (VP (VBN removed))))) (CC and) (S (NP (PRP itself)) (VP (VBD removed))) (. .)))

root(ROOT-0, has-2)
nsubj(has-2, node-1)
poss(keys-4, its-3)
dobj(has-2, keys-4)
vmod(keys-4, removed-5)
nsubj(removed-8, itself-7)
conj_and(has-2, removed-8)

