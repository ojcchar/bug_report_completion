With/IN adding/VBG an/DT option/NN to/TO switch/VB between/IN available/JJ Structure/NN Merge/VB Viewers/NNS (/-LRB- bug/NN 220457/CD )/-RRB- an/DT issue/NN with/IN keeping/VBG the/DT selection/NN came/VBD up/RP ./. 

(ROOT (S (PP (IN With) (S (VP (VBG adding) (NP (DT an) (NN option) (S (VP (TO to) (VP (VB switch) (PP (IN between) (NP (JJ available) (NN Structure))) (S (VP (VB Merge) (NP (NP (NNS Viewers)) (PRN (-LRB- -LRB-) (NP (NN bug) (CD 220457)) (-RRB- -RRB-)))))))))))) (NP (NP (DT an) (NN issue)) (PP (IN with) (S (VP (VBG keeping) (NP (DT the) (NN selection)))))) (VP (VBD came) (PRT (RP up))) (. .)))

root(ROOT-0, came-22)
prepc_with(came-22, adding-2)
det(option-4, an-3)
dobj(adding-2, option-4)
aux(switch-6, to-5)
vmod(option-4, switch-6)
amod(Structure-9, available-8)
prep_between(switch-6, Structure-9)
ccomp(switch-6, Merge-10)
dobj(Merge-10, Viewers-11)
appos(Viewers-11, bug-13)
num(bug-13, 220457-14)
det(issue-17, an-16)
nsubj(came-22, issue-17)
prepc_with(issue-17, keeping-19)
det(selection-21, the-20)
dobj(keeping-19, selection-21)
prt(came-22, up-23)

Currently/RB ,/, the/DT bottom/JJ part/NN of/IN the/DT Compare/VBP Editor/NNP ,/, the/DT Content/NNP Merge/NNP Viewer/NNP displays/VBZ what/WP has/VBZ been/VBN selected/VBN in/IN the/DT upper/JJ part/NN ,/, the/DT Structure/NN Merge/NNP Viewer/NNP (/-LRB- if/IN available/JJ )/-RRB- ./. 

(ROOT (S (S (ADVP (RB Currently)) (, ,) (NP (NP (DT the) (JJ bottom) (NN part)) (PP (IN of) (NP (DT the)))) (VP (VBP Compare) (NP (NNP Editor)))) (, ,) (NP (DT the) (NNP Content) (NNP Merge) (NNP Viewer)) (VP (VBZ displays) (SBAR (WHNP (WP what)) (S (VP (VBZ has) (VP (VBN been) (VP (VBN selected) (PP (IN in) (NP (NP (DT the) (JJ upper) (NN part)) (, ,) (NP (NP (DT the) (NN Structure)) (NP (NNP Merge) (NNP Viewer))))) (PRN (-LRB- -LRB-) (ADVP (IN if)) (ADJP (JJ available)) (-RRB- -RRB-)))))))) (. .)))

root(ROOT-0, displays-15)
advmod(Compare-8, Currently-1)
det(part-5, the-3)
amod(part-5, bottom-4)
nsubj(Compare-8, part-5)
prep_of(part-5, the-7)
ccomp(displays-15, Compare-8)
dobj(Compare-8, Editor-9)
det(Viewer-14, the-11)
nn(Viewer-14, Content-12)
nn(Viewer-14, Merge-13)
nsubj(displays-15, Viewer-14)
nsubjpass(selected-19, what-16)
aux(selected-19, has-17)
auxpass(selected-19, been-18)
ccomp(displays-15, selected-19)
det(part-23, the-21)
amod(part-23, upper-22)
prep_in(selected-19, part-23)
det(Structure-26, the-25)
appos(part-23, Structure-26)
nn(Viewer-28, Merge-27)
dep(Structure-26, Viewer-28)
dep(available-31, if-30)
dep(selected-19, available-31)

If/IN nothing/NN has/VBZ been/VBN selected/VBN ,/, full/JJ content/NN of/IN the/DT comparison/NN participants/NNS is/VBZ displayed/VBN ./. 

(ROOT (S (SBAR (IN If) (S (NP (NN nothing)) (VP (VBZ has) (VP (VBN been) (VP (VBN selected)))))) (, ,) (NP (NP (JJ full) (NN content)) (PP (IN of) (NP (DT the) (NN comparison) (NNS participants)))) (VP (VBZ is) (VP (VBN displayed))) (. .)))

root(ROOT-0, displayed-14)
mark(selected-5, If-1)
nsubjpass(selected-5, nothing-2)
aux(selected-5, has-3)
auxpass(selected-5, been-4)
advcl(displayed-14, selected-5)
amod(content-8, full-7)
nsubjpass(displayed-14, content-8)
det(participants-12, the-10)
nn(participants-12, comparison-11)
prep_of(content-8, participants-12)
auxpass(displayed-14, is-13)

Let/VB 's/PRP use/VB an/DT example/NN here/RB ./. 

(ROOT (S (VP (VB Let) (S (NP (PRP 's)) (VP (VB use) (NP (DT an) (NN example)) (ADVP (RB here))))) (. .)))

root(ROOT-0, Let-1)
nsubj(use-3, 's-2)
ccomp(Let-1, use-3)
det(example-5, an-4)
dobj(use-3, example-5)
advmod(use-3, here-6)

Consider/VB comparing/VBG two/CD Java/NNP files/NNS ./. 

(ROOT (S (VP (VB Consider) (S (VP (VBG comparing) (NP (CD two) (NNP Java) (NNS files))))) (. .)))

root(ROOT-0, Consider-1)
xcomp(Consider-1, comparing-2)
num(files-5, two-3)
nn(files-5, Java-4)
dobj(comparing-2, files-5)

Selecting/VBG a/DT node/NN in/IN the/DT Structure/NN Compare/VB pane/NN (/-LRB- a/DT changed/VBN method/NN for/IN instance/NN )/-RRB- will/MD result/VB in/IN narrowing/VBG the/DT bottom/JJ part/NN to/TO that/DT method/NN only/RB ./. 

(ROOT (S (S (VP (VBG Selecting) (S (NP (NP (DT a) (NN node)) (PP (IN in) (NP (DT the) (NN Structure)))) (VP (VB Compare) (NP (NP (NN pane)) (PRN (-LRB- -LRB-) (NP (NP (DT a) (VBN changed) (NN method)) (PP (IN for) (NP (NN instance)))) (-RRB- -RRB-))))))) (VP (MD will) (VP (VB result) (PP (IN in) (S (VP (VBG narrowing) (NP (DT the) (JJ bottom) (NN part)) (PP (TO to) (NP (DT that) (NN method) (RB only)))))))) (. .)))

root(ROOT-0, result-17)
csubj(result-17, Selecting-1)
det(node-3, a-2)
nsubj(Compare-7, node-3)
det(Structure-6, the-5)
prep_in(node-3, Structure-6)
ccomp(Selecting-1, Compare-7)
dobj(Compare-7, pane-8)
det(method-12, a-10)
amod(method-12, changed-11)
dep(pane-8, method-12)
prep_for(method-12, instance-14)
aux(result-17, will-16)
prepc_in(result-17, narrowing-19)
det(part-22, the-20)
amod(part-22, bottom-21)
dobj(narrowing-19, part-22)
det(method-25, that-24)
prep_to(narrowing-19, method-25)
advmod(method-25, only-26)

Unselecting/VBG the/DT node/NN (/-LRB- clearing/NN selection/NN on/IN the/DT tree/NN )/-RRB- will/MD display/VB full/JJ content/NN of/IN the/DT files/NNS again/RB ./. 

(ROOT (S (S (VP (VBG Unselecting) (NP (NP (DT the) (NN node)) (PRN (-LRB- -LRB-) (NP (NP (NN clearing) (NN selection)) (PP (IN on) (NP (DT the) (NN tree)))) (-RRB- -RRB-))))) (VP (MD will) (VP (VB display) (NP (NP (JJ full) (NN content)) (PP (IN of) (NP (DT the) (NNS files)))) (ADVP (RB again)))) (. .)))

root(ROOT-0, display-12)
csubj(display-12, Unselecting-1)
det(node-3, the-2)
dobj(Unselecting-1, node-3)
nn(selection-6, clearing-5)
dep(node-3, selection-6)
det(tree-9, the-8)
prep_on(selection-6, tree-9)
aux(display-12, will-11)
amod(content-14, full-13)
dobj(display-12, content-14)
det(files-17, the-16)
prep_of(content-14, files-17)
advmod(display-12, again-18)

The/DT problem/NN arises/VBZ when/WRB ,/, after/IN a/DT node/NN has/VBZ been/VBN selected/VBN and/CC displayed/VBN ,/, the/DT user/NN switches/VBZ to/TO an/DT alternative/JJ structure/NN merge/VBP viewer/NN ./. 

(ROOT (S (NP (DT The) (NN problem)) (VP (VBZ arises) (SBAR (WHADVP (WRB when)) (, ,) (S (SBAR (IN after) (S (NP (DT a) (NN node)) (VP (VBZ has) (VP (VBN been) (VP (VBN selected) (CC and) (VBN displayed)))))) (, ,) (NP (DT the) (NN user)) (VP (VBZ switches) (PP (TO to) (NP (NP (DT an) (JJ alternative) (NN structure)) (VP (VBP merge) (NP (NN viewer))))))))) (. .)))

root(ROOT-0, arises-3)
det(problem-2, The-1)
nsubj(arises-3, problem-2)
advmod(switches-17, when-4)
mark(selected-11, after-6)
det(node-8, a-7)
nsubjpass(selected-11, node-8)
nsubjpass(displayed-13, node-8)
aux(selected-11, has-9)
auxpass(selected-11, been-10)
advcl(switches-17, selected-11)
conj_and(selected-11, displayed-13)
advcl(switches-17, displayed-13)
det(user-16, the-15)
nsubj(switches-17, user-16)
advcl(arises-3, switches-17)
det(structure-21, an-19)
amod(structure-21, alternative-20)
prep_to(switches-17, structure-21)
dep(structure-21, merge-22)
dobj(merge-22, viewer-23)

The/DT new/JJ viewer/NN will/MD display/VB its/PRP$ own/JJ hierarchical/JJ view/NN of/IN changes/NNS ./. 

(ROOT (S (NP (DT The) (JJ new) (NN viewer)) (VP (MD will) (VP (VB display) (NP (NP (PRP$ its) (JJ own) (JJ hierarchical) (NN view)) (PP (IN of) (NP (NNS changes)))))) (. .)))

root(ROOT-0, display-5)
det(viewer-3, The-1)
amod(viewer-3, new-2)
nsubj(display-5, viewer-3)
aux(display-5, will-4)
poss(view-9, its-6)
amod(view-9, own-7)
amod(view-9, hierarchical-8)
dobj(display-5, view-9)
prep_of(view-9, changes-11)

The/DT new/JJ tree/NN will/MD have/VB no/DT selection/NN ,/, so/IN the/DT bottom/JJ part/NN should/MD display/VB full/JJ content/NN ./. 

(ROOT (S (S (NP (DT The) (JJ new) (NN tree)) (VP (MD will) (VP (VB have) (NP (DT no) (NN selection))))) (, ,) (IN so) (S (NP (DT the) (JJ bottom) (NN part)) (VP (MD should) (VP (VB display) (NP (JJ full) (NN content))))) (. .)))

root(ROOT-0, have-5)
det(tree-3, The-1)
amod(tree-3, new-2)
nsubj(have-5, tree-3)
aux(have-5, will-4)
neg(selection-7, no-6)
dobj(have-5, selection-7)
dep(have-5, so-9)
det(part-12, the-10)
amod(part-12, bottom-11)
nsubj(display-14, part-12)
aux(display-14, should-13)
parataxis(have-5, display-14)
amod(content-16, full-15)
dobj(display-14, content-16)

However/RB ,/, the/DT bottom/JJ part/NN sticks/VBZ to/TO the/DT previously/RB selected/VBN method/NN ./. 

(ROOT (S (ADVP (RB However)) (, ,) (NP (DT the) (JJ bottom) (NN part)) (VP (VBZ sticks) (PP (TO to) (NP (DT the) (ADJP (RB previously) (VBN selected)) (NN method)))) (. .)))

root(ROOT-0, sticks-6)
advmod(sticks-6, However-1)
det(part-5, the-3)
amod(part-5, bottom-4)
nsubj(sticks-6, part-5)
det(method-11, the-8)
advmod(selected-10, previously-9)
amod(method-11, selected-10)
prep_to(sticks-6, method-11)

We/PRP should/MD consider/VB resetting/VBG the/DT viewport/NN of/IN the/DT bottom/JJ part/NN on/IN each/DT structure/NN viewer/NN switch/NN ./. 

(ROOT (S (NP (PRP We)) (VP (MD should) (VP (VB consider) (S (VP (VBG resetting) (NP (NP (DT the) (NN viewport)) (PP (IN of) (NP (NP (DT the) (JJ bottom) (NN part)) (PP (IN on) (NP (DT each) (NN structure) (NN viewer) (NN switch)))))))))) (. .)))

root(ROOT-0, consider-3)
nsubj(consider-3, We-1)
aux(consider-3, should-2)
xcomp(consider-3, resetting-4)
det(viewport-6, the-5)
dobj(resetting-4, viewport-6)
det(part-10, the-8)
amod(part-10, bottom-9)
prep_of(viewport-6, part-10)
det(switch-15, each-12)
nn(switch-15, structure-13)
nn(switch-15, viewer-14)
prep_on(part-10, switch-15)

