When/WRB working/VBG with/IN a/DT plugin/NN ,/, right/JJ clicking/VBG on/IN the/DT project/NN and/CC selecting/VBG "/`` Update/NNP Classpath/NNP "/'' (/-LRB- and/CC then/RB doing/VBG the/DT update/VBP )/-RRB- causes/VBZ the/DT source/NN folder/NN to/TO be/VB changed/VBN to/TO what/WP used/VBD to/TO be/VB the/DT output/NN folder/NN )/-RRB- -/: while/IN the/DT output/NN folder/NN stays/VBZ the/DT same/JJ ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (VP (VP (VBG working) (PP (IN with) (NP (DT a) (NN plugin)))) (, ,) (VP (ADVP (JJ right)) (VBG clicking) (PP (IN on) (NP (DT the) (NN project)))) (CC and) (VP (VBG selecting) (`` ``) (NP (NNP Update) (NNP Classpath)) ('' ''))))) (PRN (-LRB- -LRB-) (CC and) (S (VP (ADVP (RB then)) (VBG doing) (SBAR (S (NP (DT the)) (VP (VBP update)))))) (-RRB- -RRB-)) (VP (VBZ causes) (S (NP (DT the) (NN source) (NN folder)) (VP (VP (TO to) (VP (VB be) (VP (VBN changed) (S (VP (TO to)))))) (PRN (S (NP (WP what)) (VP (VBD used) (S (VP (TO to) (VP (VB be) (NP (DT the) (NN output) (NN folder))))))) (-RRB- -RRB-)))) (: -) (SBAR (IN while) (S (NP (DT the) (NN output) (NN folder)) (VP (VBZ stays) (NP (DT the) (JJ same)))))) (. .)))

root(ROOT-0, causes-25)
advmod(working-2, When-1)
advcl(causes-25, working-2)
det(plugin-5, a-4)
prep_with(working-2, plugin-5)
advmod(clicking-8, right-7)
conj_and(working-2, clicking-8)
advcl(causes-25, clicking-8)
det(project-11, the-10)
prep_on(clicking-8, project-11)
conj_and(working-2, selecting-13)
advcl(causes-25, selecting-13)
nn(Classpath-16, Update-15)
dobj(selecting-13, Classpath-16)
cc(doing-21, and-19)
advmod(doing-21, then-20)
parataxis(causes-25, doing-21)
nsubj(update-23, the-22)
ccomp(doing-21, update-23)
det(folder-28, the-26)
nn(folder-28, source-27)
nsubjpass(changed-31, folder-28)
aux(changed-31, to-29)
auxpass(changed-31, be-30)
ccomp(causes-25, changed-31)
xcomp(changed-31, to-32)
nsubj(used-34, what-33)
parataxis(changed-31, used-34)
aux(folder-39, to-35)
cop(folder-39, be-36)
det(folder-39, the-37)
nn(folder-39, output-38)
xcomp(used-34, folder-39)
mark(stays-46, while-42)
det(folder-45, the-43)
nn(folder-45, output-44)
nsubj(stays-46, folder-45)
advcl(causes-25, stays-46)
det(same-48, the-47)
dobj(stays-46, same-48)

So/RB now/RB you/PRP have/VBP no/DT source/NN files/NNS ,/, and/CC and/CC empty/JJ output/NN folder/NN ./. 

(ROOT (S (S (ADVP (RB So) (RB now)) (NP (PRP you)) (VP (VBP have) (NP (DT no) (NN source) (NNS files)))) (, ,) (CC and) (FRAG (CC and) (NP (JJ empty) (NN output) (NN folder))) (. .)))

root(ROOT-0, have-4)
advmod(now-2, So-1)
advmod(have-4, now-2)
nsubj(have-4, you-3)
neg(files-7, no-5)
nn(files-7, source-6)
dobj(have-4, files-7)
cc(folder-13, and-10)
amod(folder-13, empty-11)
nn(folder-13, output-12)
conj_and(have-4, folder-13)

It/PRP has/VBZ to/TO be/VB manually/RB reset/VB ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ has) (S (VP (TO to) (VP (VB be) (ADVP (RB manually)) (S (VP (VB reset))))))) (. .)))

root(ROOT-0, has-2)
nsubj(has-2, It-1)
aux(be-4, to-3)
xcomp(has-2, be-4)
advmod(be-4, manually-5)
ccomp(be-4, reset-6)

This/DT behavior/NN also/RB happens/VBZ from/IN time/NN to/TO time/NN when/WRB you/PRP are/VBP editing/NN a/DT plugin.xml/NN file/NN ./. 

(ROOT (S (NP (DT This) (NN behavior)) (ADVP (RB also)) (VP (VBZ happens) (PP (IN from) (NP (NP (NN time)) (PP (TO to) (NP (NN time))))) (SBAR (WHADVP (WRB when)) (S (NP (PRP you)) (VP (VBP are) (NP (NN editing)) (NP (DT a) (NN plugin.xml) (NN file)))))) (. .)))

root(ROOT-0, happens-4)
det(behavior-2, This-1)
nsubj(happens-4, behavior-2)
advmod(happens-4, also-3)
prep_from(happens-4, time-6)
prep_to(time-6, time-8)
advmod(editing-12, when-9)
nsubj(editing-12, you-10)
cop(editing-12, are-11)
advcl(happens-4, editing-12)
det(file-15, a-13)
nn(file-15, plugin.xml-14)
dep(editing-12, file-15)

