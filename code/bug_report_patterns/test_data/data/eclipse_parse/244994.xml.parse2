When/WRB a/DT "/`` static/JJ final/JJ "/'' variable/NN is/VBZ changed/VBN to/TO "/`` static/JJ "/'' two/CD problems/NNS are/VBP reported/VBN ./. 

(ROOT (S (FRAG (WHADVP (WRB When) (NP (NP (DT a) (`` ``) (JJ static)) (NP (JJ final))))) ('' '') (NP (NN variable)) (VP (VBZ is) (VP (VBN changed) (PP (TO to) (NP (`` ``) (JJ static) ('' '') (NP (NP (CD two) (NNS problems)) (SBAR (S (VP (VBP are) (VP (VBN reported)))))))))) (. .)))

root(ROOT-0, changed-9)
dep(changed-9, When-1)
det(static-4, a-2)
dep(When-1, static-4)
dep(static-4, final-5)
nsubjpass(changed-9, variable-7)
auxpass(changed-9, is-8)
amod(problems-15, static-12)
num(problems-15, two-14)
prep_to(changed-9, problems-15)
auxpass(reported-17, are-16)
rcmod(problems-15, reported-17)

The/DT problems/NNS essentially/RB mean/VB the/DT same/JJ thing/NN and/CC could/MD be/VB confusing/VBG to/TO the/DT user/NN ./. 

(ROOT (S (NP (DT The) (NNS problems)) (ADVP (RB essentially)) (VP (VP (VB mean) (NP (DT the) (JJ same) (NN thing))) (CC and) (VP (MD could) (VP (VB be) (ADJP (VBG confusing) (PP (TO to) (NP (DT the) (NN user))))))) (. .)))

root(ROOT-0, mean-4)
det(problems-2, The-1)
nsubj(mean-4, problems-2)
nsubj(confusing-11, problems-2)
advmod(mean-4, essentially-3)
det(thing-7, the-5)
amod(thing-7, same-6)
dobj(mean-4, thing-7)
aux(confusing-11, could-9)
cop(confusing-11, be-10)
conj_and(mean-4, confusing-11)
det(user-14, the-13)
prep_to(confusing-11, user-14)

Ideally/RB ,/, we/PRP should/MD just/RB report/VB one/CD problem/NN ./. 

(ROOT (S (ADVP (RB Ideally)) (, ,) (NP (PRP we)) (VP (MD should) (ADVP (RB just)) (VP (VB report) (NP (CD one) (NN problem)))) (. .)))

root(ROOT-0, report-6)
advmod(report-6, Ideally-1)
nsubj(report-6, we-3)
aux(report-6, should-4)
advmod(report-6, just-5)
num(problem-8, one-7)
dobj(report-6, problem-8)

For/IN example/NN ,/, when/WRB changing/VBG 

(ROOT (PP (IN For) (NP (NP (NN example)) (, ,) (SBAR (WHADVP (WRB when)) (S (VP (VBG changing)))))))

root(ROOT-0, For-1)
pobj(For-1, example-2)
advmod(changing-5, when-4)
rcmod(example-2, changing-5)

public/JJ static/JJ final/JJ String/NNP CONSTANT/NNP =/JJ "/`` CONSTANT/JJ "/'' 

(ROOT (S (NP (NP (JJ public)) (NP (JJ static) (JJ final) (NNP String) (NNP CONSTANT) (JJ =))) (ADJP (`` ``) (JJ CONSTANT) ('' ''))))

root(ROOT-0, CONSTANT-8)
dep(CONSTANT-8, public-1)
amod(CONSTANT-5, static-2)
amod(CONSTANT-5, final-3)
nn(CONSTANT-5, String-4)
dep(public-1, CONSTANT-5)
amod(CONSTANT-5, =-6)

to/TO 

(ROOT (X (TO to)))

root(ROOT-0, to-1)

public/JJ static/JJ String/NNP CONSTANT/NNP =/JJ "/`` CONSTANT/JJ "/'' 

(ROOT (S (NP (NP (ADJP (JJ public) (JJ static)) (NNP String) (NNP CONSTANT)) (ADJP (JJ =))) (ADJP (`` ``) (JJ CONSTANT) ('' ''))))

root(ROOT-0, CONSTANT-7)
amod(static-2, public-1)
amod(CONSTANT-4, static-2)
nn(CONSTANT-4, String-3)
dep(CONSTANT-7, CONSTANT-4)
amod(CONSTANT-4, =-5)

The/DT problems/NNS are/VBP :/: 

(ROOT (S (NP (DT The) (NNS problems)) (VP (VBP are)) (: :)))

root(ROOT-0, are-3)
det(problems-2, The-1)
nsubj(are-3, problems-2)

(/-LRB- 1/CD The/DT constant/JJ value/NN CONSTANT/NNP has/VBZ been/VBN removed/VBN for/IN a.fields.modifiers.RemoveFinalOnConstant.CONSTANT/NN 

(ROOT (S (-LRB- -LRB-) (NP (CD 1)) (ADVP (DT The)) (VP (ADVP (ADVP (JJ constant) (NP (NN value))) (NP (NNP CONSTANT))) (VP (VBZ has) (VP (VBN been) (VP (VBN removed) (PP (IN for) (NP (NN a.fields.modifiers.RemoveFinalOnConstant.CONSTANT)))))))))

root(ROOT-0, removed-9)
nsubjpass(removed-9, 1-2)
advmod(removed-9, The-3)
advmod(removed-9, constant-4)
dep(constant-4, value-5)
dep(constant-4, CONSTANT-6)
aux(removed-9, has-7)
auxpass(removed-9, been-8)
prep_for(removed-9, a.fields.modifiers.RemoveFinalOnConstant.CONSTANT-11)

(/-LRB- 2/CD The/DT '/`` final/JJ '/'' keyword/NN has/VBZ been/VBN removed/VBN for/IN a/DT compile-time/JJ constant/JJ static/JJ field/NN a.fields.modifiers.RemoveFinalOnConstant.CONSTANT/NN 

(ROOT (PRN (-LRB- -LRB-) (S (NP (NP (CD 2)) (NP (DT The) (`` `) (JJ final) ('' ') (NN keyword))) (VP (VBZ has) (VP (VBN been) (VP (VBN removed) (PP (IN for) (NP (DT a) (JJ compile-time) (JJ constant) (JJ static) (NN field))))))) (NN a.fields.modifiers.RemoveFinalOnConstant.CONSTANT)))

root(ROOT-0, removed-10)
nsubjpass(removed-10, 2-2)
det(keyword-7, The-3)
amod(keyword-7, final-5)
dep(2-2, keyword-7)
aux(removed-10, has-8)
auxpass(removed-10, been-9)
det(field-16, a-12)
amod(field-16, compile-time-13)
amod(field-16, constant-14)
amod(field-16, static-15)
prep_for(removed-10, field-16)
dep(removed-10, a.fields.modifiers.RemoveFinalOnConstant.CONSTANT-17)

Keeping/VBG the/DT second/JJ problem/NN would/MD be/VB sufficient/JJ ./. 

(ROOT (S (S (VP (VBG Keeping) (NP (DT the) (JJ second) (NN problem)))) (VP (MD would) (VP (VB be) (ADJP (JJ sufficient)))) (. .)))

root(ROOT-0, sufficient-7)
csubj(sufficient-7, Keeping-1)
det(problem-4, the-2)
amod(problem-4, second-3)
dobj(Keeping-1, problem-4)
aux(sufficient-7, would-5)
cop(sufficient-7, be-6)

Associated/NNP test/NN :/: 

(ROOT (NP (NP (NNP Associated) (NN test)) (: :)))

root(ROOT-0, test-2)
nn(test-2, Associated-1)

FieldCompatibilityModifierTests.testRemoveFinalOnConstant/JJ */NN (/-LRB- )/-RRB- 

(ROOT (NP (NP (JJ FieldCompatibilityModifierTests.testRemoveFinalOnConstant) (NN *)) (PP (-LRB- -LRB-)) (-RRB- -RRB-)))

root(ROOT-0, *-2)
amod(*-2, FieldCompatibilityModifierTests.testRemoveFinalOnConstant-1)

