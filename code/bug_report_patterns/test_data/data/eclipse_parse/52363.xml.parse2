The/DT following/VBG statement/NN produces/VBZ a/DT compilation/NN error/NN in/IN JDT/NNP ,/, even/RB though/IN it/PRP looks/VBZ to/TO me/PRP as/IN a/DT syntactically/RB correct/JJ statement/NN :/: 

(ROOT (S (NP (DT The) (VBG following) (NN statement)) (VP (VBZ produces) (NP (NP (DT a) (NN compilation) (NN error)) (PP (IN in) (NP (NNP JDT)))) (, ,) (SBAR (RB even) (IN though) (S (NP (PRP it)) (VP (VBZ looks) (PP (TO to) (NP (PRP me))) (PP (IN as) (NP (DT a) (ADJP (RB syntactically) (JJ correct)) (NN statement))))))) (: :)))

root(ROOT-0, produces-4)
det(statement-3, The-1)
amod(statement-3, following-2)
nsubj(produces-4, statement-3)
det(error-7, a-5)
nn(error-7, compilation-6)
dobj(produces-4, error-7)
prep_in(error-7, JDT-9)
advmod(looks-14, even-11)
mark(looks-14, though-12)
nsubj(looks-14, it-13)
advcl(produces-4, looks-14)
prep_to(looks-14, me-16)
det(statement-21, a-18)
advmod(correct-20, syntactically-19)
amod(statement-21, correct-20)
prep_as(looks-14, statement-21)

char/VB a/DT =/JJ '/'' \/JJ u000a/NN '/'' ;/: 

(ROOT (S (VP (VB char) (NP (DT a) (JJ =)) ('' ') (PP (JJ \) (NP (NN u000a) ('' ')))) (: ;)))

root(ROOT-0, char-1)
det(=-3, a-2)
dobj(char-1, =-3)
prep(char-1, \-5)
dep(\-5, u000a-6)

same/JJ result/NN is/VBZ obtained/VBN for/IN 

(ROOT (S (NP (JJ same) (NN result)) (VP (VBZ is) (VP (VBN obtained) (PP (IN for))))))

root(ROOT-0, obtained-4)
amod(result-2, same-1)
nsubjpass(obtained-4, result-2)
auxpass(obtained-4, is-3)
prep(obtained-4, for-5)

char/VB a/DT =/JJ '/'' \/JJ u000A/NN '/'' ;/: 

(ROOT (S (VP (VB char) (NP (DT a) (JJ =)) ('' ') (PP (JJ \) (NP (NN u000A) ('' ')))) (: ;)))

root(ROOT-0, char-1)
det(=-3, a-2)
dobj(char-1, =-3)
prep(char-1, \-5)
dep(\-5, u000A-6)

Trying/VBG to/TO comment/VB the/DT line/NN out/RP by/IN appending/VBG the/DT line/NN with/IN //: //: still/RB produces/VBZ a/DT compile-time/JJ error/NN ,/, which/WDT clearly/RB indicates/VBZ that/IN something/NN is/VBZ wrong/JJ ./. 

(ROOT (SINV (VP (VBG Trying) (S (VP (TO to) (VP (VB comment) (NP (DT the) (NN line)) (PRT (RP out)) (PP (IN by) (S (VP (VBG appending))))))) (ADVP (DT the) (NN line)) (FRAG (FRAG (ADVP (IN with)) (: /)) (: /) (FRAG (RB still)))) (VP (VBZ produces)) (NP (NP (DT a) (JJ compile-time) (NN error)) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB clearly)) (VP (VBZ indicates) (SBAR (IN that) (S (NP (NN something)) (VP (VBZ is) (ADJP (JJ wrong))))))))) (. .)))

root(ROOT-0, Trying-1)
aux(comment-3, to-2)
xcomp(Trying-1, comment-3)
det(line-5, the-4)
dobj(comment-3, line-5)
prt(comment-3, out-6)
prepc_by(comment-3, appending-8)
det(line-10, the-9)
advmod(Trying-1, line-10)
dep(Trying-1, with-11)
punct(with-11, /-12)
punct(with-11, /-13)
dep(with-11, still-14)
dep(Trying-1, produces-15)
det(error-18, a-16)
amod(error-18, compile-time-17)
nsubj(Trying-1, error-18)
nsubj(indicates-22, which-20)
advmod(indicates-22, clearly-21)
rcmod(error-18, indicates-22)
mark(wrong-26, that-23)
nsubj(wrong-26, something-24)
cop(wrong-26, is-25)
ccomp(indicates-22, wrong-26)

--/: 

(ROOT (NP (: --)))


Other/JJ unicode/JJ character/NN sequences/NNS such/JJ as/IN 

(ROOT (NP (NP (JJ Other) (JJ unicode) (NN character) (NNS sequences)) (PP (JJ such) (PP (IN as)))))

root(ROOT-0, sequences-4)
amod(sequences-4, Other-1)
amod(sequences-4, unicode-2)
nn(sequences-4, character-3)
prep(sequences-4, such-5)
prep(such-5, as-6)

char/VB a/DT =/JJ '/'' \/JJ u000b/NN '/'' ;/: 

(ROOT (S (VP (VB char) (NP (DT a) (JJ =)) ('' ') (PP (JJ \) (NP (NN u000b) ('' ')))) (: ;)))

root(ROOT-0, char-1)
det(=-3, a-2)
dobj(char-1, =-3)
prep(char-1, \-5)
dep(\-5, u000b-6)

are/VBP accepted/VBN as/IN correct/JJ ./. 

(ROOT (S (VP (VBP are) (VP (VBN accepted) (PP (IN as) (ADJP (JJ correct))))) (. .)))

root(ROOT-0, accepted-2)
auxpass(accepted-2, are-1)
prep_as(accepted-2, correct-4)

