When/WRB I/PRP try/VBP to/TO build/VB my/PRP$ test/NN program/NN ,/, I/PRP 'm/VBP getting/VBG a/DT compile/VBP error/NN from/IN the/DT generated/VBN source/NN file/NN ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBP try) (S (VP (TO to) (VP (VB build) (NP (PRP$ my) (NN test) (NN program)))))))) (, ,) (NP (PRP I)) (VP (VBP 'm) (VP (VBG getting) (SBAR (S (NP (DT a)) (VP (VBP compile) (NP (NN error)) (PP (IN from) (NP (DT the) (VBN generated) (NN source) (NN file)))))))) (. .)))

root(ROOT-0, getting-12)
advmod(try-3, When-1)
nsubj(try-3, I-2)
advcl(getting-12, try-3)
aux(build-5, to-4)
xcomp(try-3, build-5)
poss(program-8, my-6)
nn(program-8, test-7)
dobj(build-5, program-8)
nsubj(getting-12, I-10)
aux(getting-12, 'm-11)
nsubj(compile-14, a-13)
ccomp(getting-12, compile-14)
dobj(compile-14, error-15)
det(file-20, the-17)
amod(file-20, generated-18)
nn(file-20, source-19)
prep_from(compile-14, file-20)

For/IN some/DT reason/NN ,/, the/DT function/NN ti_sysbios_hal_Hwi_getHookContext/NN __/CD E/NN is/VBZ being/VBG implemented/VBN twice/RB in/IN the/DT generated/VBN source/NN file/NN ./. 

(ROOT (S (PP (IN For) (NP (DT some) (NN reason))) (, ,) (NP (DT the) (NN function) (NN ti_sysbios_hal_Hwi_getHookContext) (CD __) (NN E)) (VP (VBZ is) (VP (VBG being) (VP (VBN implemented) (ADVP (RB twice)) (PP (IN in) (NP (DT the) (VBN generated) (NN source) (NN file)))))) (. .)))

root(ROOT-0, implemented-12)
det(reason-3, some-2)
prep_for(implemented-12, reason-3)
det(E-9, the-5)
nn(E-9, function-6)
nn(E-9, ti_sysbios_hal_Hwi_getHookContext-7)
num(E-9, __-8)
nsubjpass(implemented-12, E-9)
aux(implemented-12, is-10)
auxpass(implemented-12, being-11)
advmod(implemented-12, twice-13)
det(file-18, the-15)
amod(file-18, generated-16)
nn(file-18, source-17)
prep_in(implemented-12, file-18)

I/PRP tracked/VBD down/RP the/DT following/VBG dependencies/NNS ./. 

(ROOT (S (NP (PRP I)) (VP (VBD tracked) (PRT (RP down)) (NP (DT the) (VBG following) (NNS dependencies))) (. .)))

root(ROOT-0, tracked-2)
nsubj(tracked-2, I-1)
prt(tracked-2, down-3)
det(dependencies-6, the-4)
amod(dependencies-6, following-5)
dobj(tracked-2, dependencies-6)

When/WRB building/VBG the/DT test/NN program/NN ,/, I/PRP 'm/VBP using/VBG xdctools/NNS 3.15.03.67/CD ./. 

(ROOT (S (SBAR (WHADVP (WRB When)) (S (VP (VBG building) (NP (DT the) (NN test) (NN program))))) (, ,) (NP (PRP I)) (VP (VBP 'm) (VP (VBG using) (NP (NNS xdctools)) (NP-TMP (CD 3.15.03.67)))) (. .)))

root(ROOT-0, using-9)
advmod(building-2, When-1)
advcl(using-9, building-2)
det(program-5, the-3)
nn(program-5, test-4)
dobj(building-2, program-5)
nsubj(using-9, I-7)
aux(using-9, 'm-8)
dobj(using-9, xdctools-10)
tmod(using-9, 3.15.03.67-11)

The/DT package/NN ti.sdo.ipc.notifyDrivers/NNS was/VBD built/VBN using/VBG xdctools/NNS 3.15.01.59/CD ./. 

(ROOT (S (NP (DT The) (NN package) (NNS ti.sdo.ipc.notifyDrivers)) (VP (VBD was) (VP (VBN built) (S (VP (VBG using) (NP (NNS xdctools)) (NP-TMP (CD 3.15.01.59)))))) (. .)))

root(ROOT-0, built-5)
det(ti.sdo.ipc.notifyDrivers-3, The-1)
nn(ti.sdo.ipc.notifyDrivers-3, package-2)
nsubjpass(built-5, ti.sdo.ipc.notifyDrivers-3)
auxpass(built-5, was-4)
xcomp(built-5, using-6)
dobj(using-6, xdctools-7)
tmod(using-6, 3.15.01.59-8)

I/PRP then/RB rebuilt/VBD this/DT package/NN with/IN the/DT newer/JJR xdctools/NNS ./. 

(ROOT (S (NP (PRP I)) (ADVP (RB then)) (VP (VBD rebuilt) (NP (DT this) (NN package)) (PP (IN with) (NP (DT the) (JJR newer) (NNS xdctools)))) (. .)))

root(ROOT-0, rebuilt-3)
nsubj(rebuilt-3, I-1)
advmod(rebuilt-3, then-2)
det(package-5, this-4)
dobj(rebuilt-3, package-5)
det(xdctools-9, the-7)
amod(xdctools-9, newer-8)
prep_with(rebuilt-3, xdctools-9)

Once/RB I/PRP did/VBD that/DT ,/, I/PRP was/VBD able/JJ to/TO rebuild/VB the/DT test/NN program/NN without/IN errors/NNS ./. 

(ROOT (S (SBAR (RB Once) (S (NP (PRP I)) (VP (VBD did) (NP (DT that))))) (, ,) (NP (PRP I)) (VP (VBD was) (ADJP (JJ able) (S (VP (TO to) (VP (VB rebuild) (NP (DT the) (NN test) (NN program)) (PP (IN without) (NP (NNS errors)))))))) (. .)))

root(ROOT-0, able-8)
advmod(did-3, Once-1)
nsubj(did-3, I-2)
advcl(able-8, did-3)
dobj(did-3, that-4)
nsubj(able-8, I-6)
cop(able-8, was-7)
aux(rebuild-10, to-9)
xcomp(able-8, rebuild-10)
det(program-13, the-11)
nn(program-13, test-12)
dobj(rebuild-10, program-13)
prep_without(rebuild-10, errors-15)

I/PRP guess/VBP this/DT means/VBZ that/IN xdctools/NNS 3.15.03.67/CD is/VBZ */SYM not/RB */SYM compatible/JJ with/IN xdctools/NNS 3.15.01.59/CD ./. 

(ROOT (S (NP (PRP I)) (VP (VBP guess) (SBAR (S (NP (DT this)) (VP (VBZ means) (SBAR (IN that) (S (NP (NP (NNS xdctools)) (NP (CD 3.15.03.67))) (VP (VBZ is) (VP (S (VP (SYM *) (NP (RB not)))) (PP (X (X (SYM *)) (NP (JJ compatible))) (IN with) (NP (NP (NNS xdctools)) (NP (CD 3.15.01.59)))))))))))) (. .)))

root(ROOT-0, guess-2)
nsubj(guess-2, I-1)
nsubj(means-4, this-3)
ccomp(guess-2, means-4)
mark(not-10, that-5)
nsubj(not-10, xdctools-6)
dep(xdctools-6, 3.15.03.67-7)
aux(not-10, is-8)
dep(not-10, *-9)
ccomp(means-4, not-10)
dep(compatible-12, *-11)
dep(not-10, compatible-12)
prep_with(not-10, xdctools-14)
dep(xdctools-14, 3.15.01.59-15)

It/PRP is/VBZ my/PRP$ understanding/NN that/IN all/DT xdctools/NNS 3.15/CD ./. 

(ROOT (S (NP (PRP It)) (VP (VBZ is) (NP (NP (PRP$ my) (NN understanding)) (SBAR (IN that) (FRAG (NP-TMP (NP (DT all) (NNS xdctools)) (NP (CD 3.15))))))) (. .)))

root(ROOT-0, understanding-4)
nsubj(understanding-4, It-1)
cop(understanding-4, is-2)
poss(understanding-4, my-3)
mark(xdctools-7, that-5)
det(xdctools-7, all-6)
dep(understanding-4, xdctools-7)
dep(xdctools-7, 3.15-8)

xx.xx/NN releases/NNS should/MD be/VB compatible/JJ ./. 

(ROOT (S (NP (NN xx.xx) (NNS releases)) (VP (MD should) (VP (VB be) (ADJP (JJ compatible)))) (. .)))

root(ROOT-0, compatible-5)
nn(releases-2, xx.xx-1)
nsubj(compatible-5, releases-2)
aux(compatible-5, should-3)
cop(compatible-5, be-4)

