My/PRP$ build/VB file/NN relies/VBZ on/IN JARs/NNS in/IN $/$ {/-LRB- user.home/NN }/-RRB- //: ./. 

(ROOT (S (NP (PRP$ My)) (VP (VB build) (SBAR (S (NP (NN file)) (VP (VBZ relies) (PP (IN on) (PRN (NNS JARs) (PP (IN in) (NP ($ $) (-LRB- -LCB-) (NN user.home) (-RRB- -RCB-))) (: /))))))) (. .)))

root(ROOT-0, build-2)
nsubj(build-2, My-1)
nsubj(relies-4, file-3)
ccomp(build-2, relies-4)
prep(relies-4, on-5)
dep(in-7, JARs-6)
dep(on-5, in-7)
dep(user.home-10, $-8)
pobj(in-7, user.home-10)
punct(in-7, /-12)

ant/lib/NN ./. 

(ROOT (NP (NN ant/lib) (. .)))

root(ROOT-0, ant/lib-1)

But/CC those/DT JARs/NNS are/VBP not/RB loaded/VBN into/IN Ant/NN when/WRB I/PRP run/VBP it/PRP from/IN within/IN Eclipse/NNP ./. 

(ROOT (S (CC But) (NP (DT those) (NNS JARs)) (VP (VBP are) (RB not) (VP (VBN loaded) (PP (IN into) (NP (NN Ant))) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP run) (NP (PRP it)) (PP (IN from) (PP (IN within) (NP (NNP Eclipse))))))))) (. .)))

root(ROOT-0, loaded-6)
cc(loaded-6, But-1)
det(JARs-3, those-2)
nsubjpass(loaded-6, JARs-3)
auxpass(loaded-6, are-4)
neg(loaded-6, not-5)
prep_into(loaded-6, Ant-8)
advmod(run-11, when-9)
nsubj(run-11, I-10)
advcl(loaded-6, run-11)
dobj(run-11, it-12)
prep(run-11, from-13)
pcomp(from-13, within-14)
pobj(within-14, Eclipse-15)

The/DT normal/JJ Ant/NN version/NN loads/NNS JARs/NNS from/IN $/$ {/-LRB- user.home/NN }/-RRB- //: ./. 

(ROOT (NP (NP (DT The) (JJ normal) (NN Ant) (NN version) (NNS loads)) (PRN (NNS JARs) (PP (IN from) (NP ($ $) (-LRB- -LCB-) (NN user.home) (-RRB- -RCB-))) (: /)) (. .)))

root(ROOT-0, loads-5)
det(loads-5, The-1)
amod(loads-5, normal-2)
nn(loads-5, Ant-3)
nn(loads-5, version-4)
dep(loads-5, JARs-6)
dep(user.home-10, $-8)
prep_from(loads-5, user.home-10)
punct(loads-5, /-12)

ant/lib/NN automatically/RB ./. 

(ROOT (FRAG (NP (NN ant/lib)) (ADVP (RB automatically)) (. .)))

root(ROOT-0, ant/lib-1)
dep(ant/lib-1, automatically-2)

So/RB Eclipse/NNP behaves/VBZ different/JJ from/IN normal/JJ Ant/NN ./. 

(ROOT (S (RB So) (NP (NNP Eclipse)) (VP (VBZ behaves) (ADJP (JJ different) (PP (IN from) (NP (JJ normal) (NN Ant))))) (. .)))

root(ROOT-0, behaves-3)
advmod(behaves-3, So-1)
nsubj(behaves-3, Eclipse-2)
acomp(behaves-3, different-4)
amod(Ant-7, normal-6)
prep_from(different-4, Ant-7)

