20108/CD 

(ROOT (FRAG (NP (CD 20108))))

root(ROOT-0, 20108-1)

1/CD create/VBP (/-LRB- A.java/NN )/-RRB- 

(ROOT (S (NP (NP (NP (CD 1)) (SBAR (S (VP (VBP create))))) (NP (-LRB- -LRB-) (NN A.java) (-RRB- -RRB-)))))

root(ROOT-0, 1-1)
rcmod(1-1, create-2)
appos(1-1, A.java-4)

import/NN java.util.Vector/NN ;/: 

(ROOT (NP (NN import) (NN java.util.Vector) (: ;)))

root(ROOT-0, java.util.Vector-2)
nn(java.util.Vector-2, import-1)

public/JJ class/NN A/NN {/-LRB- 

(ROOT (NP (JJ public) (NN class) (NN A) (-LRB- -LCB-)))

root(ROOT-0, A-3)
amod(A-3, public-1)
nn(A-3, class-2)

public/NN A/NN (/-LRB- Vector/NNP v/LS )/-RRB- {/-LRB- 

(ROOT (NP (NP (NN public) (NN A)) (PRN (-LRB- -LRB-) (NP (NNP Vector) (LS v)) (-RRB- -RRB-)) (-LRB- -LCB-)))

root(ROOT-0, A-2)
nn(A-2, public-1)
appos(A-2, Vector-4)
dep(Vector-4, v-5)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


(/-LRB- B.java/NN )/-RRB- 

(ROOT (PRN (-LRB- -LRB-) (NP (NN B.java)) (-RRB- -RRB-)))

root(ROOT-0, B.java-2)

public/JJ class/NN B/NN extends/VBZ A/DT {/-LRB- 

(ROOT (S (NP (JJ public) (NN class) (NN B)) (VP (VBZ extends) (NP (DT A) (-LRB- -LCB-)))))

root(ROOT-0, extends-4)
amod(B-3, public-1)
nn(B-3, class-2)
nsubj(extends-4, B-3)
dobj(extends-4, A-5)

}/-RRB- 

(ROOT (NP (-RRB- -RCB-)))


2/CD in/IN the/DT outliner/NN on/IN B/NN ,/, choose/VB '/`` Add/VB constructors/NNS from/IN superclass/NN '/'' 

(ROOT (S (PP (NP (CD 2)) (IN in) (NP (NP (DT the) (NN outliner)) (PP (IN on) (NP (NN B))))) (, ,) (VP (VB choose) (VP (`` `) (VB Add) (NP (NNS constructors)) (PP (IN from) (NP (NN superclass) ('' ')))))))

root(ROOT-0, choose-8)
npadvmod(choose-8, 2-1)
det(outliner-4, the-3)
prep_in(choose-8, outliner-4)
prep_on(outliner-4, B-6)
xcomp(choose-8, Add-10)
dobj(Add-10, constructors-11)
prep_from(Add-10, superclass-13)

Constructor/NNP is/VBZ added/VBN but/CC no/DT import/NN for/IN Vector/NNP ./. 

(ROOT (S (NP (NNP Constructor)) (VP (VBZ is) (VP (VBN added) (PP (CC but) (NP (NP (DT no) (NN import)) (PP (IN for) (NP (NNP Vector))))))) (. .)))

root(ROOT-0, added-3)
nsubjpass(added-3, Constructor-1)
auxpass(added-3, is-2)
prep(added-3, but-4)
neg(import-6, no-5)
pobj(but-4, import-6)
prep_for(import-6, Vector-8)

3/CD Dio/NN it/PRP again/RB but/CC set/VBD a/DT breakpoint/NN in/IN JavaModelUtil.getResolvedTypeName/NNP ./. 

(ROOT (S (NP (NP (CD 3) (NN Dio)) (NP (PRP it))) (ADVP (RB again) (CC but)) (VP (VBD set) (NP (DT a) (NN breakpoint)) (PP (IN in) (NP (NNP JavaModelUtil.getResolvedTypeName)))) (. .)))

root(ROOT-0, set-6)
num(Dio-2, 3-1)
nsubj(set-6, Dio-2)
dep(Dio-2, it-3)
advmod(set-6, again-4)
cc(again-4, but-5)
det(breakpoint-8, a-7)
dobj(set-6, breakpoint-8)
prep_in(set-6, JavaModelUtil.getResolvedTypeName-10)

It/PRP is/VBZ called/VBN to/TO resolve/VB type/NN name/NN '/`` Vector/NNP '/'' in/IN A./NN 

(ROOT (S (NP (PRP It)) (VP (VBZ is) (VP (VBN called) (S (VP (TO to) (VP (VB resolve) (NP (NN type) (NN name) (`` `) (NNP Vector) ('' ')) (PP (IN in) (NP (NN A.))))))))))

root(ROOT-0, called-3)
nsubjpass(called-3, It-1)
auxpass(called-3, is-2)
aux(resolve-5, to-4)
xcomp(called-3, resolve-5)
nn(Vector-9, type-6)
nn(Vector-9, name-7)
dobj(resolve-5, Vector-9)
prep_in(resolve-5, A.-12)

No/DT results/NNS ./. 

(ROOT (NP (DT No) (NNS results) (. .)))

root(ROOT-0, results-2)
neg(results-2, No-1)

