Open/VB the/DT preferences/NNS window/NN ./. 

(ROOT (S (VP (VB Open) (NP (DT the) (NNS preferences) (NN window))) (. .)))

root(ROOT-0, Open-1)
det(window-4, the-2)
nn(window-4, preferences-3)
dobj(Open-1, window-4)

At/IN the/DT left/JJ side/NN of/IN the/DT window/NN is/VBZ a/DT tree/NN widget/NN ./. 

(ROOT (SINV (PP (IN At) (NP (NP (DT the) (JJ left) (NN side)) (PP (IN of) (NP (DT the) (NN window))))) (VP (VBZ is)) (NP (DT a) (NN tree) (NN widget)) (. .)))

root(ROOT-0, is-8)
det(side-4, the-2)
amod(side-4, left-3)
prep_at(is-8, side-4)
det(window-7, the-6)
prep_of(side-4, window-7)
det(widget-11, a-9)
nn(widget-11, tree-10)
nsubj(is-8, widget-11)

At/IN its/PRP$ bottom/NN is/VBZ a/DT scroll/NN bar/NN ./. 

(ROOT (SINV (PP (IN At) (NP (PRP$ its) (NN bottom))) (VP (VBZ is)) (NP (DT a) (NN scroll) (NN bar)) (. .)))

root(ROOT-0, is-4)
poss(bottom-3, its-2)
prep_at(is-4, bottom-3)
det(bar-7, a-5)
nn(bar-7, scroll-6)
nsubj(is-4, bar-7)

It/PRP can/MD be/VB scrolled/VBN roughly/RB twice/RB as/RB much/JJ as/IN the/DT tree/NN widget/NN is/VBZ wide/JJ ./. 

(ROOT (S (NP (PRP It)) (VP (MD can) (VP (VB be) (VP (VBN scrolled) (NP (RB roughly) (QP (RB twice) (RB as) (JJ much))) (SBAR (IN as) (S (NP (DT the) (NN tree) (NN widget)) (VP (VBZ is) (ADJP (JJ wide)))))))) (. .)))

root(ROOT-0, scrolled-4)
nsubjpass(scrolled-4, It-1)
aux(scrolled-4, can-2)
auxpass(scrolled-4, be-3)
advmod(much-8, roughly-5)
quantmod(much-8, twice-6)
quantmod(much-8, as-7)
dobj(scrolled-4, much-8)
mark(wide-14, as-9)
det(widget-12, the-10)
nn(widget-12, tree-11)
nsubj(wide-14, widget-12)
cop(wide-14, is-13)
advcl(scrolled-4, wide-14)

This/DT is/VBZ not/RB the/DT only/JJ place/NN where/WRB I/PRP 'm/VBP seeing/VBG this/DT (/-LRB- although/IN it/PRP is/VBZ the/DT only/RB easily/RB reproducible/JJ example/NN I/PRP can/MD come/VB up/RP with/IN right/RB now/RB )/-RRB- ,/, thus/RB I/PRP suspect/VBP it/PRP to/TO be/VB a/DT general/JJ SWT/NNP problem/NN (/-LRB- possibly/RB GTK2/NN specific/JJ )/-RRB- ./. 

(ROOT (S (S (NP (DT This)) (VP (VBZ is) (RB not) (NP (DT the) (JJ only) (NN place)) (SBAR (WHADVP (WRB where)) (S (NP (PRP I)) (VP (VBP 'm) (VP (VBG seeing) (NP (NP (DT this)) (PRN (-LRB- -LRB-) (SBAR (IN although) (S (NP (PRP it)) (VP (VBZ is) (NP (NP (DT the) (ADJP (ADVP (RB only) (RB easily)) (JJ reproducible)) (NN example)) (SBAR (S (NP (PRP I)) (VP (MD can) (VP (VB come) (PRT (RP up)) (PP (IN with) (ADVP (RB right) (RB now))))))))))) (-RRB- -RRB-))))))))) (, ,) (RB thus) (S (NP (PRP I)) (VP (VBP suspect) (S (NP (PRP it)) (VP (TO to) (VP (VB be) (NP (NP (DT a) (JJ general) (NNP SWT) (NN problem)) (PRN (-LRB- -LRB-) (S (NP (RB possibly) (NN GTK2)) (ADJP (JJ specific))) (-RRB- -RRB-)))))))) (. .)))

root(ROOT-0, place-6)
nsubj(place-6, This-1)
cop(place-6, is-2)
neg(place-6, not-3)
det(place-6, the-4)
amod(place-6, only-5)
advmod(seeing-10, where-7)
nsubj(seeing-10, I-8)
aux(seeing-10, 'm-9)
advcl(place-6, seeing-10)
dobj(seeing-10, this-11)
mark(example-20, although-13)
nsubj(example-20, it-14)
cop(example-20, is-15)
det(example-20, the-16)
advmod(easily-18, only-17)
advmod(reproducible-19, easily-18)
amod(example-20, reproducible-19)
dep(this-11, example-20)
nsubj(come-23, I-21)
aux(come-23, can-22)
rcmod(example-20, come-23)
prt(come-23, up-24)
prep(come-23, with-25)
advmod(now-27, right-26)
pcomp(with-25, now-27)
advmod(place-6, thus-30)
nsubj(suspect-32, I-31)
parataxis(place-6, suspect-32)
dobj(suspect-32, it-33)
aux(problem-39, to-34)
cop(problem-39, be-35)
det(problem-39, a-36)
amod(problem-39, general-37)
nn(problem-39, SWT-38)
xcomp(suspect-32, problem-39)
advmod(GTK2-42, possibly-41)
dep(specific-43, GTK2-42)
dep(problem-39, specific-43)

This/DT may/MD be/VB the/DT same/JJ problem/NN as/IN the/DT one/CD described/VBN in/IN bug/NN 25335/CD but/CC I/PRP 'm/VBP not/RB sure/JJ ./. 

(ROOT (S (S (NP (DT This)) (VP (MD may) (VP (VB be) (NP (NP (DT the) (JJ same) (NN problem)) (PP (IN as) (NP (NP (DT the) (CD one)) (VP (VBN described) (PP (IN in) (NP (NN bug) (CD 25335)))))))))) (CC but) (S (NP (PRP I)) (VP (VBP 'm) (RB not) (ADJP (JJ sure)))) (. .)))

root(ROOT-0, problem-6)
nsubj(problem-6, This-1)
aux(problem-6, may-2)
cop(problem-6, be-3)
det(problem-6, the-4)
amod(problem-6, same-5)
det(one-9, the-8)
prep_as(problem-6, one-9)
vmod(one-9, described-10)
prep_in(described-10, bug-12)
num(bug-12, 25335-13)
nsubj(sure-18, I-15)
cop(sure-18, 'm-16)
neg(sure-18, not-17)
conj_but(problem-6, sure-18)

