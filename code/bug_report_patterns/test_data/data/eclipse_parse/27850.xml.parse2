Posted/VBN by/IN Nick/NNP Evgeniev/NNP on/IN EclipseCorner/NNP ./. 

(ROOT (S (VP (VBN Posted) (PP (IN by) (NP (NP (NNP Nick) (NNP Evgeniev)) (PP (IN on) (NP (NNP EclipseCorner)))))) (. .)))

root(ROOT-0, Posted-1)
nn(Evgeniev-4, Nick-3)
prep_by(Posted-1, Evgeniev-4)
prep_on(Evgeniev-4, EclipseCorner-6)

Subject/NNP :/: Re/NNP :/: [/-LRB- SWT/NN ]/-RRB- PATCH/NN ,/, new/JJ widget/NN ./. 

(ROOT (NP (NP (NNP Subject)) (: :) (NP (NP (NNP Re)) (: :) (NP (-LRB- -LSB-) (NN SWT) (-RRB- -RSB-) (NN PATCH) (, ,) (JJ new) (NN widget))) (. .)))

root(ROOT-0, Subject-1)
dep(Subject-1, Re-3)
punct(widget-11, -LSB--5)
nn(widget-11, SWT-6)
punct(widget-11, -RSB--7)
nn(widget-11, PATCH-8)
amod(widget-11, new-10)
dep(Re-3, widget-11)

(/-LRB- was/VBD Re/NNP :/: [/-LRB- SWT/NN ]/-RRB- Table/NNP disable/VB selection/NN )/-RRB- From/IN :/: nick@octet.com/NNP (/-LRB- Nick/NNP Evgeniev/NNP )/-RRB- Newsgroups/NNS :/: eclipse.tools/NNS Organization/NNP :/: EclipseCorner/NNP Date/NNP :/: Dec/NNP 05/CD 2002/CD 21:21:33/CD 

(ROOT (FRAG (S (VP (-LRB- -LRB-) (VBD was) (NP (NP (NNP Re)) (: :) (NP (NP (NP (-LRB- -LSB-) (NN SWT)) (PRN (-RRB- -RSB-) (S (NP (NNP Table)) (VP (VB disable) (NP (NN selection)))) (-RRB- -RRB-))) (PRN (PP (IN From)))) (: :)) (PP (NP (NNP nick@octet.com)) (NP (NP (PRN (-LRB- -LRB-) (NP (NNP Nick) (NNP Evgeniev)) (-RRB- -RRB-)) (NNS Newsgroups)) (: :) (NP (NNS eclipse.tools)))) (NP (NP (NNP Organization)) (: :) (NP (NNP EclipseCorner) (NNP Date)) (: :) (NP (NP (NNP Dec) (CD 05)) (NP (CD 2002) (CD 21:21:33))))))))

root(ROOT-0, Re-3)
cop(Re-3, was-2)
punct(SWT-6, -LSB--5)
dep(Re-3, SWT-6)
punct(disable-9, -RSB--7)
nsubj(disable-9, Table-8)
dep(SWT-6, disable-9)
dobj(disable-9, selection-10)
prep(SWT-6, From-12)
prep(Re-3, nick@octet.com-14)
nn(Evgeniev-17, Nick-16)
appos(Newsgroups-19, Evgeniev-17)
dep(nick@octet.com-14, Newsgroups-19)
dep(Newsgroups-19, eclipse.tools-21)
dep(Re-3, Organization-22)
nn(Date-25, EclipseCorner-24)
dep(Organization-22, Date-25)
dep(Organization-22, Dec-27)
num(Dec-27, 05-28)
num(21:21:33-30, 2002-29)
dep(Dec-27, 21:21:33-30)

This/DT is/VBZ a/DT multi-part/JJ message/NN in/IN MIME/NNP format/NN ./. 

(ROOT (S (NP (DT This)) (VP (VBZ is) (NP (NP (DT a) (JJ multi-part) (NN message)) (PP (IN in) (NP (NNP MIME) (NN format))))) (. .)))

root(ROOT-0, message-5)
nsubj(message-5, This-1)
cop(message-5, is-2)
det(message-5, a-3)
amod(message-5, multi-part-4)
nn(format-8, MIME-7)
prep_in(message-5, format-8)

------/NN =/JJ _/CD NextPart_000_000F_01C29CA4/NN .497/CD E9FC0/NN 

(ROOT (NP (NP (NN ------)) (NP (NP (ADJP (JJ =) (NP-TMP (CD _))) (NN NextPart_000_000F_01C29CA4)) (NP (CD .497) (NN E9FC0)))))

root(ROOT-0, -------1)
amod(NextPart_000_000F_01C29CA4-4, =-2)
tmod(=-2, _-3)
dep(-------1, NextPart_000_000F_01C29CA4-4)
num(E9FC0-6, .497-5)
dep(NextPart_000_000F_01C29CA4-4, E9FC0-6)

Content-Type/NNP :/: multipart/alternative/JJ ;/: 

(ROOT (NP (NP (NNP Content-Type)) (: :) (NP (JJ multipart/alternative)) (: ;)))

root(ROOT-0, Content-Type-1)
dep(Content-Type-1, multipart/alternative-3)

boundary/NN =/JJ "/'' --/: =/JJ _/CD NextPart_001_0010_01C29CA4/NN .497/CD E9FC0/NN "/'' 

(ROOT (NP (NP (NP (NP (NN boundary)) (ADJP (JJ =))) ('' '') (PRN (: --) (FRAG (JJ =))) (NP (QP (CD _)) (NN NextPart_001_0010_01C29CA4))) (NP (NP (CD .497)) (NP (NN E9FC0) ('' '')))))

root(ROOT-0, boundary-1)
amod(boundary-1, =-2)
dep(boundary-1, =-5)
num(NextPart_001_0010_01C29CA4-7, _-6)
dep(boundary-1, NextPart_001_0010_01C29CA4-7)
dep(boundary-1, .497-8)
dep(.497-8, E9FC0-9)

------/NN =/JJ _/CD NextPart_001_0010_01C29CA4/NN .497/CD E9FC0/NN 

(ROOT (NP (NP (NN ------)) (NP (NP (ADJP (JJ =) (NP-TMP (CD _))) (NN NextPart_001_0010_01C29CA4)) (NP (CD .497) (NN E9FC0)))))

root(ROOT-0, -------1)
amod(NextPart_001_0010_01C29CA4-4, =-2)
tmod(=-2, _-3)
dep(-------1, NextPart_001_0010_01C29CA4-4)
num(E9FC0-6, .497-5)
dep(NextPart_001_0010_01C29CA4-4, E9FC0-6)

Content-Type/NNP :/: text/plain/NN ;/: 

(ROOT (NP (NP (NNP Content-Type)) (: :) (NP (NN text/plain)) (: ;)))

root(ROOT-0, Content-Type-1)
dep(Content-Type-1, text/plain-3)

charset/NN =/JJ "/`` iso-8859-1/NN "/'' 

(ROOT (NP (NP (NN charset)) (NP (JJ =)) (NP (`` ``) (NN iso-8859-1) ('' ''))))

root(ROOT-0, charset-1)
dep(charset-1, =-2)
dep(charset-1, iso-8859-1-4)

Content-Transfer-Encoding/NNP :/: quoted-printable/JJ 

(ROOT (NP (NP (NNP Content-Transfer-Encoding)) (: :) (NP (JJ quoted-printable))))

root(ROOT-0, Content-Transfer-Encoding-1)
dep(Content-Transfer-Encoding-1, quoted-printable-3)

Hi/NN ,/, 

(ROOT (FRAG (PP (NN Hi)) (, ,)))

root(ROOT-0, Hi-1)

Attached/VBN archive/NN contains/VBZ patched/VBN FormData/NNP and/CC modified/VBN EFormLayout/NN ./. 

(ROOT (S (S (VP (VBN Attached) (NP (NN archive)))) (VP (VBZ contains) (VP (VBN patched) (NP (NP (NNP FormData)) (CC and) (NP (VBN modified) (NN EFormLayout))))) (. .)))

root(ROOT-0, contains-3)
csubj(contains-3, Attached-1)
dobj(Attached-1, archive-2)
dep(contains-3, patched-4)
dobj(patched-4, FormData-5)
amod(EFormLayout-8, modified-7)
dobj(patched-4, EFormLayout-8)
conj_and(FormData-5, EFormLayout-8)

=/JJ Note/NN that/WDT FormData/NNP now/RB incompatible/JJ :(/NN with/IN original/JJ FormLayout/NNP (/-LRB- Until/IN =/JJ you/PRP rename/VBP EFormLayout/NN to/TO FormLayout/NNP )/-RRB- ./. 

(ROOT (S (NP (JJ =)) (VP (NN Note) (S (NP (WDT that)) (NP (NP (NNP FormData)) (RRC (ADVP (RB now)) (NP (NP (JJ incompatible) (NN :-LRB-)) (PP (IN with) (NP (JJ original) (NNP FormLayout))))) (PRN (-LRB- -LRB-) (PP (IN Until) (NP (NP (JJ =)) (SBAR (S (NP (PRP you)) (VP (VBP rename) (NP (NN EFormLayout)) (PP (TO to) (NP (NNP FormLayout)))))))) (-RRB- -RRB-))))) (. .)))

root(ROOT-0, Note-2)
nsubj(Note-2, =-1)
nsubj(FormData-4, that-3)
xcomp(Note-2, FormData-4)
advmod(:-LRB--7, now-5)
amod(:-LRB--7, incompatible-6)
rcmod(FormData-4, :-LRB--7)
amod(FormLayout-10, original-9)
prep_with(:-LRB--7, FormLayout-10)
prep_until(FormData-4, =-13)
nsubj(rename-15, you-14)
rcmod(=-13, rename-15)
dobj(rename-15, EFormLayout-16)
prep_to(rename-15, FormLayout-18)

FormData/NNP has/VBZ been/VBN optimized/VBN to/TO =/JJ cache/NN its/PRP$ expensive/JJ calculations/NNS and/CC avoid/VB N/NN ^/NN 2/CD algorithm/NN ./. 

(ROOT (S (NP (NNP FormData)) (VP (VBZ has) (VP (VBN been) (VP (VBN optimized) (PP (TO to) (NP (JJ =) (NN cache))) (NP-TMP (NP (NP (PRP$ its) (JJ expensive) (NNS calculations)) (CC and) (NP (VB avoid) (NN N))) (NP (NN ^) (CD 2) (NN algorithm)))))) (. .)))

root(ROOT-0, optimized-4)
nsubjpass(optimized-4, FormData-1)
aux(optimized-4, has-2)
auxpass(optimized-4, been-3)
amod(cache-7, =-6)
prep_to(optimized-4, cache-7)
poss(calculations-10, its-8)
amod(calculations-10, expensive-9)
tmod(optimized-4, calculations-10)
dep(N-13, avoid-12)
tmod(optimized-4, N-13)
conj_and(calculations-10, N-13)
nn(algorithm-16, ^-14)
num(algorithm-16, 2-15)
dep(calculations-10, algorithm-16)

EFormLayout/NN =/JJ calls/NNS flushCache/NN (/-LRB- )/-RRB- on/IN each/DT FormData/NNP before/IN layouting/VBG ./. 

(ROOT (S (NP (NN EFormLayout) (JJ =) (NNS calls)) (VP (NN flushCache) (NP (NP (-LRB- -LRB-) (-RRB- -RRB-) (IN on) (DT each) (NNP FormData)) (PP (IN before) (NP (VBG layouting))))) (. .)))

root(ROOT-0, flushCache-4)
nn(calls-3, EFormLayout-1)
amod(calls-3, =-2)
nsubj(flushCache-4, calls-3)
amod(FormData-9, on-7)
det(FormData-9, each-8)
dobj(flushCache-4, FormData-9)
prep_before(FormData-9, layouting-11)

I/PRP 've/VBP got/VBN 4/CD times/NNS =/JJ increased/VBN performance/NN on/IN pocketpc/NN with/IN this/DT patch/NN !/. 

(ROOT (S (NP (PRP I)) (VP (VBP 've) (VP (VBN got) (NP (NP (ADJP (NP (CD 4) (NNS times)) (JJ =)) (VBN increased) (NN performance)) (PP (IN on) (NP (NP (NN pocketpc)) (PP (IN with) (NP (DT this) (NN patch)))))))) (. !)))

root(ROOT-0, got-3)
nsubj(got-3, I-1)
aux(got-3, 've-2)
num(times-5, 4-4)
npadvmod(=-6, times-5)
amod(performance-8, =-6)
amod(performance-8, increased-7)
dobj(got-3, performance-8)
prep_on(performance-8, pocketpc-10)
det(patch-13, this-12)
prep_with(pocketpc-10, patch-13)

For/IN complex/JJ layouts/NNS =/JJ with/IN a/DT lot/NN of/IN "/`` chained/JJ "/'' widgets/NNS performance/NN gain/NN will/MD be/VB higher/JJR ./. 

(ROOT (S (PP (IN For) (NP (NP (JJ complex) (NNS layouts)) (ADJP (JJ =) (PP (IN with) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (`` ``) (JJ chained) ('' '') (NNS widgets)))))))) (NP (NN performance) (NN gain)) (VP (MD will) (VP (VB be) (ADJP (JJR higher)))) (. .)))

root(ROOT-0, higher-17)
amod(layouts-3, complex-2)
prep_for(higher-17, layouts-3)
amod(layouts-3, =-4)
det(lot-7, a-6)
prep_with(=-4, lot-7)
amod(widgets-12, chained-10)
prep_of(lot-7, widgets-12)
nn(gain-14, performance-13)
nsubj(higher-17, gain-14)
aux(higher-17, will-15)
cop(higher-17, be-16)

=/JJ 20/CD 

(ROOT (ADJP (JJ =) (NP-TMP (CD 20))))

root(ROOT-0, =-1)
tmod(=-1, 20-2)

Cumulative/JJ results/NNS are/VBP :/: 

(ROOT (NP (NP (JJ Cumulative) (NNS results)) (VP (VBP are)) (: :)))

root(ROOT-0, results-2)
amod(results-2, Cumulative-1)
dep(results-2, are-3)

-/: EFormLayout.layout/NN (/-LRB- Composite/NN ,/, boolean/NN )/-RRB- honors/NNS flushCache/NN parameter/NN 

(ROOT (PRN (: -) (NP (NP (NP (NN EFormLayout.layout)) (PRN (-LRB- -LRB-) (NP (NP (NN Composite)) (, ,) (NP (NN boolean))) (-RRB- -RRB-)) (NP (NNS honors))) (NP (NN flushCache) (NN parameter)))))

root(ROOT-0, EFormLayout.layout-2)
dep(EFormLayout.layout-2, Composite-4)
appos(Composite-4, boolean-6)
dep(EFormLayout.layout-2, honors-8)
nn(parameter-10, flushCache-9)
dep(EFormLayout.layout-2, parameter-10)

-/: FormData/NNP uses/VBZ linear/JJ algorithm/NN instead/RB of/IN N/NN ^/NN 2/CD 

(ROOT (PRN (: -) (S (NP (NNP FormData)) (VP (VBZ uses) (NP (NP (JJ linear) (NN algorithm)) (PP (RB instead) (IN of) (NP (NN N) (NN ^) (CD 2))))))))

root(ROOT-0, uses-3)
nsubj(uses-3, FormData-2)
amod(algorithm-5, linear-4)
dobj(uses-3, algorithm-5)
nn(^-9, N-8)
prep_instead_of(algorithm-5, ^-9)
num(^-9, 2-10)

The/DT next/JJ step/NN that/WDT should/MD be/VB taken/VBN is/VBZ to/TO avoid/VB multiple/JJ FormAttachment/NN =/JJ creation/NN during/IN layout/NN process/NN . . ./: 

(ROOT (S (NP (NP (DT The) (JJ next) (NN step)) (SBAR (WHNP (WDT that)) (S (VP (MD should) (VP (VB be) (VP (VBN taken))))))) (VP (VBZ is) (S (VP (TO to) (VP (VB avoid) (NP (JJ multiple) (NN FormAttachment) (JJ =) (NN creation)) (PP (IN during) (NP (NN layout) (NN process))))))) (: ...)))

root(ROOT-0, is-8)
det(step-3, The-1)
amod(step-3, next-2)
nsubj(is-8, step-3)
nsubjpass(taken-7, that-4)
aux(taken-7, should-5)
auxpass(taken-7, be-6)
rcmod(step-3, taken-7)
aux(avoid-10, to-9)
xcomp(is-8, avoid-10)
amod(creation-14, multiple-11)
nn(creation-14, FormAttachment-12)
amod(creation-14, =-13)
dobj(avoid-10, creation-14)
nn(process-17, layout-16)
prep_during(avoid-10, process-17)

The/DT fact/NN that/IN FormLayout/NNP works/VBZ on/IN XP/NN but/CC fails/VBZ on/IN Pocket/NNP PC/NNP points/VBZ to/TO =/JJ a/DT bug/NN on/IN Pocket/NNP PC/NNP ./. 

(ROOT (S (NP (NP (DT The) (NN fact)) (SBAR (IN that) (S (NP (NNP FormLayout)) (VP (VP (VBZ works) (PP (IN on) (NP (NN XP)))) (CC but) (VP (VBZ fails) (PP (IN on) (NP (NNP Pocket) (NNP PC)))))))) (VP (VBZ points) (S (VP (TO to) (VP (JJ =) (NP (DT a) (NN bug)) (PP (IN on) (NP (NNP Pocket) (NNP PC))))))) (. .)))

root(ROOT-0, points-13)
det(fact-2, The-1)
nsubj(points-13, fact-2)
mark(works-5, that-3)
nsubj(works-5, FormLayout-4)
nsubj(fails-9, FormLayout-4)
dep(fact-2, works-5)
prep_on(works-5, XP-7)
dep(fact-2, fails-9)
conj_but(works-5, fails-9)
nn(PC-12, Pocket-11)
prep_on(fails-9, PC-12)
aux(=-15, to-14)
xcomp(points-13, =-15)
det(bug-17, a-16)
dobj(=-15, bug-17)
nn(PC-20, Pocket-19)
prep_on(=-15, PC-20)

I/PRP believe/VBP your/PRP$ changes/NNS fix/VBP the/DT symptom/NN ,/, not/RB =/JJ 20/CD the/DT real/JJ problem/NN ./. 

(ROOT (S (NP (PRP I)) (VP (VBP believe) (SBAR (S (NP (PRP$ your) (NNS changes)) (VP (VBP fix) (NP (DT the) (NN symptom)) (, ,) (SBAR (RB not) (S (VP (JJ =) (NP (CD 20)) (NP (DT the) (JJ real) (NN problem))))))))) (. .)))

root(ROOT-0, believe-2)
nsubj(believe-2, I-1)
poss(changes-4, your-3)
nsubj(fix-5, changes-4)
ccomp(believe-2, fix-5)
det(symptom-7, the-6)
dobj(fix-5, symptom-7)
dep(=-10, not-9)
dep(fix-5, =-10)
iobj(=-10, 20-11)
det(problem-14, the-12)
amod(problem-14, real-13)
dobj(=-10, problem-14)

Also/RB ,/, the/DT EFormLayout/NN code/NN is/VBZ wrong/JJ in/IN that/DT if/IN the/DT =/JJ application/NN code/NN explicilty/NN calls/VBZ Composite.layout/NN (/-LRB- )/-RRB- because/IN a/DT child/NN has/VBZ =/JJ 

(ROOT (S (ADVP (RB Also)) (, ,) (NP (DT the) (NN EFormLayout) (NN code)) (VP (VBZ is) (ADJP (JJ wrong) (PP (IN in) (NP (DT that)))) (SBAR (IN if) (S (NP (DT the) (JJ =) (NN application) (NN code) (NN explicilty)) (VP (VBZ calls) (PRN (S (NP (NN Composite.layout)) (VP (-LRB- -LRB-))) (-RRB- -RRB-)) (SBAR (IN because) (S (NP (DT a) (NN child)) (VP (VBZ has) (ADJP (JJ =)))))))))))

root(ROOT-0, wrong-7)
advmod(wrong-7, Also-1)
det(code-5, the-3)
nn(code-5, EFormLayout-4)
nsubj(wrong-7, code-5)
cop(wrong-7, is-6)
prep_in(wrong-7, that-9)
mark(calls-16, if-10)
det(explicilty-15, the-11)
amod(explicilty-15, =-12)
nn(explicilty-15, application-13)
nn(explicilty-15, code-14)
nsubj(calls-16, explicilty-15)
advcl(wrong-7, calls-16)
nsubj(-LRB--18, Composite.layout-17)
mark(=-24, because-20)
det(child-22, a-21)
nsubj(=-24, child-22)
dep(=-24, has-23)
advcl(calls-16, =-24)

changed/VBN ,/, EFormLayout/NN will/MD not/RB layout/NN ./. 

(ROOT (S (S (VP (VBN changed))) (, ,) (NP (NN EFormLayout)) (VP (MD will) (VP (RB not) (NP (NN layout)))) (. .)))

root(ROOT-0, layout-6)
vmod(layout-6, changed-1)
nsubj(layout-6, EFormLayout-3)
aux(layout-6, will-4)
neg(layout-6, not-5)

=/JJ 20/CD 

(ROOT (ADJP (JJ =) (NP-TMP (CD 20))))

root(ROOT-0, =-1)
tmod(=-1, 20-2)

No/DT ,/, the/DT code/NN is/VBZ correct/JJ Composite.layout/NN (/-LRB- )/-RRB- will/MD call/VB =/JJ EFormLayout.layout/NN (/-LRB- this/DT ,/, true/JJ )/-RRB- ./. 

(ROOT (S (NP (DT No)) (PRN (, ,) (S (NP (DT the) (NN code)) (VP (VBZ is) (NP (JJ correct) (NN Composite.layout) (-LRB- -LRB-) (-RRB- -RRB-))))) (VP (MD will) (VP (VB call) (NP (NP (JJ =) (NN EFormLayout.layout)) (PRN (-LRB- -LRB-) (NP (NP (DT this)) (, ,) (NP (JJ true))) (-RRB- -RRB-))))) (. .)))

root(ROOT-0, call-11)
nsubj(call-11, No-1)
det(code-4, the-3)
nsubj(Composite.layout-7, code-4)
cop(Composite.layout-7, is-5)
amod(Composite.layout-7, correct-6)
parataxis(call-11, Composite.layout-7)
aux(call-11, will-10)
amod(EFormLayout.layout-13, =-12)
dobj(call-11, EFormLayout.layout-13)
dep(EFormLayout.layout-13, this-15)
appos(this-15, true-17)

In/IN that/DT case/NN EFormLayout/NN wo/MD n't/RB cache/NN its/PRP$ =/JJ previous/JJ state/NN ,/, but/CC do/VBP relayout/NN as/IN expected/VBN ./. 

(ROOT (SINV (PP (IN In) (NP (DT that) (NN case) (NN EFormLayout))) (VP (MD wo) (RB n't)) (NP (NP (NN cache)) (NP (NP (PRP$ its) (JJ =) (JJ previous) (NN state)) (, ,) (SBAR (CC but) (S (VP (VBP do) (NP (NN relayout)) (SBAR (IN as) (S (VP (VBN expected))))))))) (. .)))

root(ROOT-0, wo-5)
det(EFormLayout-4, that-2)
nn(EFormLayout-4, case-3)
prep_in(wo-5, EFormLayout-4)
neg(wo-5, n't-6)
nsubj(wo-5, cache-7)
poss(state-11, its-8)
amod(state-11, =-9)
amod(state-11, previous-10)
dep(cache-7, state-11)
cc(do-14, but-13)
dep(state-11, do-14)
dobj(do-14, relayout-15)
mark(expected-17, as-16)
advcl(do-14, expected-17)

Hence/RB the/DT code/NN just/RB honors/NNS =/JJ flushCache/NN parameter/NN and/CC does/VBZ n't/RB break/VB existing/JJ functionality/NN ./. 

(ROOT (FRAG (ADVP (RB Hence)) (SBAR (NP (DT the) (NN code)) (RB just) (S (NP (NNS honors)) (VP (VP (JJ =) (NP (NN flushCache) (NN parameter))) (CC and) (VP (VBZ does) (RB n't) (VP (VB break) (NP (JJ existing) (NN functionality))))))) (. .)))

root(ROOT-0, Hence-1)
det(code-3, the-2)
dep(=-6, code-3)
advmod(=-6, just-4)
nsubj(=-6, honors-5)
nsubj(break-12, honors-5)
dep(Hence-1, =-6)
nn(parameter-8, flushCache-7)
dobj(=-6, parameter-8)
aux(break-12, does-10)
neg(break-12, n't-11)
dep(Hence-1, break-12)
conj_and(=-6, break-12)
amod(functionality-14, existing-13)
dobj(break-12, functionality-14)

./. 

(ROOT (NP (. .)))


Am/VBP I/PRP =/JJ right/NN ?/. 

(ROOT (S (VP (VBP Am) (NP (PRP I) (JJ =) (NN right))) (. ?)))

root(ROOT-0, right-4)
cop(right-4, Am-1)
dep(right-4, I-2)
amod(right-4, =-3)

=/JJ 20/CD 

(ROOT (ADJP (JJ =) (NP-TMP (CD 20))))

root(ROOT-0, =-1)
tmod(=-1, 20-2)

Sure/JJ the/DT algorithm/NN of/IN FormLayout/NNP must/MD be/VB optimized/VBN to/TO cache/NN its/PRP$ =/JJ calculations/NNS ./. 

(ROOT (S (NP (NP (JJ Sure) (DT the) (NN algorithm)) (PP (IN of) (NP (NNP FormLayout)))) (VP (MD must) (VP (VB be) (VP (VBN optimized) (PP (TO to) (NP (NN cache))) (NP (PRP$ its) (JJ =) (NNS calculations))))) (. .)))

root(ROOT-0, optimized-8)
amod(algorithm-3, Sure-1)
det(algorithm-3, the-2)
nsubjpass(optimized-8, algorithm-3)
prep_of(algorithm-3, FormLayout-5)
aux(optimized-8, must-6)
auxpass(optimized-8, be-7)
prep_to(optimized-8, cache-10)
poss(calculations-13, its-11)
amod(calculations-13, =-12)
dobj(optimized-8, calculations-13)

May/MD be/VB I/PRP 've/VBP missed/VBN somthing/NN but/CC to/TO my/PRP$ understanding/VBG it/PRP =/JJ does/VBZ a/DT lot/NN of/IN unnecessary/JJ calculations/NNS that/WDT takes/VBZ about/RB 3/CD seconds/NNS to/TO =/JJ layout/NN 10/CD controls/NNS on/IN pocketpc/NN 

(ROOT (SINV (VP (MD May) (VP (VB be) (SBAR (SBAR (S (NP (PRP I)) (VP (VBP 've) (VP (VBN missed) (NP (NN somthing)))))) (CC but) (SBAR (X (TO to)) (S (NP (NP (PRP$ my)) (VP (VBG understanding) (S (NP (PRP it)) (ADJP (JJ =))))) (VP (VBZ does) (NP (NP (DT a) (NN lot)) (PP (IN of) (NP (JJ unnecessary) (NNS calculations))) (SBAR (WHNP (WDT that)) (S (VP (VBZ takes) (NP (QP (RB about) (CD 3)) (NNS seconds)) (PP (TO to) (NP (JJ =) (NN layout))))))))))))) (NP (NP (CD 10) (NNS controls)) (PP (IN on) (NP (NN pocketpc))))))

root(ROOT-0, be-2)
aux(be-2, May-1)
nsubj(missed-5, I-3)
aux(missed-5, 've-4)
dep(be-2, missed-5)
dobj(missed-5, somthing-6)
dep(does-13, to-8)
nsubj(does-13, my-9)
vmod(my-9, understanding-10)
nsubj(=-12, it-11)
xcomp(understanding-10, =-12)
dep(be-2, does-13)
conj_but(missed-5, does-13)
det(lot-15, a-14)
dobj(does-13, lot-15)
amod(calculations-18, unnecessary-17)
prep_of(lot-15, calculations-18)
nsubj(takes-20, that-19)
rcmod(lot-15, takes-20)
quantmod(3-22, about-21)
num(seconds-23, 3-22)
dobj(takes-20, seconds-23)
amod(layout-26, =-25)
prep_to(takes-20, layout-26)
num(controls-28, 10-27)
nsubj(be-2, controls-28)
prep_on(controls-28, pocketpc-30)

