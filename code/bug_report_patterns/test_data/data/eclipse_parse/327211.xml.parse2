Build/VB Identifier/NNP :/: Virgo/NNP 2.1.0/CD M5/NN 

(ROOT (SINV (VP (VB Build) (NP (NP (NNP Identifier)) (: :) (NP (NNP Virgo)))) (NP (CD 2.1.0) (NN M5))))

root(ROOT-0, Build-1)
dobj(Build-1, Identifier-2)
dep(Identifier-2, Virgo-4)
num(M5-6, 2.1.0-5)
nsubj(Build-1, M5-6)

The/DT bundles/NNS list/NN on/IN the/DT artifact/NN deploy/VB page/NN uses/VBZ the/DT same/JJ font/NN for/IN the/DT bundle/NN and/CC the/DT version/NN ./. 

(ROOT (S (NP (NP (DT The) (NNS bundles) (NN list)) (PP (IN on) (NP (DT the) (NN artifact) (S (VP (VB deploy) (NP (NN page))))))) (VP (VBZ uses) (NP (NP (DT the) (JJ same) (NN font)) (PP (IN for) (NP (NP (DT the) (NN bundle)) (CC and) (NP (DT the) (NN version)))))) (. .)))

root(ROOT-0, uses-9)
det(list-3, The-1)
nn(list-3, bundles-2)
nsubj(uses-9, list-3)
det(artifact-6, the-5)
prep_on(list-3, artifact-6)
dep(artifact-6, deploy-7)
dobj(deploy-7, page-8)
det(font-12, the-10)
amod(font-12, same-11)
dobj(uses-9, font-12)
det(bundle-15, the-14)
prep_for(font-12, bundle-15)
det(version-18, the-17)
prep_for(font-12, version-18)
conj_and(bundle-15, version-18)

This/DT is/VBZ n't/RB a/DT problem/NN for/IN bundles/NNS that/WDT are/VBP named/VBN purely/RB textually/RB ,/, but/CC if/IN the/DT symbolic/JJ name/NN has/VBZ a/DT number/NN in/IN it/PRP as/RB well/RB (/-LRB- e.g./FW JUnit4/NN )/-RRB- then/RB the/DT numbers/NNS can/MD run/VB into/IN one/CD another/DT ./. 

(ROOT (S (S (NP (DT This)) (VP (VBZ is) (RB n't) (NP (NP (DT a) (NN problem)) (PP (IN for) (NP (NP (NNS bundles)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBN named) (S (ADJP (RB purely) (RB textually)))))))))))) (, ,) (CC but) (S (SBAR (IN if) (S (NP (DT the) (JJ symbolic) (NN name)) (VP (VBZ has) (NP (NP (DT a) (NN number)) (PP (IN in) (NP (PRP it)))) (ADVP (ADVP (RB as) (RB well)) (PRN (-LRB- -LRB-) (NP (NP (FW e.g.)) (NP (NN JUnit4))) (-RRB- -RRB-)))))) (ADVP (RB then)) (NP (DT the) (NNS numbers)) (VP (MD can) (VP (VB run) (PP (IN into) (NP (CD one) (DT another)))))) (. .)))

root(ROOT-0, problem-5)
nsubj(problem-5, This-1)
cop(problem-5, is-2)
neg(problem-5, n't-3)
det(problem-5, a-4)
prep_for(problem-5, bundles-7)
nsubjpass(named-10, that-8)
auxpass(named-10, are-9)
rcmod(bundles-7, named-10)
advmod(textually-12, purely-11)
dep(named-10, textually-12)
mark(has-19, if-15)
det(name-18, the-16)
amod(name-18, symbolic-17)
nsubj(has-19, name-18)
advcl(run-34, has-19)
det(number-21, a-20)
dobj(has-19, number-21)
prep_in(number-21, it-23)
advmod(well-25, as-24)
advmod(has-19, well-25)
dep(well-25, e.g.-27)
dep(e.g.-27, JUnit4-28)
advmod(run-34, then-30)
det(numbers-32, the-31)
nsubj(run-34, numbers-32)
aux(run-34, can-33)
conj_but(problem-5, run-34)
prep_into(run-34, one-36)
dep(one-36, another-37)

Representing/VBG the/DT version/NN number/NN in/IN a/DT different/JJ font/color/style/NN would/MD help/VB split/VB the/DT two/CD apart/RB ./. 

(ROOT (S (S (VP (VBG Representing) (NP (DT the) (NN version) (NN number)) (PP (IN in) (NP (DT a) (JJ different) (NN font/color/style))))) (VP (MD would) (VP (VB help) (VP (VB split) (NP (DT the) (CD two)) (ADVP (RB apart))))) (. .)))

root(ROOT-0, help-10)
csubj(help-10, Representing-1)
det(number-4, the-2)
nn(number-4, version-3)
dobj(Representing-1, number-4)
det(font/color/style-8, a-6)
amod(font/color/style-8, different-7)
prep_in(Representing-1, font/color/style-8)
aux(help-10, would-9)
xcomp(help-10, split-11)
det(two-13, the-12)
dobj(split-11, two-13)
advmod(split-11, apart-14)

For/IN example/NN ,/, one/CD could/MD put/VB the/DT version/NN number/NN italicised/VBN in/IN a/DT dark/JJ green/JJ colour/NN to/TO help/VB it/PRP stand/VB out/RP ./. 

(ROOT (S (PP (IN For) (NP (NN example))) (, ,) (NP (CD one)) (VP (MD could) (VP (VB put) (NP (NP (DT the) (NN version) (NN number)) (VP (VBN italicised) (PP (IN in) (NP (DT a) (JJ dark) (JJ green) (NN colour))) (S (VP (TO to) (VP (VB help) (S (NP (PRP it)) (VP (VB stand) (PRT (RP out))))))))))) (. .)))

root(ROOT-0, put-6)
prep_for(put-6, example-2)
nsubj(put-6, one-4)
aux(put-6, could-5)
det(number-9, the-7)
nn(number-9, version-8)
dobj(put-6, number-9)
vmod(number-9, italicised-10)
det(colour-15, a-12)
amod(colour-15, dark-13)
amod(colour-15, green-14)
prep_in(italicised-10, colour-15)
aux(help-17, to-16)
xcomp(italicised-10, help-17)
nsubj(stand-19, it-18)
ccomp(help-17, stand-19)
prt(stand-19, out-20)

Reproducible/JJ :/: Always/RB 

(ROOT (NP (NP (JJ Reproducible)) (: :) (NP (RB Always))))

root(ROOT-0, Reproducible-1)
dep(Reproducible-1, Always-3)

