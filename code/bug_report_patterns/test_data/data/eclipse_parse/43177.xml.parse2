I/PRP see/VBP this/DT behaviour/NN in/IN Eclipse-GTK/NNP I20030916/NNP ./. 

(ROOT (S (NP (PRP I)) (VP (VBP see) (NP (NP (DT this) (NN behaviour)) (PP (IN in) (NP (NNP Eclipse-GTK) (NNP I20030916))))) (. .)))

root(ROOT-0, see-2)
nsubj(see-2, I-1)
det(behaviour-4, this-3)
dobj(see-2, behaviour-4)
nn(I20030916-7, Eclipse-GTK-6)
prep_in(behaviour-4, I20030916-7)

The/DT relevent/JJ lines/NNS of/IN code/NN in/IN setText/NN (/-LRB- String/NNP )/-RRB- are/VBP :/: 

(ROOT (S (NP (NP (NP (DT The) (JJ relevent) (NNS lines)) (PP (IN of) (NP (NP (NN code)) (PP (IN in) (NP (NN setText)))))) (PRN (-LRB- -LRB-) (NP (NNP String)) (-RRB- -RRB-))) (VP (VBP are)) (: :)))

root(ROOT-0, are-11)
det(lines-3, The-1)
amod(lines-3, relevent-2)
nsubj(are-11, lines-3)
prep_of(lines-3, code-5)
prep_in(code-5, setText-7)
appos(lines-3, String-9)

OS.gtk/NNP _/CD editable_delete_text/NN (/-LRB- handle/VB ,/, 0/CD ,/, -1/CD )/-RRB- ;/: int/NN [/-LRB- ]/-RRB- position/NN =/JJ new/JJ int/NN [/-LRB- 1/CD ]/-RRB- ;/: OS.gtk/NNP _/CD editable_insert_text/NN (/-LRB- handle/VB ,/, buffer/NN ,/, buffer.length/NN ,/, position/NN )/-RRB- ;/: 

(ROOT (NP (NP (NP (NP (NP (NNP OS.gtk) (CD _) (NN editable_delete_text)) (PRN (-LRB- -LRB-) (S (VP (VP (VB handle)) (, ,) (NP (NP (CD 0)) (, ,) (ADJP (CD -1))))) (-RRB- -RRB-))) (: ;) (NP (NP (NN int)) (PP (-LRB- -LSB-) (NP (-RRB- -RSB-) (NN position))))) (NP (NP (JJ =) (JJ new) (NN int)) (PP (-LRB- -LSB-) (NP (NP (QP (CD 1) (-RRB- -RSB-))) (: ;) (NP (NP (NNP OS.gtk) (CD _) (NN editable_insert_text)) (PRN (-LRB- -LRB-) (S (VP (VP (VB handle)) (, ,) (NP (NP (NP (NN buffer)) (, ,) (NP (NN buffer.length)) (, ,)) (NX (NN position))))) (-RRB- -RRB-))))))) (: ;)))

root(ROOT-0, editable_delete_text-3)
nn(editable_delete_text-3, OS.gtk-1)
num(editable_delete_text-3, _-2)
dep(editable_delete_text-3, handle-5)
dobj(handle-5, 0-7)
amod(0-7, -1-9)
dep(editable_delete_text-3, int-12)
punct(position-15, -LSB--13)
punct(position-15, -RSB--14)
prep(int-12, position-15)
amod(int-18, =-16)
amod(int-18, new-17)
dep(editable_delete_text-3, int-18)
punct(1-20, -LSB--19)
prep(int-18, 1-20)
punct(1-20, -RSB--21)
nn(editable_insert_text-25, OS.gtk-23)
num(editable_insert_text-25, _-24)
dep(1-20, editable_insert_text-25)
dep(editable_insert_text-25, handle-27)
dep(position-33, buffer-29)
appos(buffer-29, buffer.length-31)
dobj(handle-27, position-33)

The/DT delete/VBP text/NN method/NN triggers/VBZ a/DT ModifyEvent/NNP ./. 

(ROOT (S (NP (DT The)) (VP (VBP delete) (SBAR (S (NP (NN text) (NN method)) (VP (VBZ triggers) (NP (DT a) (NNP ModifyEvent)))))) (. .)))

root(ROOT-0, delete-2)
nsubj(delete-2, The-1)
nn(method-4, text-3)
nsubj(triggers-5, method-4)
ccomp(delete-2, triggers-5)
det(ModifyEvent-7, a-6)
dobj(triggers-5, ModifyEvent-7)

However/RB ,/, if/IN you/PRP are/VBP listening/VBG for/IN modify/VB events/NNS ,/, then/RB the/DT actual/JJ new/JJ text/NN wo/MD n't/RB be/VB set/VBN yet/RB ./. 

(ROOT (S (ADVP (RB However)) (, ,) (SBAR (IN if) (S (NP (PRP you)) (VP (VBP are) (VP (VBG listening) (PP (IN for) (S (VP (VB modify) (NP (NNS events))))))))) (, ,) (NP (RB then) (DT the) (JJ actual) (JJ new) (NN text)) (VP (MD wo) (RB n't) (VP (VB be) (VP (VBN set) (ADVP (RB yet))))) (. .)))

root(ROOT-0, set-19)
advmod(set-19, However-1)
mark(listening-6, if-3)
nsubj(listening-6, you-4)
aux(listening-6, are-5)
advcl(set-19, listening-6)
prepc_for(listening-6, modify-8)
dobj(modify-8, events-9)
advmod(text-15, then-11)
det(text-15, the-12)
amod(text-15, actual-13)
amod(text-15, new-14)
nsubjpass(set-19, text-15)
aux(set-19, wo-16)
neg(set-19, n't-17)
auxpass(set-19, be-18)
advmod(set-19, yet-20)

For/IN an/DT example/NN ,/, see/VB Bug/NN 43168/CD ./. 

(ROOT (S (PP (IN For) (NP (DT an) (NN example))) (, ,) (VP (VB see) (NP (NN Bug) (CD 43168))) (. .)))

root(ROOT-0, see-5)
det(example-3, an-2)
prep_for(see-5, example-3)
dobj(see-5, Bug-6)
num(Bug-6, 43168-7)

This/DT is/VBZ different/JJ than/IN I/PRP 'd/MD expect/VB and/CC different/JJ than/IN how/WRB Windows/NNP XP/NN SWT/NN works/VBZ ./. 

(ROOT (S (NP (DT This)) (VP (VBZ is) (ADJP (ADJP (JJ different) (SBAR (IN than) (S (NP (PRP I)) (VP (MD 'd) (VP (VB expect)))))) (CC and) (ADJP (JJ different) (PP (IN than) (SBAR (WHADVP (WRB how)) (S (NP (NNP Windows) (NN XP) (NN SWT)) (VP (VBZ works)))))))) (. .)))

root(ROOT-0, different-3)
nsubj(different-3, This-1)
nsubj(different-9, This-1)
cop(different-3, is-2)
mark(expect-7, than-4)
nsubj(expect-7, I-5)
aux(expect-7, 'd-6)
ccomp(different-3, expect-7)
conj_and(different-3, different-9)
advmod(works-15, how-11)
nn(SWT-14, Windows-12)
nn(SWT-14, XP-13)
nsubj(works-15, SWT-14)
prepc_than(different-9, works-15)

On/IN win32/NN ,/, the/DT modify/VB event/NN is/VBZ only/RB sent/VBN after/IN the/DT internal/JJ state/NN has/VBZ been/VBN updated/VBN fully/RB ./. 

(ROOT (S (PP (IN On) (NP (NN win32))) (, ,) (NP (DT the) (S (S (VP (VB modify) (NP (NN event)))) (VP (VBZ is) (ADVP (RB only)) (VP (VBN sent) (PP (IN after) (NP (DT the) (JJ internal) (NN state))))))) (VP (VBZ has) (VP (VBN been) (VP (VBN updated) (ADVP (RB fully))))) (. .)))

root(ROOT-0, updated-16)
prep_on(updated-16, win32-2)
nsubjpass(updated-16, the-4)
csubjpass(sent-9, modify-5)
dobj(modify-5, event-6)
auxpass(sent-9, is-7)
advmod(sent-9, only-8)
dep(the-4, sent-9)
det(state-13, the-11)
amod(state-13, internal-12)
prep_after(sent-9, state-13)
aux(updated-16, has-14)
auxpass(updated-16, been-15)
advmod(updated-16, fully-17)

Is/VBZ this/DT a/DT limitation/NN of/IN GTK/NNP ,/, or/CC an/DT implementation/NN problem/NN with/IN SWT/NNP ?/. 

(ROOT (SQ (VBZ Is) (NP (DT this)) (NP (NP (DT a) (NN limitation)) (PP (IN of) (NP (NP (NNP GTK)) (, ,) (CC or) (NP (NP (DT an) (NN implementation) (NN problem)) (PP (IN with) (NP (NNP SWT))))))) (. ?)))

root(ROOT-0, limitation-4)
cop(limitation-4, Is-1)
nsubj(limitation-4, this-2)
det(limitation-4, a-3)
prep_of(limitation-4, GTK-6)
det(problem-11, an-9)
nn(problem-11, implementation-10)
prep_of(limitation-4, problem-11)
conj_or(GTK-6, problem-11)
prep_with(problem-11, SWT-13)

