Created/VBN attachment/NN 185868/CD source/NN file/NN that/WDT reproduces/VBZ the/DT error/NN 

(ROOT (VP (VBN Created) (NP (NP (NN attachment) (CD 185868) (NN source) (NN file)) (SBAR (WHNP (WDT that)) (S (VP (VBZ reproduces) (NP (DT the) (NN error))))))))

root(ROOT-0, Created-1)
nn(file-5, attachment-2)
num(file-5, 185868-3)
nn(file-5, source-4)
dobj(Created-1, file-5)
nsubj(reproduces-7, that-6)
rcmod(file-5, reproduces-7)
det(error-9, the-8)
dobj(reproduces-7, error-9)

For/IN the/DT code/NN in/IN the/DT attached/VBN file/NN ,/, the/DT parser/NN gives/VBZ an/DT error/NN at/IN the/DT call/NN to/TO f/FW (/-LRB- */SYM iter/NN )/-RRB- in/IN main/JJ (/-LRB- )/-RRB- :/: 

(ROOT (S (PP (IN For) (NP (NP (DT the) (NN code)) (PP (IN in) (NP (DT the) (VBN attached) (NN file))))) (, ,) (NP (DT the) (NN parser)) (VP (VBZ gives) (NP (NP (DT an) (NN error)) (PP (IN at) (NP (DT the) (NN call)))) (PP (TO to) (NP (NP (NP (FW f)) (PRN (-LRB- -LRB-) (FRAG (X (SYM *)) (NP (NN iter))) (-RRB- -RRB-))) (PP (IN in) (NP (JJ main) (-LRB- -LRB-))))) (-RRB- -RRB-)) (: :)))

root(ROOT-0, gives-11)
det(code-3, the-2)
prep_for(gives-11, code-3)
det(file-7, the-5)
amod(file-7, attached-6)
prep_in(code-3, file-7)
det(parser-10, the-9)
nsubj(gives-11, parser-10)
det(error-13, an-12)
dobj(gives-11, error-13)
det(call-16, the-15)
prep_at(error-13, call-16)
prep_to(gives-11, f-18)
dep(iter-21, *-20)
dep(f-18, iter-21)
prep_in(f-18, main-24)

Invalid/JJ arguments/NNS Candidates/NNS are/VBP :/: void/NN f/FW (/-LRB- int/NN )/-RRB- 

(ROOT (NP (NP-TMP (NP (JJ Invalid) (NNS arguments) (NNS Candidates)) (VP (VBP are))) (: :) (NP (NP (NN void)) (NP (NP (FW f)) (PRN (-LRB- -LRB-) (NP (NN int)) (-RRB- -RRB-))))))

root(ROOT-0, Candidates-3)
amod(Candidates-3, Invalid-1)
nn(Candidates-3, arguments-2)
dep(Candidates-3, are-4)
dep(Candidates-3, void-6)
dep(void-6, f-7)
appos(f-7, int-9)

It/PRP seems/VBZ the/DT parser/NN is/VBZ unable/JJ to/TO deduce/VB the/DT type/NN of/IN */NN iter/NN ,/, even/RB though/IN there/EX is/VBZ a/DT very/RB plain/JJ 

(ROOT (S (NP (PRP It)) (VP (VBZ seems) (SBAR (S (NP (DT the) (NN parser)) (VP (VBZ is) (ADJP (JJ unable) (S (VP (TO to) (VP (VB deduce) (NP (NP (DT the) (NN type)) (PP (IN of) (NP (NN *) (NN iter)))))))) (, ,) (SBAR (RB even) (IN though) (S (NP (EX there)) (VP (VBZ is) (ADJP (DT a) (RB very) (JJ plain)))))))))))

root(ROOT-0, seems-2)
nsubj(seems-2, It-1)
det(parser-4, the-3)
nsubj(unable-6, parser-4)
cop(unable-6, is-5)
ccomp(seems-2, unable-6)
aux(deduce-8, to-7)
xcomp(unable-6, deduce-8)
det(type-10, the-9)
dobj(deduce-8, type-10)
nn(iter-13, *-12)
prep_of(type-10, iter-13)
advmod(is-18, even-15)
mark(is-18, though-16)
expl(is-18, there-17)
advcl(unable-6, is-18)
det(plain-21, a-19)
advmod(plain-21, very-20)
acomp(is-18, plain-21)

int/NN operator/NN */NN (/-LRB- )/-RRB- const/IN 

(ROOT (NP (NP (NN int) (NN operator) (NN *)) (PRN (-LRB- -LRB-) (UCP (ADVP (-RRB- -RRB-)) (PP (IN const))))))

root(ROOT-0, *-3)
nn(*-3, int-1)
nn(*-3, operator-2)
prep(-RRB--5, const-6)

in/IN the/DT base/NN class/NN of/IN iter/NN 's/POS type/NN ./. 

(ROOT (FRAG (PP (IN in) (NP (NP (DT the) (NN base) (NN class)) (PP (IN of) (NP (NP (NN iter) (POS 's)) (NN type))))) (. .)))

root(ROOT-0, in-1)
det(class-4, the-2)
nn(class-4, base-3)
pobj(in-1, class-4)
poss(type-8, iter-6)
prep_of(class-4, type-8)

What/WDT seems/VBZ to/TO be/VB confusing/VBG the/DT parser/NN is/VBZ that/IN the/DT base/NN class/NN of/IN iter/NN 's/POS type/NN has/VBZ an/DT (/-LRB- unused/JJ )/-RRB- template/NN parameter/NN which/WDT is/VBZ instantiated/VBN with/IN a/DT rather/RB complex/JJ type/NN (/-LRB- called/VBN "/`` messed_up_type/NN "/'' in/IN the/DT code/NN )/-RRB- ./. 

(ROOT (S (SBAR (WHNP (WDT What)) (S (VP (VBZ seems) (S (VP (TO to) (VP (VB be) (ADJP (VBG confusing)))))))) (NP (DT the) (NN parser)) (VP (VBZ is) (SBAR (IN that) (S (NP (NP (DT the) (NN base) (NN class)) (PP (IN of) (NP (NP (NN iter) (POS 's)) (NN type)))) (VP (VBZ has) (NP (NP (DT an) (PRN (-LRB- -LRB-) (NP (JJ unused)) (-RRB- -RRB-)) (NN template) (NN parameter)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN instantiated) (PP (IN with) (NP (NP (DT a) (ADJP (RB rather) (JJ complex)) (NN type)) (PRN (-LRB- -LRB-) (VP (VBN called) (`` ``) (NP (NN messed_up_type)) ('' '') (PP (IN in) (NP (DT the) (NN code)))) (-RRB- -RRB-))))))))))))) (. .)))

root(ROOT-0, is-8)
nsubj(seems-2, What-1)
advcl(is-8, seems-2)
aux(confusing-5, to-3)
cop(confusing-5, be-4)
xcomp(seems-2, confusing-5)
det(parser-7, the-6)
nsubj(is-8, parser-7)
mark(has-17, that-9)
det(class-12, the-10)
nn(class-12, base-11)
nsubj(has-17, class-12)
poss(type-16, iter-14)
prep_of(class-12, type-16)
ccomp(is-8, has-17)
det(parameter-23, an-18)
dep(parameter-23, unused-20)
nn(parameter-23, template-22)
dobj(has-17, parameter-23)
nsubjpass(instantiated-26, which-24)
auxpass(instantiated-26, is-25)
rcmod(parameter-23, instantiated-26)
det(type-31, a-28)
advmod(complex-30, rather-29)
amod(type-31, complex-30)
prep_with(instantiated-26, type-31)
dep(type-31, called-33)
dobj(called-33, messed_up_type-35)
det(code-39, the-38)
prep_in(called-33, code-39)

The/DT code/NN in/IN this/DT example/NN was/VBD reduced/VBN from/IN code/NN in/IN boost/NN and/CC libstdc/NN +/CC +/CC ./. 

(ROOT (S (NP (NP (DT The) (NN code)) (PP (IN in) (NP (DT this) (NN example)))) (VP (VBD was) (VP (VBN reduced) (PP (IN from) (NP (NP (NN code)) (PP (IN in) (NP (NP (NN boost) (CC and) (NN libstdc)) (SBAR (S (NP (CC +)))))))) (S (NP (CC +))))) (. .)))

root(ROOT-0, reduced-7)
det(code-2, The-1)
nsubjpass(reduced-7, code-2)
det(example-5, this-4)
prep_in(code-2, example-5)
auxpass(reduced-7, was-6)
prep_from(reduced-7, code-9)
prep_in(code-9, boost-11)
prep_in(code-9, libstdc-13)
conj_and(boost-11, libstdc-13)
rcmod(boost-11, +-14)
xcomp(reduced-7, +-15)

