Win32/NN 0412/CD Integration/NN 

(ROOT (NP (NP (NN Win32)) (NP (CD 0412) (NN Integration))))

root(ROOT-0, Win32-1)
num(Integration-3, 0412-2)
dep(Win32-1, Integration-3)

I/PRP am/VBP not/RB sure/JJ how/WRB to/TO describe/VB the/DT various/JJ problems/NNS I/PRP am/VBP now/RB seeing/VBG since/IN I/PRP have/VBP seen/VBN a/DT variety/NN of/IN problems/NNS ./. 

(ROOT (S (NP (PRP I)) (VP (VBP am) (RB not) (ADJP (JJ sure)) (SBAR (WHADVP (WRB how)) (S (VP (TO to) (VP (VB describe) (NP (NP (DT the) (JJ various) (NNS problems)) (SBAR (S (NP (PRP I)) (VP (VBP am) (ADVP (RB now)) (VP (VBG seeing) (SBAR (IN since) (S (NP (PRP I)) (VP (VBP have) (VP (VBN seen) (NP (NP (DT a) (NN variety)) (PP (IN of) (NP (NNS problems)))))))))))))))))) (. .)))

root(ROOT-0, sure-4)
nsubj(sure-4, I-1)
cop(sure-4, am-2)
neg(sure-4, not-3)
advmod(describe-7, how-5)
aux(describe-7, to-6)
ccomp(sure-4, describe-7)
det(problems-10, the-8)
amod(problems-10, various-9)
dobj(describe-7, problems-10)
nsubj(seeing-14, I-11)
aux(seeing-14, am-12)
advmod(seeing-14, now-13)
rcmod(problems-10, seeing-14)
mark(seen-18, since-15)
nsubj(seen-18, I-16)
aux(seen-18, have-17)
advcl(seeing-14, seen-18)
det(variety-20, a-19)
dobj(seen-18, variety-20)
prep_of(variety-20, problems-22)

However/RB ,/, they/PRP all/DT seem/VBP to/TO have/VB a/DT common/JJ theme/NN ./. 

(ROOT (S (ADVP (RB However)) (, ,) (NP (PRP they)) (ADVP (DT all)) (VP (VBP seem) (S (VP (TO to) (VP (VB have) (NP (DT a) (JJ common) (NN theme)))))) (. .)))

root(ROOT-0, seem-5)
advmod(seem-5, However-1)
nsubj(seem-5, they-3)
advmod(seem-5, all-4)
aux(have-7, to-6)
xcomp(seem-5, have-7)
det(theme-10, a-8)
amod(theme-10, common-9)
dobj(have-7, theme-10)

The/DT underlying/VBG Java/NNP Model/NNP for/IN a/DT given/VBN class/NN is/VBZ not/RB being/VBG updated/VBN properly/RB as/IN new/JJ methods/NNS are/VBP added/VBN or/CC methods/NNS are/VBP changed/VBN ./. 

(ROOT (S (S (NP (NP (DT The) (VBG underlying)) (SBAR (S (NP (NP (NNP Java) (NNP Model)) (PP (IN for) (NP (DT a) (VBN given) (NN class)))) (VP (VBZ is) (RB not) (VP (VBG being) (VP (VBN updated) (ADVP (RB properly)) (PP (IN as) (NP (JJ new) (NNS methods))))))))) (VP (VBP are) (VP (VBN added)))) (CC or) (S (NP (NNS methods)) (VP (VBP are) (VP (VBN changed)))) (. .)))

root(ROOT-0, added-18)
nsubjpass(added-18, The-1)
amod(The-1, underlying-2)
nn(Model-4, Java-3)
nsubjpass(updated-12, Model-4)
det(class-8, a-6)
amod(class-8, given-7)
prep_for(Model-4, class-8)
aux(updated-12, is-9)
neg(updated-12, not-10)
auxpass(updated-12, being-11)
rcmod(The-1, updated-12)
advmod(updated-12, properly-13)
amod(methods-16, new-15)
prep_as(updated-12, methods-16)
auxpass(added-18, are-17)
nsubjpass(changed-22, methods-20)
auxpass(changed-22, are-21)
conj_or(added-18, changed-22)

The/DT two/CD examples/NNS that/IN I/PRP am/VBP consistently/RB running/VBG across/IN now/RB are/VBP :/: 

(ROOT (S (NP (NP (DT The) (CD two) (NNS examples)) (SBAR (IN that) (S (NP (PRP I)) (VP (VBP am) (ADVP (RB consistently)) (VP (VBG running) (PP (IN across) (NP (RB now)))))))) (VP (VBP are)) (: :)))

root(ROOT-0, are-11)
det(examples-3, The-1)
num(examples-3, two-2)
nsubj(are-11, examples-3)
mark(running-8, that-4)
nsubj(running-8, I-5)
aux(running-8, am-6)
advmod(running-8, consistently-7)
dep(examples-3, running-8)
prep(running-8, across-9)
pobj(across-9, now-10)

1/CD Search/VB for/IN a/DT given/VBN method/NN ,/, and/CC double/JJ click/VBP in/IN the/DT Task/NNP window/NN to/TO bring/VB up/RP 

(ROOT (FRAG (NP (CD 1)) (VP (VP (VB Search) (PP (IN for) (NP (DT a) (VBN given) (NN method)))) (, ,) (CC and) (VP (ADVP (JJ double)) (VBP click) (PP (IN in) (NP (DT the) (NNP Task) (NN window))) (S (VP (TO to) (VP (VB bring) (PRT (RP up)))))))))

root(ROOT-0, 1-1)
dep(1-1, Search-2)
det(method-6, a-4)
amod(method-6, given-5)
prep_for(Search-2, method-6)
advmod(click-10, double-9)
dep(1-1, click-10)
conj_and(Search-2, click-10)
det(window-14, the-12)
nn(window-14, Task-13)
prep_in(click-10, window-14)
aux(bring-16, to-15)
xcomp(click-10, bring-16)
prt(bring-16, up-17)

the/DT java/NN source/NN ./. 

(ROOT (NP (NP (DT the) (NN java)) (NP (NN source)) (. .)))

root(ROOT-0, java-2)
det(java-2, the-1)
dep(java-2, source-3)

Add/VB a/DT new/JJ method/NN to/TO the/DT file/NN ./. 

(ROOT (S (VP (VB Add) (NP (DT a) (JJ new) (NN method)) (PP (TO to) (NP (DT the) (NN file)))) (. .)))

root(ROOT-0, Add-1)
det(method-4, a-2)
amod(method-4, new-3)
dobj(Add-1, method-4)
det(file-7, the-6)
prep_to(Add-1, file-7)

I/PRP noticed/VBD that/IN the/DT Outline/NN 

(ROOT (S (NP (PRP I)) (VP (VBD noticed) (ADVP (IN that) (NP (DT the) (NN Outline))))))

root(ROOT-0, noticed-2)
nsubj(noticed-2, I-1)
advmod(noticed-2, that-3)
det(Outline-5, the-4)
pobj(that-3, Outline-5)

view/NN nor/CC the/DT Type/NN Hierarchy/NN were/VBD updated/VBN with/IN the/DT new/JJ method/NN ./. 

(ROOT (S (NP (NP (NN view)) (CC nor) (NP (DT the) (NN Type) (NN Hierarchy))) (VP (VBD were) (VP (VBN updated) (PP (IN with) (NP (DT the) (JJ new) (NN method))))) (. .)))

root(ROOT-0, updated-7)
nsubjpass(updated-7, view-1)
det(Hierarchy-5, the-3)
nn(Hierarchy-5, Type-4)
conj_nor(view-1, Hierarchy-5)
nsubjpass(updated-7, Hierarchy-5)
auxpass(updated-7, were-6)
det(method-11, the-9)
amod(method-11, new-10)
prep_with(updated-7, method-11)

The/DT subclasses/NNS 

(ROOT (FRAG (NP (DT The) (NNS subclasses))))

root(ROOT-0, subclasses-2)
det(subclasses-2, The-1)

which/WDT did/VBD not/RB implement/VB the/DT abstract/JJ method/NN were/VBD not/RB flagged/VBN with/IN errors/NNS ./. 

(ROOT (S (SBAR (WHNP (WDT which)) (S (VP (VBD did) (RB not) (VP (VB implement) (NP (DT the) (JJ abstract) (NN method)))))) (VP (VBD were) (RB not) (VP (VBN flagged) (PP (IN with) (NP (NNS errors))))) (. .)))

root(ROOT-0, flagged-10)
nsubj(implement-4, which-1)
aux(implement-4, did-2)
neg(implement-4, not-3)
csubjpass(flagged-10, implement-4)
det(method-7, the-5)
amod(method-7, abstract-6)
dobj(implement-4, method-7)
auxpass(flagged-10, were-8)
neg(flagged-10, not-9)
prep_with(flagged-10, errors-12)

2/CD Modified/VBN a/DT method/NN signature/NN by/IN adding/VBG a/DT new/JJ parameter/NN ./. 

(ROOT (NP (NP (CD 2)) (VP (VBN Modified) (NP (DT a) (NN method) (NN signature)) (PP (IN by) (S (VP (VBG adding) (NP (DT a) (JJ new) (NN parameter)))))) (. .)))

root(ROOT-0, 2-1)
vmod(2-1, Modified-2)
det(signature-5, a-3)
nn(signature-5, method-4)
dobj(Modified-2, signature-5)
agent(Modified-2, adding-7)
det(parameter-10, a-8)
amod(parameter-10, new-9)
dobj(adding-7, parameter-10)

I/PRP received/VBD two/CD 

(ROOT (S (NP (PRP I)) (VP (VBD received) (NP (CD two)))))

root(ROOT-0, received-2)
nsubj(received-2, I-1)
dobj(received-2, two-3)

errors/NNS in/IN my/PRP$ task/NN where/WRB classes/NNS were/VBD using/VBG the/DT API/NNP ./. 

(ROOT (NP (NP (NNS errors)) (PP (IN in) (NP (NP (PRP$ my) (NN task)) (SBAR (WHADVP (WRB where)) (S (NP (NNS classes)) (VP (VBD were) (VP (VBG using) (NP (DT the) (NNP API)))))))) (. .)))

root(ROOT-0, errors-1)
poss(task-4, my-3)
prep_in(errors-1, task-4)
advmod(using-8, where-5)
nsubj(using-8, classes-6)
aux(using-8, were-7)
rcmod(task-4, using-8)
det(API-10, the-9)
dobj(using-8, API-10)

The/DT first/JJ one/NN was/VBD changed/VBN 

(ROOT (S (NP (DT The) (JJ first) (NN one)) (VP (VBD was) (VP (VBN changed)))))

root(ROOT-0, changed-5)
det(one-3, The-1)
amod(one-3, first-2)
nsubjpass(changed-5, one-3)
auxpass(changed-5, was-4)

without/IN a/DT problem/NN ./. 

(ROOT (FRAG (PP (IN without) (NP (DT a) (NN problem))) (. .)))

root(ROOT-0, without-1)
det(problem-3, a-2)
pobj(without-1, problem-3)

However/RB the/DT second/JJ one/CD ,/, when/WRB I/PRP try/VBP to/TO use/VB Context/NNP Assist/NNP ,/, 

(ROOT (FRAG (ADVP (RB However)) (NP (NP (DT the) (JJ second) (CD one)) (, ,) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (VBP try) (S (VP (TO to) (VP (VB use) (NP (NNP Context) (NNP Assist)))))) (, ,))))))

root(ROOT-0, one-4)
dep(one-4, However-1)
det(one-4, the-2)
amod(one-4, second-3)
advmod(try-8, when-6)
nsubj(try-8, I-7)
rcmod(one-4, try-8)
aux(use-10, to-9)
xcomp(try-8, use-10)
nn(Assist-12, Context-11)
dobj(use-10, Assist-12)

the/DT method/NN is/VBZ showing/VBG 2/CD parameters/NNS instead/RB of/IN 3/CD ,/, and/CC the/DT new/JJ API/NNP added/VBD above/IN 

(ROOT (S (S (NP (DT the) (NN method)) (VP (VBZ is) (VP (VBG showing) (NP (NP (CD 2) (NNS parameters)) (PP (RB instead) (IN of) (NP (CD 3))))))) (, ,) (CC and) (S (NP (DT the) (JJ new) (NNP API)) (VP (VBD added) (PP (IN above))))))

root(ROOT-0, showing-4)
det(method-2, the-1)
nsubj(showing-4, method-2)
aux(showing-4, is-3)
num(parameters-6, 2-5)
dobj(showing-4, parameters-6)
prep_instead_of(parameters-6, 3-9)
det(API-14, the-12)
amod(API-14, new-13)
nsubj(added-15, API-14)
conj_and(showing-4, added-15)
prep(added-15, above-16)

does/VBZ not/RB appear/VB as/IN an/DT option/NN ./. 

(ROOT (S (VP (VBZ does) (RB not) (VP (VB appear) (PP (IN as) (NP (DT an) (NN option))))) (. .)))

root(ROOT-0, appear-3)
aux(appear-3, does-1)
neg(appear-3, not-2)
det(option-6, an-5)
prep_as(appear-3, option-6)

After/IN closing/VBG the/DT window/NN with/IN the/DT added/VBN 

(ROOT (PP (IN After) (S (VP (VBG closing) (NP (NP (DT the) (NN window)) (PP (IN with) (NP (DT the) (VBN added))))))))

root(ROOT-0, After-1)
pcomp(After-1, closing-2)
det(window-4, the-3)
dobj(closing-2, window-4)
prep_with(window-4, the-6)
amod(the-6, added-7)

parameter/NN ,/, the/DT Context/NNP Assist/NNP is/VBZ showing/VBG 3/CD parameters/NNS but/CC the/DT new/JJ method/NN is/VBZ 

(ROOT (S (NP (NN parameter)) (, ,) (NP (NP (DT the) (NNP Context) (NNP Assist)) (SBAR (S (VP (VBZ is) (VP (VBG showing) (NP (NP (CD 3) (NNS parameters)) (PP (CC but) (NP (DT the) (JJ new) (NN method))))))))) (VP (VBZ is))))

root(ROOT-0, is-14)
nsubj(is-14, parameter-1)
det(Assist-5, the-3)
nn(Assist-5, Context-4)
nsubj(is-14, Assist-5)
aux(showing-7, is-6)
rcmod(Assist-5, showing-7)
num(parameters-9, 3-8)
dobj(showing-7, parameters-9)
prep(parameters-9, but-10)
det(method-13, the-11)
amod(method-13, new-12)
pobj(but-10, method-13)

not/RB appearing/VBG as/IN a/DT valid/JJ choice/NN ./. 

(ROOT (NP (NP (RB not) (VBG appearing)) (PP (IN as) (NP (DT a) (JJ valid) (NN choice))) (. .)))

root(ROOT-0, not-1)
amod(not-1, appearing-2)
det(choice-6, a-4)
amod(choice-6, valid-5)
prep_as(not-1, choice-6)

Its/PRP$ almost/RB like/IN there/EX are/VBP multiple/JJ working/VBG copies/NNS and/CC what/WP I/PRP see/VBP is/VBZ the/DT wrong/JJ one/CD ./. 

(ROOT (S (NP (NP (PRP$ Its)) (SBAR (SBAR (ADVP (RB almost)) (IN like) (S (NP (EX there)) (VP (VBP are) (NP (JJ multiple) (VBG working) (NNS copies))))) (CC and) (SBAR (WHNP (WP what)) (S (NP (PRP I)) (VP (VBP see)))))) (VP (VBZ is) (NP (DT the) (JJ wrong) (CD one))) (. .)))

root(ROOT-0, is-13)
nsubj(is-13, Its-1)
advmod(are-5, almost-2)
mark(are-5, like-3)
expl(are-5, there-4)
rcmod(Its-1, are-5)
amod(copies-8, multiple-6)
amod(copies-8, working-7)
nsubj(are-5, copies-8)
dobj(see-12, what-10)
nsubj(see-12, I-11)
rcmod(Its-1, see-12)
conj_and(are-5, see-12)
det(one-16, the-14)
amod(one-16, wrong-15)
dep(is-13, one-16)

So/RB when/WRB I/PRP close/RB the/DT window/NN and/CC re-open/VB the/DT file/NN ,/, everything/NN is/VBZ ok/NN ./. 

(ROOT (S (RB So) (SBAR (WHADVP (WRB when)) (S (NP (PRP I)) (VP (S (UCP (NP (RB close) (DT the) (NN window)) (CC and) (S (VP (VB re-open) (NP (DT the) (NN file))))))))) (, ,) (NP (NN everything)) (VP (VBZ is) (NP (NN ok))) (. .)))

root(ROOT-0, ok-14)
advmod(ok-14, So-1)
advmod(window-6, when-2)
nsubj(window-6, I-3)
nsubj(re-open-8, I-3)
advmod(window-6, close-4)
det(window-6, the-5)
advcl(ok-14, window-6)
conj_and(window-6, re-open-8)
advcl(ok-14, re-open-8)
det(file-10, the-9)
dobj(re-open-8, file-10)
nsubj(ok-14, everything-12)
cop(ok-14, is-13)

