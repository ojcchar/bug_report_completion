<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>HHH-10184</id>
    <title>Unable to load persistence units from JPA persistence.xml if another persistence.xml with jta-data-source is there in classpath</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">I've a application which is using JPA to perform database operations and has its own persistence.xml with unit-name as "myappunit".</sentence>
            <sentence id="1.2">This application is dependent on a 3rd party library that too has persistence.xml but with jta-data-source as it can be deployed within a container.</sentence>
            <sentence id="1.3">Now issue is, while trying to create an instance  entity manager factory for unit-name "myappunit", I'm getting.</sentence>
            <sentence id="1.4">{noformat}</sentence>
            <sentence id="1.5">Error parsing XML [line : -1, column : -1] : cvc-complex-type.2.4.a: Invalid content was found starting with element 'jta-data-source'. One of '{"http://java.sun.com/xml/ns/persistence":jar-file, "http://java.sun.com/xml/ns/persistence":class, "http://java.sun.com/xml/ns/persistence":exclude-unlisted-classes, "http://java.sun.com/xml/ns/persistence":properties}' is expected.</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">	at org.hibernate.jpa.boot.internal.PersistenceXmlParser.validate(PersistenceXmlParser.java:377) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.2">	at org.hibernate.jpa.boot.internal.PersistenceXmlParser.loadUrl(PersistenceXmlParser.java:310) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.3">	at org.hibernate.jpa.boot.internal.PersistenceXmlParser.parsePersistenceXml(PersistenceXmlParser.java:114) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.4">	at org.hibernate.jpa.boot.internal.PersistenceXmlParser.doResolve(PersistenceXmlParser.java:104) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.5">	at org.hibernate.jpa.boot.internal.PersistenceXmlParser.locatePersistenceUnits(PersistenceXmlParser.java:86) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.6">	at org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:97) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.7">	at org.hibernate.ejb.HibernatePersistence.getEntityManagerFactoryBuilderOrNull(HibernatePersistence.java:93) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.8">	at org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.9">	at org.hibernate.ejb.HibernatePersistence.getEntityManagerFactoryBuilderOrNull(HibernatePersistence.java:101) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.10">	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:69) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.11">	at org.hibernate.ejb.HibernatePersistence.createEntityManagerFactory(HibernatePersistence.java:54) [hibernate-entitymanager-4.3.5.Final.jar:4.3.5.Final]</sentence>
            <sentence id="2.12">	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) [hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]</sentence>
            <sentence id="2.13">	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) [hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]</sentence>
            <sentence id="2.14">	at mayank.test.myapp.ConfigurationBase.fixtureSetUp(ConfigurationBase.java:196) [:]</sentence>
            <sentence id="2.15">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.7.0_55]</sentence>
            <sentence id="2.16">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) [rt.jar:1.7.0_55]</sentence>
            <sentence id="2.17">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) [rt.jar:1.7.0_55]</sentence>
            <sentence id="2.18">	at java.lang.reflect.Method.invoke(Method.java:606) [rt.jar:1.7.0_55]</sentence>
            <sentence id="2.19">	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) [junit-4.11.jar:]</sentence>
            <sentence id="2.20">	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) [junit-4.11.jar:]</sentence>
            <sentence id="2.21">	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) [junit-4.11.jar:]</sentence>
            <sentence id="2.22">	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) [junit-4.11.jar:]</sentence>
            <sentence id="2.23">	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) [junit-4.11.jar:]</sentence>
            <sentence id="2.24">	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) [junit-4.11.jar:]</sentence>
            <sentence id="2.25">	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) [junit-4.11.jar:]</sentence>
            <sentence id="2.26">	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) [junit-4.11.jar:]</sentence>
            <sentence id="2.27">	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) [junit-4.11.jar:]</sentence>
            <sentence id="2.28">	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) [junit-4.11.jar:]</sentence>
            <sentence id="2.29">	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) [junit-4.11.jar:]</sentence>
            <sentence id="2.30">	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) [junit-4.11.jar:]</sentence>
            <sentence id="2.31">	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) [junit-4.11.jar:]</sentence>
            <sentence id="2.32">	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) [junit-4.11.jar:]</sentence>
            <sentence id="2.33">	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:38) [junit-4.11.jar:]</sentence>
            <sentence id="2.34">	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:532) [ant-junit.jar:]</sentence>
            <sentence id="2.35">	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1179) [ant-junit.jar:]</sentence>
            <sentence id="2.36">	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1030) [ant-junit.jar:]</sentence>
            <sentence id="2.37">{noformat}</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">First of all, the above error message is very ambigious, as it is not telling for with persistence.xml the exception is thrown.</sentence>
            <sentence id="3.2">One need to enable trace level logs of hibernate to figure out for which persistece.xml the exception is thrown.</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">Upon further debugging and enabling logs I found that in doResolve of PersistenceXmlParser, if validation of even one persistence.xml fails, the complete process of creation of entity manger gets beak.</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">I think the logic should continue with rest of persistence.xml's and the proper exception handling should be there along with logging.</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">The current code for doResolve in PersistenceXmlParser is</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">{noformat}
public List&lt;ParsedPersistenceXmlDescriptor&gt; doResolve(Map integration) {
		final List&lt;ParsedPersistenceXmlDescriptor&gt; persistenceUnits = new ArrayList&lt;ParsedPersistenceXmlDescriptor&gt;();</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">final List&lt;URL&gt; xmlUrls = classLoaderService.locateResources( "META-INF/persistence.</sentence>
            <sentence id="8.2">xml" );
		if ( xmlUrls.isEmpty() ) {
			LOG.unableToFindPersistenceXmlInClasspath();
		}
		else {
			for ( URL xmlUrl : xmlUrls ) {
				persistenceUnits.addAll( parsePersistenceXml( xmlUrl, integration ) );
			}
		}</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">return persistenceUnits;
	}
{noformat}</sentence>
        </paragraph>
        <paragraph id="10">
            <sentence id="10.1">It would be nice if it will be modified as
{noformat}
public List&lt;ParsedPersistenceXmlDescriptor&gt; doResolve(Map integration) {
		final List&lt;ParsedPersistenceXmlDescriptor&gt; persistenceUnits = new ArrayList&lt;ParsedPersistenceXmlDescriptor&gt;();</sentence>
        </paragraph>
        <paragraph id="11">
            <sentence id="11.1">final List&lt;URL&gt; xmlUrls = classLoaderService.locateResources( "META-INF/persistence.</sentence>
            <sentence id="11.2">xml" );
		if ( xmlUrls.isEmpty() ) {
			LOG.unableToFindPersistenceXmlInClasspath();
		}
		else {
			for ( URL xmlUrl : xmlUrls ) {
				try{
					persistenceUnits.addAll( parsePersistenceXml( xmlUrl, integration ) );
                }
                catch(PersistenceExcepttion e){
					LOG.errorf( "Invalid persistence.xml.
"</sentence>
            <sentence id="11.3">,e.toString());
                }
			}
		}</sentence>
        </paragraph>
        <paragraph id="12">
            <sentence id="12.1">return persistenceUnits;
	}
{noformat}</sentence>
        </paragraph>
    </description>
</bug>
