<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>HHH-9849</id>
    <title>Duplicate column name for mixed case column name on schema update (mysql,linux)</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">I have a Mysql duplicate column name exception after moving to Hibernate 5 from 4 when HBM2DDL_AUTO is set to "update".</sentence>
            <sentence id="1.2">It seems to cause exceptions with various combination of mixed case column name (with @Column for example) and on linux (case sensitive) but not on Windows.</sentence>
            <sentence id="1.3">I have this made up code to test one particular case.</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">{code:java}
import java.sql.SQLException;</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.boot.spi.MetadataImplementor;
import org.hibernate.cfg.Environment;
import org.hibernate.tool.hbm2ddl.SchemaUpdate;</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">import com.mysql.jdbc.jdbc2.optional.MysqlDataSource;</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">@Entity
class My {
	@Id
	public int getId() {
		return 0;
	}
	
	@Column(name="Ul")
	public int getValue() {
		return 0;
	}
	
	public void setId(final int _id) {
	}
	
	public void setValue(int value) {
	}
}</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">public class Test {	
	public static void main(String[] args) throws SQLException {
		MysqlDataSource ds = new MysqlDataSource();
		ds.setUrl("jdbc:mysql://192.168.1.6/test2?user=root");
		new SchemaUpdate((MetadataImplementor) new MetadataSources(new StandardServiceRegistryBuilder()
				.</sentence>
            <sentence id="7.2">applySetting(Environment.DATASOURCE, ds).</sentence>
            <sentence id="7.3">build())
				.</sentence>
            <sentence id="7.4">addAnnotatedClass( My.class )
				.</sentence>
            <sentence id="7.5">buildMetadata()).</sentence>
            <sentence id="7.6">execute(true, true);
	}
}
{code}</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">Output on run with no existing table
{noformat}
create table My (id integer not null, Ul integer, primary key (id))
{noformat}</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">Output on run with existing table </sentence>
            <sentence id="9.2">{code:java}</sentence>
            <sentence id="9.3">alter table My add column Ul integer</sentence>
            <sentence id="9.4">Exception in thread "main" org.hibernate.tool.schema.spi.SchemaManagementException: Unable to execute schema management to JDBC target [alter table My add column Ul integer]</sentence>
            <sentence id="9.5">	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.accept(TargetDatabaseImpl.java:58)</sentence>
            <sentence id="9.6">	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.applySqlString(SchemaMigratorImpl.java:332)</sentence>
            <sentence id="9.7">	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.applySqlStrings(SchemaMigratorImpl.java:350)</sentence>
            <sentence id="9.8">	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.migrateTable(SchemaMigratorImpl.java:159)</sentence>
            <sentence id="9.9">	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigrationToTargets(SchemaMigratorImpl.java:101)</sentence>
            <sentence id="9.10">	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:59)</sentence>
            <sentence id="9.11">	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)</sentence>
            <sentence id="9.12">	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)</sentence>
            <sentence id="9.13">	at Test.main(Test.java:41)</sentence>
            <sentence id="9.14">Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Duplicate column name 'Ul'</sentence>
            <sentence id="9.15">	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</sentence>
            <sentence id="9.16">	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)</sentence>
            <sentence id="9.17">	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)</sentence>
            <sentence id="9.18">	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)</sentence>
            <sentence id="9.19">	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)</sentence>
            <sentence id="9.20">	at com.mysql.jdbc.Util.getInstance(Util.java:372)</sentence>
            <sentence id="9.21">	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980)</sentence>
            <sentence id="9.22">	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)</sentence>
            <sentence id="9.23">	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)</sentence>
            <sentence id="9.24">	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)</sentence>
            <sentence id="9.25">	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)</sentence>
            <sentence id="9.26">	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2531)</sentence>
            <sentence id="9.27">	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1618)</sentence>
            <sentence id="9.28">	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1549)</sentence>
            <sentence id="9.29">	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.accept(TargetDatabaseImpl.java:55)</sentence>
            <sentence id="9.30">	... 8 more	</sentence>
            <sentence id="9.31">{code}</sentence>
        </paragraph>
    </description>
</bug>
