<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>HHH-1032</id>
    <title>have proxy from ThreadLocalCurrentSession better handle UndeclaredThrowableException</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">In previous version of hibernate saving two object with the same id 
gave an NonUniqueObjectException  which could easily be caught
as it is derived from HibernateException.</sentence>
            <sentence id="1.2">However in Hibernate 3.1 rc1 I get this stacktrace:</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">java.lang.reflect.UndeclaredThrowableException</sentence>
            <sentence id="2.2">	at $Proxy0.save(Unknown Source)</sentence>
            <sentence id="2.3">	at de.ifbfag.base.db.HSession.save(HSession.java:230)</sentence>
            <sentence id="2.4">	at com.ifbag.okular.base.hibernate.tst.HibInteractive.lifecycleMitExceptions(HibInteractive.java:195)</sentence>
            <sentence id="2.5">	at com.ifbag.okular.base.hibernate.tst.HibInteractive.start(HibInteractive.java:56)</sentence>
            <sentence id="2.6">	at com.ifbag.okular.base.hibernate.tst.HibInteractive.main(HibInteractive.java:41)</sentence>
            <sentence id="2.7">Caused by: java.lang.reflect.InvocationTargetException</sentence>
            <sentence id="2.8">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
            <sentence id="2.9">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</sentence>
            <sentence id="2.10">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</sentence>
            <sentence id="2.11">	at java.lang.reflect.Method.invoke(Method.java:324)</sentence>
            <sentence id="2.12">	at org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:266)</sentence>
            <sentence id="2.13">	... 5 more</sentence>
            <sentence id="2.14">Caused by: org.hibernate.NonUniqueObjectException: a different object with the same identifier value was already associated with the session: [com.ifbag.okular.base.hibernate.tst.User#ifb0]</sentence>
            <sentence id="2.15">	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:154)</sentence>
            <sentence id="2.16">	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:114)</sentence>
            <sentence id="2.17">	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:186)</sentence>
            <sentence id="2.18">	at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:33)</sentence>
            <sentence id="2.19">	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:175)</sentence>
            <sentence id="2.20">	at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:27)</sentence>
            <sentence id="2.21">	at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:70)</sentence>
            <sentence id="2.22">	at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:523)</sentence>
            <sentence id="2.23">	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:513)</sentence>
            <sentence id="2.24">	at org.hibernate.impl.SessionImpl.save(SessionImpl.java:509)</sentence>
            <sentence id="2.25">	... 10 more</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">where the original exception is contain in a rather ugly UndeclaredThrowableException.</sentence>
        </paragraph>
    </description>
</bug>
