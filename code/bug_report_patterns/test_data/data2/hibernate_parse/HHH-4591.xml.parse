<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>HHH-4591</id>
    <title>Criteria.createAlias not working for key-many-to-one associations of a composite-id</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">I'm trying to create an alias to apply a filter on a composite primary-key association, but I'm getting an invalid SQL generated by the ctiteria api: in the SQL there is the filter applied in the where, but the join for the alias is missing in the from.</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">Here is a sample of the problem:</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">Mappings (I stripped non relevant info):
TableOne.hbm.xml
&lt;hibernate-mapping default-cascade="none"&gt;
 &lt;class name="TableOne" table="TABLE_ONE" dynamic-insert="false" dynamic-update="false"&gt;
 &lt;id name="idTableOne" type="java.lang.Long" unsaved-value="null"&gt;
 &lt;column name="ID_CONTRATTO"/&gt;
 &lt;generator class="sequence"&gt;
 &lt;param name="sequence"&gt;S_TABLE_ONE&lt;/param&gt;
 &lt;/generator&gt;
 &gt;/id&lt;
 &lt;set name="tableOneToTableTwo" order-by="ID_TABLE_ONE" lazy="true" fetch="select" inverse="true" cascade="none"&gt;
 &lt;key&gt;
 &lt;column name="ID_TABLE_ONE"/&gt;
 &lt;/key&gt;
 &lt;one-to-many class="TableOneToTableTwo"/&gt;
 &lt;/set&gt;
 &lt;/class&gt;
&lt;/hibernate-mapping&gt;</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">TableOneToTableTwo.hbm.xml
&lt;hibernate-mapping default-cascade="none"&gt;
 &lt;class name="TableOneToTableTwo" table="TABLE_ONE_TO_TABLE_TWO" dynamic-insert="false" dynamic-update="false"&gt;
 &lt;composite-id name="tableOneToTableTwoPk" class="TableOneToTableTwoPK"&gt;
 &lt;key-many-to-one name="tableOne" class="TableOne" &gt;
 &lt;column name="ID_TABLE_ONE"/&gt;
 &lt;/key-many-to-one&gt;
 &lt;key-many-to-one name="tabelTwo" class="TabelTwo" &gt;
 &lt;column name="ID_TABLE_TWO"/&gt;
 &lt;/key-many-to-one&gt;
 &lt;/composite-id&gt;
 &lt;/class&gt;
&lt;/hibernate-mapping&gt;</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">TabelTwo.hbm.xml
&lt;hibernate-mapping default-cascade="none"&gt;
 &lt;class name="TabelTwo" table="TABLE_TWO" dynamic-insert="false" dynamic-update="false"&gt;
 &lt;id name="idTableTwo" type="java.lang.Long" unsaved-value="null"&gt;
 &lt;column name="ID_TABLE_TWO"/&gt;
 &lt;generator class="sequence"&gt;
 &lt;param name="sequence"&gt;S_TABLE_TWO&lt;/param&gt;
 &lt;/generator&gt;
 &gt;/id&lt;
 &lt;property name="codTabelTwo" type="java.lang.String"&gt;
 &lt;column name="COD_TABLE_TWO" not-null="true" unique="false"/&gt;
 &lt;/property&gt;
 &lt;/class&gt;
&lt;/hibernate-mapping&gt;</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">Code:
Criteria hibCrit = getSession().</sentence>
            <sentence id="6.2">createCriteria(TableOne.class);
hibCrit.createAlias("tableOneToTableTwo", "tableOneToTableTwo");
hibCrit.createAlias("tableOneToTableTwo.tableOneToTableTwoPk.tabelTwo", "tabelTwo");
hibCrit.add(Restrictions.eq("tabelTwo.codTabelTwo", "AAA"));
hibCrit.list();</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">Generated SQL using Oracle10G dialect (I stripped columns in select):
SELECT [...]
 FROM TABLE_ONE this_ 
 INNER JOIN TABLE_ONE_TO_TABLE_TWO tabelTwoco1_ ON this_.</sentence>
            <sentence id="7.2">ID_TABLE_ONE = tabelTwoco1_.</sentence>
            <sentence id="7.3">ID_TABLE_ONE
 WHERE tabelTwo2_.</sentence>
            <sentence id="7.4">COD_TABLE_TWO = ?</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">The "tabelTwo2_" should be the sql alias for criteria alias "tabelTwo", but the table and the join are missing in the from...</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">I also tried using createCriteria:
Criteria hibCrit = getSession().</sentence>
            <sentence id="9.2">createCriteria(TableOne.class);
hibCrit.createAlias("tableOneToTableTwo", "tableOneToTableTwo");
Criteria tableTwoCrit = hibCrit.createCriteria("tableOneToTableTwo.tableOneToTableTwoPk.tabelTwo", "tabelTwo");
tableTwoCrit.add(Restrictions.eq("tabelTwo.codTabelTwo", "AAA"));
hibCrit.list();</sentence>
        </paragraph>
        <paragraph id="10">
            <sentence id="10.1">But i get the same sql query.</sentence>
        </paragraph>
        <paragraph id="11">
            <sentence id="11.1">Also upgrading Hibernate result in the same behavior.</sentence>
        </paragraph>
    </description>
</bug>
