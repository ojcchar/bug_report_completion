<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>18469</id>
    <title>Docker version 1.8.2 does not send auth header with PATCH HTTP request when pushing to default port</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">This issue is related to https://github.com/docker/docker/issues/16728 , but bear with me please.</sentence>
            <sentence id="1.2">(bug report at the bottom)</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">**Environment:**</sentence>
            <sentence id="2.2">Docker registry (Artifactory) behind NginX.</sentence>
            <sentence id="2.3">Port 443 (standard HTTPS) redirects to the Docker endpoint and should be used to access it.</sentence>
            <sentence id="2.4">I am logged in through 'docker login'</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">**The problem:**</sentence>
            <sentence id="3.2">- 'docker push docker.int.domain.com:443/some-image' works</sentence>
            <sentence id="3.3">- 'docker push docker.int.domain.com/some-image' **does not**.</sentence>
            <sentence id="3.4">The output:</sentence>
            <sentence id="3.5">"'</sentence>
            <sentence id="3.6">The push refers to a repository [docker.int.domain.com/testtest/ubuntu] (len: 1)</sentence>
            <sentence id="3.7">8d885ef1e201: Pushing [==================================================&gt;] 30.9 MB</sentence>
            <sentence id="3.8">unauthorized: The client does not have permission to push to the repository.</sentence>
            <sentence id="3.9">"'</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">I had a look at NginX's access logs and this is what I found:</sentence>
            <sentence id="4.2">- When pushing to the "port-less" address, the request _is_ directed to the port 443, so those commands should behave the same way.</sentence>
            <sentence id="4.3">- The PATCH HTTP request does not contain auth header, yet all other requests do.</sentence>
            <sentence id="4.4">This causes the push command to fail with 'unauthorized: The client does not have permission to push to the repository.'</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">This issue is present in version 1.8.2.</sentence>
            <sentence id="5.2">With version 1.7.x pushing without explicitly specifying the port was possible.</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">**NginX's access log:**</sentence>
            <sentence id="6.2">- The second column is the name of the authenticated user</sentence>
            <sentence id="6.3">- p: denotes port</sentence>
            <sentence id="6.4">- The last number is response HTTP code</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">'docker push docker.int.domain.com/some-image'</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">"'
192.168.33.3 , - , [07/Dec/2015:14:32:04 +0100] , p:443 , "GET /v2/", 401
192.168.33.3 , melka , [07/Dec/2015:14:32:06 +0100] , p:443 , "HEAD /v2/testtest/ubuntu/(...)", 404
192.168.33.3 , melka , [07/Dec/2015:14:32:07 +0100] , p:443 , "POST /v2/testtest/ubuntu/(...)", 202
192.168.33.3 , - , [07/Dec/2015:14:33:08 +0100] , p:443 , "PATCH /v2/testtest/ubuntu/(...)" , 403
"'</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">'docker push docker.int.domain.com:443/some-image'</sentence>
        </paragraph>
        <paragraph id="10">
            <sentence id="10.1">"'
192.168.33.3 , - , [07/Dec/2015:14:43:23 +0100] , p:443 , "GET /v2/", 401
192.168.33.3 , melka , [07/Dec/2015:14:43:24 +0100] , p:443 , "HEAD /v2/testtest/ubuntu/(...)", 404
192.168.33.3 , melka , [07/Dec/2015:14:43:24 +0100] , p:443 , "POST /v2/testtest/ubuntu/(...) HTTP/1.1", 202
192.168.33.3 , melka , [07/Dec/2015:14:43:27 +0100] , p:443 , "PATCH /v2/testtest/ubuntu/(...)", 202
192.168.33.3 , melka , [07/Dec/2015:14:43:27 +0100] , p:443 , "PUT /v2/testtest/ubuntu/(...)", 201
(...)
"'</sentence>
        </paragraph>
        <paragraph id="11">
            <sentence id="11.1">As you can see, for some reason when pushing without specifying port, the name is empty.</sentence>
            <sentence id="11.2">That causes the push to fail.</sentence>
            <sentence id="11.3">When a port is set, the push continues with more log messages below.</sentence>
        </paragraph>
        <paragraph id="12">
            <sentence id="12.1">Just to be on the safe side, here is my NginX config:
(I have tried removing the X-Forwarded-headers as suggested here https://docs.docker.com/registry/nginx/ - that did not help).</sentence>
        </paragraph>
        <paragraph id="13">
            <sentence id="13.1">"'
 server {
 listen 80;
 server_name docker.int.domain.com;
 return 301 https://$server_name$request_uri;
 }</sentence>
        </paragraph>
        <paragraph id="14">
            <sentence id="14.1">server {
 listen 443;
 server_name docker.int.domain.com;</sentence>
        </paragraph>
        <paragraph id="15">
            <sentence id="15.1">ssl on;
 ssl_certificate /etc/nginx/cert/artifactory-ca.</sentence>
            <sentence id="15.2">crt;
 ssl_certificate_key /etc/nginx/cert/artifactory-ca.</sentence>
            <sentence id="15.3">key;</sentence>
        </paragraph>
        <paragraph id="16">
            <sentence id="16.1">access_log /var/log/nginx/docker.int.domain.com.443.</sentence>
            <sentence id="16.2">access.log myformat;
 error_log /var/log/nginx/docker.int.domain.com.443.</sentence>
            <sentence id="16.3">error.log;</sentence>
        </paragraph>
        <paragraph id="17">
            <sentence id="17.1">proxy_set_header Host $host:443;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-Proto $scheme;
 proxy_set_header X-Original-URI $request_uri;
 proxy_pass_header Server; # To help debugging, list the server that actually did the reply rather than nginx
 proxy_read_timeout 900;</sentence>
        </paragraph>
        <paragraph id="18">
            <sentence id="18.1">client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads</sentence>
        </paragraph>
        <paragraph id="19">
            <sentence id="19.1"># required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
 chunked_transfer_encoding on;</sentence>
        </paragraph>
        <paragraph id="20">
            <sentence id="20.1">location /v2 {
 proxy_pass http://localhost:8081/artifactory/api/docker/docker/v2;
 }
 }
"'</sentence>
        </paragraph>
        <paragraph id="21">
            <sentence id="21.1">We want to be able to refer to the repository just by the server name, without having to specify the port.</sentence>
            <sentence id="21.2">But right now, that is only possible using the older docker client.</sentence>
        </paragraph>
        <paragraph id="22">
            <sentence id="22.1">Thanks for taking a look at this</sentence>
        </paragraph>
        <paragraph id="23">
            <sentence id="23.1">**BUG REPORT INFORMATION**</sentence>
        </paragraph>
        <paragraph id="24">
            <sentence id="24.1">**docker version:**</sentence>
        </paragraph>
        <paragraph id="25">
            <sentence id="25.1">"'
Client:
 Version: 1.8.2
 API version: 1.20
 Package Version: docker-1.8.2-7.el7.centos.x86_64
 Go version: go1.4.2
 Git commit: bb472f0/1.8.2
 Built: 
 OS/Arch: linux/amd64
"'</sentence>
        </paragraph>
        <paragraph id="26">
            <sentence id="26.1">**docker info:**</sentence>
        </paragraph>
        <paragraph id="27">
            <sentence id="27.1">"'</sentence>
            <sentence id="27.2">Containers: 3</sentence>
            <sentence id="27.3">Images: 17</sentence>
            <sentence id="27.4">Storage Driver: devicemapper</sentence>
            <sentence id="27.5"> Pool Name: docker-253:0-69269427-pool</sentence>
            <sentence id="27.6"> Pool Blocksize: 65.54 kB</sentence>
            <sentence id="27.7"> Backing Filesystem: xfs</sentence>
            <sentence id="27.8"> Data file: /dev/loop0</sentence>
            <sentence id="27.9"> Metadata file: /dev/loop1</sentence>
            <sentence id="27.10"> Data Space Used: 4.353 GB</sentence>
            <sentence id="27.11"> Data Space Total: 107.4 GB</sentence>
            <sentence id="27.12"> Data Space Available: 8.753 GB</sentence>
            <sentence id="27.13"> Metadata Space Used: 3.731 MB</sentence>
            <sentence id="27.14"> Metadata Space Total: 2.147 GB</sentence>
            <sentence id="27.15"> Metadata Space Available: 2.144 GB</sentence>
            <sentence id="27.16"> Udev Sync Supported: true</sentence>
            <sentence id="27.17"> Deferred Removal Enabled: false</sentence>
            <sentence id="27.18"> Data loop file: /var/lib/docker/devicemapper/devicemapper/data</sentence>
            <sentence id="27.19"> Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata</sentence>
            <sentence id="27.20"> Library Version: 1.02.93-RHEL7 (2015-01-28)</sentence>
            <sentence id="27.21">Execution Driver: native-0.2</sentence>
            <sentence id="27.22">Logging Driver: json-file</sentence>
            <sentence id="27.23">Kernel Version: 3.10.0-229.14.1.el7.x86_64</sentence>
            <sentence id="27.24">Operating System: CentOS Linux 7 (Core)</sentence>
            <sentence id="27.25">CPUs: 2</sentence>
            <sentence id="27.26">Total Memory: 3.703 GiB</sentence>
            <sentence id="27.27">Name: localhost.localdomain</sentence>
            <sentence id="27.28">ID: UGHD:SKNU:RRGU:GERL:KGDA:3Q7I:T5L5:LWGO:AM2Z:LTRX:MIX4:XBK3</sentence>
            <sentence id="27.29">WARNING: bridge-nf-call-iptables is disabled</sentence>
            <sentence id="27.30">WARNING: bridge-nf-call-ip6tables is disabled</sentence>
            <sentence id="27.31">"'</sentence>
        </paragraph>
        <paragraph id="28">
            <sentence id="28.1">**uname -a:**</sentence>
        </paragraph>
        <paragraph id="29">
            <sentence id="29.1">"'
Linux localhost.localdomain 3.10.0-229.14.1.el7.x86_64 #1 SMP Tue Sep 15 15:05:51 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
"'</sentence>
        </paragraph>
        <paragraph id="30">
            <sentence id="30.1">Running in VirtualBox.</sentence>
        </paragraph>
        <paragraph id="31">
            <sentence id="31.1">List the steps to reproduce the issue:</sentence>
            <sentence id="31.2">1 Have a registry behind NginX (I have Artifactory-based)</sentence>
            <sentence id="31.3">2 Set up NginX so that the registry is accessible on port 443.</sentence>
            <sentence id="31.4">3 Push an image to the registry, **without** specifying the port number</sentence>
        </paragraph>
        <paragraph id="32">
            <sentence id="32.1">Describe the results you received:</sentence>
            <sentence id="32.2">- I expect the image to be pushed successfully, because port 443 is the default.</sentence>
        </paragraph>
        <paragraph id="33">
            <sentence id="33.1">Describe the results you expected:</sentence>
            <sentence id="33.2">- The push fails with an error: 'unauthorized: The client does not have permission to push to the repository.'</sentence>
        </paragraph>
        <paragraph id="34">
            <sentence id="34.1">----------END REPORT ---------</sentence>
        </paragraph>
    </description>
</bug>
