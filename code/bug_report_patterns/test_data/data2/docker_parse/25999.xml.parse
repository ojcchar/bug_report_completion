<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>25999</id>
    <title>Docker does not follow symlinks when bind mount /etc/hostname etc...</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">---</sentence>
            <sentence id="1.2">## BUG REPORT INFORMATION</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">**Output of 'docker version':**</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">"'
Client:
 Version: 1.11.2
 API version: 1.23
 Go version: go1.5.4
 Git commit: b9f10c9
 Built: Wed Jun 1 22:00:43 2016
 OS/Arch: linux/amd64</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">Server:
 Version: 1.11.2
 API version: 1.23
 Go version: go1.5.4
 Git commit: b9f10c9
 Built: Wed Jun 1 22:00:43 2016
 OS/Arch: linux/amd64</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">"'</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">**Output of 'docker info':**</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">"'</sentence>
            <sentence id="7.2">Containers: 63</sentence>
            <sentence id="7.3"> Running: 4</sentence>
            <sentence id="7.4"> Paused: 0</sentence>
            <sentence id="7.5"> Stopped: 59</sentence>
            <sentence id="7.6">Images: 2442</sentence>
            <sentence id="7.7">Server Version: 1.11.2</sentence>
            <sentence id="7.8">Storage Driver: zfs</sentence>
            <sentence id="7.9"> Zpool: rpool</sentence>
            <sentence id="7.10"> Zpool Health: ONLINE</sentence>
            <sentence id="7.11"> Parent Dataset: rpool/docker</sentence>
            <sentence id="7.12"> Space Used By Parent: 59820072960</sentence>
            <sentence id="7.13"> Space Available: 1487320035328</sentence>
            <sentence id="7.14"> Parent Quota: no</sentence>
            <sentence id="7.15"> Compression: zle</sentence>
            <sentence id="7.16">Logging Driver: journald</sentence>
            <sentence id="7.17">Cgroup Driver: cgroupfs</sentence>
            <sentence id="7.18">Plugins: </sentence>
            <sentence id="7.19"> Volume: local</sentence>
            <sentence id="7.20"> Network: host bridge vde null</sentence>
            <sentence id="7.21">Kernel Version: 4.4.0-28-generic</sentence>
            <sentence id="7.22">Operating System: Ubuntu 16.04 LTS</sentence>
            <sentence id="7.23">OSType: linux</sentence>
            <sentence id="7.24">Architecture: x86_64</sentence>
            <sentence id="7.25">CPUs: 8</sentence>
            <sentence id="7.26">Total Memory: 31.39 GiB</sentence>
            <sentence id="7.27">Name: will-shuttle</sentence>
            <sentence id="7.28">ID: VEJG:QPDY:WXEF:6VX6:3QKO:2XCX:L73H:F4AP:TTFV:YERN:ZTMS:37RT</sentence>
            <sentence id="7.29">Docker Root Dir: /var/lib/docker</sentence>
            <sentence id="7.30">Debug mode (client): false</sentence>
            <sentence id="7.31">Debug mode (server): false</sentence>
            <sentence id="7.32">Http Proxy: http://127.0.0.1:3128/</sentence>
            <sentence id="7.33">Registry: https://index.docker.io/v1/</sentence>
            <sentence id="7.34">WARNING: No swap limit support</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">"'</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">**Additional environment details (AWS, VirtualBox, physical, etc.):**</sentence>
            <sentence id="9.2">Physical machine</sentence>
        </paragraph>
        <paragraph id="10">
            <sentence id="10.1">**Steps to reproduce the issue:**</sentence>
            <sentence id="10.2">1 Create a dockerfile with the following:</sentence>
        </paragraph>
        <paragraph id="11">
            <sentence id="11.1">"' dockerfile
FROM ubuntu:trusty</sentence>
        </paragraph>
        <paragraph id="12">
            <sentence id="12.1"># Remap the root filesystem into a subtree, and symlink the original</sentence>
            <sentence id="12.2"># locations.</sentence>
            <sentence id="12.3">RUN mkdir -p /underlay &amp;&amp; \</sentence>
            <sentence id="12.4">for mnt in /usr /var /root /etc ; do \</sentence>
            <sentence id="12.5">echo "$mnt -&gt; /underlay${mnt}" ; \</sentence>
            <sentence id="12.6">mv -t /underlay $mnt ; \</sentence>
            <sentence id="12.7">ln -s /underlay${mnt} $mnt ; \</sentence>
            <sentence id="12.8">done</sentence>
            <sentence id="12.9">"'</sentence>
            <sentence id="12.10">1 Run the resulting container and run ls '/etc' - i.e.</sentence>
        </paragraph>
        <paragraph id="13">
            <sentence id="13.1">"'
$ docker run -it --rm mycontainer /bin/bash
bash-4.3# ls /etc
hostname hosts mtab resolv.conf
bash-4.3# </sentence>
        </paragraph>
        <paragraph id="14">
            <sentence id="14.1">**Describe the results you received:**</sentence>
            <sentence id="14.2">Docker overwrites the '/etc/' symlink with an empty directory containing the standard bind mounts.</sentence>
        </paragraph>
        <paragraph id="15">
            <sentence id="15.1">**Describe the results you expected:**</sentence>
            <sentence id="15.2">If docker encounters a symlinked directory for a file it wants to override on startup, then it should follow the symlink int the container and change it's bind mounting path appropriately.</sentence>
        </paragraph>
        <paragraph id="16">
            <sentence id="16.1">This could also be solved if docker would allow passing in the path of the standard bind mounts at 'docker run' time.
"'</sentence>
        </paragraph>
    </description>
</bug>
