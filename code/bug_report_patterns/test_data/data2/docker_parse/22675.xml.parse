<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>22675</id>
    <title>Docker Daemon 1.11 inside Netns + Overlay Network</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">**Output of 'docker version':**</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">"'
Client:
 Version: 1.11.0
 API version: 1.23
 Go version: go1.5.4
 Git commit: 4dc5990
 Built: Wed Apr 13 18:34:23 2016
 OS/Arch: linux/amd64</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">Server:
 Version: 1.11.0
 API version: 1.23
 Go version: go1.5.4
 Git commit: 4dc5990
 Built: Wed Apr 13 18:34:23 2016
 OS/Arch: linux/amd64</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">"'</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">**Output of 'docker info':**</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">"'
Containers: 1
 Running: 1
 Paused: 0
 Stopped: 0
Images: 3
Server Version: 1.11.0
Storage Driver: aufs
 Root Dir: /var/lib/docker/aufs
 Backing Filesystem: extfs
 Dirs: 27
 Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins: 
 Volume: local
 Network: host bridge null
Kernel Version: 3.16.0-49-generic
Operating System: Ubuntu 14.04.4 LTS
OSType: linux
Architecture: x86_64
CPUs: 2
Total Memory: 1.955 GiB
Name: openstack-cli
ID: Y6E5:SEXI:ENOH:YGNX:NZHM:BTS4:7DIR:HSVZ:X5JR:4HNZ:DZ6J:4YTG
Docker Root Dir: /var/lib/docker
Debug mode (client): false
Debug mode (server): false
Registry: https://index.docker.io/v1/
WARNING: No swap limit support</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">"'</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">**Additional environment details (AWS, VirtualBox, physical, etc.):**</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">VM Ubuntu 14.04.4 LTS under KVM</sentence>
        </paragraph>
        <paragraph id="10">
            <sentence id="10.1">**Steps to reproduce the issue:**</sentence>
        </paragraph>
        <paragraph id="11">
            <sentence id="11.1">"'</sentence>
            <sentence id="11.2">echo &gt;&gt; start.sh &lt;&lt; EOF</sentence>
            <sentence id="11.3">#!</sentence>
            <sentence id="11.4">/bin/bash</sentence>
            <sentence id="11.5">ip link add eth0 type veth peer name veth_pub</sentence>
            <sentence id="11.6">ip link set dev eth0 up</sentence>
            <sentence id="11.7">ip link set dev lo up</sentence>
            <sentence id="11.8">ip link set dev veth_pub netns 1</sentence>
            <sentence id="11.9">ip addr add 20.20.20.1/24 brd + dev eth0</sentence>
            <sentence id="11.10">ip netns exec default ip link set dev veth_pub up ## default is the netns id 1</sentence>
            <sentence id="11.11">ip netns exec default ip addr add 20.20.20.254/24 brd + dev veth_pub</sentence>
            <sentence id="11.12">ip route add default via 20.20.20.254</sentence>
            <sentence id="11.13">mkdir /var/run/docker_demo/</sentence>
            <sentence id="11.14">docker daemon -H tcp://0.0.0.0:2376 -H unix:///var/run/docker_demo/docker.</sentence>
            <sentence id="11.15">sock -D --exec-root=/var/run/docker_demo -G demo --pidfile=/var/run/docker_demo/docker.</sentence>
            <sentence id="11.16">pid --userland-proxy=true --userns-remap=demo --dns=8.8.8.8 --cluster-store=consul://20.20.20.254:8500 --cluster-advertise=20.20.20.1:2376</sentence>
            <sentence id="11.17">EOF</sentence>
            <sentence id="11.18">"'</sentence>
            <sentence id="11.19">1 unshare -n .</sentence>
            <sentence id="11.20">/start.sh</sentence>
            <sentence id="11.21">2 docker -H tcp://20.20.20.1:2376 run -itd alpine sh</sentence>
            <sentence id="11.22">3 docker -H tcp://20.20.20.1:2376 network create -d overlay demo</sentence>
            <sentence id="11.23">4 docker -H tcp://20.20.20.1:2376 run -itd --name c1 --net=demo alpine sh</sentence>
        </paragraph>
        <paragraph id="12">
            <sentence id="12.1">**Describe the results you received:**</sentence>
            <sentence id="12.2">- The Step 2 works correctly.</sentence>
            <sentence id="12.3">- at step 4, I get this error from Docker CLI : :</sentence>
            <sentence id="12.4">docker: Error response from daemon: error creating external connectivity network: cannot restrict inter-container communication: please ensure that br_netfilter kernel module is loaded.</sentence>
            <sentence id="12.5">- From The Docker Daemon, I get : http://pastebin.com/rGkmxmfx</sentence>
            <sentence id="12.6">- I had already tried starting Docker Daemon with "--icc=true" param, but without success.</sentence>
            <sentence id="12.7">- The Overlay network works correctly when the daemon is launched outside the netns</sentence>
        </paragraph>
        <paragraph id="13">
            <sentence id="13.1">Please, Any idea ?</sentence>
        </paragraph>
    </description>
</bug>
