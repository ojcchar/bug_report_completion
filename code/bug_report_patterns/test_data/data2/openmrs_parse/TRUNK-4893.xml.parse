<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bug>
    <id>TRUNK-4893</id>
    <title>AND is not escaped in lucene query</title>
    <description>
        <paragraph id="1">
            <sentence id="1.1">At times you may see:
{code}
HTTP Status 500 - java.lang.IllegalStateException: Invalid query</sentence>
        </paragraph>
        <paragraph id="2">
            <sentence id="2.1">type Exception report</sentence>
        </paragraph>
        <paragraph id="3">
            <sentence id="3.1">message java.lang.IllegalStateException: Invalid query</sentence>
        </paragraph>
        <paragraph id="4">
            <sentence id="4.1">description The server encountered an internal error that prevented it from fulfilling this request.</sentence>
        </paragraph>
        <paragraph id="5">
            <sentence id="5.1">exception</sentence>
        </paragraph>
        <paragraph id="6">
            <sentence id="6.1">java.lang.RuntimeException: java.lang.IllegalStateException: Invalid query</sentence>
            <sentence id="6.2">	org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.getImportedItems(PackageImporterImpl.java:120)</sentence>
            <sentence id="6.3">	org.openmrs.module.metadatasharing.web.controller.ImportController.load(ImportController.java:386)</sentence>
            <sentence id="6.4">	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
            <sentence id="6.5">	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</sentence>
            <sentence id="6.6">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="6.7">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="6.8">	org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)</sentence>
            <sentence id="6.9">	org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)</sentence>
            <sentence id="6.10">	org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)</sentence>
            <sentence id="6.11">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)</sentence>
            <sentence id="6.12">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)</sentence>
            <sentence id="6.13">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)</sentence>
            <sentence id="6.14">	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:844)</sentence>
            <sentence id="6.15">	javax.servlet.http.HttpServlet.service(HttpServlet.java:620)</sentence>
            <sentence id="6.16">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)</sentence>
            <sentence id="6.17">	javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</sentence>
            <sentence id="6.18">	org.openmrs.module.web.filter.ForcePasswordChangeFilter.doFilter(ForcePasswordChangeFilter.java:61)</sentence>
            <sentence id="6.19">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:72)</sentence>
            <sentence id="6.20">	org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)</sentence>
            <sentence id="6.21">	org.openmrs.module.logmanager.web.filter.RequestProviderFilter.doFilterInternal(RequestProviderFilter.java:36)</sentence>
            <sentence id="6.22">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="6.23">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="6.24">	org.openmrs.module.xforms.web.XformsFilter.doFilter(XformsFilter.java:60)</sentence>
            <sentence id="6.25">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="6.26">	org.openmrs.module.amrsmobileforms.web.LocationFilter.doFilter(LocationFilter.java:27)</sentence>
            <sentence id="6.27">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="6.28">	org.openmrs.module.web.filter.ModuleFilter.doFilter(ModuleFilter.java:54)</sentence>
            <sentence id="6.29">	org.openmrs.web.filter.OpenmrsFilter.doFilterInternal(OpenmrsFilter.java:109)</sentence>
            <sentence id="6.30">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="6.31">	org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230)</sentence>
            <sentence id="6.32">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="6.33">	org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="6.34">	org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="6.35">	org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="6.36">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)</sentence>
            <sentence id="6.37">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="6.38">root cause</sentence>
        </paragraph>
        <paragraph id="7">
            <sentence id="7.1">java.lang.IllegalStateException: Invalid query</sentence>
            <sentence id="7.2">	org.openmrs.api.db.hibernate.search.LuceneQuery.buildQuery(LuceneQuery.java:324)</sentence>
            <sentence id="7.3">	org.openmrs.api.db.hibernate.search.LuceneQuery.&lt;init&gt;(LuceneQuery.java:82)</sentence>
            <sentence id="7.4">	org.openmrs.api.db.hibernate.search.LuceneQuery$1.&lt;init&gt;(LuceneQuery.java:56)</sentence>
            <sentence id="7.5">	org.openmrs.api.db.hibernate.search.LuceneQuery.newQuery(LuceneQuery.java:55)</sentence>
            <sentence id="7.6">	org.openmrs.api.db.hibernate.HibernateConceptDAO.newConceptNameLuceneQuery(HibernateConceptDAO.java:1384)</sentence>
            <sentence id="7.7">	org.openmrs.api.db.hibernate.HibernateConceptDAO.getConcepts(HibernateConceptDAO.java:1340)</sentence>
            <sentence id="7.8">	org.openmrs.api.impl.ConceptServiceImpl.getConcepts(ConceptServiceImpl.java:1645)</sentence>
            <sentence id="7.9">	sun.reflect.GeneratedMethodAccessor579.invoke(Unknown Source)</sentence>
            <sentence id="7.10">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="7.11">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="7.12">	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="7.13">	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="7.14">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="7.15">	org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="7.16">	org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="7.17">	org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="7.18">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.19">	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="7.20">	com.sun.proxy.$Proxy484.getConcepts(Unknown Source)</sentence>
            <sentence id="7.21">	sun.reflect.GeneratedMethodAccessor579.invoke(Unknown Source)</sentence>
            <sentence id="7.22">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="7.23">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="7.24">	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="7.25">	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="7.26">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="7.27">	org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:51)</sentence>
            <sentence id="7.28">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.29">	org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:121)</sentence>
            <sentence id="7.30">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.31">	org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="7.32">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.33">	org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="7.34">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.35">	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="7.36">	com.sun.proxy.$Proxy485.getConcepts(Unknown Source)</sentence>
            <sentence id="7.37">	org.openmrs.module.metadatasharing.api.db.hibernate.HibernateCompatibility1_11.getConcepts(HibernateCompatibility1_11.java:38)</sentence>
            <sentence id="7.38">	org.openmrs.module.metadatasharing.api.db.hibernate.HibernateMetadataDAO.getConcepts(HibernateMetadataDAO.java:204)</sentence>
            <sentence id="7.39">	org.openmrs.module.metadatasharing.api.impl.MetadataServiceImpl.getConcepts(MetadataServiceImpl.java:76)</sentence>
            <sentence id="7.40">	sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="7.41">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="7.42">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="7.43">	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="7.44">	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="7.45">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="7.46">	org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="7.47">	org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="7.48">	org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="7.49">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.50">	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="7.51">	com.sun.proxy.$Proxy562.getConcepts(Unknown Source)</sentence>
            <sentence id="7.52">	sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="7.53">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="7.54">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="7.55">	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="7.56">	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="7.57">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="7.58">	org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="7.59">	org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="7.60">	org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="7.61">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.62">	org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:121)</sentence>
            <sentence id="7.63">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.64">	org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="7.65">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.66">	org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="7.67">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.68">	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="7.69">	com.sun.proxy.$Proxy563.getConcepts(Unknown Source)</sentence>
            <sentence id="7.70">	sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="7.71">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="7.72">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="7.73">	org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="7.74">	org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="7.75">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="7.76">	org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="7.77">	org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="7.78">	org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="7.79">	org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="7.80">	org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="7.81">	com.sun.proxy.$Proxy563.getConcepts(Unknown Source)</sentence>
            <sentence id="7.82">	org.openmrs.module.metadatasharing.handler.impl.ConceptHandler.getItems(ConceptHandler.java:178)</sentence>
            <sentence id="7.83">	org.openmrs.module.metadatasharing.handler.Handler.getItems(Handler.java:83)</sentence>
            <sentence id="7.84">	org.openmrs.module.metadatasharing.resolver.impl.ObjectByNameResolver.getPossibleMatch(ObjectByNameResolver.java:68)</sentence>
            <sentence id="7.85">	org.openmrs.module.metadatasharing.resolver.ResolverEngine.resolve(ResolverEngine.java:117)</sentence>
            <sentence id="7.86">	org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.createImportedItems(PackageImporterImpl.java:217)</sentence>
            <sentence id="7.87">	org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.getImportedItems(PackageImporterImpl.java:117)</sentence>
            <sentence id="7.88">	org.openmrs.module.metadatasharing.web.controller.ImportController.load(ImportController.java:386)</sentence>
            <sentence id="7.89">	sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
            <sentence id="7.90">	sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</sentence>
            <sentence id="7.91">	sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="7.92">	java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="7.93">	org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)</sentence>
            <sentence id="7.94">	org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)</sentence>
            <sentence id="7.95">	org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)</sentence>
            <sentence id="7.96">	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)</sentence>
            <sentence id="7.97">	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)</sentence>
            <sentence id="7.98">	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)</sentence>
            <sentence id="7.99">	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:844)</sentence>
            <sentence id="7.100">	javax.servlet.http.HttpServlet.service(HttpServlet.java:620)</sentence>
            <sentence id="7.101">	org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)</sentence>
            <sentence id="7.102">	javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</sentence>
            <sentence id="7.103">	org.openmrs.module.web.filter.ForcePasswordChangeFilter.doFilter(ForcePasswordChangeFilter.java:61)</sentence>
            <sentence id="7.104">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:72)</sentence>
            <sentence id="7.105">	org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)</sentence>
            <sentence id="7.106">	org.openmrs.module.logmanager.web.filter.RequestProviderFilter.doFilterInternal(RequestProviderFilter.java:36)</sentence>
            <sentence id="7.107">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="7.108">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="7.109">	org.openmrs.module.xforms.web.XformsFilter.doFilter(XformsFilter.java:60)</sentence>
            <sentence id="7.110">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="7.111">	org.openmrs.module.amrsmobileforms.web.LocationFilter.doFilter(LocationFilter.java:27)</sentence>
            <sentence id="7.112">	org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="7.113">	org.openmrs.module.web.filter.ModuleFilter.doFilter(ModuleFilter.java:54)</sentence>
            <sentence id="7.114">	org.openmrs.web.filter.OpenmrsFilter.doFilterInternal(OpenmrsFilter.java:109)</sentence>
            <sentence id="7.115">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="7.116">	org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230)</sentence>
            <sentence id="7.117">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="7.118">	org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="7.119">	org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="7.120">	org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="7.121">	org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)</sentence>
            <sentence id="7.122">	org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="7.123">root cause</sentence>
        </paragraph>
        <paragraph id="8">
            <sentence id="8.1">org.apache.lucene.queryParser.ParseException: Cannot parse '(concept.conceptMappings.conceptReferenceTerm.code:(SULFADOXINE AND PYRIMETHAMINE)^0.4 OR (( name:("SULFADOXINE AND PYRIMETHAMINE")^0.7 OR ( (name:(SULFADOXINE)^0.6 OR name:(SULFADOXINE*)^0.3 OR name:(SULFADOXINE~0.8)^0.1) (name:(AND)^0.6 OR name:(AND*)^0.3 OR name:(AND~0.8)^0.1) (name:(PYRIMETHAMINE)^0.6 OR name:(PYRIMETHAMINE*)^0.3 OR name:(PYRIMETHAMINE~0.8)^0.1))^0.3) localePreferred:true)^0.4 OR (( name:("SULFADOXINE AND PYRIMETHAMINE")^0.7 OR ( (name:(SULFADOXINE)^0.6 OR name:(SULFADOXINE*)^0.3 OR name:(SULFADOXINE~0.8)^0.1) (name:(AND)^0.6 OR name:(AND*)^0.3 OR name:(AND~0.8)^0.1) (name:(PYRIMETHAMINE)^0.6 OR name:(PYRIMETHAMINE*)^0.3 OR name:(PYRIMETHAMINE~0.8)^0.1))^0.3))^0.2) locale:(en*  OR en_GB^2 ) voided:false': Encountered " &lt;AND&gt; "AND "" at line 1, column 230.</sentence>
            <sentence id="8.2">Was expecting one of:</sentence>
            <sentence id="8.3">&lt;NOT&gt; ...</sentence>
            <sentence id="8.4">"+" ...</sentence>
            <sentence id="8.5">"-" ...</sentence>
            <sentence id="8.6">"(" ...</sentence>
            <sentence id="8.7">"*" ...</sentence>
            <sentence id="8.8">&lt;QUOTED&gt; ...</sentence>
            <sentence id="8.9">&lt;TERM&gt; ...</sentence>
            <sentence id="8.10">&lt;PREFIXTERM&gt; ...</sentence>
            <sentence id="8.11">&lt;WILDTERM&gt; ...</sentence>
            <sentence id="8.12">"[" ...</sentence>
            <sentence id="8.13">"{" ...</sentence>
            <sentence id="8.14">&lt;NUMBER&gt; ...</sentence>
            <sentence id="8.15">&lt;TERM&gt; ...</sentence>
            <sentence id="8.16">"*" ...</sentence>
            <sentence id="8.17">org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:211)</sentence>
            <sentence id="8.18">org.openmrs.api.db.hibernate.search.LuceneQuery$1.</sentence>
            <sentence id="8.19">prepareQuery(LuceneQuery.java:63)</sentence>
            <sentence id="8.20">org.openmrs.api.db.hibernate.search.LuceneQuery.buildQuery(LuceneQuery.java:321)</sentence>
            <sentence id="8.21">org.openmrs.api.db.hibernate.search.LuceneQuery.</sentence>
            <sentence id="8.22">&lt;init&gt;(LuceneQuery.java:82)</sentence>
            <sentence id="8.23">org.openmrs.api.db.hibernate.search.LuceneQuery$1.</sentence>
            <sentence id="8.24">&lt;init&gt;(LuceneQuery.java:56)</sentence>
            <sentence id="8.25">org.openmrs.api.db.hibernate.search.LuceneQuery.newQuery(LuceneQuery.java:55)</sentence>
            <sentence id="8.26">org.openmrs.api.db.hibernate.HibernateConceptDAO.newConceptNameLuceneQuery(HibernateConceptDAO.java:1384)</sentence>
            <sentence id="8.27">org.openmrs.api.db.hibernate.HibernateConceptDAO.getConcepts(HibernateConceptDAO.java:1340)</sentence>
            <sentence id="8.28">org.openmrs.api.impl.ConceptServiceImpl.getConcepts(ConceptServiceImpl.java:1645)</sentence>
            <sentence id="8.29">sun.reflect.GeneratedMethodAccessor579.invoke(Unknown Source)</sentence>
            <sentence id="8.30">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="8.31">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="8.32">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="8.33">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="8.34">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="8.35">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="8.36">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="8.37">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="8.38">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="8.39">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.40">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="8.41">com.sun.proxy.</sentence>
            <sentence id="8.42">$Proxy484.getConcepts(Unknown Source)</sentence>
            <sentence id="8.43">sun.reflect.GeneratedMethodAccessor579.invoke(Unknown Source)</sentence>
            <sentence id="8.44">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="8.45">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="8.46">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="8.47">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="8.48">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="8.49">org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:51)</sentence>
            <sentence id="8.50">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.51">org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:121)</sentence>
            <sentence id="8.52">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.53">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="8.54">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.55">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="8.56">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.57">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="8.58">com.sun.proxy.</sentence>
            <sentence id="8.59">$Proxy485.getConcepts(Unknown Source)</sentence>
            <sentence id="8.60">org.openmrs.module.metadatasharing.api.db.hibernate.HibernateCompatibility1_11.</sentence>
            <sentence id="8.61">getConcepts(HibernateCompatibility1_11.</sentence>
            <sentence id="8.62">java:38)</sentence>
            <sentence id="8.63">org.openmrs.module.metadatasharing.api.db.hibernate.HibernateMetadataDAO.getConcepts(HibernateMetadataDAO.java:204)</sentence>
            <sentence id="8.64">org.openmrs.module.metadatasharing.api.impl.MetadataServiceImpl.getConcepts(MetadataServiceImpl.java:76)</sentence>
            <sentence id="8.65">sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="8.66">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="8.67">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="8.68">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="8.69">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="8.70">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="8.71">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="8.72">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="8.73">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="8.74">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="8.75">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.76">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="8.77">com.sun.proxy.</sentence>
            <sentence id="8.78">$Proxy562.getConcepts(Unknown Source)</sentence>
            <sentence id="8.79">sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="8.80">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="8.81">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="8.82">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="8.83">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="8.84">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="8.85">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="8.86">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="8.87">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="8.88">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="8.89">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.90">org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:121)</sentence>
            <sentence id="8.91">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.92">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="8.93">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.94">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="8.95">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.96">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="8.97">com.sun.proxy.</sentence>
            <sentence id="8.98">$Proxy563.getConcepts(Unknown Source)</sentence>
            <sentence id="8.99">sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="8.100">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="8.101">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="8.102">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="8.103">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="8.104">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="8.105">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="8.106">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="8.107">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="8.108">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="8.109">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="8.110">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="8.111">com.sun.proxy.</sentence>
            <sentence id="8.112">$Proxy563.getConcepts(Unknown Source)</sentence>
            <sentence id="8.113">org.openmrs.module.metadatasharing.handler.impl.ConceptHandler.getItems(ConceptHandler.java:178)</sentence>
            <sentence id="8.114">org.openmrs.module.metadatasharing.handler.Handler.getItems(Handler.java:83)</sentence>
            <sentence id="8.115">org.openmrs.module.metadatasharing.resolver.impl.ObjectByNameResolver.getPossibleMatch(ObjectByNameResolver.java:68)</sentence>
            <sentence id="8.116">org.openmrs.module.metadatasharing.resolver.ResolverEngine.resolve(ResolverEngine.java:117)</sentence>
            <sentence id="8.117">org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.createImportedItems(PackageImporterImpl.java:217)</sentence>
            <sentence id="8.118">org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.getImportedItems(PackageImporterImpl.java:117)</sentence>
            <sentence id="8.119">org.openmrs.module.metadatasharing.web.controller.ImportController.load(ImportController.java:386)</sentence>
            <sentence id="8.120">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
            <sentence id="8.121">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</sentence>
            <sentence id="8.122">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="8.123">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="8.124">org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)</sentence>
            <sentence id="8.125">org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)</sentence>
            <sentence id="8.126">org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)</sentence>
            <sentence id="8.127">org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)</sentence>
            <sentence id="8.128">org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)</sentence>
            <sentence id="8.129">org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)</sentence>
            <sentence id="8.130">org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:844)</sentence>
            <sentence id="8.131">javax.servlet.http.HttpServlet.service(HttpServlet.java:620)</sentence>
            <sentence id="8.132">org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)</sentence>
            <sentence id="8.133">javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</sentence>
            <sentence id="8.134">org.openmrs.module.web.filter.ForcePasswordChangeFilter.doFilter(ForcePasswordChangeFilter.java:61)</sentence>
            <sentence id="8.135">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:72)</sentence>
            <sentence id="8.136">org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)</sentence>
            <sentence id="8.137">org.openmrs.module.logmanager.web.filter.RequestProviderFilter.doFilterInternal(RequestProviderFilter.java:36)</sentence>
            <sentence id="8.138">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="8.139">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="8.140">org.openmrs.module.xforms.web.XformsFilter.doFilter(XformsFilter.java:60)</sentence>
            <sentence id="8.141">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="8.142">org.openmrs.module.amrsmobileforms.web.LocationFilter.doFilter(LocationFilter.java:27)</sentence>
            <sentence id="8.143">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="8.144">org.openmrs.module.web.filter.ModuleFilter.doFilter(ModuleFilter.java:54)</sentence>
            <sentence id="8.145">org.openmrs.web.filter.OpenmrsFilter.doFilterInternal(OpenmrsFilter.java:109)</sentence>
            <sentence id="8.146">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="8.147">org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230)</sentence>
            <sentence id="8.148">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="8.149">org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="8.150">org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="8.151">org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="8.152">org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)</sentence>
            <sentence id="8.153">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="8.154">root cause</sentence>
        </paragraph>
        <paragraph id="9">
            <sentence id="9.1">org.apache.lucene.queryParser.ParseException: Encountered " &lt;AND&gt; "AND "" at line 1, column 230.</sentence>
            <sentence id="9.2">Was expecting one of:</sentence>
            <sentence id="9.3">&lt;NOT&gt; ...</sentence>
            <sentence id="9.4">"+" ...</sentence>
            <sentence id="9.5">"-" ...</sentence>
            <sentence id="9.6">"(" ...</sentence>
            <sentence id="9.7">"*" ...</sentence>
            <sentence id="9.8">&lt;QUOTED&gt; ...</sentence>
            <sentence id="9.9">&lt;TERM&gt; ...</sentence>
            <sentence id="9.10">&lt;PREFIXTERM&gt; ...</sentence>
            <sentence id="9.11">&lt;WILDTERM&gt; ...</sentence>
            <sentence id="9.12">"[" ...</sentence>
            <sentence id="9.13">"{" ...</sentence>
            <sentence id="9.14">&lt;NUMBER&gt; ...</sentence>
            <sentence id="9.15">&lt;TERM&gt; ...</sentence>
            <sentence id="9.16">"*" ...</sentence>
            <sentence id="9.17">org.apache.lucene.queryParser.QueryParser.generateParseException(QueryParser.java:1818)</sentence>
            <sentence id="9.18">org.apache.lucene.queryParser.QueryParser.jj_consume_token(QueryParser.java:1700)</sentence>
            <sentence id="9.19">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1327)</sentence>
            <sentence id="9.20">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1237)</sentence>
            <sentence id="9.21">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1313)</sentence>
            <sentence id="9.22">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1237)</sentence>
            <sentence id="9.23">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1313)</sentence>
            <sentence id="9.24">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1266)</sentence>
            <sentence id="9.25">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1313)</sentence>
            <sentence id="9.26">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1266)</sentence>
            <sentence id="9.27">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1313)</sentence>
            <sentence id="9.28">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1237)</sentence>
            <sentence id="9.29">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1313)</sentence>
            <sentence id="9.30">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1266)</sentence>
            <sentence id="9.31">org.apache.lucene.queryParser.QueryParser.Clause(QueryParser.java:1313)</sentence>
            <sentence id="9.32">org.apache.lucene.queryParser.QueryParser.Query(QueryParser.java:1237)</sentence>
            <sentence id="9.33">org.apache.lucene.queryParser.QueryParser.TopLevelQuery(QueryParser.java:1226)</sentence>
            <sentence id="9.34">org.apache.lucene.queryParser.QueryParser.parse(QueryParser.java:206)</sentence>
            <sentence id="9.35">org.openmrs.api.db.hibernate.search.LuceneQuery$1.</sentence>
            <sentence id="9.36">prepareQuery(LuceneQuery.java:63)</sentence>
            <sentence id="9.37">org.openmrs.api.db.hibernate.search.LuceneQuery.buildQuery(LuceneQuery.java:321)</sentence>
            <sentence id="9.38">org.openmrs.api.db.hibernate.search.LuceneQuery.</sentence>
            <sentence id="9.39">&lt;init&gt;(LuceneQuery.java:82)</sentence>
            <sentence id="9.40">org.openmrs.api.db.hibernate.search.LuceneQuery$1.</sentence>
            <sentence id="9.41">&lt;init&gt;(LuceneQuery.java:56)</sentence>
            <sentence id="9.42">org.openmrs.api.db.hibernate.search.LuceneQuery.newQuery(LuceneQuery.java:55)</sentence>
            <sentence id="9.43">org.openmrs.api.db.hibernate.HibernateConceptDAO.newConceptNameLuceneQuery(HibernateConceptDAO.java:1384)</sentence>
            <sentence id="9.44">org.openmrs.api.db.hibernate.HibernateConceptDAO.getConcepts(HibernateConceptDAO.java:1340)</sentence>
            <sentence id="9.45">org.openmrs.api.impl.ConceptServiceImpl.getConcepts(ConceptServiceImpl.java:1645)</sentence>
            <sentence id="9.46">sun.reflect.GeneratedMethodAccessor579.invoke(Unknown Source)</sentence>
            <sentence id="9.47">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="9.48">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="9.49">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="9.50">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="9.51">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="9.52">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="9.53">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="9.54">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="9.55">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="9.56">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.57">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="9.58">com.sun.proxy.</sentence>
            <sentence id="9.59">$Proxy484.getConcepts(Unknown Source)</sentence>
            <sentence id="9.60">sun.reflect.GeneratedMethodAccessor579.invoke(Unknown Source)</sentence>
            <sentence id="9.61">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="9.62">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="9.63">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="9.64">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="9.65">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="9.66">org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:51)</sentence>
            <sentence id="9.67">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.68">org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:121)</sentence>
            <sentence id="9.69">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.70">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="9.71">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.72">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="9.73">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.74">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="9.75">com.sun.proxy.</sentence>
            <sentence id="9.76">$Proxy485.getConcepts(Unknown Source)</sentence>
            <sentence id="9.77">org.openmrs.module.metadatasharing.api.db.hibernate.HibernateCompatibility1_11.</sentence>
            <sentence id="9.78">getConcepts(HibernateCompatibility1_11.</sentence>
            <sentence id="9.79">java:38)</sentence>
            <sentence id="9.80">org.openmrs.module.metadatasharing.api.db.hibernate.HibernateMetadataDAO.getConcepts(HibernateMetadataDAO.java:204)</sentence>
            <sentence id="9.81">org.openmrs.module.metadatasharing.api.impl.MetadataServiceImpl.getConcepts(MetadataServiceImpl.java:76)</sentence>
            <sentence id="9.82">sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="9.83">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="9.84">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="9.85">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="9.86">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="9.87">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="9.88">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="9.89">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="9.90">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="9.91">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="9.92">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.93">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="9.94">com.sun.proxy.</sentence>
            <sentence id="9.95">$Proxy562.getConcepts(Unknown Source)</sentence>
            <sentence id="9.96">sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="9.97">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="9.98">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="9.99">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="9.100">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="9.101">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="9.102">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="9.103">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="9.104">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="9.105">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="9.106">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.107">org.openmrs.aop.LoggingAdvice.invoke(LoggingAdvice.java:121)</sentence>
            <sentence id="9.108">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.109">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="9.110">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.111">org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:51)</sentence>
            <sentence id="9.112">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.113">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="9.114">com.sun.proxy.</sentence>
            <sentence id="9.115">$Proxy563.getConcepts(Unknown Source)</sentence>
            <sentence id="9.116">sun.reflect.GeneratedMethodAccessor578.invoke(Unknown Source)</sentence>
            <sentence id="9.117">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="9.118">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="9.119">org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)</sentence>
            <sentence id="9.120">org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)</sentence>
            <sentence id="9.121">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)</sentence>
            <sentence id="9.122">org.springframework.transaction.interceptor.TransactionInterceptor$1.</sentence>
            <sentence id="9.123">proceedWithInvocation(TransactionInterceptor.java:96)</sentence>
            <sentence id="9.124">org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:260)</sentence>
            <sentence id="9.125">org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:94)</sentence>
            <sentence id="9.126">org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)</sentence>
            <sentence id="9.127">org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)</sentence>
            <sentence id="9.128">com.sun.proxy.</sentence>
            <sentence id="9.129">$Proxy563.getConcepts(Unknown Source)</sentence>
            <sentence id="9.130">org.openmrs.module.metadatasharing.handler.impl.ConceptHandler.getItems(ConceptHandler.java:178)</sentence>
            <sentence id="9.131">org.openmrs.module.metadatasharing.handler.Handler.getItems(Handler.java:83)</sentence>
            <sentence id="9.132">org.openmrs.module.metadatasharing.resolver.impl.ObjectByNameResolver.getPossibleMatch(ObjectByNameResolver.java:68)</sentence>
            <sentence id="9.133">org.openmrs.module.metadatasharing.resolver.ResolverEngine.resolve(ResolverEngine.java:117)</sentence>
            <sentence id="9.134">org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.createImportedItems(PackageImporterImpl.java:217)</sentence>
            <sentence id="9.135">org.openmrs.module.metadatasharing.wrapper.impl.PackageImporterImpl.getImportedItems(PackageImporterImpl.java:117)</sentence>
            <sentence id="9.136">org.openmrs.module.metadatasharing.web.controller.ImportController.load(ImportController.java:386)</sentence>
            <sentence id="9.137">sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</sentence>
            <sentence id="9.138">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</sentence>
            <sentence id="9.139">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</sentence>
            <sentence id="9.140">java.lang.reflect.Method.invoke(Method.java:498)</sentence>
            <sentence id="9.141">org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)</sentence>
            <sentence id="9.142">org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.invokeHandlerMethod(AnnotationMethodHandlerAdapter.java:440)</sentence>
            <sentence id="9.143">org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter.handle(AnnotationMethodHandlerAdapter.java:428)</sentence>
            <sentence id="9.144">org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)</sentence>
            <sentence id="9.145">org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)</sentence>
            <sentence id="9.146">org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)</sentence>
            <sentence id="9.147">org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:844)</sentence>
            <sentence id="9.148">javax.servlet.http.HttpServlet.service(HttpServlet.java:620)</sentence>
            <sentence id="9.149">org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)</sentence>
            <sentence id="9.150">javax.servlet.http.HttpServlet.service(HttpServlet.java:727)</sentence>
            <sentence id="9.151">org.openmrs.module.web.filter.ForcePasswordChangeFilter.doFilter(ForcePasswordChangeFilter.java:61)</sentence>
            <sentence id="9.152">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:72)</sentence>
            <sentence id="9.153">org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)</sentence>
            <sentence id="9.154">org.openmrs.module.logmanager.web.filter.RequestProviderFilter.doFilterInternal(RequestProviderFilter.java:36)</sentence>
            <sentence id="9.155">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="9.156">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="9.157">org.openmrs.module.xforms.web.XformsFilter.doFilter(XformsFilter.java:60)</sentence>
            <sentence id="9.158">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="9.159">org.openmrs.module.amrsmobileforms.web.LocationFilter.doFilter(LocationFilter.java:27)</sentence>
            <sentence id="9.160">org.openmrs.module.web.filter.ModuleFilterChain.doFilter(ModuleFilterChain.java:70)</sentence>
            <sentence id="9.161">org.openmrs.module.web.filter.ModuleFilter.doFilter(ModuleFilter.java:54)</sentence>
            <sentence id="9.162">org.openmrs.web.filter.OpenmrsFilter.doFilterInternal(OpenmrsFilter.java:109)</sentence>
            <sentence id="9.163">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="9.164">org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:230)</sentence>
            <sentence id="9.165">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="9.166">org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="9.167">org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="9.168">org.openmrs.web.filter.StartupFilter.doFilter(StartupFilter.java:105)</sentence>
            <sentence id="9.169">org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)</sentence>
            <sentence id="9.170">org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</sentence>
            <sentence id="9.171">note The full stack trace of the root cause is available in the Apache Tomcat/7.0.52 (Ubuntu) logs.</sentence>
            <sentence id="9.172">{code}</sentence>
        </paragraph>
        <paragraph id="10">
            <sentence id="10.1">It is caused by not escaping AND in the query.</sentence>
            <sentence id="10.2">See http://stackoverflow.com/a/10757968</sentence>
        </paragraph>
        <paragraph id="11">
            <sentence id="11.1">Note the actual fix may be simply using lowercase letters.</sentence>
        </paragraph>
        <paragraph id="12">
            <sentence id="12.1">We should escape or lowercase any reserved operators.</sentence>
            <sentence id="12.2">See also [this|https://lucene.apache.org/core/2_9_4/queryparsersyntax.html#Escaping Special Characters]</sentence>
        </paragraph>
        <paragraph id="13">
            <sentence id="13.1">Talk thread: https://talk.openmrs.org/t/error-importing-metadata-using-metadata-sharing-module-on-platform-1-11-5/6285/4</sentence>
        </paragraph>
        <paragraph id="14">
            <sentence id="14.1">It's not that critical as most users have "AND", "OR" and "NOT" in concept stop words list, which excludes them from the query as well.</sentence>
        </paragraph>
    </description>
</bug>
